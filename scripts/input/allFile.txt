b'# Browsers that we support\n\n> 1%\nlast 2 versions\nie 9\n'b'{\n  "presets": [\n    ["@babel/env", {\n      "targets": {\n        "browsers": [ "> 1%", "last 2 versions", "ie 9" ]\n      }\n    }]\n  ],\n  "sourceMaps": "inline"\n}\n'b'{\n  "extends": ["eslint:recommended"],\n  "env": {\n    "node": false,\n    "browser": true,\n    "amd": true,\n    "es6": true\n  },\n  "plugins": ["compat"],\n  "rules": {\n    "compat/compat": "error",\n    "no-console": "off",\n    "no-empty": "off",\n    "no-extra-semi": "off",\n    "no-func-assign": "off",\n    "no-undef": "off",\n    "no-unused-vars": "off",\n    "no-useless-escape": "off",\n    "no-cond-assign": "off",\n    "no-redeclare": "off",\n    "node/no-exports-assign": "off",\n    "no-unsafe-finally": "off"\n  },\n  "globals": {\n    "regeneratorRuntime": "writable"\n  },\n  "settings": {\n    "polyfills": [\n      "Promise",\n      "Array.from",\n      "Symbol",\n      "Object.getOwnPropertySymbols",\n      "Object.setPrototypeOf",\n      "Set"\n    ]\n  }\n}\n'b'root = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n'b'* text=auto\n'b'build\nlib-cov\ncoverage.html\n.DS_Store\nnode_modules\n*.sock\ntest.js\ncomponents\ntest/node/fixtures/tmp.json\n.idea\nsuperagent.js\npackage-lock.json\n*.log\ncoverage\n.nyc_output\nlib\ndist\n*.swp\n'b'{\n  "presets": [\n    ["@babel/env", {\n      "targets": {\n        "node": "6.4.0",\n        "browsers": [ "> 1%", "last 2 versions", "ie 9" ]\n      }\n    }]\n  ],\n  "sourceMaps": "inline"\n}\n'b'{\n  "extends": ["eslint:recommended", "plugin:node/recommended"],\n  "env": {\n    "browser": true\n  },\n  "rules": {\n    "node/no-deprecated-api": "off",\n    "no-console": "off",\n    "no-unused-vars": "off",\n    "no-empty": "off",\n    "node/no-unsupported-features/node-builtins": "off",\n    "no-func-assign": "off",\n    "no-global-assign": ["error", {"exceptions": ["exports"]}],\n    "no-fallthrough": "off",\n    "no-constant-condition": "off",\n    "node/no-exports-assign": "off",\n    "no-unsafe-finally": "off"\n  },\n  "overrides": [\n    {\n      "files": [ "lib/client.js" ],\n      "globals": {\n        "ActiveXObject": "readable"\n      }\n    }\n  ]\n}\n'b'support\ntest\nexamples\n*.sock\nlib-cov\ncoverage.html\nbower.json\ncoverage\nsrc\n.travis.yml\n.nojekyll\n.nyc_output\n'b'CONTRIBUTING.md\nHISTORY.md\ndocs\n'b'sudo: false\nlanguage: node_js\nnode_js:\n  - \'12\'\n  - \'10\'\nafter_success: npm run coverage\n\nenv:\n  global:\n    - SAUCE_USERNAME=\'shtylman-superagent\'\n    - SAUCE_ACCESS_KEY=\'39a45464-cb1d-4b8d-aa1f-83c7c04fa673\'\n\nmatrix:\n  include:\n    - node_js: "10"\n      env: BROWSER=1\n  include:\n    - node_js: "12"\n      env: HTTP2_TEST=1\n'b"ui: mocha-bdd\nserver: ./test/support/server.js\ntunnel_host: http://focusaurus.com\nbrowsers:\n  - name: chrome\n    version: latest\n  - name: firefox\n    version: latest\n  - name: safari\n    version: latest\n  - name: ie\n    version: 9..latest\nbrowserify:\n  - transform:\n      name: babelify\n      configFile: './.dist.babelrc'\n"b'When submitting a PR, your chance of acceptance increases if you do the following:\n\n* Code style is consistent with existing in the file.\n* Tests are passing (client and server).\n* You add a test for the failing issue you are fixing.\n* Code changes are focused on the area of discussion.\n* Do not rebuild the distribution files or increment version numbers.\n'b'# This HISTORY log is deprecated\n\nPlease see [GitHub releases page](https://github.com/visionmedia/superagent/releases) for the current changelog.\n\n# 4.1.0 (2018-12-26)\n\n * `.connect()` IP/DNS override option (Kornel)\n * `.trustLocalhost()` option for allowing broken HTTPS on `localhost`\n * `.abort()` used with promises rejects the promise.\n\n# 4.0.0 (2018-11-17)\n\n## Breaking changes\n\n* Node.js v4 has reached it\'s end of life, so we no longer support it. It\'s v6+ or later. We recommend Node.js 10.\n* We now use ES6 in the browser code, too.\n  * If you\'re using Browserify or Webpack to package code for Internet Explorer, you will also have to use Babel.\n  * The pre-built node_modules/superagent.js is still ES5-compatible.\n* `.end(\xe2\x80\xa6)` returns `undefined` instead of the request. If you need the request object after calling `.end()` (and you probably don\'t), save it in a variable and call `request.end(\xe2\x80\xa6)`. Consider not using `.end()` at all, and migrating to promises by calling `.then()` instead.\n* In Node, responses with unknown MIME type are buffered by default. To get old behavior, if you use custom _unbuffered_ parsers, add `.buffer(false)` to requests or set `superagent.buffer[yourMimeType] = false`.\n* Invalid uses of `.pipe()` throw.\n\n\n## Minor changes\n\n* Throw if `req.abort().end()` is called\n* Throw if using unsupported mix of send and field\n* Reject `.end()` promise on all error events (Kornel Lesin\xcc\x81ski)\n* Set `https.servername` from the `Host` header (Kornel Lesi\xc5\x84ski)\n* Leave backticks unencoded in query strings where possible (Ethan Resnick)\n* Update node-mime to 2.x (Alexey Kucherenko)\n* Allow default buffer settings based on response-type (shrey)\n* `response.buffered` is more accurate.\n\n# 3.8.3 (2018-04-29)\n\n* Add flags for 201 & 422 responses (Nikhil Fadnis)\n* Emit progress event while uploading Node `Buffer` via send method (Sergey Akhalkov)\n* Fixed setting correct cookies for redirects (Damien Clark)\n* Replace .catch with [\'catch\'] for IE9 Support (Miguel Stevens)\n\n# 3.8.2 (2017-12-09)\n\n* Fixed handling of exceptions thrown from callbacks\n* Stricter matching of `+json` MIME types.\n\n# 3.8.1 (2017-11-08)\n\n* Clear authorization header on cross-domain redirect\n\n# 3.8.0\n\n* Added support for "globally" defined headers and event handlers via `superagent.agent()`. It now remembers default settings for all its requests.\n* Added optional callback to `.retry()` (Alexander Murphy)\n* Unified auth args handling in node/browser (Edmundo Alvarez)\n* Fixed error handling in zlib pipes (Kornel)\n* Documented that 3xx status codes are errors (Mickey Reiss)\n\n# 3.7.0 (2017-10-17)\n\n* Limit maximum response size. Prevents zip bombs (Kornel)\n* Catch and pass along errors in `.ok()` callback (Jeremy Ruppel)\n* Fixed parsing of XHR headers without a newline (nsf)\n\n# 3.6.2 (2017-10-02)\n\n* Upgrade MIME type dependency to a newer, secure version\n* Recognize PDF MIME as binary\n* Fix for error in subsequent require() calls (Steven de Salas)\n\n# 3.6.0 (2017-08-20)\n\n* Support disabling TCP_NODELAY option ([#1240](https://github.com/visionmedia/superagent/issues/1240)) (xiamengyu)\n* Send payload in query string for GET and HEAD shorthand API (Peter Lyons)\n* Support passphrase with pfx certificate (Paul Westerdale (ABRS Limited))\n* Documentation improvements (Peter Lyons)\n* Fixed duplicated query string params ([#1200](https://github.com/visionmedia/superagent/issues/1200)) (Kornel)\n\n# 3.5.1 (2017-03-18)\n\n* Allow crossDomain errors to be retried ([#1194](https://github.com/visionmedia/superagent/issues/1194)) (Michael Olson)\n* Read responseType property from the correct object (Julien Dupouy)\n* Check for ownProperty before adding header (Lucas Vieira)\n\n# 3.5.0 (2017-02-23)\n\n* Add errno to distinguish between request timeout and body download timeout ([#1184](https://github.com/visionmedia/superagent/issues/1184)) (Kornel Lesin\xcc\x81ski)\n* Warn about bogus timeout options ([#1185](https://github.com/visionmedia/superagent/issues/1185)) (Kornel Lesin\xcc\x81ski)\n\n# 3.4.4 (2017-02-17)\n\n* Treat videos like images (Kornel Lesin\xcc\x81ski)\n* Avoid renaming module (Kornel Lesin\xcc\x81ski)\n\n# 3.4.3 (2017-02-14)\n\n* Fixed being able to define own parsers when their mime type starts with `text/` (Damien Clark)\n* `withCredentials(false)` (Andy Woods)\n* Use `formData.on` instead of `.once` (Kornel Lesin\xcc\x81ski)\n* Ignore `attach("file",null)` (Kornel Lesin\xcc\x81ski)\n\n# 3.4.1 (2017-01-29)\n\n* Allow `retry()` and `retry(0)` (Alexander Pope)\n* Allow optional body/data in DELETE requests (Alpha Shuro)\n* Fixed query string on retried requests (Kornel Lesin\xcc\x81ski)\n\n# 3.4.0 (2017-01-25)\n\n* New `.retry(n)` method and `err.retries` (Alexander Pope)\n* Docs for HTTPS request (Jun Wan Goh)\n\n# 3.3.1 (2016-12-17)\n\n* Fixed "double callback bug" warning on timeouts of gzipped responses\n\n# 3.3.0 (2016-12-14)\n\n* Added `.ok(callback)` that allows customizing which responses are errors (Kornel Lesi\xc5\x84ski)\n* Added `.responseType()` to Node version (Kornel Lesi\xc5\x84ski)\n* Added `.parse()` to browser version (jakepearson)\n* Fixed parse error when using `responseType(\'blob\')` (Kornel Lesi\xc5\x84ski)\n\n# 3.2.0 (2016-12-11)\n\n* Added `.timeout({response:ms})`, which allows limiting maximum response time independently from total download time (Kornel Lesi\xc5\x84ski)\n* Added warnings when `.end()` is called more than once (Kornel Lesi\xc5\x84ski)\n* Added `response.links` to browser version (Lukas Eipert)\n* `btoa` is no longer required in IE9 (Kornel Lesi\xc5\x84ski)\n* Fixed `.sortQuery()` on URLs without query strings (Kornel Lesi\xc5\x84ski)\n* Refactored common response code into `ResponseBase` (Lukas Eipert)\n\n# 3.1.0 (2016-11-28)\n\n* Added `.sortQuery()` (vicanso)\n* Added support for arrays and bools in `.field()` (Kornel Lesi\xc5\x84ski)\n* Made `superagent.Request` subclassable without need to patch all static methods (Kornel Lesi\xc5\x84ski)\n\n# 3.0.0 (2016-11-19)\n\n* Dropped support for Node 0.x. Please upgrade to at least Node 4.\n* Dropped support for componentjs (Damien Caselli)\n* Removed deprecated `.part()`/`superagent.Part` APIs.\n* Removed unreliable `.body` property on internal response object used by unbuffered parsers.\n  Note: the normal `response.body` is unaffected.\n* Multiple `.send()` calls mixing `Buffer`/`Blob` and JSON data are not possible and will now throw instead of messing up the data.\n* Improved `.send()` data object type check (Fernando Mendes)\n* Added common prototype for Node and browser versions (Andreas Helmberger)\n* Added `http+unix:` schema to support Unix sockets (Yuki KAN)\n* Added full `attach` options parameter in the Node version (Lapo Luchini)\n* Added `pfx` TLS option with new `pfx()` method. (Reid Burke)\n* Internally changed `.on` to `.once` to prevent possible memory leaks (Matt Blair)\n* Made all errors reported as an event (Kornel Lesi\xc5\x84ski)\n\n# 2.3.0 (2016-09-20)\n\n* Enabled `.field()` to handle objects (Affan Shahid)\n* Added authentication with client certificates (terusus)\n* Added `.catch()` for more Promise-like interface (Maxim Samoilov, Kornel Lesi\xc5\x84ski)\n* Silenced errors from incomplete gzip streams for compatibility with web browsers (Kornel Lesi\xc5\x84ski)\n* Fixed `event.direction` in uploads (Kornel Lesi\xc5\x84ski)\n* Fixed returned value of overwritten response object\'s `on()` method (Juan Dopazo)\n\n# 2.2.0 (2016-08-13)\n\n* Added `timedout` property to node Request instance (Alexander Pope)\n* Unified `null` querystring values in node and browser environments. (George Chung)\n\n# 2.1.0 (2016-06-14)\n\n* Refactored async parsers. Now the `end` callback waits for async parsers to finish (Kornel Lesi\xc5\x84ski)\n* Errors thrown in `.end()` callback don\'t cause the callback to be called twice (Kornel Lesi\xc5\x84ski)\n* Added `headers` to `toJSON()` (Tao)\n\n# 2.0.0 (2016-05-29)\n\n\n## Breaking changes\n\nBreaking changes are in rarely used functionality, so we hope upgrade will be smooth for most users.\n\n* Browser: The `.parse()` method has been renamed to `.serialize()` for consistency with NodeJS version.\n* Browser: Query string keys without a value used to be parsed as `\'undefined\'`, now their value is `\'\'` (empty string) (shura, Kornel Lesi\xc5\x84ski).\n* NodeJS: The `redirect` event is called after new query string and headers have been set and is allowed to override the request URL (Kornel Lesi\xc5\x84ski)\n* `.then()` returns a real `Promise`. Note that use of superagent with promises now requires a global `Promise` object.\n  If you target Internet Explorer or Node 0.10, you\'ll need `require(\'es6-promise\').polyfill()` or similar.\n* Upgraded all dependencies (Peter Lyons)\n* Renamed properties documented as `@api private` to have `_prefixed` names (Kornel Lesi\xc5\x84ski)\n\n\n## Probably not breaking changes:\n\n* Extracted common functions to request-base (Peter Lyons)\n* Fixed race condition in pipe tests (Peter Lyons)\n* Handle `FormData` error events (scriptype)\n* Fixed wrong jsdoc of Request#attach (George Chung)\n* Updated and improved tests (Peter Lyons)\n* `request.head()` supports `.redirects(5)` call (Kornel Lesi\xc5\x84ski)\n* `response` event is also emitted when using `.pipe()`\n\n# 1.8.2 (2016-03-20)\n\n* Fixed handling of HTTP status 204 with content-encoding: gzip (Andrew Shelton)\n* Handling of FormData error events (scriptype)\n* Fixed parsing of `vnd+json` MIME types (Kornel Lesi\xc5\x84ski)\n* Aliased browser implementation of `.parse()` as `.serialize()` for forward compatibility\n\n# 1.8.1 (2016-03-14)\n\n* Fixed form-data incompatibility with IE9\n\n# 1.8.0 (2016-03-09)\n\n* Extracted common code into request-base class (Peter Lyons)\n  * It does not affect the public API, but please let us know if you notice any plugins/subclasses breaking!\n* Added option `{type:\'auto\'}` to `auth` method, which enables browser-native auth types (Jungle, Askar Yusupov)\n* Added `responseType()` to set XHR `responseType` (chris)\n* Switched to form-data for browserify-compatible `FormData` (Peter Lyons)\n* Added `statusCode` to error response when JSON response is malformed (mattdell)\n* Prevented TCP port conflicts in all tests (Peter Lyons)\n* Updated form-data dependency\n\n# 1.7.2 (2016-01-26)\n\n* Fix case-sensitivity of header fields introduced by [`a4ddd6a`](https://github.com/visionmedia/superagent/commit/a4ddd6a). (Edward J. Jinotti)\n* bump extend dependency, as former version did not contain any license information (Lukas Eipert)\n\n# 1.7.1 (2016-01-21)\n\n* Fixed a conflict with express when using npm 3.x (Glenn)\n* Fixed redirects after a multipart/form-data POST request (cyclist2)\n\n# 1.7.0 (2016-01-18)\n\n* When attaching files, read default filename from the `File` object (JD Isaacks)\n* Add `direction` property to `progress` events (Joseph Dykstra)\n* Update component-emitter & formidable (Kornel Lesi\xc5\x84ski)\n* Don\'t re-encode query string needlessly (Ruben Verborgh)\n* ensure querystring is appended when doing `stream.pipe(request)` (Keith Grennan)\n* change set header function, not call `this.request()` until call `this.end()` (vicanso)\n* Add no-op `withCredentials` to Node API (markdalgleish)\n* fix `delete` breaking on ie8 (kenjiokabe)\n* Don\'t let request error override responses (Clay Reimann)\n* Increased number of tests shared between node and client (Kornel Lesi\xc5\x84ski)\n\n# 1.6.0/1.6.1 (2015-12-09)\n\n* avoid misleading CORS error message\n* added \'progress\' event on file/form upload in Node (Olivier Lalonde)\n* return raw response if the response parsing fails (Rei Colina)\n* parse content-types ending with `+json` as JSON (Eiryyy)\n* fix to avoid throwing errors on aborted requests (gjurgens)\n* retain cookies on redirect when hosts match (Tom Conroy)\n* added Bower manifest (Johnny Freeman)\n* upgrade to latest cookiejar (Andy Burke)\n\n# 1.5.0 (2015-11-30)\n\n* encode array values as `key=1&key=2&key=3` etc... (aalpern, Davis Kim)\n* avoid the error which is omitted from \'socket hang up\'\n* faster JSON parsing, handling of zlib errors (jbellenger)\n* fix IE11 sends \'undefined\' string if data was undefined (Vadim Goncharov)\n* alias `del()` method as `delete()` (Aaron Krause)\n* revert Request#parse since it was actually Response#parse\n\n# 1.4.0 (2015-09-14)\n\n* add Request#parse method to client library\n* add missing statusCode in client response\n* don\'t apply JSON heuristics if a valid parser is found\n* fix detection of root object for webworkers\n\n# 1.3.0 (2015-08-05)\n\n* fix incorrect content-length of data set to buffer\n* serialize request data takes into account charsets\n* add basic promise support via a `then` function\n\n# 1.2.0 (2015-04-13)\n\n* add progress events to downlodas\n* make usable in webworkers\n* add support for 308 redirects\n* update node-form-data dependency\n* update to work in react native\n* update node-mime dependency\n\n# 1.1.0 (2015-03-13)\n\n* Fix responseType checks without xhr2 and ie9 tests (rase-)\n* errors have .status and .response fields if applicable (defunctzombie)\n* fix end callback called before saving cookies (rase-)\n\n# 1.0.0 / 2015-03-08\n\n* All non-200 responses are treated as errors now. (The callback is called with an error when the response has a status &lt; 200 or >= 300 now. In previous versions this would not have raised an error and the client would have to check the `res` object. See [#283](https://github.com/visionmedia/superagent/issues/283).\n* keep timeouts intact across redirects (hopkinsth)\n* handle falsy json values (themaarten)\n* fire response events in browser version (Schoonology)\n* getXHR exported in client version (KidsKilla)\n* remove arity check on `.end()` callbacks (defunctzombie)\n* avoid setting content-type for host objects (rexxars)\n* don\'t index array strings in querystring (travisjeffery)\n* fix pipe() with redirects (cyrilis)\n* add xhr2 file download (vstirbu)\n* set default response type to text/plain if not specified (warrenseine)\n\n# 0.21.0 / 2014-11-11\n\n* Trim text before parsing json (gjohnson)\n* Update tests to express 4 (gaastonsr)\n* Prevent double callback when error is thrown (pgn-vole)\n* Fix missing clearTimeout (nickdima)\n* Update debug (TooTallNate)\n\n# 0.20.0 / 2014-10-02\n\n* Add toJSON() to request and response instances. (yields)\n* Prevent HEAD requests from getting parsed. (gjohnson)\n* Update debug. (TooTallNate)\n\n# 0.19.1 / 2014-09-24\n\n* Fix basic auth issue when password is falsey value. (gjohnson)\n\n# 0.19.0 / 2014-09-24\n\n* Add unset() to browser. (shesek)\n* Prefer XHR over ActiveX. (omeid)\n* Catch parse errors. (jacwright)\n* Update qs dependency. (wercker)\n* Add use() to node. (Financial-Times)\n* Add response text to errors. (yields)\n* Don\'t send empty cookie headers. (undoZen)\n* Don\'t parse empty response bodies. (DveMac)\n* Use hostname when setting cookie host. (prasunsultania)\n\n# 0.18.2 / 2014-07-12\n\n* Handle parser errors. (kof)\n* Ensure not to use default parsers when there is a user defined one. (kof)\n\n# 0.18.1 / 2014-07-05\n\n* Upgrade cookiejar dependency (juanpin)\n* Support image mime types (nebulade)\n* Make .agent chainable (kof)\n* Upgrade debug (TooTallNate)\n* Fix docs (aheckmann)\n\n# 0.18.0 / 2014-04-29\n\n* Use "form-data" module for the multipart/form-data implementation. (TooTallNate)\n* Add basic `field()` and `attach()` functions for HTML5 FormData. (TooTallNate)\n* Deprecate `part()`. (TooTallNate)\n* Set default user-agent header. (bevacqua)\n* Add `unset()` method for removing headers. (bevacqua)\n* Update cookiejar. (missinglink)\n* Fix response error formatting. (shesek)\n\n# 0.17.0 / 2014-03-06\n\n* supply uri malformed error to the callback (yields)\n* add request event (yields)\n* allow simple auth (yields)\n* add request event (yields)\n* switch to component/reduce (visionmedia)\n* fix part content-disposition (mscdex)\n* add browser testing via zuul (defunctzombie)\n* adds request.use() (johntron)\n\n# 0.16.0 / 2014-01-07\n\n* remove support for 0.6 (superjoe30)\n* fix CORS withCredentials (wejendorp)\n* add "test" script (superjoe30)\n* add request .accept() method (nickl-)\n* add xml to mime types mappings (nickl-)\n* fix parse body error on HEAD requests (gjohnson)\n* fix documentation typos (matteofigus)\n* fix content-type + charset (bengourley)\n* fix null values on query parameters (cristiandouce)\n\n# 0.15.7 / 2013-10-19\n\n* pin should.js to 1.3.0 due to breaking change in 2.0.x\n* fix browserify regression\n\n# 0.15.5 / 2013-10-09\n\n* add browser field to support browserify\n* fix .field() value number support\n\n# 0.15.4 / 2013-07-09\n\n* node: add a Request#agent() function to set the http Agent to use\n\n# 0.15.3 / 2013-07-05\n\n* fix .pipe() unzipping on more recent nodes. Closes [#240](https://github.com/visionmedia/superagent/issues/240)\n* fix passing an empty object to .query() no longer appends "?"\n* fix formidable error handling\n* update formidable\n\n# 0.15.2 / 2013-07-02\n\n* fix: emit \'end\' when piping.\n\n# 0.15.1 / 2013-06-26\n\n* add try/catch around parseLinks\n\n# 0.15.0 / 2013-06-25\n\n* make `Response#toError()` have a more meaningful `message`\n\n# 0.14.9 / 2013-06-15\n\n* add debug()s to the node client\n* add .abort() method to node client\n\n# 0.14.8 / 2013-06-13\n\n* set .agent = false always\n* remove X-Requested-With. Closes [#189](https://github.com/visionmedia/superagent/issues/189)\n\n# 0.14.7 / 2013-06-06\n\n* fix unzip error handling\n\n# 0.14.6 / 2013-05-23\n\n* fix HEAD unzip bug\n\n# 0.14.5 / 2013-05-23\n\n* add flag to ensure the callback is **never** invoked twice\n\n# 0.14.4 / 2013-05-22\n\n* add superagent.js build output\n* update qs\n* update emitter-component\n* revert "add browser field to support browserify" see [GH-221](https://github.com/visionmedia/superagent/issues/221)\n\n# 0.14.3 / 2013-05-18\n\n* add browser field to support browserify\n\n# 0.14.2/ 2013-05-07\n\n* add host object check to fix serialization of File/Blobs etc as json\n\n# 0.14.1 / 2013-04-09\n\n* update qs\n\n# 0.14.0 / 2013-04-02\n\n* add client-side basic auth\n* fix retaining of .set() header field case\n\n# 0.13.0 / 2013-03-13\n\n* add progress events to client\n* add simple example\n* add res.headers as alias of res.header for browser client\n* add res.get(field) to node/client\n\n# 0.12.4 / 2013-02-11\n\n* fix get content-type even if can\'t get other headers in firefox. fixes [#181](https://github.com/visionmedia/superagent/issues/181)\n\n# 0.12.3 / 2013-02-11\n\n* add quick "progress" event support\n\n# 0.12.2 / 2013-02-04\n\n* add test to check if response acts as a readable stream\n* add ReadableStream in the Response prototype.\n* add test to assert correct redirection when the host changes in the location header.\n* add default Accept-Encoding. Closes [#155](https://github.com/visionmedia/superagent/issues/155)\n* fix req.pipe() return value of original stream for node parity. Closes [#171](https://github.com/visionmedia/superagent/issues/171)\n* remove the host header when cleaning headers to properly follow the redirection.\n\n# 0.12.1 / 2013-01-10\n\n* add x-domain error handling\n\n# 0.12.0 / 2013-01-04\n\n* add header persistence on redirects\n\n# 0.11.0 / 2013-01-02\n\n* add .error Error object. Closes [#156](https://github.com/visionmedia/superagent/issues/156)\n* add forcing of res.text removal for FF HEAD responses. Closes [#162](https://github.com/visionmedia/superagent/issues/162)\n* add reduce component usage. Closes [#90](https://github.com/visionmedia/superagent/issues/90)\n* move better-assert dep to development deps\n\n# 0.10.0 / 2012-11-14\n\n* add req.timeout(ms) support for the client\n\n# 0.9.10 / 2012-11-14\n\n* fix client-side .query(str) support\n\n# 0.9.9 / 2012-11-14\n\n* add .parse(fn) support\n* fix socket hangup with dates in querystring. Closes [#146](https://github.com/visionmedia/superagent/issues/146)\n* fix socket hangup "error" event when a callback of arity 2 is provided\n\n# 0.9.8 / 2012-11-03\n\n* add emission of error from `Request#callback()`\n* add a better fix for nodes weird socket hang up error\n* add PUT/POST/PATCH data support to client short-hand functions\n* add .license property to component.json\n* change client portion to build using component(1)\n* fix GET body support [guille]\n\n# 0.9.7 / 2012-10-19\n\n* fix `.buffer()` `res.text` when no parser matches\n\n# 0.9.6 / 2012-10-17\n\n* change: use `this` when `window` is undefined\n* update to new component spec [juliangruber]\n* fix emission of "data" events for compressed responses without encoding. Closes [#125](https://github.com/visionmedia/superagent/issues/125)\n\n# 0.9.5 / 2012-10-01\n\n* add field name to .attach()\n* add text "parser"\n* refactor isObject()\n* remove wtf isFunction() helper\n\n# 0.9.4 / 2012-09-20\n\n* fix `Buffer` responses [TooTallNate]\n* fix `res.type` when a "type" param is present [TooTallNate]\n\n# 0.9.3 / 2012-09-18\n\n* remove **GET** `.send()` == `.query()` special-case (**API** change !!!)\n\n# 0.9.2 / 2012-09-17\n\n* add `.aborted` prop\n* add `.abort()`. Closes [#115](https://github.com/visionmedia/superagent/issues/115)\n\n# 0.9.1 / 2012-09-07\n\n* add `.forbidden` response property\n* add component.json\n* change emitter-component to 0.0.5\n* fix client-side tests\n\n# 0.9.0 / 2012-08-28\n\n* add `.timeout(ms)`. Closes [#17](https://github.com/visionmedia/superagent/issues/17)\n\n# 0.8.2 / 2012-08-28\n\n* fix pathname relative redirects. Closes [#112](https://github.com/visionmedia/superagent/issues/112)\n\n# 0.8.1 / 2012-08-21\n\n* fix redirects when schema is specified\n\n# 0.8.0 / 2012-08-19\n\n* add `res.buffered` flag\n* add buffering of text/\\*, json and forms only by default. Closes [#61](https://github.com/visionmedia/superagent/issues/61)\n* add `.buffer(false)` cancellation\n* add cookie jar support [hunterloftis]\n* add agent functionality [hunterloftis]\n\n# 0.7.0 / 2012-08-03\n\n* allow `query()` to be called after the internal `req` has been created [tootallnate]\n\n# 0.6.0 / 2012-07-17\n\n* add `res.send(\'foo=bar\')` default of "application/x-www-form-urlencoded"\n\n# 0.5.1 / 2012-07-16\n\n* add "methods" dep\n* add `.end()` arity check to node callbacks\n* fix unzip support due to weird node internals\n\n# 0.5.0 / 2012-06-16\n\n* Added "Link" response header field parsing, exposing `res.links`\n\n# 0.4.3 / 2012-06-15\n\n* Added 303, 305 and 307 as redirect status codes [slaskis]\n* Fixed passing an object as the url\n\n# 0.4.2 / 2012-06-02\n\n* Added component support\n* Fixed redirect data\n\n# 0.4.1 / 2012-04-13\n\n* Added HTTP PATCH support\n* Fixed: GET / HEAD when following redirects. Closes [#86](https://github.com/visionmedia/superagent/issues/86)\n* Fixed Content-Length detection for multibyte chars\n\n# 0.4.0 / 2012-03-04\n\n* Added `.head()` method [browser]. Closes [#78](https://github.com/visionmedia/superagent/issues/78)\n* Added `make test-cov` support\n* Added multipart request support. Closes [#11](https://github.com/visionmedia/superagent/issues/11)\n* Added all methods that node supports. Closes [#71](https://github.com/visionmedia/superagent/issues/71)\n* Added "response" event providing a Response object. Closes [#28](https://github.com/visionmedia/superagent/issues/28)\n* Added `.query(obj)`. Closes [#59](https://github.com/visionmedia/superagent/issues/59)\n* Added `res.type` (browser). Closes [#54](https://github.com/visionmedia/superagent/issues/54)\n* Changed: default `res.body` and `res.files` to {}\n* Fixed: port existing query-string fix (browser). Closes [#57](https://github.com/visionmedia/superagent/issues/57)\n\n# 0.3.0 / 2012-01-24\n\n* Added deflate/gzip support [guillermo]\n* Added `res.type` (Content-Type void of params)\n* Added `res.statusCode` to mirror node\n* Added `res.headers` to mirror node\n* Changed: parsers take callbacks\n* Fixed optional schema support. Closes [#49](https://github.com/visionmedia/superagent/issues/49)\n\n# 0.2.0 / 2012-01-05\n\n* Added url auth support\n* Added `.auth(username, password)`\n* Added basic auth support [node]. Closes [#41](https://github.com/visionmedia/superagent/issues/41)\n* Added `make test-docs`\n* Added guillermo\'s EventEmitter. Closes [#16](https://github.com/visionmedia/superagent/issues/16)\n* Removed `Request#data()` for SS, renamed to `send()`\n* Removed `Request#data()` from client, renamed to `send()`\n* Fixed array support. [browser]\n* Fixed array support. Closes [#35](https://github.com/visionmedia/superagent/issues/35) [node]\n* Fixed `EventEmitter#emit()`\n\n# 0.1.3 / 2011-10-25\n\n* Added error to callback\n* Bumped node dep for 0.5.x\n\n# 0.1.2 / 2011-09-24\n\n* Added markdown documentation\n* Added `request(url[, fn])` support to the client\n* Added `qs` dependency to package.json\n* Added options for `Request#pipe()`\n* Added support for `request(url, callback)`\n* Added `request(url)` as shortcut for `request.get(url)`\n* Added `Request#pipe(stream)`\n* Added inherit from `Stream`\n* Added multipart support\n* Added ssl support (node)\n* Removed Content-Length field from client\n* Fixed buffering, `setEncoding()` to utf8 [reported by stagas]\n* Fixed "end" event when piping\n\n# 0.1.1 / 2011-08-20\n\n* Added `res.redirect` flag (node)\n* Added redirect support (node)\n* Added `Request#redirects(n)` (node)\n* Added `.set(object)` header field support\n* Fixed `Content-Length` support\n\n# 0.1.0 / 2011-08-09\n\n* Added support for multiple calls to `.data()`\n* Added support for `.get(uri, obj)`\n* Added GET `.data()` querystring support\n* Added IE{6,7,8} support [alexyoung]\n\n# 0.0.1 / 2011-08-05\n\n* Initial commit\n\n\n\n'b"(The MIT License)\n\nCopyright (c) 2014-2016 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"b'\nNODETESTS ?= test/*.js test/node/*.js\nBROWSERTESTS ?= test/*.js test/client/*.js\nREPORTER = spec\n\ntest:\n\t@if [ "x$(BROWSER)" = "x" ]; then make test-node; else make test-browser; fi\n\ntest-node:\n\t@NODE_ENV=test ./node_modules/.bin/mocha \\\n\t\t--require should \\\n\t\t--trace-warnings \\\n\t\t--throw-deprecation \\\n\t\t--reporter $(REPORTER) \\\n\t\t--timeout 5000 \\\n\t\t$(NODETESTS)\n\ntest-node-http2:\n\t@NODE_ENV=test HTTP2_TEST=1 node ./node_modules/.bin/mocha \\\n\t\t--require should \\\n\t\t--trace-warnings \\\n\t\t--throw-deprecation \\\n\t\t--reporter $(REPORTER) \\\n\t\t--timeout 5000 \\\n\t\t$(NODETESTS)\n\ntest-cov: lib-cov\n\tSUPERAGENT_COV=1 $(MAKE) test REPORTER=html-cov > coverage.html\n\ntest-browser:\n\tSAUCE_APPIUM_VERSION=1.7 ./node_modules/.bin/zuul -- $(BROWSERTESTS)\n\ntest-browser-local:\n\t./node_modules/.bin/zuul --no-coverage --local 4000 -- $(BROWSERTESTS)\n\nlib-cov:\n\tjscoverage lib lib-cov\n\ntest-server:\n\t@node test/server\n\ndocs: index.html test-docs docs/index.md\n\nindex.html: docs/index.md docs/head.html docs/tail.html\n\tmarked < $< \\\n\t\t| cat docs/head.html - docs/tail.html \\\n\t\t> $@\n\ndocclean:\n\trm -f index.html docs/test.html\n\ntest-docs: docs/head.html docs/tail.html\n\tmake test REPORTER=doc \\\n\t\t| cat docs/head.html - docs/tail.html \\\n\t\t> docs/test.html\n\nclean:\n\trm -fr components\n\n.PHONY: test-cov test docs test-docs clean test-browser-local\n'b'# superagent\n\n[![build status](https://img.shields.io/travis/visionmedia/superagent.svg)](https://travis-ci.org/visionmedia/superagent)\n[![code coverage](https://img.shields.io/codecov/c/github/visionmedia/superagent.svg)](https://codecov.io/gh/visionmedia/superagent)\n[![code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/sindresorhus/xo)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![made with lass](https://img.shields.io/badge/made_with-lass-95CC28.svg)](https://lass.js.org)\n[![license](https://img.shields.io/github/license/visionmedia/superagent.svg)](LICENSE)\n\n> Small progressive client-side HTTP request library, and Node.js module with the same API, supporting many high-level HTTP client features\n\n\n## Table of Contents\n\n* [Install](#install)\n* [Usage](#usage)\n  * [Node](#node)\n  * [Browser](#browser)\n* [Supported Platforms](#supported-platforms)\n  * [Required Browser Features](#required-browser-features)\n* [Plugins](#plugins)\n* [Upgrading from previous versions](#upgrading-from-previous-versions)\n* [Contributors](#contributors)\n* [License](#license)\n\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install superagent\n```\n\n[yarn][]:\n\n```sh\nyarn add superagent\n```\n\n\n## Usage\n\n### Node\n\n```js\nconst superagent = require(\'superagent\');\n\n// callback\nsuperagent\n  .post(\'/api/pet\')\n  .send({ name: \'Manny\', species: \'cat\' }) // sends a JSON post body\n  .set(\'X-API-Key\', \'foobar\')\n  .set(\'accept\', \'json\')\n  .end((err, res) => {\n    // Calling the end function will send the request\n  });\n\n// promise with then/catch\nsuperagent.post(\'/api/pet\').then(console.log).catch(console.error);\n\n// promise with async/await\n(async () => {\n  try {\n    const res = await superagent.post(\'/api/pet\');\n    console.log(res);\n  } catch (err) {\n    console.error(err);\n  }\n})();\n```\n\n### Browser\n\n**The browser-ready, minified version of `superagent` is only 6 KB (minified and gzipped)!**\n\nBrowser-ready versions of this module are available via [jsdelivr][], [unpkg][], and also in the `node_modules/superagent/dist` folder in downloads of the `superagent` package.\n\n> Note that we also provide unminified versions with `.js` instead of `.min.js` file extensions.\n\n#### VanillaJS\n\nThis is the solution for you if you\'re just using `<script>` tags everywhere!\n\n```html\n<script src="https://polyfill.io/v3/polyfill.min.js?features=Array.from,Promise,Symbol,Object.setPrototypeOf,Object.getOwnPropertySymbols,Set"></script>\n<script src="https://cdn.jsdelivr.net/npm/superagent"></script>\n<!-- if you wish to use unpkg.com instead: -->\n<!-- <script src="https://unpkg.com/superagent"></script> -->\n<script type="text/javascript">\n  (function() {\n    // superagent is exposed as `window.superagent`\n    // if you wish to use "request" instead please\n    // uncomment the following line of code:\n    // `window.request = superagent;`\n    superagent\n      .post(\'/api/pet\')\n      .send({ name: \'Manny\', species: \'cat\' }) // sends a JSON post body\n      .set(\'X-API-Key\', \'foobar\')\n      .set(\'accept\', \'json\')\n      .end(function (err, res) {\n        // Calling the end function will send the request\n      });\n  })();\n</script>\n```\n\n#### Bundler\n\nIf you are using [browserify][], [webpack][], [rollup][], or another bundler, then you can follow the same usage as [Node](#node) above.\n\n\n## Supported Platforms\n\n* Node: v6.x+\n* Browsers (see [.browserslistrc](.browserslistrc)):\n\n  ```sh\n  npx browserslist\n  ```\n\n  ```sh\n  and_chr 71\n  and_ff 64\n  and_qq 1.2\n  and_uc 11.8\n  android 67\n  android 4.4.3-4.4.4\n  baidu 7.12\n  bb 10\n  bb 7\n  chrome 73\n  chrome 72\n  chrome 71\n  edge 18\n  edge 17\n  firefox 66\n  firefox 65\n  ie 11\n  ie 10\n  ie 9\n  ie_mob 11\n  ie_mob 10\n  ios_saf 12.0-12.1\n  ios_saf 11.3-11.4\n  op_mini all\n  op_mob 46\n  op_mob 12.1\n  opera 58\n  opera 57\n  safari 12\n  safari 11.1\n  samsung 8.2\n  samsung 7.2-7.4\n  ```\n\n### Required Browser Features\n\nWe recommend using <https://polyfill.io> (specifically with the bundle mentioned in [VanillaJS](#vanillajs) above):\n\n```html\n<script src="https://polyfill.io/v3/polyfill.min.js?features=Array.from,Promise,Symbol,Object.setPrototypeOf,Object.getOwnPropertySymbols,Set"></script>\n```\n\n* IE 9-10 requires a polyfill for `Promise`, `Array.from`, `Symbol`, `Object.getOwnPropertySymbols`, and `Object.setPrototypeOf`\n* IE 9 requires a polyfill for `window.FormData` (we recommend [formdata-polyfill][]) and `Set`\n\n\n## Plugins\n\nSuperAgent is easily extended via plugins.\n\n```js\nconst nocache = require(\'superagent-no-cache\');\nconst superagent = require(\'superagent\');\nconst prefix = require(\'superagent-prefix\')(\'/static\');\n\nsuperagent\n  .get(\'/some-url\')\n  .query({ action: \'edit\', city: \'London\' }) // query string\n  .use(prefix) // Prefixes *only* this request\n  .use(nocache) // Prevents caching of *only* this request\n  .end((err, res) => {\n    // Do something\n  });\n```\n\nExisting plugins:\n\n* [superagent-no-cache](https://github.com/johntron/superagent-no-cache) - prevents caching by including Cache-Control header\n* [superagent-prefix](https://github.com/johntron/superagent-prefix) - prefixes absolute URLs (useful in test environment)\n* [superagent-suffix](https://github.com/timneutkens1/superagent-suffix) - suffix URLs with a given path\n* [superagent-mock](https://github.com/M6Web/superagent-mock) - simulate HTTP calls by returning data fixtures based on the requested URL\n* [superagent-mocker](https://github.com/shuvalov-anton/superagent-mocker) \xe2\x80\x94 simulate REST API\n* [superagent-cache](https://github.com/jpodwys/superagent-cache) - A global SuperAgent patch with built-in, flexible caching\n* [superagent-cache-plugin](https://github.com/jpodwys/superagent-cache-plugin) - A SuperAgent plugin with built-in, flexible caching\n* [superagent-jsonapify](https://github.com/alex94puchades/superagent-jsonapify) - A lightweight [json-api](http://jsonapi.org/format/) client addon for superagent\n* [superagent-serializer](https://github.com/zzarcon/superagent-serializer) - Converts server payload into different cases\n* [superagent-httpbackend](https://www.npmjs.com/package/superagent-httpbackend) - stub out requests using AngularJS\' $httpBackend syntax\n* [superagent-throttle](https://github.com/leviwheatcroft/superagent-throttle) - queues and intelligently throttles requests\n* [superagent-charset](https://github.com/magicdawn/superagent-charset) - add charset support for node\'s SuperAgent\n* [superagent-verbose-errors](https://github.com/jcoreio/superagent-verbose-errors) - include response body in error messages for failed requests\n* [superagent-declare](https://github.com/damoclark/superagent-declare) - A simple [declarative](https://en.wikipedia.org/wiki/Declarative_programming) API for SuperAgent\n* [superagent-node-http-timings](https://github.com/webuniverseio/superagent-node-http-timings) - measure http timings in node.js\n\nPlease prefix your plugin with `superagent-*` so that it can easily be found by others.\n\nFor SuperAgent extensions such as couchdb and oauth visit the [wiki](https://github.com/visionmedia/superagent/wiki).\n\n\n## Upgrading from previous versions\n\nOur breaking changes are mostly in rarely used functionality and from stricter error handling.\n\n* [5.x to 6.x](https://github.com/visionmedia/superagent/releases/tag/v6.0.0):\n  * Retry behavior is still opt-in, however we now have a more fine-grained list of status codes and error codes that we retry against (see updated docs)\n  * A specific issue with Content-Type matching not being case-insensitive is fixed\n  * Set is now required for IE 9, see [Required Browser Features](#required-browser-features) for more insight\n* [4.x to 5.x](https://github.com/visionmedia/superagent/releases/tag/v5.0.0):\n  * We\'ve implemented the build setup of [Lass](https://lass.js.org) to simplify our stack and linting\n  * Unminified browserified build size has been reduced from 48KB to 20KB (via `tinyify` and the latest version of Babel using `@babel/preset-env` and `.browserslistrc`)\n  * Linting support has been added using `caniuse-lite` and `eslint-plugin-compat`\n  * We can now target what versions of Node we wish to support more easily using `.babelrc`\n* [3.x to 4.x](https://github.com/visionmedia/superagent/releases/tag/v4.0.0-alpha.1):\n  * Ensure you\'re running Node 6 or later. We\'ve dropped support for Node 4.\n  * We\'ve started using ES6 and for compatibility with Internet Explorer you may need to use Babel.\n  * We suggest migrating from `.end()` callbacks to `.then()` or `await`.\n* [2.x to 3.x](https://github.com/visionmedia/superagent/releases/tag/v3.0.0):\n  * Ensure you\'re running Node 4 or later. We\'ve dropped support for Node 0.x.\n  * Test code that calls `.send()` multiple times. Invalid calls to `.send()` will now throw instead of sending garbage.\n* [1.x to 2.x](https://github.com/visionmedia/superagent/releases/tag/v2.0.0):\n  * If you use `.parse()` in the _browser_ version, rename it to `.serialize()`.\n  * If you rely on `undefined` in query-string values being sent literally as the text "undefined", switch to checking for missing value instead. `?key=undefined` is now `?key` (without a value).\n  * If you use `.then()` in Internet Explorer, ensure that you have a polyfill that adds a global `Promise` object.\n* 0.x to 1.x:\n  * Instead of 1-argument callback `.end(function(res){})` use `.then(res => {})`.\n\n\n## Contributors\n\n| Name                |\n| ------------------- |\n| **Kornel Lesi\xc5\x84ski** |\n| **Peter Lyons**     |\n| **Hunter Loftis**   |\n| **Nick Baugh**      |\n\n\n## License\n\n[MIT](LICENSE) \xc2\xa9 TJ Holowaychuk\n\n\n## \n\n[npm]: https://www.npmjs.com/\n\n[yarn]: https://yarnpkg.com/\n\n[formdata-polyfill]: https://www.npmjs.com/package/formdata-polyfill\n\n[jsdelivr]: https://www.jsdelivr.com/\n\n[unpkg]: https://unpkg.com/\n\n[browserify]: https://github.com/browserify/browserify\n\n[webpack]: https://github.com/webpack/webpack\n\n[rollup]: https://github.com/rollup/rollup\n'b'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf8">\n    <title>SuperAgent \xe2\x80\x94 elegant API for AJAX in Node and browsers</title>\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocbot/3.0.0/tocbot.css">\n    <link rel="stylesheet" href="docs/style.css">\n  </head>\n  <body>\n    <ul id="menu"></ul>\n    <div id="content">\n<h1 id="superagent">SuperAgent</h1>\n<p>SuperAgent is light-weight progressive ajax API crafted for flexibility, readability, and a low learning curve after being frustrated with many of the existing request APIs. It also works with Node.js!</p>\n<pre><code> request\n   .post(&#39;/api/pet&#39;)\n   .send({ name: &#39;Manny&#39;, species: &#39;cat&#39; })\n   .set(&#39;X-API-Key&#39;, &#39;foobar&#39;)\n   .set(&#39;Accept&#39;, &#39;application/json&#39;)\n   .then(res =&gt; {\n      alert(&#39;yay got &#39; + JSON.stringify(res.body));\n   });</code></pre>\n<h2 id="test-documentation">Test documentation</h2>\n<p>The following <a href="docs/test.html">test documentation</a> was generated with <a href="https://mochajs.org/">Mocha&#39;s</a> &quot;doc&quot; reporter, and directly reflects the test suite. This provides an additional source of documentation.</p>\n<h2 id="request-basics">Request basics</h2>\n<p>A request can be initiated by invoking the appropriate method on the <code>request</code> object, then calling <code>.then()</code> (or <code>.end()</code> <a href="#promise-and-generator-support">or <code>await</code></a>) to send the request. For example a simple <strong>GET</strong> request:</p>\n<pre><code> request\n   .get(&#39;/search&#39;)\n   .then(res =&gt; {\n      // res.body, res.headers, res.status\n   })\n   .catch(err =&gt; {\n      // err.message, err.response\n   });</code></pre>\n<p>HTTP method may also be passed as a string:</p>\n<pre><code>request(&#39;GET&#39;, &#39;/search&#39;).then(success, failure);</code></pre>\n<p>Old-style callbacks are also supported, but not recommended. <em>Instead of</em> <code>.then()</code> you can call <code>.end()</code>:</p>\n<pre><code>request(&#39;GET&#39;, &#39;/search&#39;).end(function(err, res){\n  if (res.ok) {}\n});</code></pre>\n<p>Absolute URLs can be used. In web browsers absolute URLs work only if the server implements <a href="#cors">CORS</a>.</p>\n<pre><code> request\n   .get(&#39;https://example.com/search&#39;)\n   .then(res =&gt; {\n\n   });</code></pre>\n<p>The <strong>Node</strong> client supports making requests to <a href="https://en.wikipedia.org/wiki/Unix_domain_socket">Unix Domain Sockets</a>:</p>\n<pre><code>// pattern: https?+unix://SOCKET_PATH/REQUEST_PATH\n//          Use `%2F` as `/` in SOCKET_PATH\ntry {\n  const res = await request\n    .get(&#39;http+unix://%2Fabsolute%2Fpath%2Fto%2Funix.sock/search&#39;);\n  // res.body, res.headers, res.status\n} catch(err) {\n  // err.message, err.response\n}</code></pre>\n<p><strong>DELETE</strong>, <strong>HEAD</strong>, <strong>PATCH</strong>, <strong>POST</strong>, and <strong>PUT</strong> requests can also be used, simply change the method name:</p>\n<pre><code>request\n  .head(&#39;/favicon.ico&#39;)\n  .then(res =&gt; {\n\n  });</code></pre>\n<p><strong>DELETE</strong> can be also called as <code>.del()</code> for compatibility with old IE where <code>delete</code> is a reserved word.</p>\n<p>The HTTP method defaults to <strong>GET</strong>, so if you wish, the following is valid:</p>\n<pre><code> request(&#39;/search&#39;, (err, res) =&gt; {\n\n });</code></pre>\n<h2 id="setting-header-fields">Setting header fields</h2>\n<p>Setting header fields is simple, invoke <code>.set()</code> with a field name and value:</p>\n<pre><code> request\n   .get(&#39;/search&#39;)\n   .set(&#39;API-Key&#39;, &#39;foobar&#39;)\n   .set(&#39;Accept&#39;, &#39;application/json&#39;)\n   .then(callback);</code></pre>\n<p>You may also pass an object to set several fields in a single call:</p>\n<pre><code> request\n   .get(&#39;/search&#39;)\n   .set({ &#39;API-Key&#39;: &#39;foobar&#39;, Accept: &#39;application/json&#39; })\n   .then(callback);</code></pre>\n<h2 id="get-requests"><code>GET</code> requests</h2>\n<p>The <code>.query()</code> method accepts objects, which when used with the <strong>GET</strong> method will form a query-string. The following will produce the path <code>/search?query=Manny&amp;range=1..5&amp;order=desc</code>.</p>\n<pre><code> request\n   .get(&#39;/search&#39;)\n   .query({ query: &#39;Manny&#39; })\n   .query({ range: &#39;1..5&#39; })\n   .query({ order: &#39;desc&#39; })\n   .then(res =&gt; {\n\n   });</code></pre>\n<p>Or as a single object:</p>\n<pre><code>request\n  .get(&#39;/search&#39;)\n  .query({ query: &#39;Manny&#39;, range: &#39;1..5&#39;, order: &#39;desc&#39; })\n  .then(res =&gt; {\n\n  });</code></pre>\n<p>The <code>.query()</code> method accepts strings as well:</p>\n<pre><code>  request\n    .get(&#39;/querystring&#39;)\n    .query(&#39;search=Manny&amp;range=1..5&#39;)\n    .then(res =&gt; {\n\n    });</code></pre>\n<p>Or joined:</p>\n<pre><code>  request\n    .get(&#39;/querystring&#39;)\n    .query(&#39;search=Manny&#39;)\n    .query(&#39;range=1..5&#39;)\n    .then(res =&gt; {\n\n    });</code></pre>\n<h2 id="head-requests"><code>HEAD</code> requests</h2>\n<p>You can also use the <code>.query()</code> method for HEAD requests. The following will produce the path <code>/users?email=joe@smith.com</code>.</p>\n<pre><code>  request\n    .head(&#39;/users&#39;)\n    .query({ email: &#39;joe@smith.com&#39; })\n    .then(res =&gt; {\n\n    });</code></pre>\n<h2 id="post--put-requests"><code>POST</code> / <code>PUT</code> requests</h2>\n<p>A typical JSON <strong>POST</strong> request might look a little like the following, where we set the Content-Type header field appropriately, and &quot;write&quot; some data, in this case just a JSON string.</p>\n<pre><code>  request.post(&#39;/user&#39;)\n    .set(&#39;Content-Type&#39;, &#39;application/json&#39;)\n    .send(&#39;{&quot;name&quot;:&quot;tj&quot;,&quot;pet&quot;:&quot;tobi&quot;}&#39;)\n    .then(callback)\n    .catch(errorCallback)</code></pre>\n<p>Since JSON is undoubtedly the most common, it&#39;s the <em>default</em>! The following example is equivalent to the previous.</p>\n<pre><code>  request.post(&#39;/user&#39;)\n    .send({ name: &#39;tj&#39;, pet: &#39;tobi&#39; })\n    .then(callback, errorCallback)</code></pre>\n<p>Or using multiple <code>.send()</code> calls:</p>\n<pre><code>  request.post(&#39;/user&#39;)\n    .send({ name: &#39;tj&#39; })\n    .send({ pet: &#39;tobi&#39; })\n    .then(callback, errorCallback)</code></pre>\n<p>By default sending strings will set the <code>Content-Type</code> to <code>application/x-www-form-urlencoded</code>,\n  multiple calls will be concatenated with <code>&amp;</code>, here resulting in <code>name=tj&amp;pet=tobi</code>:</p>\n<pre><code>  request.post(&#39;/user&#39;)\n    .send(&#39;name=tj&#39;)\n    .send(&#39;pet=tobi&#39;)\n    .then(callback, errorCallback);</code></pre>\n<p>SuperAgent formats are extensible, however by default &quot;json&quot; and &quot;form&quot; are supported. To send the data as <code>application/x-www-form-urlencoded</code> simply invoke <code>.type()</code> with &quot;form&quot;, where the default is &quot;json&quot;. This request will <strong>POST</strong> the body &quot;name=tj&amp;pet=tobi&quot;.</p>\n<pre><code>  request.post(&#39;/user&#39;)\n    .type(&#39;form&#39;)\n    .send({ name: &#39;tj&#39; })\n    .send({ pet: &#39;tobi&#39; })\n    .then(callback, errorCallback)</code></pre>\n<p>Sending a <a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData"><code>FormData</code></a> object is also supported. The following example will <strong>POST</strong> the content of the HTML form identified by id=&quot;myForm&quot;:</p>\n<pre><code>  request.post(&#39;/user&#39;)\n    .send(new FormData(document.getElementById(&#39;myForm&#39;)))\n    .then(callback, errorCallback)</code></pre>\n<h2 id="setting-the-content-type">Setting the <code>Content-Type</code></h2>\n<p>The obvious solution is to use the <code>.set()</code> method:</p>\n<pre><code> request.post(&#39;/user&#39;)\n   .set(&#39;Content-Type&#39;, &#39;application/json&#39;)</code></pre>\n<p>As a short-hand the <code>.type()</code> method is also available, accepting\nthe canonicalized MIME type name complete with type/subtype, or\nsimply the extension name such as &quot;xml&quot;, &quot;json&quot;, &quot;png&quot;, etc:</p>\n<pre><code> request.post(&#39;/user&#39;)\n   .type(&#39;application/json&#39;)\n\n request.post(&#39;/user&#39;)\n   .type(&#39;json&#39;)\n\n request.post(&#39;/user&#39;)\n   .type(&#39;png&#39;)</code></pre>\n<h2 id="serializing-request-body">Serializing request body</h2>\n<p>SuperAgent will automatically serialize JSON and forms.\nYou can setup automatic serialization for other types as well:</p>\n<pre><code class="language-js">request.serialize[&#39;application/xml&#39;] = function (obj) {\n    return &#39;string generated from obj&#39;;\n};\n\n// going forward, all requests with a Content-type of\n// &#39;application/xml&#39; will be automatically serialized</code></pre>\n<p>If you want to send the payload in a custom format, you can replace\nthe built-in serialization with the <code>.serialize()</code> method on a per-request basis:</p>\n<pre><code class="language-js">request\n    .post(&#39;/user&#39;)\n    .send({foo: &#39;bar&#39;})\n    .serialize(obj =&gt; {\n        return &#39;string generated from obj&#39;;\n    });</code></pre>\n<h2 id="retrying-requests">Retrying requests</h2>\n<p>When given the <code>.retry()</code> method, SuperAgent will automatically retry requests, if they fail in a way that is transient or could be due to a flaky Internet connection.</p>\n<p>This method has two optional arguments: number of retries (default 1) and a callback. It calls <code>callback(err, res)</code> before each retry. The callback may return <code>true</code>/<code>false</code> to control whether the request should be retried (but the maximum number of retries is always applied).</p>\n<pre><code> request\n   .get(&#39;https://example.com/search&#39;)\n   .retry(2) // or:\n   .retry(2, callback)\n   .then(finished);\n   .catch(failed);</code></pre>\n<p>Use <code>.retry()</code> only with requests that are <em>idempotent</em> (i.e. multiple requests reaching the server won&#39;t cause undesirable side effects like duplicate purchases).</p>\n<p>All request methods are tried by default (which means if you do not want POST requests to be retried, you will need to pass a custom retry callback).</p>\n<p>By default the following status codes are retried:</p>\n<ul>\n<li><code>408</code></li>\n<li><code>413</code></li>\n<li><code>429</code></li>\n<li><code>500</code></li>\n<li><code>502</code></li>\n<li><code>503</code></li>\n<li><code>504</code></li>\n<li><code>521</code></li>\n<li><code>522</code></li>\n<li><code>524</code></li>\n</ul>\n<p>By default the following error codes are retried:</p>\n<ul>\n<li><code>&#39;ETIMEDOUT&#39;</code></li>\n<li><code>&#39;ECONNRESET&#39;</code></li>\n<li><code>&#39;EADDRINUSE&#39;</code></li>\n<li><code>&#39;ECONNREFUSED&#39;</code></li>\n<li><code>&#39;EPIPE&#39;</code></li>\n<li><code>&#39;ENOTFOUND&#39;</code></li>\n<li><code>&#39;ENETUNREACH&#39;</code></li>\n<li><code>&#39;EAI_AGAIN&#39;</code></li>\n</ul>\n<h2 id="setting-accept">Setting Accept</h2>\n<p>In a similar fashion to the <code>.type()</code> method it is also possible to set the <code>Accept</code> header via the short hand method <code>.accept()</code>. Which references <code>request.types</code> as well allowing you to specify either the full canonicalized MIME type name as <code>type/subtype</code>, or the extension suffix form as &quot;xml&quot;, &quot;json&quot;, &quot;png&quot;, etc. for convenience:</p>\n<pre><code> request.get(&#39;/user&#39;)\n   .accept(&#39;application/json&#39;)\n\n request.get(&#39;/user&#39;)\n   .accept(&#39;json&#39;)\n\n request.post(&#39;/user&#39;)\n   .accept(&#39;png&#39;)</code></pre>\n<h3 id="facebook-and-accept-json">Facebook and Accept JSON</h3>\n<p>If you are calling Facebook&#39;s API, be sure to send an <code>Accept: application/json</code> header in your request. If you don&#39;t do this, Facebook will respond with <code>Content-Type: text/javascript; charset=UTF-8</code>, which SuperAgent will not parse and thus <code>res.body</code> will be undefined. You can do this with either <code>req.accept(&#39;json&#39;)</code> or <code>req.header(&#39;Accept&#39;, &#39;application/json&#39;)</code>. See <a href="https://github.com/visionmedia/superagent/issues/1078">issue 1078</a> for details.</p>\n<h2 id="query-strings">Query strings</h2>\n<p>  <code>req.query(obj)</code> is a method which may be used to build up a query-string. For example populating <code>?format=json&amp;dest=/login</code> on a <strong>POST</strong>:</p>\n<pre><code>request\n  .post(&#39;/&#39;)\n  .query({ format: &#39;json&#39; })\n  .query({ dest: &#39;/login&#39; })\n  .send({ post: &#39;data&#39;, here: &#39;wahoo&#39; })\n  .then(callback);</code></pre>\n<p>By default the query string is not assembled in any particular order. An asciibetically-sorted query string can be enabled with <code>req.sortQuery()</code>. You may also provide a custom sorting comparison function with <code>req.sortQuery(myComparisonFn)</code>. The comparison function should take 2 arguments and return a negative/zero/positive integer.</p>\n<pre><code class="language-js"> // default order\n request.get(&#39;/user&#39;)\n   .query(&#39;name=Nick&#39;)\n   .query(&#39;search=Manny&#39;)\n   .sortQuery()\n   .then(callback)\n\n // customized sort function\n request.get(&#39;/user&#39;)\n   .query(&#39;name=Nick&#39;)\n   .query(&#39;search=Manny&#39;)\n   .sortQuery((a, b) =&gt; a.length - b.length)\n   .then(callback)</code></pre>\n<h2 id="tls-options">TLS options</h2>\n<p>In Node.js SuperAgent supports methods to configure HTTPS requests:</p>\n<ul>\n<li><code>.ca()</code>: Set the CA certificate(s) to trust</li>\n<li><code>.cert()</code>: Set the client certificate chain(s)</li>\n<li><code>.key()</code>: Set the client private key(s)</li>\n<li><code>.pfx()</code>: Set the client PFX or PKCS12 encoded private key and certificate chain</li>\n<li><code>.disableTLSCerts()</code>: Does not reject expired or invalid TLS certs. Sets internally <code>rejectUnauthorized=true</code>. <em>Be warned, this method allows MITM attacks.</em></li>\n</ul>\n<p>For more information, see Node.js <a href="https://nodejs.org/api/https.html#https_https_request_options_callback">https.request docs</a>.</p>\n<pre><code class="language-js">var key = fs.readFileSync(&#39;key.pem&#39;),\n    cert = fs.readFileSync(&#39;cert.pem&#39;);\n\nrequest\n  .post(&#39;/client-auth&#39;)\n  .key(key)\n  .cert(cert)\n  .then(callback);</code></pre>\n<pre><code class="language-js">var ca = fs.readFileSync(&#39;ca.cert.pem&#39;);\n\nrequest\n  .post(&#39;https://localhost/private-ca-server&#39;)\n  .ca(ca)\n  .then(res =&gt; {});</code></pre>\n<h2 id="parsing-response-bodies">Parsing response bodies</h2>\n<p>SuperAgent will parse known response-body data for you,\ncurrently supporting <code>application/x-www-form-urlencoded</code>,\n<code>application/json</code>, and <code>multipart/form-data</code>. You can setup\nautomatic parsing for other response-body data as well:</p>\n<pre><code class="language-js">//browser\nrequest.parse[&#39;application/xml&#39;] = function (str) {\n    return {&#39;object&#39;: &#39;parsed from str&#39;};\n};\n\n//node\nrequest.parse[&#39;application/xml&#39;] = function (res, cb) {\n    //parse response text and set res.body here\n\n    cb(null, res);\n};\n\n//going forward, responses of type &#39;application/xml&#39;\n//will be parsed automatically</code></pre>\n<p>You can set a custom parser (that takes precedence over built-in parsers) with the <code>.buffer(true).parse(fn)</code> method. If response buffering is not enabled (<code>.buffer(false)</code>) then the <code>response</code> event will be emitted without waiting for the body parser to finish, so <code>response.body</code> won&#39;t be available.</p>\n<h3 id="json--urlencoded">JSON / Urlencoded</h3>\n<p>The property <code>res.body</code> is the parsed object, for example if a request responded with the JSON string &#39;{&quot;user&quot;:{&quot;name&quot;:&quot;tobi&quot;}}&#39;, <code>res.body.user.name</code> would be &quot;tobi&quot;. Likewise the x-www-form-urlencoded value of &quot;user[name]=tobi&quot; would yield the same result. Only one level of nesting is supported. If you need more complex data, send JSON instead.</p>\n<p>Arrays are sent by repeating the key. <code>.send({color: [&#39;red&#39;,&#39;blue&#39;]})</code> sends <code>color=red&amp;color=blue</code>. If you want the array keys to contain <code>[]</code> in their name, you must add it yourself, as SuperAgent doesn&#39;t add it automatically.</p>\n<h3 id="multipart">Multipart</h3>\n<p>The Node client supports <em>multipart/form-data</em> via the <a href="https://github.com/felixge/node-formidable">Formidable</a> module. When parsing multipart responses, the object <code>res.files</code> is also available to you. Suppose for example a request responds with the following multipart body:</p>\n<pre><code>--whoop\nContent-Disposition: attachment; name=&quot;image&quot;; filename=&quot;tobi.png&quot;\nContent-Type: image/png\n\n... data here ...\n--whoop\nContent-Disposition: form-data; name=&quot;name&quot;\nContent-Type: text/plain\n\nTobi\n--whoop--</code></pre>\n<p>You would have the values <code>res.body.name</code> provided as &quot;Tobi&quot;, and <code>res.files.image</code> as a <code>File</code> object containing the path on disk, filename, and other properties.</p>\n<h3 id="binary">Binary</h3>\n<p>In browsers, you may use <code>.responseType(&#39;blob&#39;)</code> to request handling of binary response bodies. This API is unnecessary when running in node.js. The supported argument values for this method are</p>\n<ul>\n<li><code>&#39;blob&#39;</code> passed through to the XmlHTTPRequest <code>responseType</code> property</li>\n<li><code>&#39;arraybuffer&#39;</code> passed through to the XmlHTTPRequest <code>responseType</code> property</li>\n</ul>\n<pre><code class="language-js">req.get(&#39;/binary.data&#39;)\n  .responseType(&#39;blob&#39;)\n  .then(res =&gt; {\n    // res.body will be a browser native Blob type here\n  });</code></pre>\n<p>For more information, see the Mozilla Developer Network <a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType">xhr.responseType docs</a>.</p>\n<h2 id="response-properties">Response properties</h2>\n<p>Many helpful flags and properties are set on the <code>Response</code> object, ranging from the response text, parsed response body, header fields, status flags and more.</p>\n<h3 id="response-text">Response text</h3>\n<p>The <code>res.text</code> property contains the unparsed response body string. This property is always present for the client API, and only when the mime type matches &quot;text/<em>&quot;, &quot;</em>/json&quot;, or &quot;x-www-form-urlencoded&quot; by default for node. The reasoning is to conserve memory, as buffering text of large bodies such as multipart files or images is extremely inefficient. To force buffering see the &quot;Buffering responses&quot; section.</p>\n<h3 id="response-body">Response body</h3>\n<p>Much like SuperAgent can auto-serialize request data, it can also automatically parse it. When a parser is defined for the Content-Type, it is parsed, which by default includes &quot;application/json&quot; and &quot;application/x-www-form-urlencoded&quot;. The parsed object is then available via <code>res.body</code>.</p>\n<h3 id="response-header-fields">Response header fields</h3>\n<p>The <code>res.header</code> contains an object of parsed header fields, lowercasing field names much like node does. For example <code>res.header[&#39;content-length&#39;]</code>.</p>\n<h3 id="response-content-type">Response Content-Type</h3>\n<p>The Content-Type response header is special-cased, providing <code>res.type</code>, which is void of the charset (if any). For example the Content-Type of &quot;text/html; charset=utf8&quot; will provide &quot;text/html&quot; as <code>res.type</code>, and the <code>res.charset</code> property would then contain &quot;utf8&quot;.</p>\n<h3 id="response-status">Response status</h3>\n<p>The response status flags help determine if the request was a success, among other useful information, making SuperAgent ideal for interacting with RESTful web services. These flags are currently defined as:</p>\n<pre><code> var type = status / 100 | 0;\n\n // status / class\n res.status = status;\n res.statusType = type;\n\n // basics\n res.info = 1 == type;\n res.ok = 2 == type;\n res.clientError = 4 == type;\n res.serverError = 5 == type;\n res.error = 4 == type || 5 == type;\n\n // sugar\n res.accepted = 202 == status;\n res.noContent = 204 == status || 1223 == status;\n res.badRequest = 400 == status;\n res.unauthorized = 401 == status;\n res.notAcceptable = 406 == status;\n res.notFound = 404 == status;\n res.forbidden = 403 == status;</code></pre>\n<h2 id="aborting-requests">Aborting requests</h2>\n<p>To abort requests simply invoke the <code>req.abort()</code> method.</p>\n<h2 id="timeouts">Timeouts</h2>\n<p>Sometimes networks and servers get &quot;stuck&quot; and never respond after accepting a request. Set timeouts to avoid requests waiting forever.</p>\n<ul>\n<li><p><code>req.timeout({deadline:ms})</code> or <code>req.timeout(ms)</code> (where <code>ms</code> is a number of milliseconds &gt; 0) sets a deadline for the entire request (including all uploads, redirects, server processing time) to complete. If the response isn&#39;t fully downloaded within that time, the request will be aborted.</p>\n</li>\n<li><p><code>req.timeout({response:ms})</code> sets maximum time to wait for the first byte to arrive from the server, but it does not limit how long the entire download can take. Response timeout should be at least few seconds longer than just the time it takes the server to respond, because it also includes time to make DNS lookup, TCP/IP and TLS connections, and time to upload request data.</p>\n</li>\n</ul>\n<p>You should use both <code>deadline</code> and <code>response</code> timeouts. This way you can use a short response timeout to detect unresponsive networks quickly, and a long deadline to give time for downloads on slow, but reliable, networks. Note that both of these timers limit how long <em>uploads</em> of attached files are allowed to take. Use long timeouts if you&#39;re uploading files.</p>\n<pre><code>request\n  .get(&#39;/big-file?network=slow&#39;)\n  .timeout({\n    response: 5000,  // Wait 5 seconds for the server to start sending,\n    deadline: 60000, // but allow 1 minute for the file to finish loading.\n  })\n  .then(res =&gt; {\n      /* responded in time */\n    }, err =&gt; {\n      if (err.timeout) { /* timed out! */ } else { /* other error */ }\n  });</code></pre>\n<p>Timeout errors have a <code>.timeout</code> property.</p>\n<h2 id="authentication">Authentication</h2>\n<p>In both Node and browsers auth available via the <code>.auth()</code> method:</p>\n<pre><code>request\n  .get(&#39;http://local&#39;)\n  .auth(&#39;tobi&#39;, &#39;learnboost&#39;)\n  .then(callback);</code></pre>\n<p>In the <em>Node</em> client Basic auth can be in the URL as &quot;user:pass&quot;:</p>\n<pre><code>request.get(&#39;http://tobi:learnboost@local&#39;).then(callback);</code></pre>\n<p>By default only <code>Basic</code> auth is used. In browser you can add <code>{type:&#39;auto&#39;}</code> to enable all methods built-in in the browser (Digest, NTLM, etc.):</p>\n<pre><code>request.auth(&#39;digest&#39;, &#39;secret&#39;, {type:&#39;auto&#39;})</code></pre>\n<p>The <code>auth</code> method also supports a <code>type</code> of <code>bearer</code>, to specify token-based authentication:</p>\n<pre><code>request.auth(&#39;my_token&#39;, { type: &#39;bearer&#39; })</code></pre>\n<h2 id="following-redirects">Following redirects</h2>\n<p>By default up to 5 redirects will be followed, however you may specify this with the <code>res.redirects(n)</code> method:</p>\n<pre><code>const response = await request.get(&#39;/some.png&#39;).redirects(2);</code></pre>\n<p>Redirects exceeding the limit are treated as errors. Use <code>.ok(res =&gt; res.status &lt; 400)</code> to read them as successful responses.</p>\n<h2 id="agents-for-global-state">Agents for global state</h2>\n<h3 id="saving-cookies">Saving cookies</h3>\n<p>In Node SuperAgent does not save cookies by default, but you can use the <code>.agent()</code> method to create a copy of SuperAgent that saves cookies. Each copy has a separate cookie jar.</p>\n<pre><code>const agent = request.agent();\nagent\n  .post(&#39;/login&#39;)\n  .then(() =&gt; {\n    return agent.get(&#39;/cookied-page&#39;);\n  });</code></pre>\n<p>In browsers cookies are managed automatically by the browser, so the <code>.agent()</code> does not isolate cookies.</p>\n<h3 id="default-options-for-multiple-requests">Default options for multiple requests</h3>\n<p>Regular request methods called on the agent will be used as defaults for all requests made by that agent.</p>\n<pre><code>const agent = request.agent()\n  .use(plugin)\n  .auth(shared);\n\nawait agent.get(&#39;/with-plugin-and-auth&#39;);\nawait agent.get(&#39;/also-with-plugin-and-auth&#39;);</code></pre>\n<p>The complete list of methods that the agent can use to set defaults is: <code>use</code>, <code>on</code>, <code>once</code>, <code>set</code>, <code>query</code>, <code>type</code>, <code>accept</code>, <code>auth</code>, <code>withCredentials</code>, <code>sortQuery</code>, <code>retry</code>, <code>ok</code>, <code>redirects</code>, <code>timeout</code>, <code>buffer</code>, <code>serialize</code>, <code>parse</code>, <code>ca</code>, <code>key</code>, <code>pfx</code>, <code>cert</code>.</p>\n<h2 id="piping-data">Piping data</h2>\n<p>The Node client allows you to pipe data to and from the request. Please note that <code>.pipe()</code> is used <strong>instead of</strong> <code>.end()</code>/<code>.then()</code> methods.</p>\n<p>For example piping a file&#39;s contents as the request:</p>\n<pre><code>const request = require(&#39;superagent&#39;);\nconst fs = require(&#39;fs&#39;);\n\nconst stream = fs.createReadStream(&#39;path/to/my.json&#39;);\nconst req = request.post(&#39;/somewhere&#39;);\nreq.type(&#39;json&#39;);\nstream.pipe(req);</code></pre>\n<p>Note that when you pipe to a request, superagent sends the piped data with <a href="https://en.wikipedia.org/wiki/Chunked_transfer_encoding">chunked transfer encoding</a>, which isn&#39;t supported by all servers (for instance, Python WSGI servers).</p>\n<p>Or piping the response to a file:</p>\n<pre><code>const stream = fs.createWriteStream(&#39;path/to/my.json&#39;);\nconst req = request.get(&#39;/some.json&#39;);\nreq.pipe(stream);</code></pre>\n<p> It&#39;s not possible to mix pipes and callbacks or promises. Note that you should <strong>NOT</strong> attempt to pipe the result of <code>.end()</code> or the <code>Response</code> object:</p>\n<pre><code>// Don&#39;t do either of these:\nconst stream = getAWritableStream();\nconst req = request\n  .get(&#39;/some.json&#39;)\n  // BAD: this pipes garbage to the stream and fails in unexpected ways\n  .end((err, this_does_not_work) =&gt; this_does_not_work.pipe(stream))\nconst req = request\n  .get(&#39;/some.json&#39;)\n  .end()\n  // BAD: this is also unsupported, .pipe calls .end for you.\n  .pipe(nope_its_too_late);</code></pre>\n<p>In a <a href="https://github.com/visionmedia/superagent/issues/1188">future version</a> of superagent, improper calls to <code>pipe()</code> will fail.</p>\n<h2 id="multipart-requests">Multipart requests</h2>\n<p>SuperAgent is also great for <em>building</em> multipart requests for which it provides methods <code>.attach()</code> and <code>.field()</code>.</p>\n<p>When you use <code>.field()</code> or <code>.attach()</code> you can&#39;t use <code>.send()</code> and you <em>must not</em> set <code>Content-Type</code> (the correct type will be set for you).</p>\n<h3 id="attaching-files">Attaching files</h3>\n<p>To send a file use <code>.attach(name, [file], [options])</code>. You can attach multiple files by calling <code>.attach</code> multiple times. The arguments are:</p>\n<ul>\n<li><code>name</code> \xe2\x80\x94 field name in the form.</li>\n<li><code>file</code> \xe2\x80\x94 either string with file path or <code>Blob</code>/<code>Buffer</code> object.</li>\n<li><code>options</code> \xe2\x80\x94 (optional) either string with custom file name or <code>{filename: string}</code> object. In Node also <code>{contentType: &#39;mime/type&#39;}</code> is supported. In browser create a <code>Blob</code> with an appropriate type instead.</li>\n</ul>\n<br>\n\n<pre><code>request\n  .post(&#39;/upload&#39;)\n  .attach(&#39;image1&#39;, &#39;path/to/felix.jpeg&#39;)\n  .attach(&#39;image2&#39;, imageBuffer, &#39;luna.jpeg&#39;)\n  .field(&#39;caption&#39;, &#39;My cats&#39;)\n  .then(callback);</code></pre>\n<h3 id="field-values">Field values</h3>\n<p>Much like form fields in HTML, you can set field values with <code>.field(name, value)</code> and <code>.field({name: value})</code>. Suppose you want to upload a few images with your name and email, your request might look something like this:</p>\n<pre><code> request\n   .post(&#39;/upload&#39;)\n   .field(&#39;user[name]&#39;, &#39;Tobi&#39;)\n   .field(&#39;user[email]&#39;, &#39;tobi@learnboost.com&#39;)\n   .field(&#39;friends[]&#39;, [&#39;loki&#39;, &#39;jane&#39;])\n   .attach(&#39;image&#39;, &#39;path/to/tobi.png&#39;)\n   .then(callback);</code></pre>\n<h2 id="compression">Compression</h2>\n<p>The node client supports compressed responses, best of all, you don&#39;t have to do anything! It just works.</p>\n<h2 id="buffering-responses">Buffering responses</h2>\n<p>To force buffering of response bodies as <code>res.text</code> you may invoke <code>req.buffer()</code>. To undo the default of buffering for text responses such as &quot;text/plain&quot;, &quot;text/html&quot; etc you may invoke <code>req.buffer(false)</code>.</p>\n<p>When buffered the <code>res.buffered</code> flag is provided, you may use this to handle both buffered and unbuffered responses in the same callback.</p>\n<h2 id="cors">CORS</h2>\n<p>For security reasons, browsers will block cross-origin requests unless the server opts-in using CORS headers. Browsers will also make extra <strong>OPTIONS</strong> requests to check what HTTP headers and methods are allowed by the server. <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS">Read more about CORS</a>.</p>\n<p>The <code>.withCredentials()</code> method enables the ability to send cookies from the origin, however only when <code>Access-Control-Allow-Origin</code> is <em>not</em> a wildcard (&quot;*&quot;), and <code>Access-Control-Allow-Credentials</code> is &quot;true&quot;.</p>\n<pre><code>request\n  .get(&#39;https://api.example.com:4001/&#39;)\n  .withCredentials()\n  .then(res =&gt; {\n    assert.equal(200, res.status);\n    assert.equal(&#39;tobi&#39;, res.text);\n  })</code></pre>\n<h2 id="error-handling">Error handling</h2>\n<p>Your callback function will always be passed two arguments: error and response. If no error occurred, the first argument will be null:</p>\n<pre><code>request\n .post(&#39;/upload&#39;)\n .attach(&#39;image&#39;, &#39;path/to/tobi.png&#39;)\n .then(res =&gt; {\n\n });</code></pre>\n<p>An &quot;error&quot; event is also emitted, with you can listen for:</p>\n<pre><code>request\n  .post(&#39;/upload&#39;)\n  .attach(&#39;image&#39;, &#39;path/to/tobi.png&#39;)\n  .on(&#39;error&#39;, handle)\n  .then(res =&gt; {\n\n  });</code></pre>\n<p>Note that <strong>superagent considers 4xx and 5xx responses (as well as unhandled 3xx responses) errors by default</strong>. For example, if you get a <code>304 Not modified</code>, <code>403 Forbidden</code> or <code>500 Internal server error</code> response, this status information will be available via <code>err.status</code>. Errors from such responses also contain an <code>err.response</code> field with all of the properties mentioned in &quot;<a href="#response-properties">Response properties</a>&quot;. The library behaves in this way to handle the common case of wanting success responses and treating HTTP error status codes as errors while still allowing for custom logic around specific error conditions.</p>\n<p>Network failures, timeouts, and other errors that produce no response will contain no <code>err.status</code> or <code>err.response</code> fields.</p>\n<p>If you wish to handle 404 or other HTTP error responses, you can query the <code>err.status</code> property. When an HTTP error occurs (4xx or 5xx response) the <code>res.error</code> property is an <code>Error</code> object, this allows you to perform checks such as:</p>\n<pre><code>if (err &amp;&amp; err.status === 404) {\n  alert(&#39;oh no &#39; + res.body.message);\n}\nelse if (err) {\n  // all other error types we handle generically\n}</code></pre>\n<p>Alternatively, you can use the <code>.ok(callback)</code> method to decide whether a response is an error or not. The callback to the <code>ok</code> function gets a response and returns <code>true</code> if the response should be interpreted as success.</p>\n<pre><code>request.get(&#39;/404&#39;)\n  .ok(res =&gt; res.status &lt; 500)\n  .then(response =&gt; {\n    // reads 404 page as a successful response\n  })</code></pre>\n<h2 id="progress-tracking">Progress tracking</h2>\n<p>SuperAgent fires <code>progress</code> events on upload and download of large files.</p>\n<pre><code>request.post(url)\n  .attach(&#39;field_name&#39;, file)\n  .on(&#39;progress&#39;, event =&gt; {\n    /* the event is:\n    {\n      direction: &quot;upload&quot; or &quot;download&quot;\n      percent: 0 to 100 // may be missing if file size is unknown\n      total: // total file size, may be missing\n      loaded: // bytes downloaded or uploaded so far\n    } */\n  })\n  .then()</code></pre>\n<h2 id="testing-on-localhost">Testing on localhost</h2>\n<h3 id="forcing-specific-connection-ip-address">Forcing specific connection IP address</h3>\n<p>In Node.js it&#39;s possible to ignore DNS resolution and direct all requests to a specific IP address using <code>.connect()</code> method. For example, this request will go to localhost instead of <code>example.com</code>:</p>\n<pre><code>const res = await request.get(&quot;http://example.com&quot;).connect(&quot;127.0.0.1&quot;);</code></pre>\n<p>Because the request may be redirected, it&#39;s possible to specify multiple hostnames and multiple IPs, as well as a special <code>*</code> as the fallback (note: other wildcards are not supported). The requests will keep their <code>Host</code> header with the original value. <code>.connect(undefined)</code> turns off the feature.</p>\n<pre><code>const res = await request.get(&quot;http://redir.example.com:555&quot;)\n  .connect({\n    &quot;redir.example.com&quot;: &quot;127.0.0.1&quot;, // redir.example.com:555 will use 127.0.0.1:555\n    &quot;www.example.com&quot;: false, // don&#39;t override this one; use DNS as normal\n    &quot;mapped.example.com&quot;: { host: &quot;127.0.0.1&quot;, port: 8080}, // mapped.example.com:* will use 127.0.0.1:8080\n    &quot;*&quot;: &quot;proxy.example.com&quot;, // all other requests will go to this host\n  });</code></pre>\n<h3 id="ignoring-brokeninsecure-https-on-localhost">Ignoring broken/insecure HTTPS on localhost</h3>\n<p>In Node.js, when HTTPS is misconfigured and insecure (e.g. using self-signed certificate <em>without</em> specifying own <code>.ca()</code>), it&#39;s still possible to permit requests to <code>localhost</code> by calling <code>.trustLocalhost()</code>:</p>\n<pre><code>const res = await request.get(&quot;https://localhost&quot;).trustLocalhost()</code></pre>\n<p>Together with <code>.connect(&quot;127.0.0.1&quot;)</code> this may be used to force HTTPS requests to any domain to be re-routed to <code>localhost</code> instead.</p>\n<p>It&#39;s generally safe to ignore broken HTTPS on <code>localhost</code>, because the loopback interface is not exposed to untrusted networks. Trusting <code>localhost</code> may become the default in the future. Use <code>.trustLocalhost(false)</code> to force check of <code>127.0.0.1</code>&#39;s authenticity.</p>\n<p>We intentionally don&#39;t support disabling of HTTPS security when making requests to any other IP, because such options end up abused as a quick &quot;fix&quot; for HTTPS problems. You can get free HTTPS certificates from <a href="https://certbot.eff.org">Let&#39;s Encrypt</a> or set your own CA (<code>.ca(ca_public_pem)</code>) to make your self-signed certificates trusted.</p>\n<h2 id="promise-and-generator-support">Promise and Generator support</h2>\n<p>SuperAgent&#39;s request is a &quot;thenable&quot; object that&#39;s compatible with JavaScript promises and the <code>async</code>/<code>await</code> syntax.</p>\n<pre><code>const res = await request.get(url);</code></pre>\n<p>If you&#39;re using promises, <strong>do not</strong> call <code>.end()</code> or <code>.pipe()</code>. Any use of <code>.then()</code> or <code>await</code> disables all other ways of using the request.</p>\n<p>Libraries like <a href="https://github.com/tj/co">co</a> or a web framework like <a href="https://github.com/koajs/koa">koa</a> can <code>yield</code> on any SuperAgent method:</p>\n<pre><code>const req = request\n  .get(&#39;http://local&#39;)\n  .auth(&#39;tobi&#39;, &#39;learnboost&#39;);\nconst res = yield req;</code></pre>\n<p>Note that SuperAgent expects the global <code>Promise</code> object to be present. You&#39;ll need a polyfill to use promises in Internet Explorer or Node.js 0.10.</p>\n<h2 id="browser-and-node-versions">Browser and node versions</h2>\n<p>SuperAgent has two implementations: one for web browsers (using XHR) and one for Node.JS (using core http module). By default Browserify and WebPack will pick the browser version.</p>\n<p>If want to use WebPack to compile code for Node.JS, you <em>must</em> specify <a href="https://webpack.github.io/docs/configuration.html#target">node target</a> in its configuration.</p>\n<h3 id="using-browser-version-in-electron">Using browser version in electron</h3>\n<p><a href="https://electron.atom.io/">Electron</a> developers report if you would prefer to use the browser version of SuperAgent instead of the Node version, you can <code>require(&#39;superagent/superagent&#39;)</code>. Your requests will now show up in the Chrome developer tools Network tab. Note this environment is not covered by automated test suite and not officially supported.</p>\n\n    </div>\n    <a href="http://github.com/visionmedia/superagent"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png" alt="Fork me on GitHub"></a>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js"></script>\n    <script>\n      $(\'code\').each(function(){\n        $(this).html(highlight($(this).text()));\n      });\n\n      function highlight(js) {\n        return js\n          .replace(/</g, \'&lt;\')\n          .replace(/>/g, \'&gt;\')\n          .replace(/(\'.*?\')/gm, \'<span class="string">$1</span>\')\n          .replace(/(\\d+\\.\\d+)/gm, \'<span class="number">$1</span>\')\n          .replace(/(\\d+)/gm, \'<span class="number">$1</span>\')\n          .replace(/\\bnew *(\\w+)/gm, \'<span class="keyword">new</span> <span class="init">$1</span>\')\n          .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, \'<span class="keyword">$1</span>\')\n      }\n    </script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/3.0.0/tocbot.js"></script>\n    <script>\n      // Only use tocbot for main docs, not test docs\n      if (document.querySelector(\'#superagent\')) {\n        tocbot.init({\n          // Where to render the table of contents.\n          tocSelector: \'#menu\',\n          // Where to grab the headings to build the table of contents.\n          contentSelector: \'#content\',\n          // Which headings to grab inside of the contentSelector element.\n          headingSelector: \'h2\',\n          smoothScroll: false\n        });\n      }\n    </script>\n  </body>\n</html>\n'b'{\n  "name": "superagent",\n  "description": "elegant & feature rich browser / node HTTP with a fluent API",\n  "version": "6.0.0",\n  "author": "TJ Holowaychuk <tj@vision-media.ca>",\n  "browser": {\n    "./src/node/index.js": "./src/client.js",\n    "./lib/node/index.js": "./lib/client.js",\n    "./test/support/server.js": "./test/support/blank.js"\n  },\n  "bugs": {\n    "url": "https://github.com/visionmedia/superagent/issues"\n  },\n  "commitlint": {\n    "extends": [\n      "@commitlint/config-conventional"\n    ]\n  },\n  "contributors": [\n    "Kornel Lesi\xc5\x84ski <kornel@geekhood.net>",\n    "Peter Lyons <pete@peterlyons.com>",\n    "Hunter Loftis <hunter@hunterloftis.com>",\n    "Nick Baugh <niftylettuce@gmail.com>"\n  ],\n  "dependencies": {\n    "component-emitter": "^1.3.0",\n    "cookiejar": "^2.1.2",\n    "debug": "^4.1.1",\n    "fast-safe-stringify": "^2.0.7",\n    "form-data": "^3.0.0",\n    "formidable": "^1.2.2",\n    "methods": "^1.1.2",\n    "mime": "^2.4.6",\n    "qs": "^6.9.4",\n    "readable-stream": "^3.6.0",\n    "semver": "^7.3.2"\n  },\n  "devDependencies": {\n    "@babel/cli": "^7.10.5",\n    "@babel/core": "^7.11.1",\n    "@babel/plugin-transform-runtime": "^7.11.0",\n    "@babel/preset-env": "^7.11.0",\n    "@commitlint/cli": "^9.1.1",\n    "@commitlint/config-conventional": "^9.1.1",\n    "Base64": "^1.1.0",\n    "babelify": "^10.0.0",\n    "basic-auth-connect": "^1.0.0",\n    "body-parser": "^1.19.0",\n    "browserify": "^16.5.2",\n    "codecov": "^3.7.2",\n    "cookie-parser": "^1.4.5",\n    "cross-env": "^7.0.2",\n    "eslint": "^7.6.0",\n    "eslint-config-xo-lass": "^1.0.3",\n    "eslint-plugin-compat": "^3.8.0",\n    "eslint-plugin-node": "^11.1.0",\n    "express": "^4.17.1",\n    "express-session": "^1.17.1",\n    "fixpack": "^3.0.6",\n    "husky": "^4.2.5",\n    "lint-staged": "^10.2.11",\n    "marked": "^1.1.1",\n    "mocha": "3.5.3",\n    "multer": "^1.4.2",\n    "nyc": "^15.1.0",\n    "remark-cli": "^8.0.1",\n    "remark-preset-github": "^3.0.0",\n    "rimraf": "^3.0.2",\n    "should": "^13.2.3",\n    "should-http": "^0.1.1",\n    "tinyify": "^3.0.0",\n    "xo": "0.32.1",\n    "zuul": "^3.12.0"\n  },\n  "engines": {\n    "node": ">= 7.0.0"\n  },\n  "homepage": "https://github.com/visionmedia/superagent",\n  "husky": {\n    "hooks": {\n      "pre-commit": "npm test",\n      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"\n    }\n  },\n  "jsdelivr": "dist/superagent.min.js",\n  "keywords": [\n    "agent",\n    "ajax",\n    "ajax",\n    "api",\n    "async",\n    "await",\n    "axios",\n    "cancel",\n    "client",\n    "frisbee",\n    "got",\n    "http",\n    "http",\n    "https",\n    "ky",\n    "promise",\n    "promise",\n    "promises",\n    "request",\n    "request",\n    "requests",\n    "response",\n    "rest",\n    "retry",\n    "super",\n    "superagent",\n    "timeout",\n    "transform",\n    "xhr",\n    "xmlhttprequest"\n  ],\n  "license": "MIT",\n  "lint-staged": {\n    "linters": {\n      "*.js": [\n        "xo --fix",\n        "git add"\n      ],\n      "*.md": [\n        "remark . -qfo",\n        "git add"\n      ],\n      "package.json": [\n        "fixpack",\n        "git add"\n      ]\n    }\n  },\n  "main": "lib/node/index.js",\n  "prettier": {\n    "singleQuote": true,\n    "bracketSpacing": true,\n    "trailingComma": "none"\n  },\n  "remarkConfig": {\n    "plugins": [\n      "preset-github"\n    ]\n  },\n  "repository": {\n    "type": "git",\n    "url": "git://github.com/visionmedia/superagent.git"\n  },\n  "scripts": {\n    "browserify": "browserify src/node/index.js -o dist/superagent.js -s superagent -g [ babelify --configFile ./.dist.babelrc ]",\n    "build": "npm run build:clean && npm run build:lib && npm run build:dist",\n    "build:clean": "rimraf lib dist",\n    "build:dist": "npm run browserify && npm run minify",\n    "build:lib": "babel --config-file ./.lib.babelrc src --out-dir lib",\n    "coverage": "nyc report --reporter=text-lcov > coverage.lcov && codecov",\n    "lint": "xo && remark . -qfo && eslint -c .lib.eslintrc lib && eslint -c .dist.eslintrc dist",\n    "minify": "cross-env NODE_ENV=production browserify src/node/index.js -o dist/superagent.min.js -s superagent -g [ babelify --configFile ./.dist.babelrc ] -p tinyify",\n    "nyc": "cross-env NODE_ENV=test nyc ava",\n    "test": "npm run build && npm run lint && make test",\n    "test-http2": "npm run build && npm run lint && make test-node-http2"\n  },\n  "unpkg": "dist/superagent.min.js",\n  "xo": {\n    "prettier": true,\n    "space": true,\n    "extends": [\n      "xo-lass"\n    ],\n    "env": [\n      "node",\n      "browser"\n    ],\n    "overrides": [\n      {\n        "files": "test/**/*.js",\n        "env": [\n          "mocha"\n        ],\n        "rules": {\n          "block-scoped-var": "off",\n          "complexity": "off",\n          "default-case": "off",\n          "eqeqeq": "off",\n          "func-name-matching": "off",\n          "func-names": "off",\n          "guard-for-in": "off",\n          "handle-callback-err": "off",\n          "import/no-extraneous-dependencies": "off",\n          "import/no-unassigned-import": "off",\n          "import/order": "off",\n          "max-nested-callbacks": "off",\n          "new-cap": "off",\n          "no-eq-null": "off",\n          "no-extend-native": "off",\n          "no-implicit-coercion": "off",\n          "no-multi-assign": "off",\n          "no-negated-condition": "off",\n          "no-prototype-builtins": "off",\n          "no-redeclare": "off",\n          "no-undef": "off",\n          "no-unused-expressions": "off",\n          "no-unused-vars": "off",\n          "no-use-extend-native/no-use-extend-native": "off",\n          "no-useless-escape": "off",\n          "no-var": "off",\n          "no-void": "off",\n          "node/no-deprecated-api": "off",\n          "prefer-rest-params": "off",\n          "prefer-spread": "off",\n          "promise/prefer-await-to-then": "off",\n          "promise/valid-params": "off",\n          "unicorn/filename-case": "off",\n          "valid-jsdoc": "off",\n          "node/no-unsupported-features/node-builtins": "off",\n          "node/no-path-concat": "off"\n        }\n      }\n    ],\n    "rules": {\n      "unicorn/prevent-abbreviations": "off",\n      "node/no-unsupported-features/es-syntax": "off"\n    },\n    "globals": [\n      "ActiveXObject"\n    ]\n  }\n}\n'b'# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\n\n"@babel/cli@^7.10.5":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/cli/-/cli-7.10.5.tgz#57df2987c8cf89d0fc7d4b157ec59d7619f1b77a"\n  integrity sha512-j9H9qSf3kLdM0Ao3aGPbGZ73mEA9XazuupcS6cDGWuiyAcANoguhP0r2Lx32H5JGw4sSSoHG3x/mxVnHgvOoyA==\n  dependencies:\n    commander "^4.0.1"\n    convert-source-map "^1.1.0"\n    fs-readdir-recursive "^1.1.0"\n    glob "^7.0.0"\n    lodash "^4.17.19"\n    make-dir "^2.1.0"\n    slash "^2.0.0"\n    source-map "^0.5.0"\n  optionalDependencies:\n    chokidar "^2.1.8"\n\n"@babel/code-frame@^7.0.0", "@babel/code-frame@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/code-frame/-/code-frame-7.10.4.tgz#168da1a36e90da68ae8d49c0f1b48c7c6249213a"\n  integrity sha512-vG6SvB6oYEhvgisZNFRmRCUkLz11c7rp+tbNTynGqc6mS1d5ATd/sGyV6W0KZZnXRKMTzZDRgQT3Ou9jhpAfUg==\n  dependencies:\n    "@babel/highlight" "^7.10.4"\n\n"@babel/compat-data@^7.10.4", "@babel/compat-data@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/compat-data/-/compat-data-7.11.0.tgz#e9f73efe09af1355b723a7f39b11bad637d7c99c"\n  integrity sha512-TPSvJfv73ng0pfnEOh17bYMPQbI95+nGWc71Ss4vZdRBHTDqmM9Z8ZV4rYz8Ks7sfzc95n30k6ODIq5UGnXcYQ==\n  dependencies:\n    browserslist "^4.12.0"\n    invariant "^2.2.4"\n    semver "^5.5.0"\n\n"@babel/core@^7.11.1", "@babel/core@^7.7.5":\n  version "7.11.1"\n  resolved "https://registry.yarnpkg.com/@babel/core/-/core-7.11.1.tgz#2c55b604e73a40dc21b0e52650b11c65cf276643"\n  integrity sha512-XqF7F6FWQdKGGWAzGELL+aCO1p+lRY5Tj5/tbT3St1G8NaH70jhhDIKknIZaDans0OQBG5wRAldROLHSt44BgQ==\n  dependencies:\n    "@babel/code-frame" "^7.10.4"\n    "@babel/generator" "^7.11.0"\n    "@babel/helper-module-transforms" "^7.11.0"\n    "@babel/helpers" "^7.10.4"\n    "@babel/parser" "^7.11.1"\n    "@babel/template" "^7.10.4"\n    "@babel/traverse" "^7.11.0"\n    "@babel/types" "^7.11.0"\n    convert-source-map "^1.7.0"\n    debug "^4.1.0"\n    gensync "^1.0.0-beta.1"\n    json5 "^2.1.2"\n    lodash "^4.17.19"\n    resolve "^1.3.2"\n    semver "^5.4.1"\n    source-map "^0.5.0"\n\n"@babel/generator@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/generator/-/generator-7.11.0.tgz#4b90c78d8c12825024568cbe83ee6c9af193585c"\n  integrity sha512-fEm3Uzw7Mc9Xi//qU20cBKatTfs2aOtKqmvy/Vm7RkJEGFQ4xc9myCfbXxqK//ZS8MR/ciOHw6meGASJuKmDfQ==\n  dependencies:\n    "@babel/types" "^7.11.0"\n    jsesc "^2.5.1"\n    source-map "^0.5.0"\n\n"@babel/helper-annotate-as-pure@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.10.4.tgz#5bf0d495a3f757ac3bda48b5bf3b3ba309c72ba3"\n  integrity sha512-XQlqKQP4vXFB7BN8fEEerrmYvHp3fK/rBkRFz9jaJbzK0B1DSfej9Kc7ZzE8Z/OnId1jpJdNAZ3BFQjWG68rcA==\n  dependencies:\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-builder-binary-assignment-operator-visitor@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.10.4.tgz#bb0b75f31bf98cbf9ff143c1ae578b87274ae1a3"\n  integrity sha512-L0zGlFrGWZK4PbT8AszSfLTM5sDU1+Az/En9VrdT8/LmEiJt4zXt+Jve9DCAnQcbqDhCI+29y/L93mrDzddCcg==\n  dependencies:\n    "@babel/helper-explode-assignable-expression" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-compilation-targets@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-compilation-targets/-/helper-compilation-targets-7.10.4.tgz#804ae8e3f04376607cc791b9d47d540276332bd2"\n  integrity sha512-a3rYhlsGV0UHNDvrtOXBg8/OpfV0OKTkxKPzIplS1zpx7CygDcWWxckxZeDd3gzPzC4kUT0A4nVFDK0wGMh4MQ==\n  dependencies:\n    "@babel/compat-data" "^7.10.4"\n    browserslist "^4.12.0"\n    invariant "^2.2.4"\n    levenary "^1.1.1"\n    semver "^5.5.0"\n\n"@babel/helper-create-class-features-plugin@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.10.5.tgz#9f61446ba80e8240b0a5c85c6fdac8459d6f259d"\n  integrity sha512-0nkdeijB7VlZoLT3r/mY3bUkw3T8WG/hNw+FATs/6+pG2039IJWjTYL0VTISqsNHMUTEnwbVnc89WIJX9Qed0A==\n  dependencies:\n    "@babel/helper-function-name" "^7.10.4"\n    "@babel/helper-member-expression-to-functions" "^7.10.5"\n    "@babel/helper-optimise-call-expression" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-replace-supers" "^7.10.4"\n    "@babel/helper-split-export-declaration" "^7.10.4"\n\n"@babel/helper-create-regexp-features-plugin@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-create-regexp-features-plugin/-/helper-create-regexp-features-plugin-7.10.4.tgz#fdd60d88524659a0b6959c0579925e425714f3b8"\n  integrity sha512-2/hu58IEPKeoLF45DBwx3XFqsbCXmkdAay4spVr2x0jYgRxrSNp+ePwvSsy9g6YSaNDcKIQVPXk1Ov8S2edk2g==\n  dependencies:\n    "@babel/helper-annotate-as-pure" "^7.10.4"\n    "@babel/helper-regex" "^7.10.4"\n    regexpu-core "^4.7.0"\n\n"@babel/helper-define-map@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/helper-define-map/-/helper-define-map-7.10.5.tgz#b53c10db78a640800152692b13393147acb9bb30"\n  integrity sha512-fMw4kgFB720aQFXSVaXr79pjjcW5puTCM16+rECJ/plGS+zByelE8l9nCpV1GibxTnFVmUuYG9U8wYfQHdzOEQ==\n  dependencies:\n    "@babel/helper-function-name" "^7.10.4"\n    "@babel/types" "^7.10.5"\n    lodash "^4.17.19"\n\n"@babel/helper-explode-assignable-expression@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.10.4.tgz#40a1cd917bff1288f699a94a75b37a1a2dbd8c7c"\n  integrity sha512-4K71RyRQNPRrR85sr5QY4X3VwG4wtVoXZB9+L3r1Gp38DhELyHCtovqydRi7c1Ovb17eRGiQ/FD5s8JdU0Uy5A==\n  dependencies:\n    "@babel/traverse" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-function-name@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-function-name/-/helper-function-name-7.10.4.tgz#d2d3b20c59ad8c47112fa7d2a94bc09d5ef82f1a"\n  integrity sha512-YdaSyz1n8gY44EmN7x44zBn9zQ1Ry2Y+3GTA+3vH6Mizke1Vw0aWDM66FOYEPw8//qKkmqOckrGgTYa+6sceqQ==\n  dependencies:\n    "@babel/helper-get-function-arity" "^7.10.4"\n    "@babel/template" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-get-function-arity@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-get-function-arity/-/helper-get-function-arity-7.10.4.tgz#98c1cbea0e2332f33f9a4661b8ce1505b2c19ba2"\n  integrity sha512-EkN3YDB+SRDgiIUnNgcmiD361ti+AVbL3f3Henf6dqqUyr5dMsorno0lJWJuLhDhkI5sYEpgj6y9kB8AOU1I2A==\n  dependencies:\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-hoist-variables@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-hoist-variables/-/helper-hoist-variables-7.10.4.tgz#d49b001d1d5a68ca5e6604dda01a6297f7c9381e"\n  integrity sha512-wljroF5PgCk2juF69kanHVs6vrLwIPNp6DLD+Lrl3hoQ3PpPPikaDRNFA+0t81NOoMt2DL6WW/mdU8k4k6ZzuA==\n  dependencies:\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-member-expression-to-functions@^7.10.4", "@babel/helper-member-expression-to-functions@^7.10.5":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.11.0.tgz#ae69c83d84ee82f4b42f96e2a09410935a8f26df"\n  integrity sha512-JbFlKHFntRV5qKw3YC0CvQnDZ4XMwgzzBbld7Ly4Mj4cbFy3KywcR8NtNctRToMWJOVvLINJv525Gd6wwVEx/Q==\n  dependencies:\n    "@babel/types" "^7.11.0"\n\n"@babel/helper-module-imports@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-module-imports/-/helper-module-imports-7.10.4.tgz#4c5c54be04bd31670a7382797d75b9fa2e5b5620"\n  integrity sha512-nEQJHqYavI217oD9+s5MUBzk6x1IlvoS9WTPfgG43CbMEeStE0v+r+TucWdx8KFGowPGvyOkDT9+7DHedIDnVw==\n  dependencies:\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-module-transforms@^7.10.4", "@babel/helper-module-transforms@^7.10.5", "@babel/helper-module-transforms@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/helper-module-transforms/-/helper-module-transforms-7.11.0.tgz#b16f250229e47211abdd84b34b64737c2ab2d359"\n  integrity sha512-02EVu8COMuTRO1TAzdMtpBPbe6aQ1w/8fePD2YgQmxZU4gpNWaL9gK3Jp7dxlkUlUCJOTaSeA+Hrm1BRQwqIhg==\n  dependencies:\n    "@babel/helper-module-imports" "^7.10.4"\n    "@babel/helper-replace-supers" "^7.10.4"\n    "@babel/helper-simple-access" "^7.10.4"\n    "@babel/helper-split-export-declaration" "^7.11.0"\n    "@babel/template" "^7.10.4"\n    "@babel/types" "^7.11.0"\n    lodash "^4.17.19"\n\n"@babel/helper-optimise-call-expression@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.10.4.tgz#50dc96413d594f995a77905905b05893cd779673"\n  integrity sha512-n3UGKY4VXwXThEiKrgRAoVPBMqeoPgHVqiHZOanAJCG9nQUL2pLRQirUzl0ioKclHGpGqRgIOkgcIJaIWLpygg==\n  dependencies:\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-plugin-utils@^7.0.0", "@babel/helper-plugin-utils@^7.10.4", "@babel/helper-plugin-utils@^7.8.0", "@babel/helper-plugin-utils@^7.8.3":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-plugin-utils/-/helper-plugin-utils-7.10.4.tgz#2f75a831269d4f677de49986dff59927533cf375"\n  integrity sha512-O4KCvQA6lLiMU9l2eawBPMf1xPP8xPfB3iEQw150hOVTqj/rfXz0ThTb4HEzqQfs2Bmo5Ay8BzxfzVtBrr9dVg==\n\n"@babel/helper-regex@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/helper-regex/-/helper-regex-7.10.5.tgz#32dfbb79899073c415557053a19bd055aae50ae0"\n  integrity sha512-68kdUAzDrljqBrio7DYAEgCoJHxppJOERHOgOrDN7WjOzP0ZQ1LsSDRXcemzVZaLvjaJsJEESb6qt+znNuENDg==\n  dependencies:\n    lodash "^4.17.19"\n\n"@babel/helper-remap-async-to-generator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.10.4.tgz#fce8bea4e9690bbe923056ded21e54b4e8b68ed5"\n  integrity sha512-86Lsr6NNw3qTNl+TBcF1oRZMaVzJtbWTyTko+CQL/tvNvcGYEFKbLXDPxtW0HKk3McNOk4KzY55itGWCAGK5tg==\n  dependencies:\n    "@babel/helper-annotate-as-pure" "^7.10.4"\n    "@babel/helper-wrap-function" "^7.10.4"\n    "@babel/template" "^7.10.4"\n    "@babel/traverse" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-replace-supers@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-replace-supers/-/helper-replace-supers-7.10.4.tgz#d585cd9388ea06e6031e4cd44b6713cbead9e6cf"\n  integrity sha512-sPxZfFXocEymYTdVK1UNmFPBN+Hv5mJkLPsYWwGBxZAxaWfFu+xqp7b6qWD0yjNuNL2VKc6L5M18tOXUP7NU0A==\n  dependencies:\n    "@babel/helper-member-expression-to-functions" "^7.10.4"\n    "@babel/helper-optimise-call-expression" "^7.10.4"\n    "@babel/traverse" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-simple-access@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-simple-access/-/helper-simple-access-7.10.4.tgz#0f5ccda2945277a2a7a2d3a821e15395edcf3461"\n  integrity sha512-0fMy72ej/VEvF8ULmX6yb5MtHG4uH4Dbd6I/aHDb/JVg0bbivwt9Wg+h3uMvX+QSFtwr5MeItvazbrc4jtRAXw==\n  dependencies:\n    "@babel/template" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helper-skip-transparent-expression-wrappers@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/helper-skip-transparent-expression-wrappers/-/helper-skip-transparent-expression-wrappers-7.11.0.tgz#eec162f112c2f58d3af0af125e3bb57665146729"\n  integrity sha512-0XIdiQln4Elglgjbwo9wuJpL/K7AGCY26kmEt0+pRP0TAj4jjyNq1MjoRvikrTVqKcx4Gysxt4cXvVFXP/JO2Q==\n  dependencies:\n    "@babel/types" "^7.11.0"\n\n"@babel/helper-split-export-declaration@^7.10.4", "@babel/helper-split-export-declaration@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.11.0.tgz#f8a491244acf6a676158ac42072911ba83ad099f"\n  integrity sha512-74Vejvp6mHkGE+m+k5vHY93FX2cAtrw1zXrZXRlG4l410Nm9PxfEiVTn1PjDPV5SnmieiueY4AFg2xqhNFuuZg==\n  dependencies:\n    "@babel/types" "^7.11.0"\n\n"@babel/helper-validator-identifier@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.10.4.tgz#a78c7a7251e01f616512d31b10adcf52ada5e0d2"\n  integrity sha512-3U9y+43hz7ZM+rzG24Qe2mufW5KhvFg/NhnNph+i9mgCtdTCtMJuI1TMkrIUiK7Ix4PYlRF9I5dhqaLYA/ADXw==\n\n"@babel/helper-wrap-function@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helper-wrap-function/-/helper-wrap-function-7.10.4.tgz#8a6f701eab0ff39f765b5a1cfef409990e624b87"\n  integrity sha512-6py45WvEF0MhiLrdxtRjKjufwLL1/ob2qDJgg5JgNdojBAZSAKnAjkyOCNug6n+OBl4VW76XjvgSFTdaMcW0Ug==\n  dependencies:\n    "@babel/helper-function-name" "^7.10.4"\n    "@babel/template" "^7.10.4"\n    "@babel/traverse" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/helpers@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/helpers/-/helpers-7.10.4.tgz#2abeb0d721aff7c0a97376b9e1f6f65d7a475044"\n  integrity sha512-L2gX/XeUONeEbI78dXSrJzGdz4GQ+ZTA/aazfUsFaWjSe95kiCuOZ5HsXvkiw3iwF+mFHSRUfJU8t6YavocdXA==\n  dependencies:\n    "@babel/template" "^7.10.4"\n    "@babel/traverse" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/highlight@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/highlight/-/highlight-7.10.4.tgz#7d1bdfd65753538fabe6c38596cdb76d9ac60143"\n  integrity sha512-i6rgnR/YgPEQzZZnbTHHuZdlE8qyoBNalD6F+q4vAFlcMEcqmkoG+mPqJYJCo63qPf74+Y1UZsl3l6f7/RIkmA==\n  dependencies:\n    "@babel/helper-validator-identifier" "^7.10.4"\n    chalk "^2.0.0"\n    js-tokens "^4.0.0"\n\n"@babel/parser@^7.10.4", "@babel/parser@^7.11.0", "@babel/parser@^7.11.1", "@babel/parser@^7.7.0":\n  version "7.11.3"\n  resolved "https://registry.yarnpkg.com/@babel/parser/-/parser-7.11.3.tgz#9e1eae46738bcd08e23e867bab43e7b95299a8f9"\n  integrity sha512-REo8xv7+sDxkKvoxEywIdsNFiZLybwdI7hcT5uEPyQrSMB4YQ973BfC9OOrD/81MaIjh6UxdulIQXkjmiH3PcA==\n\n"@babel/plugin-proposal-async-generator-functions@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.10.5.tgz#3491cabf2f7c179ab820606cec27fed15e0e8558"\n  integrity sha512-cNMCVezQbrRGvXJwm9fu/1sJj9bHdGAgKodZdLqOQIpfoH3raqmRPBM17+lh7CzhiKRRBrGtZL9WcjxSoGYUSg==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-remap-async-to-generator" "^7.10.4"\n    "@babel/plugin-syntax-async-generators" "^7.8.0"\n\n"@babel/plugin-proposal-class-properties@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.10.4.tgz#a33bf632da390a59c7a8c570045d1115cd778807"\n  integrity sha512-vhwkEROxzcHGNu2mzUC0OFFNXdZ4M23ib8aRRcJSsW8BZK9pQMD7QB7csl97NBbgGZO7ZyHUyKDnxzOaP4IrCg==\n  dependencies:\n    "@babel/helper-create-class-features-plugin" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-proposal-dynamic-import@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-dynamic-import/-/plugin-proposal-dynamic-import-7.10.4.tgz#ba57a26cb98b37741e9d5bca1b8b0ddf8291f17e"\n  integrity sha512-up6oID1LeidOOASNXgv/CFbgBqTuKJ0cJjz6An5tWD+NVBNlp3VNSBxv2ZdU7SYl3NxJC7agAQDApZusV6uFwQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-dynamic-import" "^7.8.0"\n\n"@babel/plugin-proposal-export-namespace-from@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-export-namespace-from/-/plugin-proposal-export-namespace-from-7.10.4.tgz#570d883b91031637b3e2958eea3c438e62c05f54"\n  integrity sha512-aNdf0LY6/3WXkhh0Fdb6Zk9j1NMD8ovj3F6r0+3j837Pn1S1PdNtcwJ5EG9WkVPNHPxyJDaxMaAOVq4eki0qbg==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-export-namespace-from" "^7.8.3"\n\n"@babel/plugin-proposal-json-strings@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.10.4.tgz#593e59c63528160233bd321b1aebe0820c2341db"\n  integrity sha512-fCL7QF0Jo83uy1K0P2YXrfX11tj3lkpN7l4dMv9Y9VkowkhkQDwFHFd8IiwyK5MZjE8UpbgokkgtcReH88Abaw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-json-strings" "^7.8.0"\n\n"@babel/plugin-proposal-logical-assignment-operators@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-logical-assignment-operators/-/plugin-proposal-logical-assignment-operators-7.11.0.tgz#9f80e482c03083c87125dee10026b58527ea20c8"\n  integrity sha512-/f8p4z+Auz0Uaf+i8Ekf1iM7wUNLcViFUGiPxKeXvxTSl63B875YPiVdUDdem7hREcI0E0kSpEhS8tF5RphK7Q==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-logical-assignment-operators" "^7.10.4"\n\n"@babel/plugin-proposal-nullish-coalescing-operator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-nullish-coalescing-operator/-/plugin-proposal-nullish-coalescing-operator-7.10.4.tgz#02a7e961fc32e6d5b2db0649e01bf80ddee7e04a"\n  integrity sha512-wq5n1M3ZUlHl9sqT2ok1T2/MTt6AXE0e1Lz4WzWBr95LsAZ5qDXe4KnFuauYyEyLiohvXFMdbsOTMyLZs91Zlw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-nullish-coalescing-operator" "^7.8.0"\n\n"@babel/plugin-proposal-numeric-separator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-numeric-separator/-/plugin-proposal-numeric-separator-7.10.4.tgz#ce1590ff0a65ad12970a609d78855e9a4c1aef06"\n  integrity sha512-73/G7QoRoeNkLZFxsoCCvlg4ezE4eM+57PnOqgaPOozd5myfj7p0muD1mRVJvbUWbOzD+q3No2bWbaKy+DJ8DA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-numeric-separator" "^7.10.4"\n\n"@babel/plugin-proposal-object-rest-spread@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.11.0.tgz#bd81f95a1f746760ea43b6c2d3d62b11790ad0af"\n  integrity sha512-wzch41N4yztwoRw0ak+37wxwJM2oiIiy6huGCoqkvSTA9acYWcPfn9Y4aJqmFFJ70KTJUu29f3DQ43uJ9HXzEA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-object-rest-spread" "^7.8.0"\n    "@babel/plugin-transform-parameters" "^7.10.4"\n\n"@babel/plugin-proposal-optional-catch-binding@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.10.4.tgz#31c938309d24a78a49d68fdabffaa863758554dd"\n  integrity sha512-LflT6nPh+GK2MnFiKDyLiqSqVHkQnVf7hdoAvyTnnKj9xB3docGRsdPuxp6qqqW19ifK3xgc9U5/FwrSaCNX5g==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-syntax-optional-catch-binding" "^7.8.0"\n\n"@babel/plugin-proposal-optional-chaining@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-optional-chaining/-/plugin-proposal-optional-chaining-7.11.0.tgz#de5866d0646f6afdaab8a566382fe3a221755076"\n  integrity sha512-v9fZIu3Y8562RRwhm1BbMRxtqZNFmFA2EG+pT2diuU8PT3H6T/KXoZ54KgYisfOFZHV6PfvAiBIZ9Rcz+/JCxA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-skip-transparent-expression-wrappers" "^7.11.0"\n    "@babel/plugin-syntax-optional-chaining" "^7.8.0"\n\n"@babel/plugin-proposal-private-methods@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-private-methods/-/plugin-proposal-private-methods-7.10.4.tgz#b160d972b8fdba5c7d111a145fc8c421fc2a6909"\n  integrity sha512-wh5GJleuI8k3emgTg5KkJK6kHNsGEr0uBTDBuQUBJwckk9xs1ez79ioheEVVxMLyPscB0LfkbVHslQqIzWV6Bw==\n  dependencies:\n    "@babel/helper-create-class-features-plugin" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-proposal-unicode-property-regex@^7.10.4", "@babel/plugin-proposal-unicode-property-regex@^7.4.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.10.4.tgz#4483cda53041ce3413b7fe2f00022665ddfaa75d"\n  integrity sha512-H+3fOgPnEXFL9zGYtKQe4IDOPKYlZdF1kqFDQRRb8PK4B8af1vAGK04tF5iQAAsui+mHNBQSAtd2/ndEDe9wuA==\n  dependencies:\n    "@babel/helper-create-regexp-features-plugin" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-syntax-async-generators@^7.8.0":\n  version "7.8.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz#a983fb1aeb2ec3f6ed042a210f640e90e786fe0d"\n  integrity sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-class-properties@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.10.4.tgz#6644e6a0baa55a61f9e3231f6c9eeb6ee46c124c"\n  integrity sha512-GCSBF7iUle6rNugfURwNmCGG3Z/2+opxAMLs1nND4bhEG5PuxTIggDBoeYYSujAlLtsupzOHYJQgPS3pivwXIA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-syntax-dynamic-import@^7.8.0":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.8.3.tgz#62bf98b2da3cd21d626154fc96ee5b3cb68eacb3"\n  integrity sha512-5gdGbFon+PszYzqs83S3E5mpi7/y/8M9eC90MRTZfduQOYW76ig6SOSPNe41IG5LoP3FGBn2N0RjVDSQiS94kQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-export-namespace-from@^7.8.3":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-export-namespace-from/-/plugin-syntax-export-namespace-from-7.8.3.tgz#028964a9ba80dbc094c915c487ad7c4e7a66465a"\n  integrity sha512-MXf5laXo6c1IbEbegDmzGPwGNTsHZmEy6QGznu5Sh2UCWvueywb2ee+CCE4zQiZstxU9BMoQO9i6zUFSY0Kj0Q==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.3"\n\n"@babel/plugin-syntax-json-strings@^7.8.0":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz#01ca21b668cd8218c9e640cb6dd88c5412b2c96a"\n  integrity sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-logical-assignment-operators@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz#ca91ef46303530448b906652bac2e9fe9941f699"\n  integrity sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-syntax-nullish-coalescing-operator@^7.8.0":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz#167ed70368886081f74b5c36c65a88c03b66d1a9"\n  integrity sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-numeric-separator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz#b9b070b3e33570cd9fd07ba7fa91c0dd37b9af97"\n  integrity sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-syntax-object-rest-spread@^7.8.0":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz#60e225edcbd98a640332a2e72dd3e66f1af55871"\n  integrity sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-optional-catch-binding@^7.8.0":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz#6111a265bcfb020eb9efd0fdfd7d26402b9ed6c1"\n  integrity sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-optional-chaining@^7.8.0":\n  version "7.8.3"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz#4f69c2ab95167e0180cd5336613f8c5788f7d48a"\n  integrity sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.8.0"\n\n"@babel/plugin-syntax-top-level-await@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.10.4.tgz#4bbeb8917b54fcf768364e0a81f560e33a3ef57d"\n  integrity sha512-ni1brg4lXEmWyafKr0ccFWkJG0CeMt4WV1oyeBW6EFObF4oOHclbkj5cARxAPQyAQ2UTuplJyK4nfkXIMMFvsQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-arrow-functions@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.10.4.tgz#e22960d77e697c74f41c501d44d73dbf8a6a64cd"\n  integrity sha512-9J/oD1jV0ZCBcgnoFWFq1vJd4msoKb/TCpGNFyyLt0zABdcvgK3aYikZ8HjzB14c26bc7E3Q1yugpwGy2aTPNA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-async-to-generator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.10.4.tgz#41a5017e49eb6f3cda9392a51eef29405b245a37"\n  integrity sha512-F6nREOan7J5UXTLsDsZG3DXmZSVofr2tGNwfdrVwkDWHfQckbQXnXSPfD7iO+c/2HGqycwyLST3DnZ16n+cBJQ==\n  dependencies:\n    "@babel/helper-module-imports" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-remap-async-to-generator" "^7.10.4"\n\n"@babel/plugin-transform-block-scoped-functions@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.10.4.tgz#1afa595744f75e43a91af73b0d998ecfe4ebc2e8"\n  integrity sha512-WzXDarQXYYfjaV1szJvN3AD7rZgZzC1JtjJZ8dMHUyiK8mxPRahynp14zzNjU3VkPqPsO38CzxiWO1c9ARZ8JA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-block-scoping@^7.10.4":\n  version "7.11.1"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.11.1.tgz#5b7efe98852bef8d652c0b28144cd93a9e4b5215"\n  integrity sha512-00dYeDE0EVEHuuM+26+0w/SCL0BH2Qy7LwHuI4Hi4MH5gkC8/AqMN5uWFJIsoXZrAphiMm1iXzBw6L2T+eA0ew==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-classes@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-classes/-/plugin-transform-classes-7.10.4.tgz#405136af2b3e218bc4a1926228bc917ab1a0adc7"\n  integrity sha512-2oZ9qLjt161dn1ZE0Ms66xBncQH4In8Sqw1YWgBUZuGVJJS5c0OFZXL6dP2MRHrkU/eKhWg8CzFJhRQl50rQxA==\n  dependencies:\n    "@babel/helper-annotate-as-pure" "^7.10.4"\n    "@babel/helper-define-map" "^7.10.4"\n    "@babel/helper-function-name" "^7.10.4"\n    "@babel/helper-optimise-call-expression" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-replace-supers" "^7.10.4"\n    "@babel/helper-split-export-declaration" "^7.10.4"\n    globals "^11.1.0"\n\n"@babel/plugin-transform-computed-properties@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.10.4.tgz#9ded83a816e82ded28d52d4b4ecbdd810cdfc0eb"\n  integrity sha512-JFwVDXcP/hM/TbyzGq3l/XWGut7p46Z3QvqFMXTfk6/09m7xZHJUN9xHfsv7vqqD4YnfI5ueYdSJtXqqBLyjBw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-destructuring@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.10.4.tgz#70ddd2b3d1bea83d01509e9bb25ddb3a74fc85e5"\n  integrity sha512-+WmfvyfsyF603iPa6825mq6Qrb7uLjTOsa3XOFzlYcYDHSS4QmpOWOL0NNBY5qMbvrcf3tq0Cw+v4lxswOBpgA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-dotall-regex@^7.10.4", "@babel/plugin-transform-dotall-regex@^7.4.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.10.4.tgz#469c2062105c1eb6a040eaf4fac4b488078395ee"\n  integrity sha512-ZEAVvUTCMlMFAbASYSVQoxIbHm2OkG2MseW6bV2JjIygOjdVv8tuxrCTzj1+Rynh7ODb8GivUy7dzEXzEhuPaA==\n  dependencies:\n    "@babel/helper-create-regexp-features-plugin" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-duplicate-keys@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.10.4.tgz#697e50c9fee14380fe843d1f306b295617431e47"\n  integrity sha512-GL0/fJnmgMclHiBTTWXNlYjYsA7rDrtsazHG6mglaGSTh0KsrW04qml+Bbz9FL0LcJIRwBWL5ZqlNHKTkU3xAA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-exponentiation-operator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.10.4.tgz#5ae338c57f8cf4001bdb35607ae66b92d665af2e"\n  integrity sha512-S5HgLVgkBcRdyQAHbKj+7KyuWx8C6t5oETmUuwz1pt3WTWJhsUV0WIIXuVvfXMxl/QQyHKlSCNNtaIamG8fysw==\n  dependencies:\n    "@babel/helper-builder-binary-assignment-operator-visitor" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-for-of@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.10.4.tgz#c08892e8819d3a5db29031b115af511dbbfebae9"\n  integrity sha512-ItdQfAzu9AlEqmusA/65TqJ79eRcgGmpPPFvBnGILXZH975G0LNjP1yjHvGgfuCxqrPPueXOPe+FsvxmxKiHHQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-function-name@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.10.4.tgz#6a467880e0fc9638514ba369111811ddbe2644b7"\n  integrity sha512-OcDCq2y5+E0dVD5MagT5X+yTRbcvFjDI2ZVAottGH6tzqjx/LKpgkUepu3hp/u4tZBzxxpNGwLsAvGBvQ2mJzg==\n  dependencies:\n    "@babel/helper-function-name" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-literals@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-literals/-/plugin-transform-literals-7.10.4.tgz#9f42ba0841100a135f22712d0e391c462f571f3c"\n  integrity sha512-Xd/dFSTEVuUWnyZiMu76/InZxLTYilOSr1UlHV+p115Z/Le2Fi1KXkJUYz0b42DfndostYlPub3m8ZTQlMaiqQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-member-expression-literals@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.10.4.tgz#b1ec44fcf195afcb8db2c62cd8e551c881baf8b7"\n  integrity sha512-0bFOvPyAoTBhtcJLr9VcwZqKmSjFml1iVxvPL0ReomGU53CX53HsM4h2SzckNdkQcHox1bpAqzxBI1Y09LlBSw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-modules-amd@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.10.5.tgz#1b9cddaf05d9e88b3aad339cb3e445c4f020a9b1"\n  integrity sha512-elm5uruNio7CTLFItVC/rIzKLfQ17+fX7EVz5W0TMgIHFo1zY0Ozzx+lgwhL4plzl8OzVn6Qasx5DeEFyoNiRw==\n  dependencies:\n    "@babel/helper-module-transforms" "^7.10.5"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    babel-plugin-dynamic-import-node "^2.3.3"\n\n"@babel/plugin-transform-modules-commonjs@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.10.4.tgz#66667c3eeda1ebf7896d41f1f16b17105a2fbca0"\n  integrity sha512-Xj7Uq5o80HDLlW64rVfDBhao6OX89HKUmb+9vWYaLXBZOma4gA6tw4Ni1O5qVDoZWUV0fxMYA0aYzOawz0l+1w==\n  dependencies:\n    "@babel/helper-module-transforms" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-simple-access" "^7.10.4"\n    babel-plugin-dynamic-import-node "^2.3.3"\n\n"@babel/plugin-transform-modules-systemjs@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.10.5.tgz#6270099c854066681bae9e05f87e1b9cadbe8c85"\n  integrity sha512-f4RLO/OL14/FP1AEbcsWMzpbUz6tssRaeQg11RH1BP/XnPpRoVwgeYViMFacnkaw4k4wjRSjn3ip1Uw9TaXuMw==\n  dependencies:\n    "@babel/helper-hoist-variables" "^7.10.4"\n    "@babel/helper-module-transforms" "^7.10.5"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    babel-plugin-dynamic-import-node "^2.3.3"\n\n"@babel/plugin-transform-modules-umd@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.10.4.tgz#9a8481fe81b824654b3a0b65da3df89f3d21839e"\n  integrity sha512-mohW5q3uAEt8T45YT7Qc5ws6mWgJAaL/8BfWD9Dodo1A3RKWli8wTS+WiQ/knF+tXlPirW/1/MqzzGfCExKECA==\n  dependencies:\n    "@babel/helper-module-transforms" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-named-capturing-groups-regex@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.10.4.tgz#78b4d978810b6f3bcf03f9e318f2fc0ed41aecb6"\n  integrity sha512-V6LuOnD31kTkxQPhKiVYzYC/Jgdq53irJC/xBSmqcNcqFGV+PER4l6rU5SH2Vl7bH9mLDHcc0+l9HUOe4RNGKA==\n  dependencies:\n    "@babel/helper-create-regexp-features-plugin" "^7.10.4"\n\n"@babel/plugin-transform-new-target@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.10.4.tgz#9097d753cb7b024cb7381a3b2e52e9513a9c6888"\n  integrity sha512-YXwWUDAH/J6dlfwqlWsztI2Puz1NtUAubXhOPLQ5gjR/qmQ5U96DY4FQO8At33JN4XPBhrjB8I4eMmLROjjLjw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-object-super@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.10.4.tgz#d7146c4d139433e7a6526f888c667e314a093894"\n  integrity sha512-5iTw0JkdRdJvr7sY0vHqTpnruUpTea32JHmq/atIWqsnNussbRzjEDyWep8UNztt1B5IusBYg8Irb0bLbiEBCQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-replace-supers" "^7.10.4"\n\n"@babel/plugin-transform-parameters@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.10.5.tgz#59d339d58d0b1950435f4043e74e2510005e2c4a"\n  integrity sha512-xPHwUj5RdFV8l1wuYiu5S9fqWGM2DrYc24TMvUiRrPVm+SM3XeqU9BcokQX/kEUe+p2RBwy+yoiR1w/Blq6ubw==\n  dependencies:\n    "@babel/helper-get-function-arity" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-property-literals@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.10.4.tgz#f6fe54b6590352298785b83edd815d214c42e3c0"\n  integrity sha512-ofsAcKiUxQ8TY4sScgsGeR2vJIsfrzqvFb9GvJ5UdXDzl+MyYCaBj/FGzXuv7qE0aJcjWMILny1epqelnFlz8g==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-regenerator@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.10.4.tgz#2015e59d839074e76838de2159db421966fd8b63"\n  integrity sha512-3thAHwtor39A7C04XucbMg17RcZ3Qppfxr22wYzZNcVIkPHfpM9J0SO8zuCV6SZa265kxBJSrfKTvDCYqBFXGw==\n  dependencies:\n    regenerator-transform "^0.14.2"\n\n"@babel/plugin-transform-reserved-words@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.10.4.tgz#8f2682bcdcef9ed327e1b0861585d7013f8a54dd"\n  integrity sha512-hGsw1O6Rew1fkFbDImZIEqA8GoidwTAilwCyWqLBM9f+e/u/sQMQu7uX6dyokfOayRuuVfKOW4O7HvaBWM+JlQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-runtime@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.11.0.tgz#e27f78eb36f19448636e05c33c90fd9ad9b8bccf"\n  integrity sha512-LFEsP+t3wkYBlis8w6/kmnd6Kb1dxTd+wGJ8MlxTGzQo//ehtqlVL4S9DNUa53+dtPSQobN2CXx4d81FqC58cw==\n  dependencies:\n    "@babel/helper-module-imports" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    resolve "^1.8.1"\n    semver "^5.5.1"\n\n"@babel/plugin-transform-shorthand-properties@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.10.4.tgz#9fd25ec5cdd555bb7f473e5e6ee1c971eede4dd6"\n  integrity sha512-AC2K/t7o07KeTIxMoHneyX90v3zkm5cjHJEokrPEAGEy3UCp8sLKfnfOIGdZ194fyN4wfX/zZUWT9trJZ0qc+Q==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-spread@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-spread/-/plugin-transform-spread-7.11.0.tgz#fa84d300f5e4f57752fe41a6d1b3c554f13f17cc"\n  integrity sha512-UwQYGOqIdQJe4aWNyS7noqAnN2VbaczPLiEtln+zPowRNlD+79w3oi2TWfYe0eZgd+gjZCbsydN7lzWysDt+gw==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-skip-transparent-expression-wrappers" "^7.11.0"\n\n"@babel/plugin-transform-sticky-regex@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.10.4.tgz#8f3889ee8657581130a29d9cc91d7c73b7c4a28d"\n  integrity sha512-Ddy3QZfIbEV0VYcVtFDCjeE4xwVTJWTmUtorAJkn6u/92Z/nWJNV+mILyqHKrUxXYKA2EoCilgoPePymKL4DvQ==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/helper-regex" "^7.10.4"\n\n"@babel/plugin-transform-template-literals@^7.10.4":\n  version "7.10.5"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.10.5.tgz#78bc5d626a6642db3312d9d0f001f5e7639fde8c"\n  integrity sha512-V/lnPGIb+KT12OQikDvgSuesRX14ck5FfJXt6+tXhdkJ+Vsd0lDCVtF6jcB4rNClYFzaB2jusZ+lNISDk2mMMw==\n  dependencies:\n    "@babel/helper-annotate-as-pure" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-typeof-symbol@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.10.4.tgz#9509f1a7eec31c4edbffe137c16cc33ff0bc5bfc"\n  integrity sha512-QqNgYwuuW0y0H+kUE/GWSR45t/ccRhe14Fs/4ZRouNNQsyd4o3PG4OtHiIrepbM2WKUBDAXKCAK/Lk4VhzTaGA==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-unicode-escapes@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-unicode-escapes/-/plugin-transform-unicode-escapes-7.10.4.tgz#feae523391c7651ddac115dae0a9d06857892007"\n  integrity sha512-y5XJ9waMti2J+e7ij20e+aH+fho7Wb7W8rNuu72aKRwCHFqQdhkdU2lo3uZ9tQuboEJcUFayXdARhcxLQ3+6Fg==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/plugin-transform-unicode-regex@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.10.4.tgz#e56d71f9282fac6db09c82742055576d5e6d80a8"\n  integrity sha512-wNfsc4s8N2qnIwpO/WP2ZiSyjfpTamT2C9V9FDH/Ljub9zw6P3SjkXcFmc0RQUt96k2fmIvtla2MMjgTwIAC+A==\n  dependencies:\n    "@babel/helper-create-regexp-features-plugin" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n\n"@babel/preset-env@^7.11.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/preset-env/-/preset-env-7.11.0.tgz#860ee38f2ce17ad60480c2021ba9689393efb796"\n  integrity sha512-2u1/k7rG/gTh02dylX2kL3S0IJNF+J6bfDSp4DI2Ma8QN6Y9x9pmAax59fsCk6QUQG0yqH47yJWA+u1I1LccAg==\n  dependencies:\n    "@babel/compat-data" "^7.11.0"\n    "@babel/helper-compilation-targets" "^7.10.4"\n    "@babel/helper-module-imports" "^7.10.4"\n    "@babel/helper-plugin-utils" "^7.10.4"\n    "@babel/plugin-proposal-async-generator-functions" "^7.10.4"\n    "@babel/plugin-proposal-class-properties" "^7.10.4"\n    "@babel/plugin-proposal-dynamic-import" "^7.10.4"\n    "@babel/plugin-proposal-export-namespace-from" "^7.10.4"\n    "@babel/plugin-proposal-json-strings" "^7.10.4"\n    "@babel/plugin-proposal-logical-assignment-operators" "^7.11.0"\n    "@babel/plugin-proposal-nullish-coalescing-operator" "^7.10.4"\n    "@babel/plugin-proposal-numeric-separator" "^7.10.4"\n    "@babel/plugin-proposal-object-rest-spread" "^7.11.0"\n    "@babel/plugin-proposal-optional-catch-binding" "^7.10.4"\n    "@babel/plugin-proposal-optional-chaining" "^7.11.0"\n    "@babel/plugin-proposal-private-methods" "^7.10.4"\n    "@babel/plugin-proposal-unicode-property-regex" "^7.10.4"\n    "@babel/plugin-syntax-async-generators" "^7.8.0"\n    "@babel/plugin-syntax-class-properties" "^7.10.4"\n    "@babel/plugin-syntax-dynamic-import" "^7.8.0"\n    "@babel/plugin-syntax-export-namespace-from" "^7.8.3"\n    "@babel/plugin-syntax-json-strings" "^7.8.0"\n    "@babel/plugin-syntax-logical-assignment-operators" "^7.10.4"\n    "@babel/plugin-syntax-nullish-coalescing-operator" "^7.8.0"\n    "@babel/plugin-syntax-numeric-separator" "^7.10.4"\n    "@babel/plugin-syntax-object-rest-spread" "^7.8.0"\n    "@babel/plugin-syntax-optional-catch-binding" "^7.8.0"\n    "@babel/plugin-syntax-optional-chaining" "^7.8.0"\n    "@babel/plugin-syntax-top-level-await" "^7.10.4"\n    "@babel/plugin-transform-arrow-functions" "^7.10.4"\n    "@babel/plugin-transform-async-to-generator" "^7.10.4"\n    "@babel/plugin-transform-block-scoped-functions" "^7.10.4"\n    "@babel/plugin-transform-block-scoping" "^7.10.4"\n    "@babel/plugin-transform-classes" "^7.10.4"\n    "@babel/plugin-transform-computed-properties" "^7.10.4"\n    "@babel/plugin-transform-destructuring" "^7.10.4"\n    "@babel/plugin-transform-dotall-regex" "^7.10.4"\n    "@babel/plugin-transform-duplicate-keys" "^7.10.4"\n    "@babel/plugin-transform-exponentiation-operator" "^7.10.4"\n    "@babel/plugin-transform-for-of" "^7.10.4"\n    "@babel/plugin-transform-function-name" "^7.10.4"\n    "@babel/plugin-transform-literals" "^7.10.4"\n    "@babel/plugin-transform-member-expression-literals" "^7.10.4"\n    "@babel/plugin-transform-modules-amd" "^7.10.4"\n    "@babel/plugin-transform-modules-commonjs" "^7.10.4"\n    "@babel/plugin-transform-modules-systemjs" "^7.10.4"\n    "@babel/plugin-transform-modules-umd" "^7.10.4"\n    "@babel/plugin-transform-named-capturing-groups-regex" "^7.10.4"\n    "@babel/plugin-transform-new-target" "^7.10.4"\n    "@babel/plugin-transform-object-super" "^7.10.4"\n    "@babel/plugin-transform-parameters" "^7.10.4"\n    "@babel/plugin-transform-property-literals" "^7.10.4"\n    "@babel/plugin-transform-regenerator" "^7.10.4"\n    "@babel/plugin-transform-reserved-words" "^7.10.4"\n    "@babel/plugin-transform-shorthand-properties" "^7.10.4"\n    "@babel/plugin-transform-spread" "^7.11.0"\n    "@babel/plugin-transform-sticky-regex" "^7.10.4"\n    "@babel/plugin-transform-template-literals" "^7.10.4"\n    "@babel/plugin-transform-typeof-symbol" "^7.10.4"\n    "@babel/plugin-transform-unicode-escapes" "^7.10.4"\n    "@babel/plugin-transform-unicode-regex" "^7.10.4"\n    "@babel/preset-modules" "^0.1.3"\n    "@babel/types" "^7.11.0"\n    browserslist "^4.12.0"\n    core-js-compat "^3.6.2"\n    invariant "^2.2.2"\n    levenary "^1.1.1"\n    semver "^5.5.0"\n\n"@babel/preset-modules@^0.1.3":\n  version "0.1.3"\n  resolved "https://registry.yarnpkg.com/@babel/preset-modules/-/preset-modules-0.1.3.tgz#13242b53b5ef8c883c3cf7dddd55b36ce80fbc72"\n  integrity sha512-Ra3JXOHBq2xd56xSF7lMKXdjBn3T772Y1Wet3yWnkDly9zHvJki029tAFzvAAK5cf4YV3yoxuP61crYRol6SVg==\n  dependencies:\n    "@babel/helper-plugin-utils" "^7.0.0"\n    "@babel/plugin-proposal-unicode-property-regex" "^7.4.4"\n    "@babel/plugin-transform-dotall-regex" "^7.4.4"\n    "@babel/types" "^7.4.4"\n    esutils "^2.0.2"\n\n"@babel/runtime@^7.8.4", "@babel/runtime@^7.9.6":\n  version "7.11.2"\n  resolved "https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.11.2.tgz#f549c13c754cc40b87644b9fa9f09a6a95fe0736"\n  integrity sha512-TeWkU52so0mPtDcaCTxNBI/IHiz0pZgr8VEFqXFtZWpYD08ZB6FaSwVAS8MKRQAP3bYKiVjwysOJgMFY28o6Tw==\n  dependencies:\n    regenerator-runtime "^0.13.4"\n\n"@babel/template@^7.10.4":\n  version "7.10.4"\n  resolved "https://registry.yarnpkg.com/@babel/template/-/template-7.10.4.tgz#3251996c4200ebc71d1a8fc405fba940f36ba278"\n  integrity sha512-ZCjD27cGJFUB6nmCB1Enki3r+L5kJveX9pq1SvAUKoICy6CZ9yD8xO086YXdYhvNjBdnekm4ZnaP5yC8Cs/1tA==\n  dependencies:\n    "@babel/code-frame" "^7.10.4"\n    "@babel/parser" "^7.10.4"\n    "@babel/types" "^7.10.4"\n\n"@babel/traverse@^7.10.4", "@babel/traverse@^7.11.0", "@babel/traverse@^7.7.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/traverse/-/traverse-7.11.0.tgz#9b996ce1b98f53f7c3e4175115605d56ed07dd24"\n  integrity sha512-ZB2V+LskoWKNpMq6E5UUCrjtDUh5IOTAyIl0dTjIEoXum/iKWkoIEKIRDnUucO6f+2FzNkE0oD4RLKoPIufDtg==\n  dependencies:\n    "@babel/code-frame" "^7.10.4"\n    "@babel/generator" "^7.11.0"\n    "@babel/helper-function-name" "^7.10.4"\n    "@babel/helper-split-export-declaration" "^7.11.0"\n    "@babel/parser" "^7.11.0"\n    "@babel/types" "^7.11.0"\n    debug "^4.1.0"\n    globals "^11.1.0"\n    lodash "^4.17.19"\n\n"@babel/types@^7.10.4", "@babel/types@^7.10.5", "@babel/types@^7.11.0", "@babel/types@^7.4.4", "@babel/types@^7.7.0":\n  version "7.11.0"\n  resolved "https://registry.yarnpkg.com/@babel/types/-/types-7.11.0.tgz#2ae6bf1ba9ae8c3c43824e5861269871b206e90d"\n  integrity sha512-O53yME4ZZI0jO1EVGtF1ePGl0LHirG4P1ibcD80XyzZcKhcMFeCXmh4Xb1ifGBIV233Qg12x4rBfQgA+tmOukA==\n  dependencies:\n    "@babel/helper-validator-identifier" "^7.10.4"\n    lodash "^4.17.19"\n    to-fast-properties "^2.0.0"\n\n"@commitlint/cli@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/cli/-/cli-9.1.1.tgz#24277e6c1e616191a34a7182a1d3e73369a34f98"\n  integrity sha512-ye9vUZz8Niv77e5ecBWnA2PnuPF+vYy/3BfSZx8sEaNjozJWUolTk/fuqTsoij3bseZBVObd+cVqZgGk8lfEdw==\n  dependencies:\n    "@babel/runtime" "^7.9.6"\n    "@commitlint/format" "^9.1.1"\n    "@commitlint/lint" "^9.1.1"\n    "@commitlint/load" "^9.1.1"\n    "@commitlint/read" "^9.1.1"\n    chalk "4.1.0"\n    core-js "^3.6.1"\n    get-stdin "7.0.0"\n    lodash "^4.17.15"\n    meow "5.0.0"\n    regenerator-runtime "0.13.5"\n    resolve-from "5.0.0"\n    resolve-global "1.0.0"\n\n"@commitlint/config-conventional@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/config-conventional/-/config-conventional-9.1.1.tgz#c10e6ff8e56bd462fa33e17522b0f98da97daa39"\n  integrity sha512-t/bvv8ofjj7V4W99eVDyuACaC7Ch4SYaukglBYt/K1Y9Ixg8mCBuFDMGRMhyZn4upUe1ls8l4SO3rjaVbYIjlg==\n  dependencies:\n    conventional-changelog-conventionalcommits "4.3.0"\n\n"@commitlint/ensure@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/ensure/-/ensure-9.1.1.tgz#0143f2c34a27fcd7fb91b7a5029de84a0f416b93"\n  integrity sha512-dCvev16s7pTqM3Qka8WkWkjZ0lKu3cZ8q+EK34gXR90v7rkssVbPvbyttTfTWTvmQTqZY1zNkvMqbOc8V7pXwA==\n  dependencies:\n    "@commitlint/types" "^9.1.1"\n    lodash "^4.17.15"\n\n"@commitlint/execute-rule@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/execute-rule/-/execute-rule-9.1.1.tgz#59bfe018d85545881e4bd1a47f9cd155b2df4c2c"\n  integrity sha512-kCncHMXfVDfmUx1NExl7T+s7udAWEOh039DFGR9R5MWoy+zm2cJsCdsbWFFuNbcPWCKor57ywdIUN2t048P6Yg==\n\n"@commitlint/format@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/format/-/format-9.1.1.tgz#a1a48bcdcaca304ff33d40bbf2b787600e47082e"\n  integrity sha512-CLVXltSA8U7Sr+8ad1hBCFFL5GSdVWZsFgttt1hNT6CiOtPHV9e3AeWK0TACFcXWIl+iFKdRNfNrYM77RBJN0A==\n  dependencies:\n    chalk "^4.0.0"\n\n"@commitlint/is-ignored@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/is-ignored/-/is-ignored-9.1.1.tgz#1f2683897dab03ec00d363486b4b439791a86927"\n  integrity sha512-A2ernvkAIfkGh53cNSuuMlTVZyJ58BYbkUw8h34pG0uS/GDteUyh7K3hgRqMmrwoL/DNBEp5earRM6nBYgLX1Q==\n  dependencies:\n    "@commitlint/types" "^9.1.1"\n    semver "7.3.2"\n\n"@commitlint/lint@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/lint/-/lint-9.1.1.tgz#c947a1b1a68213488450a4c4ce047e46a45c4699"\n  integrity sha512-2g2OL8J5dfzH3VY004i506DmRbCJR1W49JbYsTGuTAv1y9f0s8ocV2Wbfh7WJ8YZQabSHXTMZFQJjsvMQ+b0Hw==\n  dependencies:\n    "@commitlint/is-ignored" "^9.1.1"\n    "@commitlint/parse" "^9.1.1"\n    "@commitlint/rules" "^9.1.1"\n    "@commitlint/types" "^9.1.1"\n\n"@commitlint/load@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/load/-/load-9.1.1.tgz#8b1580ab821729bbe197e95f960e7cee966402ae"\n  integrity sha512-RCIX44M8nq3bW98vuxA6C2rM0wAnZlneFls2OVi5l2BvD/rsQ2R9CZYwPt/MYU6RbwMmlGhkuHdScwK6pJeUqA==\n  dependencies:\n    "@commitlint/execute-rule" "^9.1.1"\n    "@commitlint/resolve-extends" "^9.1.1"\n    "@commitlint/types" "^9.1.1"\n    chalk "4.1.0"\n    cosmiconfig "^6.0.0"\n    lodash "^4.17.15"\n    resolve-from "^5.0.0"\n\n"@commitlint/message@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/message/-/message-9.1.1.tgz#7621e8f194d676d7d747bfdda49c00ca4d1572df"\n  integrity sha512-52Li4BNSY55I0fAq1s8cnxIK9Jneozdh4oonLlDzqWvgFq8znsHb9LWmi46K0bsCQT3CRUnMU+GPnikghIMRKQ==\n\n"@commitlint/parse@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/parse/-/parse-9.1.1.tgz#ec2b9527eb42725591976bedbed5bccfcde529bd"\n  integrity sha512-WxvsEi7sMBh8vynamTiHvUOsPOUZ5308pi0gJ5q+DnLY+JPx0Bbxdho9pjyVc3S0bymPCbOrk2gTIbmaTokIRQ==\n  dependencies:\n    conventional-changelog-angular "^5.0.0"\n    conventional-commits-parser "^3.0.0"\n\n"@commitlint/read@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/read/-/read-9.1.1.tgz#de20c32e9f7020ecaf1601c5e06a83c74464b161"\n  integrity sha512-cg75klW1WNBAJZABxacf2FhxAlP0di7xs/wuTqPNq0OTpblhY5s2BoS7eO0UlQi1K14Unx7b9+Sb7sjuE9Viyw==\n  dependencies:\n    "@commitlint/top-level" "^9.1.1"\n    fs-extra "^8.1.0"\n    git-raw-commits "^2.0.0"\n\n"@commitlint/resolve-extends@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/resolve-extends/-/resolve-extends-9.1.1.tgz#8ce703fcd2426ab1f5449906442267e18c995430"\n  integrity sha512-IxxNaSUT+dPhSCQPAMpQyHQlcSVikDxQWJFP6uwGJUU5rQff+0yQTuC3taWI2NWaATukjNWboAbH2vgBDnrDrg==\n  dependencies:\n    import-fresh "^3.0.0"\n    lodash "^4.17.15"\n    resolve-from "^5.0.0"\n    resolve-global "^1.0.0"\n\n"@commitlint/rules@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/rules/-/rules-9.1.1.tgz#21165c9dc8621a52fa57eec9a66e01c83ec58f90"\n  integrity sha512-QicTJ9v4g8WbJ71gu2ypvbdEP6Q+cJYlLPrb6ilNhtOMCyn6ndXSlCMpcQNw84d9ORyd28okzhDZZBSqX5hslg==\n  dependencies:\n    "@commitlint/ensure" "^9.1.1"\n    "@commitlint/message" "^9.1.1"\n    "@commitlint/to-lines" "^9.1.1"\n    "@commitlint/types" "^9.1.1"\n\n"@commitlint/to-lines@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/to-lines/-/to-lines-9.1.1.tgz#882631657ea4e14aea8600e7d48c4fbfb3e63c2d"\n  integrity sha512-JFKfpehPL3Qrlo6DpIsuJvdtR1wSjdbXD3liphvFTAFWo64yYC/jmnTdy0UqWIhrV1jcxP1LzNejIuRt6hsCXQ==\n\n"@commitlint/top-level@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/top-level/-/top-level-9.1.1.tgz#5b825515381d70972189e549b0a9d57542afe996"\n  integrity sha512-pIgAbGqHbOunTGiUzBPhIKfXrTWdCrVwsimECXy/If5XaZ3GHhxiiA7BxsWFlAN1UZ6PgVMPgymKU0kx2D5A/w==\n  dependencies:\n    find-up "^4.0.0"\n\n"@commitlint/types@^9.1.1":\n  version "9.1.1"\n  resolved "https://registry.yarnpkg.com/@commitlint/types/-/types-9.1.1.tgz#d97ebc35d20eed6d8458361cbca5c7cb85d45184"\n  integrity sha512-SXY8bCQ1qacJ8AUTUxjabY8G6OjSmMPLN9MBCzGaKOjpPNX6z8zbXTbk9oU3GHZLtcxweWLCi2n49IRS4iQlwg==\n\n"@goto-bus-stop/common-shake@^2.2.0":\n  version "2.4.0"\n  resolved "https://registry.yarnpkg.com/@goto-bus-stop/common-shake/-/common-shake-2.4.0.tgz#7b29b093ed10d4075c061bf48905c02eb75d643c"\n  integrity sha512-LO+7v+UbxE3IyAS4Suf/KYB7Zq9DEIHibwDe6Wph4apNEfDyyxP7BSxzRS/Qa9lUH5gsm9eL9nF8EE1E0/nQkQ==\n  dependencies:\n    acorn-walk "^7.0.0"\n    debug "^3.2.6"\n    escope "^3.6.0"\n\n"@goto-bus-stop/envify@^5.0.0":\n  version "5.0.0"\n  resolved "https://registry.yarnpkg.com/@goto-bus-stop/envify/-/envify-5.0.0.tgz#db7db712f00901d9f71f852ed13dbb3db0909b1a"\n  integrity sha512-xAnxuDWmwQxO8CgVuPTxKuNsKDfwyXXTyAabG4sNoK59H/ZMC7BHxTA/4ehtinsxbcH7/9L65F5VhyNdQfUyqA==\n  dependencies:\n    acorn-node "^2.0.1"\n    dash-ast "^2.0.1"\n    multisplice "^1.0.0"\n    through2 "^2.0.5"\n\n"@istanbuljs/load-nyc-config@^1.0.0":\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz#fd3db1d59ecf7cf121e80650bb86712f9b55eced"\n  integrity sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\n  dependencies:\n    camelcase "^5.3.1"\n    find-up "^4.1.0"\n    get-package-type "^0.1.0"\n    js-yaml "^3.13.1"\n    resolve-from "^5.0.0"\n\n"@istanbuljs/schema@^0.1.2":\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/@istanbuljs/schema/-/schema-0.1.2.tgz#26520bf09abe4a5644cd5414e37125a8954241dd"\n  integrity sha512-tsAQNx32a8CoFhjhijUIhI4kccIAgmGhy8LZMZgGfmXcpMbPRUqn5LWmgRttILi6yeGmBJd2xsPkFMs0PzgPCw==\n\n"@mrmlnc/readdir-enhanced@^2.2.1":\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz#524af240d1a360527b730475ecfa1344aa540dde"\n  integrity sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==\n  dependencies:\n    call-me-maybe "^1.0.1"\n    glob-to-regexp "^0.3.0"\n\n"@nodelib/fs.stat@^1.1.2":\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz#2b5a3ab3f918cca48a8c754c08168e3f03eba61b"\n  integrity sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw==\n\n"@sindresorhus/is@^0.14.0":\n  version "0.14.0"\n  resolved "https://registry.yarnpkg.com/@sindresorhus/is/-/is-0.14.0.tgz#9fb3a3cf3132328151f353de4632e01e52102bea"\n  integrity sha512-9NET910DNaIPngYnLLPeg+Ogzqsi9uM4mSboU5y6p8S5DzMTVEsJZrawi+BoDNUVBa2DhJqQYUFvMDfgU062LQ==\n\n"@szmarczak/http-timer@^1.1.2":\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/@szmarczak/http-timer/-/http-timer-1.1.2.tgz#b1665e2c461a2cd92f4c1bbf50d5454de0d4b421"\n  integrity sha512-XIB2XbzHTN6ieIjfIMV9hlVcfPU26s2vafYWQcZHWXHOxiaRZYEDKEwdl129Zyg50+foYV2jCgtrqSA6qNuNSA==\n  dependencies:\n    defer-to-connect "^1.0.1"\n\n"@tootallnate/once@1":\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/@tootallnate/once/-/once-1.1.2.tgz#ccb91445360179a04e7fe6aff78c00ffc1eeaf82"\n  integrity sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpkm/kwiR07aZXnsKPxw==\n\n"@types/color-name@^1.1.1":\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/@types/color-name/-/color-name-1.1.1.tgz#1c1261bbeaa10a8055bbc5d8ab84b7b2afc846a0"\n  integrity sha512-rr+OQyAjxze7GgWrSaJwydHStIhHq2lvY3BOC2Mj7KnzI7XK0Uw1TOOdI9lDoajEbSWLiYgoo4f1R51erQfhPQ==\n\n"@types/eslint-visitor-keys@^1.0.0":\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d"\n  integrity sha512-OCutwjDZ4aFS6PB1UZ988C4YgwlBHJd6wCeQqaLdmadZ/7e+w79+hbMUFC1QXDNCmdyoRfAFdm0RypzwR+Qpag==\n\n"@types/glob@^7.1.1":\n  version "7.1.3"\n  resolved "https://registry.yarnpkg.com/@types/glob/-/glob-7.1.3.tgz#e6ba80f36b7daad2c685acd9266382e68985c183"\n  integrity sha512-SEYeGAIQIQX8NN6LDKprLjbrd5dARM5EXsd8GI/A5l0apYI1fGMWgPHSe4ZKL4eozlAyI+doUE9XbYS4xCkQ1w==\n  dependencies:\n    "@types/minimatch" "*"\n    "@types/node" "*"\n\n"@types/json-schema@^7.0.3":\n  version "7.0.5"\n  resolved "https://registry.yarnpkg.com/@types/json-schema/-/json-schema-7.0.5.tgz#dcce4430e64b443ba8945f0290fb564ad5bac6dd"\n  integrity sha512-7+2BITlgjgDhH0vvwZU/HZJVyk+2XUlvxXe8dFMedNX/aMkaOq++rMAFXc0tM7ij15QaWlbdQASBR9dihi+bDQ==\n\n"@types/json5@^0.0.29":\n  version "0.0.29"\n  resolved "https://registry.yarnpkg.com/@types/json5/-/json5-0.0.29.tgz#ee28707ae94e11d2b827bcbe5270bcea7f3e71ee"\n  integrity sha1-7ihweulOEdK4J7y+UnC86n8+ce4=\n\n"@types/mdast@^3.0.3":\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/@types/mdast/-/mdast-3.0.3.tgz#2d7d671b1cd1ea3deb306ea75036c2a0407d2deb"\n  integrity sha512-SXPBMnFVQg1s00dlMCc/jCdvPqdE4mXaMMCeRlxLDmTAEoegHT53xKtkDnzDTOcmMHUfcjyf36/YYZ6SxRdnsw==\n  dependencies:\n    "@types/unist" "*"\n\n"@types/minimatch@*":\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/@types/minimatch/-/minimatch-3.0.3.tgz#3dca0e3f33b200fc7d1139c0cd96c1268cadfd9d"\n  integrity sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs670L1vcVQi8j9HjnA==\n\n"@types/minimist@^1.2.0":\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/@types/minimist/-/minimist-1.2.0.tgz#69a23a3ad29caf0097f06eda59b361ee2f0639f6"\n  integrity sha1-aaI6OtKcrwCX8G7aWbNh7i8GOfY=\n\n"@types/node@*":\n  version "14.0.27"\n  resolved "https://registry.yarnpkg.com/@types/node/-/node-14.0.27.tgz#a151873af5a5e851b51b3b065c9e63390a9e0eb1"\n  integrity sha512-kVrqXhbclHNHGu9ztnAwSncIgJv/FaxmzXJvGXNdcCpV1b8u1/Mi6z6m0vwy0LzKeXFTPLH0NzwmoJ3fNCIq0g==\n\n"@types/normalize-package-data@^2.4.0":\n  version "2.4.0"\n  resolved "https://registry.yarnpkg.com/@types/normalize-package-data/-/normalize-package-data-2.4.0.tgz#e486d0d97396d79beedd0a6e33f4534ff6b4973e"\n  integrity sha512-f5j5b/Gf71L+dbqxIpQ4Z2WlmI/mPJ0fOkGGmFgtb6sAu97EPczzbS3/tJKxmcYDj55OX6ssqwDAWOHIYDRDGA==\n\n"@types/parse-json@^4.0.0":\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/@types/parse-json/-/parse-json-4.0.0.tgz#2f8bb441434d163b35fb8ffdccd7138927ffb8c0"\n  integrity sha512-//oorEZjL6sbPcKUaCdIGlIUeH26mgzimjBB77G6XRgnDl/L5wOnpyBGRe/Mmf5CVW3PwEBE1NjiMZ/ssFh4wA==\n\n"@types/unist@*", "@types/unist@^2.0.0", "@types/unist@^2.0.2", "@types/unist@^2.0.3":\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/@types/unist/-/unist-2.0.3.tgz#9c088679876f374eb5983f150d4787aa6fb32d7e"\n  integrity sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ==\n\n"@typescript-eslint/eslint-plugin@^3.1.0":\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/@typescript-eslint/eslint-plugin/-/eslint-plugin-3.8.0.tgz#f82947bcdd9a4e42be7ad80dfd61f1dc411dd1df"\n  integrity sha512-lFb4VCDleFSR+eo4Ew+HvrJ37ZH1Y9ZyE+qyP7EiwBpcCVxwmUc5PAqhShCQ8N8U5vqYydm74nss+a0wrrCErw==\n  dependencies:\n    "@typescript-eslint/experimental-utils" "3.8.0"\n    debug "^4.1.1"\n    functional-red-black-tree "^1.0.1"\n    regexpp "^3.0.0"\n    semver "^7.3.2"\n    tsutils "^3.17.1"\n\n"@typescript-eslint/experimental-utils@3.8.0":\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/@typescript-eslint/experimental-utils/-/experimental-utils-3.8.0.tgz#ac1f7c88322dcfb7635ece6f0441516dd951099a"\n  integrity sha512-o8T1blo1lAJE0QDsW7nSyvZHbiDzQDjINJKyB44Z3sSL39qBy5L10ScI/XwDtaiunoyKGLiY9bzRk4YjsUZl8w==\n  dependencies:\n    "@types/json-schema" "^7.0.3"\n    "@typescript-eslint/types" "3.8.0"\n    "@typescript-eslint/typescript-estree" "3.8.0"\n    eslint-scope "^5.0.0"\n    eslint-utils "^2.0.0"\n\n"@typescript-eslint/parser@^3.1.0":\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/@typescript-eslint/parser/-/parser-3.8.0.tgz#8e1dcd404299bf79492409c81c415fa95a7c622b"\n  integrity sha512-u5vjOBaCsnMVQOvkKCXAmmOhyyMmFFf5dbkM3TIbg3MZ2pyv5peE4gj81UAbTHwTOXEwf7eCQTUMKrDl/+qGnA==\n  dependencies:\n    "@types/eslint-visitor-keys" "^1.0.0"\n    "@typescript-eslint/experimental-utils" "3.8.0"\n    "@typescript-eslint/types" "3.8.0"\n    "@typescript-eslint/typescript-estree" "3.8.0"\n    eslint-visitor-keys "^1.1.0"\n\n"@typescript-eslint/types@3.8.0":\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/@typescript-eslint/types/-/types-3.8.0.tgz#58581dd863f86e0cd23353d94362bb90b4bea796"\n  integrity sha512-8kROmEQkv6ss9kdQ44vCN1dTrgu4Qxrd2kXr10kz2NP5T8/7JnEfYNxCpPkArbLIhhkGLZV3aVMplH1RXQRF7Q==\n\n"@typescript-eslint/typescript-estree@3.8.0":\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/@typescript-eslint/typescript-estree/-/typescript-estree-3.8.0.tgz#0606d19f629f813dbdd5a34c7a1e895d6191cac6"\n  integrity sha512-MTv9nPDhlKfclwnplRNDL44mP2SY96YmPGxmMbMy6x12I+pERcxpIUht7DXZaj4mOKKtet53wYYXU0ABaiXrLw==\n  dependencies:\n    "@typescript-eslint/types" "3.8.0"\n    "@typescript-eslint/visitor-keys" "3.8.0"\n    debug "^4.1.1"\n    glob "^7.1.6"\n    is-glob "^4.0.1"\n    lodash "^4.17.15"\n    semver "^7.3.2"\n    tsutils "^3.17.1"\n\n"@typescript-eslint/visitor-keys@3.8.0":\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/@typescript-eslint/visitor-keys/-/visitor-keys-3.8.0.tgz#ad35110249fb3fc30a36bfcbfeea93e710cfaab1"\n  integrity sha512-gfqQWyVPpT9NpLREXNR820AYwgz+Kr1GuF3nf1wxpHD6hdxI62tq03ToomFnDxY0m3pUB39IF7sil7D5TQexLA==\n  dependencies:\n    eslint-visitor-keys "^1.1.0"\n\nBase64@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/Base64/-/Base64-1.1.0.tgz#810ef21afa8357df92ad7b5389188c446b9cb956"\n  integrity sha512-qeacf8dvGpf+XAT27ESHMh7z84uRzj/ua2pQdJg483m3bEXv/kVFtDnMgvf70BQGqzbZhR9t6BmASzKvqfJf3Q==\n\nJSON2@0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/JSON2/-/JSON2-0.1.0.tgz#8d7493040a63d5835af75f47decb83ab6c8c0790"\n  integrity sha1-jXSTBApj1YNa919H3suDq2yMB5A=\n\nJSONStream@^1.0.3, JSONStream@^1.0.4, JSONStream@^1.3.2:\n  version "1.3.5"\n  resolved "https://registry.yarnpkg.com/JSONStream/-/JSONStream-1.3.5.tgz#3208c1f08d3a4d99261ab64f92302bc15e111ca0"\n  integrity sha512-E+iruNOY8VV9s4JEbe1aNEm6MiszPRr/UfcHMz0TQh1BXSxHK+ASV1R6W4HpjBhSeS+54PIsAMCBmwD06LLsqQ==\n  dependencies:\n    jsonparse "^1.2.0"\n    through ">=2.2.7 <3"\n\nabbrev@1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/abbrev/-/abbrev-1.1.1.tgz#f8f2c887ad10bf67f634f005b6987fed3179aac8"\n  integrity sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\n\nabbrev@1.0.x:\n  version "1.0.9"\n  resolved "https://registry.yarnpkg.com/abbrev/-/abbrev-1.0.9.tgz#91b4792588a7738c25f35dd6f63752a2f8776135"\n  integrity sha1-kbR5JYinc4wl813W9jdSovh3YTU=\n\naccepts@~1.2.9:\n  version "1.2.13"\n  resolved "https://registry.yarnpkg.com/accepts/-/accepts-1.2.13.tgz#e5f1f3928c6d95fd96558c36ec3d9d0de4a6ecea"\n  integrity sha1-5fHzkoxtlf2WVYw27D2dDeSm7Oo=\n  dependencies:\n    mime-types "~2.1.6"\n    negotiator "0.5.3"\n\naccepts@~1.3.7:\n  version "1.3.7"\n  resolved "https://registry.yarnpkg.com/accepts/-/accepts-1.3.7.tgz#531bc726517a3b2b41f850021c6cc15eaab507cd"\n  integrity sha512-Il80Qs2WjYlJIBNzNkK6KYqlVMTbZLXgHx2oT0pU/fjRHyEp+PEfEPY0R3WCwAGVOtauxh1hOxNgIf5bv7dQpA==\n  dependencies:\n    mime-types "~2.1.24"\n    negotiator "0.6.2"\n\nacorn-jsx@^5.2.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/acorn-jsx/-/acorn-jsx-5.2.0.tgz#4c66069173d6fdd68ed85239fc256226182b2ebe"\n  integrity sha512-HiUX/+K2YpkpJ+SzBffkM/AQ2YE03S0U1kjTLVpoJdhZMOWy8qvXVN9JdLqv2QsaQ6MPYQIuNmwD8zOiYUofLQ==\n\nacorn-node@^1.2.0, acorn-node@^1.3.0, acorn-node@^1.5.2, acorn-node@^1.6.1, acorn-node@^1.8.2:\n  version "1.8.2"\n  resolved "https://registry.yarnpkg.com/acorn-node/-/acorn-node-1.8.2.tgz#114c95d64539e53dede23de8b9d96df7c7ae2af8"\n  integrity sha512-8mt+fslDufLYntIoPAaIMUe/lrbrehIiwmR3t2k9LljIzoigEPF27eLk2hy8zSGzmR/ogr7zbRKINMo1u0yh5A==\n  dependencies:\n    acorn "^7.0.0"\n    acorn-walk "^7.0.0"\n    xtend "^4.0.2"\n\nacorn-node@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/acorn-node/-/acorn-node-2.0.1.tgz#4a93ba32335950da9250175c654721f20f3375a7"\n  integrity sha512-VLR5sHqjk+8c5hrKeP2fWaIHb8eewsoxnZ8r2qpwRHXMHuC7KyOPflnOx9dLssVQUurzJ7rO0OzIFjHcndafWw==\n  dependencies:\n    acorn "^7.0.0"\n    acorn-walk "^7.0.0"\n    xtend "^4.0.2"\n\nacorn-walk@^7.0.0:\n  version "7.2.0"\n  resolved "https://registry.yarnpkg.com/acorn-walk/-/acorn-walk-7.2.0.tgz#0de889a601203909b0fbe07b8938dc21d2e967bc"\n  integrity sha512-OPdCF6GsMIP+Az+aWfAAOEt2/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2wH058GF4pLFbYamYrVA==\n\nacorn@^5.1.0, acorn@^5.2.1:\n  version "5.7.4"\n  resolved "https://registry.yarnpkg.com/acorn/-/acorn-5.7.4.tgz#3e8d8a9947d0599a1796d10225d7432f4a4acf5e"\n  integrity sha512-1D++VG7BhrtvQpNbBzovKNc1FLGGEE/oGe7b9xJm/RFHMBeUaUGpluV9RLjZa47YFdPcDAenEYuq9pQPcMdLJg==\n\nacorn@^7.0.0, acorn@^7.1.1, acorn@^7.3.1:\n  version "7.4.0"\n  resolved "https://registry.yarnpkg.com/acorn/-/acorn-7.4.0.tgz#e1ad486e6c54501634c6c397c5c121daa383607c"\n  integrity sha512-+G7P8jJmCHr+S+cLfQxygbWhXy+8YTVGzAkpEbcLo2mLoL7tij/VG41QSHACSf5QgYRhMZYHuNc6drJaO0Da+w==\n\nadm-zip@~0.4.3:\n  version "0.4.16"\n  resolved "https://registry.yarnpkg.com/adm-zip/-/adm-zip-0.4.16.tgz#cf4c508fdffab02c269cbc7f471a875f05570365"\n  integrity sha512-TFi4HBKSGfIKsK5YCkKaaFG2m4PEDyViZmEwof3MTIgzimHLto6muaHVpbrljdIvIrFZzEq/p4nafOeLcYegrg==\n\nagent-base@5:\n  version "5.1.1"\n  resolved "https://registry.yarnpkg.com/agent-base/-/agent-base-5.1.1.tgz#e8fb3f242959db44d63be665db7a8e739537a32c"\n  integrity sha512-TMeqbNl2fMW0nMjTEPOwe3J/PRFP4vqeoNuQMG0HlMrtm5QxKqdvAkZ1pRBQ/ulIyDD5Yq0nJ7YbdD8ey0TO3g==\n\nagent-base@6:\n  version "6.0.1"\n  resolved "https://registry.yarnpkg.com/agent-base/-/agent-base-6.0.1.tgz#808007e4e5867decb0ab6ab2f928fbdb5a596db4"\n  integrity sha512-01q25QQDwLSsyfhrKbn8yuur+JNw0H+0Y4JiGIKd3z9aYk/w/2kxD/Upc+t2ZBBSUNff50VjPsSW2YxM8QYKVg==\n  dependencies:\n    debug "4"\n\naggregate-error@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/aggregate-error/-/aggregate-error-3.0.1.tgz#db2fe7246e536f40d9b5442a39e117d7dd6a24e0"\n  integrity sha512-quoaXsZ9/BLNae5yiNoUz+Nhkwz83GhWwtYFglcjEQB2NDHCIpApbqXxIFnm4Pq/Nvhrsq5sYJFyohrrxnTGAA==\n  dependencies:\n    clean-stack "^2.0.0"\n    indent-string "^4.0.0"\n\najv@^6.10.0, ajv@^6.10.2:\n  version "6.12.3"\n  resolved "https://registry.yarnpkg.com/ajv/-/ajv-6.12.3.tgz#18c5af38a111ddeb4f2697bd78d68abc1cabd706"\n  integrity sha512-4K0cK3L1hsqk9xIb2z9vs/XU+PGJZ9PNpJRDS9YLzmNdX6jmVPfamLvTJr0aDAusnHyCHO6MjzlkAsgtqp9teA==\n  dependencies:\n    fast-deep-equal "^3.1.1"\n    fast-json-stable-stringify "^2.0.0"\n    json-schema-traverse "^0.4.1"\n    uri-js "^4.2.2"\n\nalce@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/alce/-/alce-1.0.0.tgz#426184c98ee288d0eeac77fd63fed680b667cab6"\n  integrity sha1-QmGEyY7iiNDurHf9Y/7WgLZnyrY=\n  dependencies:\n    esprima "~1.0.4"\n    estraverse "~1.3.0"\n\namdefine@>=0.0.4:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/amdefine/-/amdefine-1.0.1.tgz#4a5282ac164729e93619bcfd3ad151f817ce91f5"\n  integrity sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU=\n\nansi-align@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/ansi-align/-/ansi-align-3.0.0.tgz#b536b371cf687caaef236c18d3e21fe3797467cb"\n  integrity sha512-ZpClVKqXN3RGBmKibdfWzqCY4lnjEuoNzU5T0oEFpfd/z5qJHVarukridD4juLO2FXMiwUQxr9WqQtaYa8XRYw==\n  dependencies:\n    string-width "^3.0.0"\n\nansi-colors@^4.1.1:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/ansi-colors/-/ansi-colors-4.1.1.tgz#cbb9ae256bf750af1eab344f229aa27fe94ba348"\n  integrity sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==\n\nansi-escapes@^4.2.1, ansi-escapes@^4.3.0:\n  version "4.3.1"\n  resolved "https://registry.yarnpkg.com/ansi-escapes/-/ansi-escapes-4.3.1.tgz#a5c47cc43181f1f38ffd7076837700d395522a61"\n  integrity sha512-JWF7ocqNrp8u9oqpgV+wH5ftbt+cfvv+PTjOvKLT3AdYly/LmORARfEVT1iyjwN+4MqE5UmVKoAdIBqeoCHgLA==\n  dependencies:\n    type-fest "^0.11.0"\n\nansi-regex@^2.0.0:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-2.1.1.tgz#c3b33ab5ee360d86e0e628f0468ae7ef27d654df"\n  integrity sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\n\nansi-regex@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-4.1.0.tgz#8b9f8f08cf1acb843756a839ca8c7e3168c51997"\n  integrity sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg==\n\nansi-regex@^5.0.0:\n  version "5.0.0"\n  resolved "https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-5.0.0.tgz#388539f55179bf39339c81af30a654d69f87cb75"\n  integrity sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==\n\nansi-styles@^2.2.1:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-2.2.1.tgz#b432dd3358b634cf75e1e4664368240533c1ddbe"\n  integrity sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\n\nansi-styles@^3.2.0, ansi-styles@^3.2.1:\n  version "3.2.1"\n  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-3.2.1.tgz#41fbb20243e50b12be0f04b8dedbf07520ce841d"\n  integrity sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\n  dependencies:\n    color-convert "^1.9.0"\n\nansi-styles@^4.0.0, ansi-styles@^4.1.0:\n  version "4.2.1"\n  resolved "https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-4.2.1.tgz#90ae75c424d008d2624c5bf29ead3177ebfcf359"\n  integrity sha512-9VGjrMsG1vePxcSweQsN20KY/c4zN0h9fLjqAbwbPfahM3t+NL+M9HC8xeXG2I8pX5NoamTGNuomEUFI7fcUjA==\n  dependencies:\n    "@types/color-name" "^1.1.1"\n    color-convert "^2.0.1"\n\nanymatch@^1.3.0:\n  version "1.3.2"\n  resolved "https://registry.yarnpkg.com/anymatch/-/anymatch-1.3.2.tgz#553dcb8f91e3c889845dfdba34c77721b90b9d7a"\n  integrity sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==\n  dependencies:\n    micromatch "^2.1.5"\n    normalize-path "^2.0.0"\n\nanymatch@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/anymatch/-/anymatch-2.0.0.tgz#bcb24b4f37934d9aa7ac17b4adaf89e7c76ef2eb"\n  integrity sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==\n  dependencies:\n    micromatch "^3.1.4"\n    normalize-path "^2.1.1"\n\nanymatch@~3.1.1:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/anymatch/-/anymatch-3.1.1.tgz#c55ecf02185e2469259399310c173ce31233b142"\n  integrity sha512-mM8522psRCqzV+6LhomX5wgp25YVibjh8Wj23I5RPkPppSVSjyKD2A2mBJmWGa+KN7f2D6LNh9jkBCeyLktzjg==\n  dependencies:\n    normalize-path "^3.0.0"\n    picomatch "^2.0.4"\n\nappend-field@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/append-field/-/append-field-1.0.0.tgz#1e3440e915f0b1203d23748e78edd7b9b5b43e56"\n  integrity sha1-HjRA6RXwsSA9I3SOeO3XubW0PlY=\n\nappend-transform@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/append-transform/-/append-transform-2.0.0.tgz#99d9d29c7b38391e6f428d28ce136551f0b77e12"\n  integrity sha512-7yeyCEurROLQJFv5Xj4lEGTy0borxepjFv1g22oAdqFu//SrAlDl1O1Nxx15SH1RoliUml6p8dwJW9jvZughhg==\n  dependencies:\n    default-require-extensions "^3.0.0"\n\narchiver@0.14.x:\n  version "0.14.4"\n  resolved "https://registry.yarnpkg.com/archiver/-/archiver-0.14.4.tgz#5b9ddb9f5ee1ceef21cb8f3b020e6240ecb4315c"\n  integrity sha1-W53bn17hzu8hy487Ag5iQOy0MVw=\n  dependencies:\n    async "~0.9.0"\n    buffer-crc32 "~0.2.1"\n    glob "~4.3.0"\n    lazystream "~0.1.0"\n    lodash "~3.2.0"\n    readable-stream "~1.0.26"\n    tar-stream "~1.1.0"\n    zip-stream "~0.5.0"\n\narchiver@~0.12.0:\n  version "0.12.0"\n  resolved "https://registry.yarnpkg.com/archiver/-/archiver-0.12.0.tgz#b8ccde2508cab9092bb7106630139c0f39a280cc"\n  integrity sha1-uMzeJQjKuQkrtxBmMBOcDzmigMw=\n  dependencies:\n    async "~0.9.0"\n    buffer-crc32 "~0.2.1"\n    glob "~4.0.6"\n    lazystream "~0.1.0"\n    lodash "~2.4.1"\n    readable-stream "~1.0.26"\n    tar-stream "~1.0.0"\n    zip-stream "~0.4.0"\n\narchiver@~0.7.1:\n  version "0.7.1"\n  resolved "https://registry.yarnpkg.com/archiver/-/archiver-0.7.1.tgz#cf152d794f86bbd93f9858da60d36aaeabad9bbf"\n  integrity sha1-zxUteU+Gu9k/mFjaYNNqrqutm78=\n  dependencies:\n    file-utils "~0.1.5"\n    lazystream "~0.1.0"\n    lodash "~2.4.1"\n    readable-stream "~1.0.24"\n    zip-stream "~0.2.0"\n\narchy@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/archy/-/archy-1.0.0.tgz#f9c8c13757cc1dd7bc379ac77b2c62a5c2868c40"\n  integrity sha1-+cjBN1fMHde8N5rHeyxipcKGjEA=\n\nargparse@^1.0.7:\n  version "1.0.10"\n  resolved "https://registry.yarnpkg.com/argparse/-/argparse-1.0.10.tgz#bcd6791ea5ae09725e17e5ad988134cd40b3d911"\n  integrity sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\n  dependencies:\n    sprintf-js "~1.0.2"\n\nargv@0.0.2:\n  version "0.0.2"\n  resolved "https://registry.yarnpkg.com/argv/-/argv-0.0.2.tgz#ecbd16f8949b157183711b1bda334f37840185ab"\n  integrity sha1-7L0W+JSbFXGDcRsb2jNPN4QBhas=\n\narr-diff@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/arr-diff/-/arr-diff-2.0.0.tgz#8f3b827f955a8bd669697e4a4256ac3ceae356cf"\n  integrity sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=\n  dependencies:\n    arr-flatten "^1.0.1"\n\narr-diff@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/arr-diff/-/arr-diff-4.0.0.tgz#d6461074febfec71e7e15235761a329a5dc7c520"\n  integrity sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=\n\narr-flatten@^1.0.1, arr-flatten@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/arr-flatten/-/arr-flatten-1.1.0.tgz#36048bbff4e7b47e136644316c99669ea5ae91f1"\n  integrity sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==\n\narr-union@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/arr-union/-/arr-union-3.1.0.tgz#e39b09aea9def866a8f206e288af63919bae39c4"\n  integrity sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=\n\narray-filter@~0.0.0:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/array-filter/-/array-filter-0.0.1.tgz#7da8cf2e26628ed732803581fd21f67cacd2eeec"\n  integrity sha1-fajPLiZijtcygDWB/SH2fKzS7uw=\n\narray-find-index@^1.0.1:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/array-find-index/-/array-find-index-1.0.2.tgz#df010aa1287e164bbda6f9723b0a96a1ec4187a1"\n  integrity sha1-3wEKoSh+Fku9pvlyOwqWoexBh6E=\n\narray-find@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/array-find/-/array-find-1.0.0.tgz#6c8e286d11ed768327f8e62ecee87353ca3e78b8"\n  integrity sha1-bI4obRHtdoMn+OYuzuhzU8o+eLg=\n\narray-flatten@1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/array-flatten/-/array-flatten-1.1.1.tgz#9a5f699051b1e7073328f2a008968b64ea2955d2"\n  integrity sha1-ml9pkFGx5wczKPKgCJaLZOopVdI=\n\narray-from@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/array-from/-/array-from-2.1.1.tgz#cfe9d8c26628b9dc5aecc62a9f5d8f1f352c1195"\n  integrity sha1-z+nYwmYoudxa7MYqn12PHzUsEZU=\n\narray-ify@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/array-ify/-/array-ify-1.0.0.tgz#9e528762b4a9066ad163a6962a364418e9626ece"\n  integrity sha1-nlKHYrSpBmrRY6aWKjZEGOlibs4=\n\narray-includes@^3.1.1:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/array-includes/-/array-includes-3.1.1.tgz#cdd67e6852bdf9c1215460786732255ed2459348"\n  integrity sha512-c2VXaCHl7zPsvpkFsw4nxvFie4fh1ur9bpcgsVkIjqn0H/Xwdg+7fv3n2r/isyS8EBj5b06M9kHyZuIr4El6WQ==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.0"\n    is-string "^1.0.5"\n\narray-iterate@^1.0.0:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/array-iterate/-/array-iterate-1.1.4.tgz#add1522e9dd9749bb41152d08b845bd08d6af8b7"\n  integrity sha512-sNRaPGh9nnmdC8Zf+pT3UqP8rnWj5Hf9wiFGsX3wUQ2yVSIhO2ShFwCoceIPpB41QF6i2OEmrHmCo36xronCVA==\n\narray-map@0.0.0, array-map@~0.0.0:\n  version "0.0.0"\n  resolved "https://registry.yarnpkg.com/array-map/-/array-map-0.0.0.tgz#88a2bab73d1cf7bcd5c1b118a003f66f665fa662"\n  integrity sha1-iKK6tz0c97zVwbEYoAP2b2ZfpmI=\n\narray-reduce@~0.0.0:\n  version "0.0.0"\n  resolved "https://registry.yarnpkg.com/array-reduce/-/array-reduce-0.0.0.tgz#173899d3ffd1c7d9383e4479525dbe278cab5f2b"\n  integrity sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys=\n\narray-union@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/array-union/-/array-union-1.0.2.tgz#9a34410e4f4e3da23dea375be5be70f24778ec39"\n  integrity sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=\n  dependencies:\n    array-uniq "^1.0.1"\n\narray-uniq@^1.0.1, array-uniq@~1.0.2:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/array-uniq/-/array-uniq-1.0.3.tgz#af6ac877a25cc7f74e058894753858dfdb24fdb6"\n  integrity sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=\n\narray-unique@^0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/array-unique/-/array-unique-0.2.1.tgz#a1d97ccafcbc2625cc70fadceb36a50c58b01a53"\n  integrity sha1-odl8yvy8JiXMcPrc6zalDFiwGlM=\n\narray-unique@^0.3.2:\n  version "0.3.2"\n  resolved "https://registry.yarnpkg.com/array-unique/-/array-unique-0.3.2.tgz#a894b75d4bc4f6cd679ef3244a9fd8f46ae2d428"\n  integrity sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=\n\narray.prototype.flat@^1.2.3:\n  version "1.2.3"\n  resolved "https://registry.yarnpkg.com/array.prototype.flat/-/array.prototype.flat-1.2.3.tgz#0de82b426b0318dbfdb940089e38b043d37f6c7b"\n  integrity sha512-gBlRZV0VSmfPIeWfuuy56XZMvbVfbEUnOXUvt3F/eUUUSyzlgLxhEX4YAEpxNAogRGehPSnfXyPtYyKAhkzQhQ==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.0-next.1"\n\narrify@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/arrify/-/arrify-1.0.1.tgz#898508da2226f380df904728456849c1501a4b0d"\n  integrity sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=\n\narrify@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/arrify/-/arrify-2.0.1.tgz#c9655e9331e0abcd588d2a7cad7e9956f66701fa"\n  integrity sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==\n\nasn1.js@^4.0.0:\n  version "4.10.1"\n  resolved "https://registry.yarnpkg.com/asn1.js/-/asn1.js-4.10.1.tgz#b9c2bf5805f1e64aadeed6df3a2bfafb5a73f5a0"\n  integrity sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==\n  dependencies:\n    bn.js "^4.0.0"\n    inherits "^2.0.1"\n    minimalistic-assert "^1.0.0"\n\nasn1@0.1.11:\n  version "0.1.11"\n  resolved "https://registry.yarnpkg.com/asn1/-/asn1-0.1.11.tgz#559be18376d08a4ec4dbe80877d27818639b2df7"\n  integrity sha1-VZvhg3bQik7E2+gId9J4GGObLfc=\n\nassert-plus@^0.1.5:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/assert-plus/-/assert-plus-0.1.5.tgz#ee74009413002d84cec7219c6ac811812e723160"\n  integrity sha1-7nQAlBMALYTOxyGcasgRgS5yMWA=\n\nassert@^1.1.1, assert@^1.4.0:\n  version "1.5.0"\n  resolved "https://registry.yarnpkg.com/assert/-/assert-1.5.0.tgz#55c109aaf6e0aefdb3dc4b71240c70bf574b18eb"\n  integrity sha512-EDsgawzwoun2CZkCgtxJbv392v4nbk9XDD06zI+kQYoBM/3RBWLlEyJARDOmhAAosBjWACEkKL6S+lIZtcAubA==\n  dependencies:\n    object-assign "^4.1.1"\n    util "0.10.3"\n\nassert@~1.3.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/assert/-/assert-1.3.0.tgz#03939a622582a812cc202320a0b9a56c9b815849"\n  integrity sha1-A5OaYiWCqBLMICMgoLmlbJuBWEk=\n  dependencies:\n    util "0.10.3"\n\nassign-symbols@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/assign-symbols/-/assign-symbols-1.0.0.tgz#59667f41fadd4f20ccbc2bb96b8d4f7f78ec0367"\n  integrity sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=\n\nast-metadata-inferer@^0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/ast-metadata-inferer/-/ast-metadata-inferer-0.4.0.tgz#6be85ceeffcf267bd79db8e1ae731da44880b45f"\n  integrity sha512-tKHdBe8N/Vq2nLAm4YPBVREVZjMux6KrqyPfNQgIbDl0t7HaNSmy8w4OyVHYg/cvyn5BW7o7pVwpjPte89Zhcg==\n\nastral-regex@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/astral-regex/-/astral-regex-1.0.0.tgz#6c8c3fb827dd43ee3918f27b82782ab7658a6fd9"\n  integrity sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg==\n\nastral-regex@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/astral-regex/-/astral-regex-2.0.0.tgz#483143c567aeed4785759c0865786dc77d7d2e31"\n  integrity sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==\n\nasync-each@^1.0.0, async-each@^1.0.1:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/async-each/-/async-each-1.0.3.tgz#b727dbf87d7651602f06f4d4ac387f47d91b0cbf"\n  integrity sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ==\n\nasync@0.9.x, async@~0.9.0:\n  version "0.9.2"\n  resolved "https://registry.yarnpkg.com/async/-/async-0.9.2.tgz#aea74d5e61c1f899613bf64bda66d4c78f2fd17d"\n  integrity sha1-rqdNXmHB+JlhO/ZL2mbUx48v0X0=\n\nasync@1.x:\n  version "1.5.2"\n  resolved "https://registry.yarnpkg.com/async/-/async-1.5.2.tgz#ec6a61ae56480c0c3cb241c95618e20892f9672a"\n  integrity sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo=\n\nasync@~0.2.6, async@~0.2.7, async@~0.2.9:\n  version "0.2.10"\n  resolved "https://registry.yarnpkg.com/async/-/async-0.2.10.tgz#b6bbe0b0674b9d719708ca38de8c237cb526c3d1"\n  integrity sha1-trvgsGdLnXGXCMo43owjfLUmw9E=\n\nasynckit@^0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/asynckit/-/asynckit-0.4.0.tgz#c79ed97f7f34cb8f2ba1bc9790bcc366474b4b79"\n  integrity sha1-x57Zf380y48robyXkLzDZkdLS3k=\n\nasyncreduce@~0.1.4:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/asyncreduce/-/asyncreduce-0.1.4.tgz#18210e01978bfdcba043955497a5cd315c0a6a41"\n  integrity sha1-GCEOAZeL/cugQ5VUl6XNMVwKakE=\n  dependencies:\n    runnel "~0.5.0"\n\nat-least-node@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/at-least-node/-/at-least-node-1.0.0.tgz#602cd4b46e844ad4effc92a8011a3c46e0238dc2"\n  integrity sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==\n\natob@^2.1.2:\n  version "2.1.2"\n  resolved "https://registry.yarnpkg.com/atob/-/atob-2.1.2.tgz#6d9517eb9e030d2436666651e86bd9f6f13533c9"\n  integrity sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==\n\nauthor-regex@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/author-regex/-/author-regex-1.0.0.tgz#d08885be6b9bbf9439fe087c76287245f0a81450"\n  integrity sha1-0IiFvmubv5Q5/gh8dihyRfCoFFA=\n\naws-sign2@~0.5.0:\n  version "0.5.0"\n  resolved "https://registry.yarnpkg.com/aws-sign2/-/aws-sign2-0.5.0.tgz#c57103f7a17fc037f02d7c2e64b602ea223f7d63"\n  integrity sha1-xXED96F/wDfwLXwuZLYC6iI/fWM=\n\nbabel-eslint@^10.1.0:\n  version "10.1.0"\n  resolved "https://registry.yarnpkg.com/babel-eslint/-/babel-eslint-10.1.0.tgz#6968e568a910b78fb3779cdd8b6ac2f479943232"\n  integrity sha512-ifWaTHQ0ce+448CYop8AdrQiBsGrnC+bMgfyKFdi6EsPLTAWG+QfyDeM6OH+FmWnKvEq5NnBMLvlBUPKQZoDSg==\n  dependencies:\n    "@babel/code-frame" "^7.0.0"\n    "@babel/parser" "^7.7.0"\n    "@babel/traverse" "^7.7.0"\n    "@babel/types" "^7.7.0"\n    eslint-visitor-keys "^1.0.0"\n    resolve "^1.12.0"\n\nbabel-plugin-dynamic-import-node@^2.3.3:\n  version "2.3.3"\n  resolved "https://registry.yarnpkg.com/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.3.3.tgz#84fda19c976ec5c6defef57f9427b3def66e17a3"\n  integrity sha512-jZVI+s9Zg3IqA/kdi0i6UDCybUI3aSBLnglhYbSSjKlV7yF1F/5LWv8MakQmvYpnbJDS6fcBL2KzHSxNCMtWSQ==\n  dependencies:\n    object.assign "^4.1.0"\n\nbabelify@^10.0.0:\n  version "10.0.0"\n  resolved "https://registry.yarnpkg.com/babelify/-/babelify-10.0.0.tgz#fe73b1a22583f06680d8d072e25a1e0d1d1d7fb5"\n  integrity sha512-X40FaxyH7t3X+JFAKvb1H9wooWKLRCi8pg3m8poqtdZaIng+bjzp9RvKQCvRjF9isHiPkXspbbXT/zwXLtwgwg==\n\nbail@^1.0.0:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/bail/-/bail-1.0.5.tgz#b6fa133404a392cbc1f8c4bf63f5953351e7a776"\n  integrity sha512-xFbRxM1tahm08yHBP16MMjVUAvDaBMD38zsM9EMAUN61omwLmKlOpB/Zku5QkjZ8TZ4vn53pj+t518cH0S03RQ==\n\nbalanced-match@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.0.tgz#89b4d199ab2bee49de164ea02b89ce462d71b767"\n  integrity sha1-ibTRmasr7kneFk6gK4nORi1xt2c=\n\nbase64-js@^1.0.2:\n  version "1.3.1"\n  resolved "https://registry.yarnpkg.com/base64-js/-/base64-js-1.3.1.tgz#58ece8cb75dd07e71ed08c736abc5fac4dbf8df1"\n  integrity sha512-mLQ4i2QO1ytvGWFWmcngKO//JXAQueZvwEKtjgQFM4jIK0kU+ytMfplL8j+n5mspOfjHwoAg+9yhb7BwAHm36g==\n\nbase@^0.11.1:\n  version "0.11.2"\n  resolved "https://registry.yarnpkg.com/base/-/base-0.11.2.tgz#7bde5ced145b6d551a90db87f83c558b4eb48a8f"\n  integrity sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==\n  dependencies:\n    cache-base "^1.0.1"\n    class-utils "^0.3.5"\n    component-emitter "^1.2.1"\n    define-property "^1.0.0"\n    isobject "^3.0.1"\n    mixin-deep "^1.2.0"\n    pascalcase "^0.1.1"\n\nbasic-auth-connect@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/basic-auth-connect/-/basic-auth-connect-1.0.0.tgz#fdb0b43962ca7b40456a7c2bb48fe173da2d2122"\n  integrity sha1-/bC0OWLKe0BFanwrtI/hc9otISI=\n\nbatch@0.5.0:\n  version "0.5.0"\n  resolved "https://registry.yarnpkg.com/batch/-/batch-0.5.0.tgz#fd2e05a7a5d696b4db9314013e285d8ff3557ec3"\n  integrity sha1-/S4Fp6XWlrTbkxQBPihdj/NVfsM=\n\nbinary-extensions@^1.0.0:\n  version "1.13.1"\n  resolved "https://registry.yarnpkg.com/binary-extensions/-/binary-extensions-1.13.1.tgz#598afe54755b2868a5330d2aff9d4ebb53209b65"\n  integrity sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw==\n\nbinary-extensions@^2.0.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/binary-extensions/-/binary-extensions-2.1.0.tgz#30fa40c9e7fe07dbc895678cd287024dea241dd9"\n  integrity sha512-1Yj8h9Q+QDF5FzhMs/c9+6UntbD5MkRfRwac8DoEm9ZfUBZ7tZ55YcGVAzEe4bXsdQHEk+s9S5wsOKVdZrw0tQ==\n\nbindings@^1.5.0:\n  version "1.5.0"\n  resolved "https://registry.yarnpkg.com/bindings/-/bindings-1.5.0.tgz#10353c9e945334bc0511a6d90b38fbc7c9c504df"\n  integrity sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==\n  dependencies:\n    file-uri-to-path "1.0.0"\n\nbl@^0.9.0, bl@~0.9.0:\n  version "0.9.5"\n  resolved "https://registry.yarnpkg.com/bl/-/bl-0.9.5.tgz#c06b797af085ea00bc527afc8efcf11de2232054"\n  integrity sha1-wGt5evCF6gC8Unr8jvzxHeIjIFQ=\n  dependencies:\n    readable-stream "~1.0.26"\n\nbn.js@^4.0.0, bn.js@^4.1.0, bn.js@^4.4.0:\n  version "4.11.9"\n  resolved "https://registry.yarnpkg.com/bn.js/-/bn.js-4.11.9.tgz#26d556829458f9d1e81fc48952493d0ba3507828"\n  integrity sha512-E6QoYqCKZfgatHTdHzs1RRKP7ip4vvm+EyRUeE2RF0NblwVvb0p6jSVeNTOFxPn26QXN2o6SMfNxKp6kU8zQaw==\n\nbn.js@^5.1.1:\n  version "5.1.2"\n  resolved "https://registry.yarnpkg.com/bn.js/-/bn.js-5.1.2.tgz#c9686902d3c9a27729f43ab10f9d79c2004da7b0"\n  integrity sha512-40rZaf3bUNKTVYu9sIeeEGOg7g14Yvnj9kH7b50EiwX0Q7A6umbvfI5tvHaOERH0XigqKkfLkFQxzb4e6CIXnA==\n\nbody-parser@1.19.0, body-parser@^1.19.0:\n  version "1.19.0"\n  resolved "https://registry.yarnpkg.com/body-parser/-/body-parser-1.19.0.tgz#96b2709e57c9c4e09a6fd66a8fd979844f69f08a"\n  integrity sha512-dhEPs72UPbDnAQJ9ZKMNTP6ptJaionhP5cBb541nXPlW60Jepo9RV/a4fX4XWW9CuFNK22krhrj1+rgzifNCsw==\n  dependencies:\n    bytes "3.1.0"\n    content-type "~1.0.4"\n    debug "2.6.9"\n    depd "~1.1.2"\n    http-errors "1.7.2"\n    iconv-lite "0.4.24"\n    on-finished "~2.3.0"\n    qs "6.7.0"\n    raw-body "2.4.0"\n    type-is "~1.6.17"\n\nbody-parser@~1.12.3:\n  version "1.12.4"\n  resolved "https://registry.yarnpkg.com/body-parser/-/body-parser-1.12.4.tgz#090700c4ba28862a8520ef378395fdee5f61c229"\n  integrity sha1-CQcAxLoohiqFIO83g5X97l9hwik=\n  dependencies:\n    bytes "1.0.0"\n    content-type "~1.0.1"\n    debug "~2.2.0"\n    depd "~1.0.1"\n    iconv-lite "0.4.8"\n    on-finished "~2.2.1"\n    qs "2.4.2"\n    raw-body "~2.0.1"\n    type-is "~1.6.2"\n\nboom@0.4.x:\n  version "0.4.2"\n  resolved "https://registry.yarnpkg.com/boom/-/boom-0.4.2.tgz#7a636e9ded4efcefb19cef4947a3c67dfaee911b"\n  integrity sha1-emNune1O/O+xnO9JR6PGffrukRs=\n  dependencies:\n    hoek "0.9.x"\n\nboxen@^4.2.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/boxen/-/boxen-4.2.0.tgz#e411b62357d6d6d36587c8ac3d5d974daa070e64"\n  integrity sha512-eB4uT9RGzg2odpER62bBwSLvUeGC+WbRjjyyFhGsKnc8wp/m0+hQsMUvUe3H2V0D5vw0nBdO1hCJoZo5mKeuIQ==\n  dependencies:\n    ansi-align "^3.0.0"\n    camelcase "^5.3.1"\n    chalk "^3.0.0"\n    cli-boxes "^2.2.0"\n    string-width "^4.1.0"\n    term-size "^2.1.0"\n    type-fest "^0.8.1"\n    widest-line "^3.1.0"\n\nbrace-expansion@^1.0.0, brace-expansion@^1.1.7:\n  version "1.1.11"\n  resolved "https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd"\n  integrity sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\n  dependencies:\n    balanced-match "^1.0.0"\n    concat-map "0.0.1"\n\nbraces@^1.8.2:\n  version "1.8.5"\n  resolved "https://registry.yarnpkg.com/braces/-/braces-1.8.5.tgz#ba77962e12dff969d6b76711e914b737857bf6a7"\n  integrity sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=\n  dependencies:\n    expand-range "^1.8.1"\n    preserve "^0.2.0"\n    repeat-element "^1.1.2"\n\nbraces@^2.3.1, braces@^2.3.2:\n  version "2.3.2"\n  resolved "https://registry.yarnpkg.com/braces/-/braces-2.3.2.tgz#5979fd3f14cd531565e5fa2df1abfff1dfaee729"\n  integrity sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==\n  dependencies:\n    arr-flatten "^1.1.0"\n    array-unique "^0.3.2"\n    extend-shallow "^2.0.1"\n    fill-range "^4.0.0"\n    isobject "^3.0.1"\n    repeat-element "^1.1.2"\n    snapdragon "^0.8.1"\n    snapdragon-node "^2.0.1"\n    split-string "^3.0.2"\n    to-regex "^3.0.1"\n\nbraces@^3.0.1, braces@~3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/braces/-/braces-3.0.2.tgz#3454e1a462ee8d599e236df336cd9ea4f8afe107"\n  integrity sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\n  dependencies:\n    fill-range "^7.0.1"\n\nbrorand@^1.0.1:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/brorand/-/brorand-1.1.0.tgz#12c25efe40a45e3c323eb8675a0a0ce57b22371f"\n  integrity sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8=\n\nbrowser-pack-flat@^3.0.9:\n  version "3.4.2"\n  resolved "https://registry.yarnpkg.com/browser-pack-flat/-/browser-pack-flat-3.4.2.tgz#aa3bee87ad1aab8f7de34d4704610a5981c6cf24"\n  integrity sha512-TrUo6n2fGSOCYFAKkt/EkgenytAuuCI88fmXFA60aNFVHvz3CZEBTXYSvvXVpU6xpjM8lj/6vkC6Exn8KPjtPw==\n  dependencies:\n    JSONStream "^1.3.2"\n    combine-source-map "^0.8.0"\n    convert-source-map "^1.5.1"\n    count-lines "^0.1.2"\n    dedent "^0.7.0"\n    estree-is-member-expression "^1.0.0"\n    estree-is-require "^1.0.0"\n    esutils "^2.0.2"\n    path-parse "^1.0.5"\n    scope-analyzer "^2.0.0"\n    stream-combiner "^0.2.2"\n    through2 "^2.0.3"\n    transform-ast "^2.4.2"\n    umd "^3.0.3"\n    wrap-comment "^1.0.0"\n\nbrowser-pack@^6.0.1, browser-pack@^6.0.2:\n  version "6.1.0"\n  resolved "https://registry.yarnpkg.com/browser-pack/-/browser-pack-6.1.0.tgz#c34ba10d0b9ce162b5af227c7131c92c2ecd5774"\n  integrity sha512-erYug8XoqzU3IfcU8fUgyHqyOXqIE4tUTTQ+7mqUjQlvnXkOO6OlT9c/ZoJVHYoAaqGxr09CN53G7XIsO4KtWA==\n  dependencies:\n    JSONStream "^1.0.3"\n    combine-source-map "~0.8.0"\n    defined "^1.0.0"\n    safe-buffer "^5.1.1"\n    through2 "^2.0.0"\n    umd "^3.0.0"\n\nbrowser-process-hrtime@^0.1.2:\n  version "0.1.3"\n  resolved "https://registry.yarnpkg.com/browser-process-hrtime/-/browser-process-hrtime-0.1.3.tgz#616f00faef1df7ec1b5bf9cfe2bdc3170f26c7b4"\n  integrity sha512-bRFnI4NnjO6cnyLmOV/7PVoDEMJChlcfN0z4s1YMBY989/SvlfMI1lgCnkFUs53e9gQF+w7qu7XdllSTiSl8Aw==\n\nbrowser-resolve@^1.11.0, browser-resolve@^1.7.0:\n  version "1.11.3"\n  resolved "https://registry.yarnpkg.com/browser-resolve/-/browser-resolve-1.11.3.tgz#9b7cbb3d0f510e4cb86bdbd796124d28b5890af6"\n  integrity sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==\n  dependencies:\n    resolve "1.1.7"\n\nbrowser-resolve@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/browser-resolve/-/browser-resolve-2.0.0.tgz#99b7304cb392f8d73dba741bb2d7da28c6d7842b"\n  integrity sha512-7sWsQlYL2rGLy2IWm8WL8DCTJvYLc/qlOnsakDac87SOoCd16WLsaAMdCiAqsTNHIe+SXfaqyxyo6THoWqs8WQ==\n  dependencies:\n    resolve "^1.17.0"\n\nbrowser-stdout@1.3.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/browser-stdout/-/browser-stdout-1.3.0.tgz#f351d32969d32fa5d7a5567154263d928ae3bd1f"\n  integrity sha1-81HTKWnTL6XXpVZxVCY9korjvR8=\n\nbrowser-unpack@^1.1.0:\n  version "1.4.2"\n  resolved "https://registry.yarnpkg.com/browser-unpack/-/browser-unpack-1.4.2.tgz#7a708774dc7448df1c24a735d65d409708b95ce2"\n  integrity sha512-uHkiY4bmXjjBBWoKH1aRnEGTQxUUCCcVtoJfH9w1lmGGjETY4u93Zk+GRYkCE/SRMrdoMTINQ/1/manr/3aMVA==\n  dependencies:\n    acorn-node "^1.5.2"\n    concat-stream "^1.5.0"\n    minimist "^1.1.1"\n\nbrowserify-aes@^1.0.0, browserify-aes@^1.0.4:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/browserify-aes/-/browserify-aes-1.2.0.tgz#326734642f403dabc3003209853bb70ad428ef48"\n  integrity sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==\n  dependencies:\n    buffer-xor "^1.0.3"\n    cipher-base "^1.0.0"\n    create-hash "^1.1.0"\n    evp_bytestokey "^1.0.3"\n    inherits "^2.0.1"\n    safe-buffer "^5.0.1"\n\nbrowserify-cipher@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/browserify-cipher/-/browserify-cipher-1.0.1.tgz#8d6474c1b870bfdabcd3bcfcc1934a10e94f15f0"\n  integrity sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==\n  dependencies:\n    browserify-aes "^1.0.4"\n    browserify-des "^1.0.0"\n    evp_bytestokey "^1.0.0"\n\nbrowserify-des@^1.0.0:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/browserify-des/-/browserify-des-1.0.2.tgz#3af4f1f59839403572f1c66204375f7a7f703e9c"\n  integrity sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==\n  dependencies:\n    cipher-base "^1.0.1"\n    des.js "^1.0.0"\n    inherits "^2.0.1"\n    safe-buffer "^5.1.2"\n\nbrowserify-istanbul@0.1.5:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/browserify-istanbul/-/browserify-istanbul-0.1.5.tgz#01c8e31d6a358ee5150f4321c3f28995a964c39f"\n  integrity sha1-AcjjHWo1juUVD0Mhw/KJlalkw58=\n  dependencies:\n    istanbul "^0.2.8"\n    minimatch "^0.2.14"\n    through "^2.3.4"\n\nbrowserify-rsa@^4.0.0, browserify-rsa@^4.0.1:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/browserify-rsa/-/browserify-rsa-4.0.1.tgz#21e0abfaf6f2029cf2fafb133567a701d4135524"\n  integrity sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=\n  dependencies:\n    bn.js "^4.1.0"\n    randombytes "^2.0.1"\n\nbrowserify-sign@^4.0.0:\n  version "4.2.1"\n  resolved "https://registry.yarnpkg.com/browserify-sign/-/browserify-sign-4.2.1.tgz#eaf4add46dd54be3bb3b36c0cf15abbeba7956c3"\n  integrity sha512-/vrA5fguVAKKAVTNJjgSm1tRQDHUU6DbwO9IROu/0WAzC8PKhucDSh18J0RMvVeHAn5puMd+QHC2erPRNf8lmg==\n  dependencies:\n    bn.js "^5.1.1"\n    browserify-rsa "^4.0.1"\n    create-hash "^1.2.0"\n    create-hmac "^1.1.7"\n    elliptic "^6.5.3"\n    inherits "^2.0.4"\n    parse-asn1 "^5.1.5"\n    readable-stream "^3.6.0"\n    safe-buffer "^5.2.0"\n\nbrowserify-zlib@^0.2.0, browserify-zlib@~0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/browserify-zlib/-/browserify-zlib-0.2.0.tgz#2869459d9aa3be245fe8fe2ca1f46e2e7f54d73f"\n  integrity sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==\n  dependencies:\n    pako "~1.0.5"\n\nbrowserify-zlib@~0.1.2:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/browserify-zlib/-/browserify-zlib-0.1.4.tgz#bb35f8a519f600e0fa6b8485241c979d0141fb2d"\n  integrity sha1-uzX4pRn2AOD6a4SFJByXnQFB+y0=\n  dependencies:\n    pako "~0.2.0"\n\nbrowserify@13.0.0:\n  version "13.0.0"\n  resolved "https://registry.yarnpkg.com/browserify/-/browserify-13.0.0.tgz#8f223bb24ff4ee4335e6bea9671de294e43ba6a3"\n  integrity sha1-jyI7sk/07kM15r6pZx3ilOQ7pqM=\n  dependencies:\n    JSONStream "^1.0.3"\n    assert "~1.3.0"\n    browser-pack "^6.0.1"\n    browser-resolve "^1.11.0"\n    browserify-zlib "~0.1.2"\n    buffer "^4.1.0"\n    concat-stream "~1.5.1"\n    console-browserify "^1.1.0"\n    constants-browserify "~1.0.0"\n    crypto-browserify "^3.0.0"\n    defined "^1.0.0"\n    deps-sort "^2.0.0"\n    domain-browser "~1.1.0"\n    duplexer2 "~0.1.2"\n    events "~1.1.0"\n    glob "^5.0.15"\n    has "^1.0.0"\n    htmlescape "^1.1.0"\n    https-browserify "~0.0.0"\n    inherits "~2.0.1"\n    insert-module-globals "^7.0.0"\n    isarray "0.0.1"\n    labeled-stream-splicer "^2.0.0"\n    module-deps "^4.0.2"\n    os-browserify "~0.1.1"\n    parents "^1.0.1"\n    path-browserify "~0.0.0"\n    process "~0.11.0"\n    punycode "^1.3.2"\n    querystring-es3 "~0.2.0"\n    read-only-stream "^2.0.0"\n    readable-stream "^2.0.2"\n    resolve "^1.1.4"\n    shasum "^1.0.0"\n    shell-quote "^1.4.3"\n    stream-browserify "^2.0.0"\n    stream-http "^2.0.0"\n    string_decoder "~0.10.0"\n    subarg "^1.0.0"\n    syntax-error "^1.1.1"\n    through2 "^2.0.0"\n    timers-browserify "^1.0.1"\n    tty-browserify "~0.0.0"\n    url "~0.11.0"\n    util "~0.10.1"\n    vm-browserify "~0.0.1"\n    xtend "^4.0.0"\n\nbrowserify@^13.0.0:\n  version "13.3.0"\n  resolved "https://registry.yarnpkg.com/browserify/-/browserify-13.3.0.tgz#b5a9c9020243f0c70e4675bec8223bc627e415ce"\n  integrity sha1-tanJAgJD8McORnW+yCI7xifkFc4=\n  dependencies:\n    JSONStream "^1.0.3"\n    assert "^1.4.0"\n    browser-pack "^6.0.1"\n    browser-resolve "^1.11.0"\n    browserify-zlib "~0.1.2"\n    buffer "^4.1.0"\n    cached-path-relative "^1.0.0"\n    concat-stream "~1.5.1"\n    console-browserify "^1.1.0"\n    constants-browserify "~1.0.0"\n    crypto-browserify "^3.0.0"\n    defined "^1.0.0"\n    deps-sort "^2.0.0"\n    domain-browser "~1.1.0"\n    duplexer2 "~0.1.2"\n    events "~1.1.0"\n    glob "^7.1.0"\n    has "^1.0.0"\n    htmlescape "^1.1.0"\n    https-browserify "~0.0.0"\n    inherits "~2.0.1"\n    insert-module-globals "^7.0.0"\n    labeled-stream-splicer "^2.0.0"\n    module-deps "^4.0.8"\n    os-browserify "~0.1.1"\n    parents "^1.0.1"\n    path-browserify "~0.0.0"\n    process "~0.11.0"\n    punycode "^1.3.2"\n    querystring-es3 "~0.2.0"\n    read-only-stream "^2.0.0"\n    readable-stream "^2.0.2"\n    resolve "^1.1.4"\n    shasum "^1.0.0"\n    shell-quote "^1.6.1"\n    stream-browserify "^2.0.0"\n    stream-http "^2.0.0"\n    string_decoder "~0.10.0"\n    subarg "^1.0.0"\n    syntax-error "^1.1.1"\n    through2 "^2.0.0"\n    timers-browserify "^1.0.1"\n    tty-browserify "~0.0.0"\n    url "~0.11.0"\n    util "~0.10.1"\n    vm-browserify "~0.0.1"\n    xtend "^4.0.0"\n\nbrowserify@^16.5.2:\n  version "16.5.2"\n  resolved "https://registry.yarnpkg.com/browserify/-/browserify-16.5.2.tgz#d926835e9280fa5fd57f5bc301f2ef24a972ddfe"\n  integrity sha512-TkOR1cQGdmXU9zW4YukWzWVSJwrxmNdADFbqbE3HFgQWe5wqZmOawqZ7J/8MPCwk/W8yY7Y0h+7mOtcZxLP23g==\n  dependencies:\n    JSONStream "^1.0.3"\n    assert "^1.4.0"\n    browser-pack "^6.0.1"\n    browser-resolve "^2.0.0"\n    browserify-zlib "~0.2.0"\n    buffer "~5.2.1"\n    cached-path-relative "^1.0.0"\n    concat-stream "^1.6.0"\n    console-browserify "^1.1.0"\n    constants-browserify "~1.0.0"\n    crypto-browserify "^3.0.0"\n    defined "^1.0.0"\n    deps-sort "^2.0.0"\n    domain-browser "^1.2.0"\n    duplexer2 "~0.1.2"\n    events "^2.0.0"\n    glob "^7.1.0"\n    has "^1.0.0"\n    htmlescape "^1.1.0"\n    https-browserify "^1.0.0"\n    inherits "~2.0.1"\n    insert-module-globals "^7.0.0"\n    labeled-stream-splicer "^2.0.0"\n    mkdirp-classic "^0.5.2"\n    module-deps "^6.2.3"\n    os-browserify "~0.3.0"\n    parents "^1.0.1"\n    path-browserify "~0.0.0"\n    process "~0.11.0"\n    punycode "^1.3.2"\n    querystring-es3 "~0.2.0"\n    read-only-stream "^2.0.0"\n    readable-stream "^2.0.2"\n    resolve "^1.1.4"\n    shasum "^1.0.0"\n    shell-quote "^1.6.1"\n    stream-browserify "^2.0.0"\n    stream-http "^3.0.0"\n    string_decoder "^1.1.1"\n    subarg "^1.0.0"\n    syntax-error "^1.1.1"\n    through2 "^2.0.0"\n    timers-browserify "^1.0.1"\n    tty-browserify "0.0.1"\n    url "~0.11.0"\n    util "~0.10.1"\n    vm-browserify "^1.0.0"\n    xtend "^4.0.0"\n\nbrowserslist@^4.12.0, browserslist@^4.12.2, browserslist@^4.8.5:\n  version "4.14.0"\n  resolved "https://registry.yarnpkg.com/browserslist/-/browserslist-4.14.0.tgz#2908951abfe4ec98737b72f34c3bcedc8d43b000"\n  integrity sha512-pUsXKAF2lVwhmtpeA3LJrZ76jXuusrNyhduuQs7CDFf9foT4Y38aQOserd2lMe5DSSrjf3fx34oHwryuvxAUgQ==\n  dependencies:\n    caniuse-lite "^1.0.30001111"\n    electron-to-chromium "^1.3.523"\n    escalade "^3.0.2"\n    node-releases "^1.1.60"\n\nbuf-compare@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/buf-compare/-/buf-compare-1.0.1.tgz#fef28da8b8113a0a0db4430b0b6467b69730b34a"\n  integrity sha1-/vKNqLgROgoNtEMLC2Rntpcws0o=\n\nbuffer-crc32@0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/buffer-crc32/-/buffer-crc32-0.2.1.tgz#be3e5382fc02b6d6324956ac1af98aa98b08534c"\n  integrity sha1-vj5TgvwCttYySVasGvmKqYsIU0w=\n\nbuffer-crc32@~0.2.1:\n  version "0.2.13"\n  resolved "https://registry.yarnpkg.com/buffer-crc32/-/buffer-crc32-0.2.13.tgz#0d333e3f00eac50aa1454abd30ef8c2a5d9a7242"\n  integrity sha1-DTM+PwDqxQqhRUq9MO+MKl2ackI=\n\nbuffer-from@^1.0.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/buffer-from/-/buffer-from-1.1.1.tgz#32713bc028f75c02fdb710d7c7bcec1f2c6070ef"\n  integrity sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A==\n\nbuffer-xor@^1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/buffer-xor/-/buffer-xor-1.0.3.tgz#26e61ed1422fb70dd42e6e36729ed51d855fe8d9"\n  integrity sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk=\n\nbuffer@^4.1.0, buffer@^4.3.0:\n  version "4.9.2"\n  resolved "https://registry.yarnpkg.com/buffer/-/buffer-4.9.2.tgz#230ead344002988644841ab0244af8c44bbe3ef8"\n  integrity sha512-xq+q3SRMOxGivLhBNaUdC64hDTQwejJ+H0T/NB1XMtTVEwNTrfFF3gAxiyW0Bu/xWEGhjVKgUcMhCrUy2+uCWg==\n  dependencies:\n    base64-js "^1.0.2"\n    ieee754 "^1.1.4"\n    isarray "^1.0.0"\n\nbuffer@~5.2.1:\n  version "5.2.1"\n  resolved "https://registry.yarnpkg.com/buffer/-/buffer-5.2.1.tgz#dd57fa0f109ac59c602479044dca7b8b3d0b71d6"\n  integrity sha512-c+Ko0loDaFfuPWiL02ls9Xd3GO3cPVmUobQ6t3rXNUk304u6hGq+8N/kFi+QEIKhzK3uwolVhLzszmfLmMLnqg==\n  dependencies:\n    base64-js "^1.0.2"\n    ieee754 "^1.1.4"\n\nbuiltin-status-codes@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz#85982878e21b98e1c66425e03d0174788f569ee8"\n  integrity sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug=\n\nbundle-collapser@^1.3.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/bundle-collapser/-/bundle-collapser-1.4.0.tgz#c6e5c1104e91865b5158e91053b38788f50aa1d7"\n  integrity sha512-Gd3K3+3KI1Utuk+gwAvuOVOjT/2XLGL8tU6FwDKk04LlOZkYfT0pwQllsG1Dv8RRhgcjNxZSDmmSXb0AOkwSwg==\n  dependencies:\n    browser-pack "^6.0.2"\n    browser-unpack "^1.1.0"\n    concat-stream "^1.5.0"\n    falafel "^2.1.0"\n    minimist "^1.1.1"\n    through2 "^2.0.0"\n\nbusboy@^0.2.11:\n  version "0.2.14"\n  resolved "https://registry.yarnpkg.com/busboy/-/busboy-0.2.14.tgz#6c2a622efcf47c57bbbe1e2a9c37ad36c7925453"\n  integrity sha1-bCpiLvz0fFe7vh4qnDetNseSVFM=\n  dependencies:\n    dicer "0.2.5"\n    readable-stream "1.1.x"\n\nbytes@0.2.1, bytes@~0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/bytes/-/bytes-0.2.1.tgz#555b08abcb063f8975905302523e4cd4ffdfdf31"\n  integrity sha1-VVsIq8sGP4l1kFMCUj5M1P/f3zE=\n\nbytes@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/bytes/-/bytes-1.0.0.tgz#3569ede8ba34315fab99c3e92cb04c7220de1fa8"\n  integrity sha1-NWnt6Lo0MV+rmcPpLLBMciDeH6g=\n\nbytes@2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/bytes/-/bytes-2.1.0.tgz#ac93c410e2ffc9cc7cf4b464b38289067f5e47b4"\n  integrity sha1-rJPEEOL/ycx89LRks4KJBn9eR7Q=\n\nbytes@3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/bytes/-/bytes-3.1.0.tgz#f6cf7933a360e0588fa9fde85651cdc7f805d1f6"\n  integrity sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbzwv8f+wZcVzfVTI2Dg==\n\ncache-base@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/cache-base/-/cache-base-1.0.1.tgz#0a7f46416831c8b662ee36fe4e7c59d76f666ab2"\n  integrity sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==\n  dependencies:\n    collection-visit "^1.0.0"\n    component-emitter "^1.2.1"\n    get-value "^2.0.6"\n    has-value "^1.0.0"\n    isobject "^3.0.1"\n    set-value "^2.0.0"\n    to-object-path "^0.3.0"\n    union-value "^1.0.0"\n    unset-value "^1.0.0"\n\ncacheable-request@^6.0.0:\n  version "6.1.0"\n  resolved "https://registry.yarnpkg.com/cacheable-request/-/cacheable-request-6.1.0.tgz#20ffb8bd162ba4be11e9567d823db651052ca912"\n  integrity sha512-Oj3cAGPCqOZX7Rz64Uny2GYAZNliQSqfbePrgAQ1wKAihYmCUnraBtJtKcGR4xz7wF+LoJC+ssFZvv5BgF9Igg==\n  dependencies:\n    clone-response "^1.0.2"\n    get-stream "^5.1.0"\n    http-cache-semantics "^4.0.0"\n    keyv "^3.0.0"\n    lowercase-keys "^2.0.0"\n    normalize-url "^4.1.0"\n    responselike "^1.0.2"\n\ncached-path-relative@^1.0.0, cached-path-relative@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/cached-path-relative/-/cached-path-relative-1.0.2.tgz#a13df4196d26776220cc3356eb147a52dba2c6db"\n  integrity sha512-5r2GqsoEb4qMTTN9J+WzXfjov+hjxT+j3u5K+kIVNIwAd99DLCJE9pBIMP1qVeybV6JiijL385Oz0DcYxfbOIg==\n\ncaching-transform@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/caching-transform/-/caching-transform-4.0.0.tgz#00d297a4206d71e2163c39eaffa8157ac0651f0f"\n  integrity sha512-kpqOvwXnjjN44D89K5ccQC+RUrsy7jB/XLlRrx0D7/2HNcTPqzsb6XgYoErwko6QsV184CA2YgS1fxDiiDZMWA==\n  dependencies:\n    hasha "^5.0.0"\n    make-dir "^3.0.0"\n    package-hash "^4.0.0"\n    write-file-atomic "^3.0.0"\n\ncall-matcher@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/call-matcher/-/call-matcher-2.0.0.tgz#a38bee4e9ddbeec76aa31cc20311085a34dd395b"\n  integrity sha512-CIDC5wZZfZ2VjZu849WQckS58Z3pJXFfRaSjNjgo/q3in5zxkhTwVL83vttgtmvyLG7TuDlLlBya7SKP6CjDIA==\n  dependencies:\n    deep-equal "^1.0.0"\n    espurify "^2.0.0"\n    estraverse "^4.0.0"\n\ncall-me-maybe@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/call-me-maybe/-/call-me-maybe-1.0.1.tgz#26d208ea89e37b5cbde60250a15f031c16a4d66b"\n  integrity sha1-JtII6onje1y95gJQoV8DHBak1ms=\n\ncallsites@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/callsites/-/callsites-3.1.0.tgz#b3630abd8943432f54b3f0519238e33cd7df2f73"\n  integrity sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\n\ncamelcase-keys@^4.0.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/camelcase-keys/-/camelcase-keys-4.2.0.tgz#a2aa5fb1af688758259c32c141426d78923b9b77"\n  integrity sha1-oqpfsa9oh1glnDLBQUJteJI7m3c=\n  dependencies:\n    camelcase "^4.1.0"\n    map-obj "^2.0.0"\n    quick-lru "^1.0.0"\n\ncamelcase-keys@^6.2.2:\n  version "6.2.2"\n  resolved "https://registry.yarnpkg.com/camelcase-keys/-/camelcase-keys-6.2.2.tgz#5e755d6ba51aa223ec7d3d52f25778210f9dc3c0"\n  integrity sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg==\n  dependencies:\n    camelcase "^5.3.1"\n    map-obj "^4.0.0"\n    quick-lru "^4.0.1"\n\ncamelcase@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/camelcase/-/camelcase-4.1.0.tgz#d545635be1e33c542649c69173e5de6acfae34dd"\n  integrity sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0=\n\ncamelcase@^5.0.0, camelcase@^5.3.1:\n  version "5.3.1"\n  resolved "https://registry.yarnpkg.com/camelcase/-/camelcase-5.3.1.tgz#e3c9b31569e106811df242f715725a1f4c494320"\n  integrity sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\n\ncamelcase@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/camelcase/-/camelcase-6.0.0.tgz#5259f7c30e35e278f1bdc2a4d91230b37cad981e"\n  integrity sha512-8KMDF1Vz2gzOq54ONPJS65IvTUaB1cHJ2DMM7MbPmLZljDH1qpzzLsWdiN9pHh6qvkRVDTi/07+eNGch/oLU4w==\n\ncaniuse-db@^1.0.30001090:\n  version "1.0.30001112"\n  resolved "https://registry.yarnpkg.com/caniuse-db/-/caniuse-db-1.0.30001112.tgz#89cb249402af2ebf2c23a5585d1bd78cb5e38732"\n  integrity sha512-Xrn3lVEIsvAAUmFVHKKComfyCRM59NfuV3EwCXqs2XLgOxAqYgrfEs0vDk+Dk7KctlAMh6CH/CSd1srJt503ZA==\n\ncaniuse-lite@^1.0.30001111:\n  version "1.0.30001112"\n  resolved "https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001112.tgz#0fffc3b934ff56ff0548c37bc9dad7d882bcf672"\n  integrity sha512-J05RTQlqsatidif/38aN3PGULCLrg8OYQOlJUKbeYVzC2mGZkZLIztwRlB3MtrfLmawUmjFlNJvy/uhwniIe1Q==\n\ncaseless@~0.6.0:\n  version "0.6.0"\n  resolved "https://registry.yarnpkg.com/caseless/-/caseless-0.6.0.tgz#8167c1ab8397fb5bb95f96d28e5a81c50f247ac4"\n  integrity sha1-gWfBq4OX+1u5X5bSjlqBxQ8kesQ=\n\nccount@^1.0.0:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/ccount/-/ccount-1.0.5.tgz#ac82a944905a65ce204eb03023157edf29425c17"\n  integrity sha512-MOli1W+nfbPLlKEhInaxhRdp7KVLFxLN5ykwzHgLsLI3H3gs5jjFAK4Eoj3OzzcxCtumDaI8onoVDeQyWaNTkw==\n\nchalk@4.1.0, chalk@^4.0.0, chalk@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/chalk/-/chalk-4.1.0.tgz#4e14870a618d9e2edd97dd8345fd9d9dc315646a"\n  integrity sha512-qwx12AxXe2Q5xQ43Ac//I6v5aXTipYrSESdOgzrN+9XjgEpyjpKuvSGaN4qE93f7TQTlerQQ8S+EQ0EyDoVL1A==\n  dependencies:\n    ansi-styles "^4.1.0"\n    supports-color "^7.1.0"\n\nchalk@^1.1.3:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/chalk/-/chalk-1.1.3.tgz#a8115c55e4a702fe4d150abd3872822a7e09fc98"\n  integrity sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\n  dependencies:\n    ansi-styles "^2.2.1"\n    escape-string-regexp "^1.0.2"\n    has-ansi "^2.0.0"\n    strip-ansi "^3.0.0"\n    supports-color "^2.0.0"\n\nchalk@^2.0.0, chalk@^2.4.1, chalk@^2.4.2:\n  version "2.4.2"\n  resolved "https://registry.yarnpkg.com/chalk/-/chalk-2.4.2.tgz#cd42541677a54333cf541a49108c1432b44c9424"\n  integrity sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\n  dependencies:\n    ansi-styles "^3.2.1"\n    escape-string-regexp "^1.0.5"\n    supports-color "^5.3.0"\n\nchalk@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/chalk/-/chalk-3.0.0.tgz#3f73c2bf526591f574cc492c51e2456349f844e4"\n  integrity sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==\n  dependencies:\n    ansi-styles "^4.1.0"\n    supports-color "^7.1.0"\n\nchar-split@0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/char-split/-/char-split-0.2.0.tgz#8755eda641e5db277dd0f509b517c827e50a8edf"\n  integrity sha1-h1XtpkHl2yd90PUJtRfIJ+UKjt8=\n  dependencies:\n    through "2.3.4"\n\ncharacter-entities-html4@^1.0.0:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/character-entities-html4/-/character-entities-html4-1.1.4.tgz#0e64b0a3753ddbf1fdc044c5fd01d0199a02e125"\n  integrity sha512-HRcDxZuZqMx3/a+qrzxdBKBPUpxWEq9xw2OPZ3a/174ihfrQKVsFhqtthBInFy1zZ9GgZyFXOatNujm8M+El3g==\n\ncharacter-entities-legacy@^1.0.0:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/character-entities-legacy/-/character-entities-legacy-1.1.4.tgz#94bc1845dce70a5bb9d2ecc748725661293d8fc1"\n  integrity sha512-3Xnr+7ZFS1uxeiUDvV02wQ+QDbc55o97tIV5zHScSPJpcLm/r0DFPcoY3tYRp+VZukxuMeKgXYmsXQHO05zQeA==\n\ncharacter-entities@^1.0.0:\n  version "1.2.4"\n  resolved "https://registry.yarnpkg.com/character-entities/-/character-entities-1.2.4.tgz#e12c3939b7eaf4e5b15e7ad4c5e28e1d48c5b16b"\n  integrity sha512-iBMyeEHxfVnIakwOuDXpVkc54HijNgCyQB2w0VfGQThle6NXn50zU6V/u+LDhxHcDUPojn6Kpga3PTAD8W1bQw==\n\ncharacter-reference-invalid@^1.0.0:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/character-reference-invalid/-/character-reference-invalid-1.1.4.tgz#083329cda0eae272ab3dbbf37e9a382c13af1560"\n  integrity sha512-mKKUkUbhPpQlCOfIuZkvSEgktjPFIsZKRRbC6KWVEMvlzblj3i3asQv5ODsrwt0N3pHAEvjP8KTQPHkp0+6jOg==\n\nchokidar@^1.0.0:\n  version "1.7.0"\n  resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-1.7.0.tgz#798e689778151c8076b4b360e5edd28cda2bb468"\n  integrity sha1-eY5ol3gVHIB2tLNg5e3SjNortGg=\n  dependencies:\n    anymatch "^1.3.0"\n    async-each "^1.0.0"\n    glob-parent "^2.0.0"\n    inherits "^2.0.1"\n    is-binary-path "^1.0.0"\n    is-glob "^2.0.0"\n    path-is-absolute "^1.0.0"\n    readdirp "^2.0.0"\n  optionalDependencies:\n    fsevents "^1.0.0"\n\nchokidar@^2.1.8:\n  version "2.1.8"\n  resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-2.1.8.tgz#804b3a7b6a99358c3c5c61e71d8728f041cff917"\n  integrity sha512-ZmZUazfOzf0Nve7duiCKD23PFSCs4JPoYyccjUFF3aQkQadqBhfzhjkwBH2mNOG9cTBwhamM37EIsIkZw3nRgg==\n  dependencies:\n    anymatch "^2.0.0"\n    async-each "^1.0.1"\n    braces "^2.3.2"\n    glob-parent "^3.1.0"\n    inherits "^2.0.3"\n    is-binary-path "^1.0.0"\n    is-glob "^4.0.0"\n    normalize-path "^3.0.0"\n    path-is-absolute "^1.0.0"\n    readdirp "^2.2.1"\n    upath "^1.1.1"\n  optionalDependencies:\n    fsevents "^1.2.7"\n\nchokidar@^3.0.0:\n  version "3.4.2"\n  resolved "https://registry.yarnpkg.com/chokidar/-/chokidar-3.4.2.tgz#38dc8e658dec3809741eb3ef7bb0a47fe424232d"\n  integrity sha512-IZHaDeBeI+sZJRX7lGcXsdzgvZqKv6sECqsbErJA4mHWfpRrD8B97kSFN4cQz6nGBGiuFia1MKR4d6c1o8Cv7A==\n  dependencies:\n    anymatch "~3.1.1"\n    braces "~3.0.2"\n    glob-parent "~5.1.0"\n    is-binary-path "~2.1.0"\n    is-glob "~4.0.1"\n    normalize-path "~3.0.0"\n    readdirp "~3.4.0"\n  optionalDependencies:\n    fsevents "~2.1.2"\n\nci-info@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/ci-info/-/ci-info-2.0.0.tgz#67a9e964be31a51e15e5010d58e6f12834002f46"\n  integrity sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ==\n\ncipher-base@^1.0.0, cipher-base@^1.0.1, cipher-base@^1.0.3:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/cipher-base/-/cipher-base-1.0.4.tgz#8760e4ecc272f4c363532f926d874aae2c1397de"\n  integrity sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==\n  dependencies:\n    inherits "^2.0.1"\n    safe-buffer "^5.0.1"\n\nclass-utils@^0.3.5:\n  version "0.3.6"\n  resolved "https://registry.yarnpkg.com/class-utils/-/class-utils-0.3.6.tgz#f93369ae8b9a7ce02fd41faad0ca83033190c463"\n  integrity sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==\n  dependencies:\n    arr-union "^3.1.0"\n    define-property "^0.2.5"\n    isobject "^3.0.0"\n    static-extend "^0.1.1"\n\nclean-regexp@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/clean-regexp/-/clean-regexp-1.0.0.tgz#8df7c7aae51fd36874e8f8d05b9180bc11a3fed7"\n  integrity sha1-jffHquUf02h06PjQW5GAvBGj/tc=\n  dependencies:\n    escape-string-regexp "^1.0.5"\n\nclean-stack@^2.0.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/clean-stack/-/clean-stack-2.2.0.tgz#ee8472dbb129e727b31e8a10a427dee9dfe4008b"\n  integrity sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==\n\ncli-boxes@^2.2.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/cli-boxes/-/cli-boxes-2.2.0.tgz#538ecae8f9c6ca508e3c3c95b453fe93cb4c168d"\n  integrity sha512-gpaBrMAizVEANOpfZp/EEUixTXDyGt7DFzdK5hU+UbWt/J0lB0w20ncZj59Z9a93xHb9u12zF5BS6i9RKbtg4w==\n\ncli-cursor@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/cli-cursor/-/cli-cursor-3.1.0.tgz#264305a7ae490d1d03bf0c9ba7c925d1753af307"\n  integrity sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==\n  dependencies:\n    restore-cursor "^3.1.0"\n\ncli-truncate@2.1.0, cli-truncate@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/cli-truncate/-/cli-truncate-2.1.0.tgz#c39e28bf05edcde5be3b98992a22deed5a2b93c7"\n  integrity sha512-n8fOixwDD6b/ObinzTrp1ZKFzbgvKZvuz/TvejnLn1aQfC6r52XEx85FmuC+3HI+JM7coBRXUvNqEU2PHVrHpg==\n  dependencies:\n    slice-ansi "^3.0.0"\n    string-width "^4.2.0"\n\ncliui@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/cliui/-/cliui-6.0.0.tgz#511d702c0c4e41ca156d7d0e96021f23e13225b1"\n  integrity sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==\n  dependencies:\n    string-width "^4.2.0"\n    strip-ansi "^6.0.0"\n    wrap-ansi "^6.2.0"\n\nclone-response@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/clone-response/-/clone-response-1.0.2.tgz#d1dc973920314df67fbeb94223b4ee350239e96b"\n  integrity sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=\n  dependencies:\n    mimic-response "^1.0.0"\n\nco@3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/co/-/co-3.1.0.tgz#4ea54ea5a08938153185e15210c68d9092bc1b78"\n  integrity sha1-TqVOpaCJOBUxheFSEMaNkJK8G3g=\n\ncodecov@^3.7.2:\n  version "3.7.2"\n  resolved "https://registry.yarnpkg.com/codecov/-/codecov-3.7.2.tgz#998e68c8c1ef4b55cfcf11cd456866d35e13d693"\n  integrity sha512-fmCjAkTese29DUX3GMIi4EaKGflHa4K51EoMc29g8fBHawdk/+KEq5CWOeXLdd9+AT7o1wO4DIpp/Z1KCqCz1g==\n  dependencies:\n    argv "0.0.2"\n    ignore-walk "3.0.3"\n    js-yaml "3.13.1"\n    teeny-request "6.0.1"\n    urlgrey "0.4.4"\n\ncollapse-white-space@^1.0.2, collapse-white-space@^1.0.4:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/collapse-white-space/-/collapse-white-space-1.0.6.tgz#e63629c0016665792060dbbeb79c42239d2c5287"\n  integrity sha512-jEovNnrhMuqyCcjfEJA56v0Xq8SkIoPKDyaHahwo3POf4qcSXqMYuwNcOTzp74vTsR9Tn08z4MxWqAhcekogkQ==\n\ncollection-visit@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/collection-visit/-/collection-visit-1.0.0.tgz#4bc0373c164bc3291b4d368c829cf1a80a59dca0"\n  integrity sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=\n  dependencies:\n    map-visit "^1.0.0"\n    object-visit "^1.0.0"\n\ncolor-convert@^1.9.0:\n  version "1.9.3"\n  resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-1.9.3.tgz#bb71850690e1f136567de629d2d5471deda4c1e8"\n  integrity sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\n  dependencies:\n    color-name "1.1.3"\n\ncolor-convert@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/color-convert/-/color-convert-2.0.1.tgz#72d3a68d598c9bdb3af2ad1e84f21d896abd4de3"\n  integrity sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\n  dependencies:\n    color-name "~1.1.4"\n\ncolor-name@1.1.3:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.3.tgz#a7d0558bd89c42f795dd42328f740831ca53bc25"\n  integrity sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\n\ncolor-name@~1.1.4:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/color-name/-/color-name-1.1.4.tgz#c2a09a87acbde69543de6f63fa3995c826c536a2"\n  integrity sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\n\ncolors@0.6.2:\n  version "0.6.2"\n  resolved "https://registry.yarnpkg.com/colors/-/colors-0.6.2.tgz#2423fe6678ac0c5dae8852e5d0e5be08c997abcc"\n  integrity sha1-JCP+ZnisDF2uiFLl0OW+CMmXq8w=\n\ncombine-source-map@^0.8.0, combine-source-map@~0.8.0:\n  version "0.8.0"\n  resolved "https://registry.yarnpkg.com/combine-source-map/-/combine-source-map-0.8.0.tgz#a58d0df042c186fcf822a8e8015f5450d2d79a8b"\n  integrity sha1-pY0N8ELBhvz4IqjoAV9UUNLXmos=\n  dependencies:\n    convert-source-map "~1.1.0"\n    inline-source-map "~0.6.0"\n    lodash.memoize "~3.0.3"\n    source-map "~0.5.3"\n\ncombined-stream@^1.0.8:\n  version "1.0.8"\n  resolved "https://registry.yarnpkg.com/combined-stream/-/combined-stream-1.0.8.tgz#c3d45a8b34fd730631a110a8a2520682b31d5a7f"\n  integrity sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\n  dependencies:\n    delayed-stream "~1.0.0"\n\ncombined-stream@~0.0.4:\n  version "0.0.7"\n  resolved "https://registry.yarnpkg.com/combined-stream/-/combined-stream-0.0.7.tgz#0137e657baa5a7541c57ac37ac5fc07d73b4dc1f"\n  integrity sha1-ATfmV7qlp1QcV6w3rF/AfXO03B8=\n  dependencies:\n    delayed-stream "0.0.5"\n\ncommander@1.3.2:\n  version "1.3.2"\n  resolved "https://registry.yarnpkg.com/commander/-/commander-1.3.2.tgz#8a8f30ec670a6fdd64af52f1914b907d79ead5b5"\n  integrity sha1-io8w7GcKb91kr1LxkUuQfXnq1bU=\n  dependencies:\n    keypress "0.1.x"\n\ncommander@2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/commander/-/commander-2.1.0.tgz#d121bbae860d9992a3d517ba96f56588e47c6781"\n  integrity sha1-0SG7roYNmZKj1Re6lvVliOR8Z4E=\n\ncommander@2.9.0:\n  version "2.9.0"\n  resolved "https://registry.yarnpkg.com/commander/-/commander-2.9.0.tgz#9c99094176e12240cb22d6c5146098400fe0f7d4"\n  integrity sha1-nJkJQXbhIkDLItbFFGCYQA/g99Q=\n  dependencies:\n    graceful-readlink ">= 1.0.0"\n\ncommander@^2.19.0, commander@^2.20.0:\n  version "2.20.3"\n  resolved "https://registry.yarnpkg.com/commander/-/commander-2.20.3.tgz#fd485e84c03eb4881c20722ba48035e8531aeb33"\n  integrity sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==\n\ncommander@^4.0.1:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/commander/-/commander-4.1.1.tgz#9fd602bd936294e9e9ef46a3f4d6964044b18068"\n  integrity sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\n\ncommander@^5.1.0:\n  version "5.1.0"\n  resolved "https://registry.yarnpkg.com/commander/-/commander-5.1.0.tgz#46abbd1652f8e059bddaef99bbdcb2ad9cf179ae"\n  integrity sha512-P0CysNDQ7rtVw4QIQtm+MRxV66vKFSvlsQvGYXZWR3qFU0jlMKHZZZgw8e+8DSah4UDKMqnknRDQz+xuQXQ/Zg==\n\ncommon-shakeify@^0.6.0:\n  version "0.6.2"\n  resolved "https://registry.yarnpkg.com/common-shakeify/-/common-shakeify-0.6.2.tgz#4663fe5ccda665d11ee4c77368b079a7df033d29"\n  integrity sha512-vxlXr26fqxm8ZJ0jh8MlvpeN6IbyUKqsVmgb4rAjDM/0f4nKebiHaAXpF/Mm86W9ENR5iSI7UOnUTylpVyplUA==\n  dependencies:\n    "@goto-bus-stop/common-shake" "^2.2.0"\n    convert-source-map "^1.5.1"\n    through2 "^2.0.3"\n    transform-ast "^2.4.3"\n    wrap-comment "^1.0.1"\n\ncommondir@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/commondir/-/commondir-1.0.1.tgz#ddd800da0c66127393cca5950ea968a3aaf1253b"\n  integrity sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=\n\ncompare-func@^1.3.1:\n  version "1.3.4"\n  resolved "https://registry.yarnpkg.com/compare-func/-/compare-func-1.3.4.tgz#6b07c4c5e8341119baf44578085bda0f4a823516"\n  integrity sha512-sq2sWtrqKPkEXAC8tEJA1+BqAH9GbFkGBtUOqrUX57VSfwp8xyktctk+uLoRy5eccTdxzDcVIztlYDpKs3Jv1Q==\n  dependencies:\n    array-ify "^1.0.0"\n    dot-prop "^3.0.0"\n\ncompare-func@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/compare-func/-/compare-func-2.0.0.tgz#fb65e75edbddfd2e568554e8b5b05fff7a51fcb3"\n  integrity sha512-zHig5N+tPWARooBnb0Zx1MFcdfpyJrfTJ3Y5L+IFvUm8rM74hHz66z0gw0x4tijh5CorKkKUCnW82R2vmpeCRA==\n  dependencies:\n    array-ify "^1.0.0"\n    dot-prop "^5.1.0"\n\ncompare-versions@^3.6.0:\n  version "3.6.0"\n  resolved "https://registry.yarnpkg.com/compare-versions/-/compare-versions-3.6.0.tgz#1a5689913685e5a87637b8d3ffca75514ec41d62"\n  integrity sha512-W6Af2Iw1z4CB7q4uU4hv646dW9GQuBM+YpC0UvUCWSD8w90SJjp+ujJuXaEMtAXBtSqGfMPuFOVn4/+FlaqfBA==\n\ncomponent-emitter@^1.2.1, component-emitter@^1.3.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/component-emitter/-/component-emitter-1.3.0.tgz#16e4070fba8ae29b679f2215853ee181ab2eabc0"\n  integrity sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==\n\ncompress-commons@~0.1.0:\n  version "0.1.6"\n  resolved "https://registry.yarnpkg.com/compress-commons/-/compress-commons-0.1.6.tgz#0c740870fde58cba516f0ac0c822e33a0b85dfa3"\n  integrity sha1-DHQIcP3ljLpRbwrAyCLjOguF36M=\n  dependencies:\n    buffer-crc32 "~0.2.1"\n    crc32-stream "~0.3.1"\n    readable-stream "~1.0.26"\n\ncompress-commons@~0.2.0:\n  version "0.2.9"\n  resolved "https://registry.yarnpkg.com/compress-commons/-/compress-commons-0.2.9.tgz#422d927430c01abd06cd455b6dfc04cb4cf8003c"\n  integrity sha1-Qi2SdDDAGr0GzUVbbfwEy0z4ADw=\n  dependencies:\n    buffer-crc32 "~0.2.1"\n    crc32-stream "~0.3.1"\n    node-int64 "~0.3.0"\n    readable-stream "~1.0.26"\n\ncompressible@~2.0.3:\n  version "2.0.18"\n  resolved "https://registry.yarnpkg.com/compressible/-/compressible-2.0.18.tgz#af53cca6b070d4c3c0750fbd77286a6d7cc46fba"\n  integrity sha512-AF3r7P5dWxL8MxyITRMlORQNaOA2IkAFaTr4k7BUumjPtRpGDTZpl0Pb1XCO6JeDCBdp126Cgs9sMxqSjgYyRg==\n  dependencies:\n    mime-db ">= 1.43.0 < 2"\n\ncompression@1.5.0:\n  version "1.5.0"\n  resolved "https://registry.yarnpkg.com/compression/-/compression-1.5.0.tgz#ccc1a54788da1b3ad7729c49f6a00b3ac9adf47f"\n  integrity sha1-zMGlR4jaGzrXcpxJ9qALOsmt9H8=\n  dependencies:\n    accepts "~1.2.9"\n    bytes "2.1.0"\n    compressible "~2.0.3"\n    debug "~2.2.0"\n    on-headers "~1.0.0"\n    vary "~1.0.0"\n\nconcat-map@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b"\n  integrity sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=\n\nconcat-stream@^1.5.0, concat-stream@^1.5.2, concat-stream@^1.6.0, concat-stream@^1.6.1, concat-stream@~1.6.0:\n  version "1.6.2"\n  resolved "https://registry.yarnpkg.com/concat-stream/-/concat-stream-1.6.2.tgz#904bdf194cd3122fc675c77fc4ac3d4ff0fd1a34"\n  integrity sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==\n  dependencies:\n    buffer-from "^1.0.0"\n    inherits "^2.0.3"\n    readable-stream "^2.2.2"\n    typedarray "^0.0.6"\n\nconcat-stream@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/concat-stream/-/concat-stream-2.0.0.tgz#414cf5af790a48c60ab9be4527d56d5e41133cb1"\n  integrity sha512-MWufYdFw53ccGjCA+Ol7XJYpAlW6/prSMzuPOTRnJGcGzuhLn4Scrz7qf6o8bROZ514ltazcIFJZevcfbo0x7A==\n  dependencies:\n    buffer-from "^1.0.0"\n    inherits "^2.0.3"\n    readable-stream "^3.0.2"\n    typedarray "^0.0.6"\n\nconcat-stream@~1.5.0, concat-stream@~1.5.1:\n  version "1.5.2"\n  resolved "https://registry.yarnpkg.com/concat-stream/-/concat-stream-1.5.2.tgz#708978624d856af41a5a741defdd261da752c266"\n  integrity sha1-cIl4Yk2FavQaWnQd790mHadSwmY=\n  dependencies:\n    inherits "~2.0.1"\n    readable-stream "~2.0.0"\n    typedarray "~0.0.5"\n\nconfigstore@^5.0.1:\n  version "5.0.1"\n  resolved "https://registry.yarnpkg.com/configstore/-/configstore-5.0.1.tgz#d365021b5df4b98cdd187d6a3b0e3f6a7cc5ed96"\n  integrity sha512-aMKprgk5YhBNyH25hj8wGt2+D52Sw1DRRIzqBwLp2Ya9mFmY8KPvvtvmna8SxVR9JMZ4kzMD68N22vlaRpkeFA==\n  dependencies:\n    dot-prop "^5.2.0"\n    graceful-fs "^4.1.2"\n    make-dir "^3.0.0"\n    unique-string "^2.0.0"\n    write-file-atomic "^3.0.0"\n    xdg-basedir "^4.0.0"\n\nconfusing-browser-globals@1.0.9:\n  version "1.0.9"\n  resolved "https://registry.yarnpkg.com/confusing-browser-globals/-/confusing-browser-globals-1.0.9.tgz#72bc13b483c0276801681871d4898516f8f54fdd"\n  integrity sha512-KbS1Y0jMtyPgIxjO7ZzMAuUpAKMt1SzCL9fsrKsX6b0zJPTaT0SiSPmewwVZg9UAO83HVIlEhZF84LIjZ0lmAw==\n\nconnect@2.12.0:\n  version "2.12.0"\n  resolved "https://registry.yarnpkg.com/connect/-/connect-2.12.0.tgz#31d8fa0dcacdf1908d822bd2923be8a2d2a7ed9a"\n  integrity sha1-Mdj6DcrN8ZCNgivSkjvootKn7Zo=\n  dependencies:\n    batch "0.5.0"\n    buffer-crc32 "0.2.1"\n    bytes "0.2.1"\n    cookie "0.1.0"\n    cookie-signature "1.0.1"\n    debug ">= 0.7.3 < 1"\n    fresh "0.2.0"\n    methods "0.1.0"\n    multiparty "2.2.0"\n    negotiator "0.3.0"\n    pause "0.0.1"\n    qs "0.6.6"\n    raw-body "1.1.2"\n    send "0.1.4"\n    uid2 "0.0.3"\n\nconsole-browserify@^1.1.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/console-browserify/-/console-browserify-1.2.0.tgz#67063cef57ceb6cf4993a2ab3a55840ae8c49336"\n  integrity sha512-ZMkYO/LkF17QvCPqM0gxw8yUzigAOZOSWSHg91FH6orS7vcEj5dVZTidN2fQ14yBSdg97RqhSNwLUXInd52OTA==\n\nconstants-browserify@^1.0.0, constants-browserify@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/constants-browserify/-/constants-browserify-1.0.0.tgz#c20b96d8c617748aaf1c16021760cd27fcb8cb75"\n  integrity sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U=\n\ncontains-path@^0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/contains-path/-/contains-path-0.1.0.tgz#fe8cf184ff6670b6baef01a9d4861a5cbec4120a"\n  integrity sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo=\n\ncontent-disposition@0.5.3:\n  version "0.5.3"\n  resolved "https://registry.yarnpkg.com/content-disposition/-/content-disposition-0.5.3.tgz#e130caf7e7279087c5616c2007d0485698984fbd"\n  integrity sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLrhT0qEYFcWng8z1z0g==\n  dependencies:\n    safe-buffer "5.1.2"\n\ncontent-type@^1.0.2, content-type@~1.0.1, content-type@~1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/content-type/-/content-type-1.0.4.tgz#e138cc75e040c727b1966fe5e5f8c9aee256fe3b"\n  integrity sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA==\n\nconventional-changelog-angular@^5.0.0:\n  version "5.0.11"\n  resolved "https://registry.yarnpkg.com/conventional-changelog-angular/-/conventional-changelog-angular-5.0.11.tgz#99a3ca16e4a5305e0c2c2fae3ef74fd7631fc3fb"\n  integrity sha512-nSLypht/1yEflhuTogC03i7DX7sOrXGsRn14g131Potqi6cbGbGEE9PSDEHKldabB6N76HiSyw9Ph+kLmC04Qw==\n  dependencies:\n    compare-func "^2.0.0"\n    q "^1.5.1"\n\nconventional-changelog-conventionalcommits@4.3.0:\n  version "4.3.0"\n  resolved "https://registry.yarnpkg.com/conventional-changelog-conventionalcommits/-/conventional-changelog-conventionalcommits-4.3.0.tgz#c4205a659f7ca9d7881f29ee78a4e7d6aeb8b3c2"\n  integrity sha512-oYHydvZKU+bS8LnGqTMlNrrd7769EsuEHKy4fh1oMdvvDi7fem8U+nvfresJ1IDB8K00Mn4LpiA/lR+7Gs6rgg==\n  dependencies:\n    compare-func "^1.3.1"\n    lodash "^4.17.15"\n    q "^1.5.1"\n\nconventional-commits-parser@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/conventional-commits-parser/-/conventional-commits-parser-3.1.0.tgz#10140673d5e7ef5572633791456c5d03b69e8be4"\n  integrity sha512-RSo5S0WIwXZiRxUGTPuYFbqvrR4vpJ1BDdTlthFgvHt5kEdnd1+pdvwWphWn57/oIl4V72NMmOocFqqJ8mFFhA==\n  dependencies:\n    JSONStream "^1.0.4"\n    is-text-path "^1.0.1"\n    lodash "^4.17.15"\n    meow "^7.0.0"\n    split2 "^2.0.0"\n    through2 "^3.0.0"\n    trim-off-newlines "^1.0.0"\n\nconvert-source-map@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-1.0.0.tgz#dbdcb69523d3af582f7b5c94b3c25ecf2f3b7355"\n  integrity sha1-29y2lSPTr1gve1yUs8Jezy87c1U=\n\nconvert-source-map@^1.1.0, convert-source-map@^1.1.1, convert-source-map@^1.5.0, convert-source-map@^1.5.1, convert-source-map@^1.7.0:\n  version "1.7.0"\n  resolved "https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-1.7.0.tgz#17a2cb882d7f77d3490585e2ce6c524424a3a442"\n  integrity sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2biUaEH5065UnMeR33oA==\n  dependencies:\n    safe-buffer "~5.1.1"\n\nconvert-source-map@~1.1.0:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/convert-source-map/-/convert-source-map-1.1.3.tgz#4829c877e9fe49b3161f3bf3673888e204699860"\n  integrity sha1-SCnId+n+SbMWHzvzZziI4gRpmGA=\n\ncookie-parser@^1.4.5:\n  version "1.4.5"\n  resolved "https://registry.yarnpkg.com/cookie-parser/-/cookie-parser-1.4.5.tgz#3e572d4b7c0c80f9c61daf604e4336831b5d1d49"\n  integrity sha512-f13bPUj/gG/5mDr+xLmSxxDsB9DQiTIfhJS/sqjrmfAWiAN+x2O4i/XguTL9yDZ+/IFDanJ+5x7hC4CXT9Tdzw==\n  dependencies:\n    cookie "0.4.0"\n    cookie-signature "1.0.6"\n\ncookie-signature@1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/cookie-signature/-/cookie-signature-1.0.1.tgz#44e072148af01e6e8e24afbf12690d68ae698ecb"\n  integrity sha1-ROByFIrwHm6OJK+/EmkNaK5pjss=\n\ncookie-signature@1.0.6:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/cookie-signature/-/cookie-signature-1.0.6.tgz#e303a882b342cc3ee8ca513a79999734dab3ae2c"\n  integrity sha1-4wOogrNCzD7oylE6eZmXNNqzriw=\n\ncookie@0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/cookie/-/cookie-0.1.0.tgz#90eb469ddce905c866de687efc43131d8801f9d0"\n  integrity sha1-kOtGndzpBchm3mh+/EMTHYgB+dA=\n\ncookie@0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/cookie/-/cookie-0.4.0.tgz#beb437e7022b3b6d49019d088665303ebe9c14ba"\n  integrity sha512-+Hp8fLp57wnUSt0tY0tHEXh4voZRDnoIrZPqlo3DPiI4y9lwg/jqx+1Om94/W6ZaPDOUbnjOt/99w66zk+l1Xg==\n\ncookiejar@1.3.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/cookiejar/-/cookiejar-1.3.0.tgz#dd00b35679021e99cbd4e855b9ad041913474765"\n  integrity sha1-3QCzVnkCHpnL1OhVua0EGRNHR2U=\n\ncookiejar@^2.1.2:\n  version "2.1.2"\n  resolved "https://registry.yarnpkg.com/cookiejar/-/cookiejar-2.1.2.tgz#dd8a235530752f988f9a0844f3fc589e3111125c"\n  integrity sha512-Mw+adcfzPxcPeI+0WlvRrr/3lGVO0bD75SxX6811cxSh1Wbxx7xZBGK1eVtDf6si8rg2lhnUjsVLMFMfbRIuwA==\n\ncopy-descriptor@^0.1.0:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/copy-descriptor/-/copy-descriptor-0.1.1.tgz#676f6eb3c39997c2ee1ac3a924fd6124748f578d"\n  integrity sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=\n\ncore-assert@^0.2.0:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/core-assert/-/core-assert-0.2.1.tgz#f85e2cf9bfed28f773cc8b3fa5c5b69bdc02fe3f"\n  integrity sha1-+F4s+b/tKPdzzIs/pcW2m9wC/j8=\n  dependencies:\n    buf-compare "^1.0.0"\n    is-error "^2.2.0"\n\ncore-js-compat@^3.6.2:\n  version "3.6.5"\n  resolved "https://registry.yarnpkg.com/core-js-compat/-/core-js-compat-3.6.5.tgz#2a51d9a4e25dfd6e690251aa81f99e3c05481f1c"\n  integrity sha512-7ItTKOhOZbznhXAQ2g/slGg1PJV5zDO/WdkTwi7UEOJmkvsE32PWvx6mKtDjiMpjnR2CNf6BAD6sSxIlv7ptng==\n  dependencies:\n    browserslist "^4.8.5"\n    semver "7.0.0"\n\ncore-js@^3.6.1, core-js@^3.6.5:\n  version "3.6.5"\n  resolved "https://registry.yarnpkg.com/core-js/-/core-js-3.6.5.tgz#7395dc273af37fb2e50e9bd3d9fe841285231d1a"\n  integrity sha512-vZVEEwZoIsI+vPEuoF9Iqf5H7/M3eeQqWlQnYa8FSKKePuYTf5MWnxb5SDAzCa60b3JBRS5g9b+Dq7b1y/RCrA==\n\ncore-util-is@~1.0.0:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/core-util-is/-/core-util-is-1.0.2.tgz#b5fd54220aa2bc5ab57aab7140c940754503c1a7"\n  integrity sha1-tf1UIgqivFq1eqtxQMlAdUUDwac=\n\ncosmiconfig@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/cosmiconfig/-/cosmiconfig-6.0.0.tgz#da4fee853c52f6b1e6935f41c1a2fc50bd4a9982"\n  integrity sha512-xb3ZL6+L8b9JLLCx3ZdoZy4+2ECphCMo2PwqgP1tlfVq6M6YReyzBJtvWWtbDSpNr9hn96pkCiZqUcFEc+54Qg==\n  dependencies:\n    "@types/parse-json" "^4.0.0"\n    import-fresh "^3.1.0"\n    parse-json "^5.0.0"\n    path-type "^4.0.0"\n    yaml "^1.7.2"\n\ncount-lines@^0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/count-lines/-/count-lines-0.1.2.tgz#e33493fb6860a82f7159d8237843fbfaefee5962"\n  integrity sha1-4zST+2hgqC9xWdgjeEP7+u/uWWI=\n\ncrc32-stream@~0.3.1:\n  version "0.3.4"\n  resolved "https://registry.yarnpkg.com/crc32-stream/-/crc32-stream-0.3.4.tgz#73bc25b45fac1db6632231a7bfce8927e9f06552"\n  integrity sha1-c7wltF+sHbZjIjGnv86JJ+nwZVI=\n  dependencies:\n    buffer-crc32 "~0.2.1"\n    readable-stream "~1.0.24"\n\ncreate-ecdh@^4.0.0:\n  version "4.0.4"\n  resolved "https://registry.yarnpkg.com/create-ecdh/-/create-ecdh-4.0.4.tgz#d6e7f4bffa66736085a0762fd3a632684dabcc4e"\n  integrity sha512-mf+TCx8wWc9VpuxfP2ht0iSISLZnt0JgWlrOKZiNqyUZWnjIaCIVNQArMHnCZKfEYRg6IM7A+NeJoN8gf/Ws0A==\n  dependencies:\n    bn.js "^4.1.0"\n    elliptic "^6.5.3"\n\ncreate-hash@^1.1.0, create-hash@^1.1.2, create-hash@^1.2.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/create-hash/-/create-hash-1.2.0.tgz#889078af11a63756bcfb59bd221996be3a9ef196"\n  integrity sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==\n  dependencies:\n    cipher-base "^1.0.1"\n    inherits "^2.0.1"\n    md5.js "^1.3.4"\n    ripemd160 "^2.0.1"\n    sha.js "^2.4.0"\n\ncreate-hmac@^1.1.0, create-hmac@^1.1.4, create-hmac@^1.1.7:\n  version "1.1.7"\n  resolved "https://registry.yarnpkg.com/create-hmac/-/create-hmac-1.1.7.tgz#69170c78b3ab957147b2b8b04572e47ead2243ff"\n  integrity sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==\n  dependencies:\n    cipher-base "^1.0.3"\n    create-hash "^1.1.0"\n    inherits "^2.0.1"\n    ripemd160 "^2.0.0"\n    safe-buffer "^5.0.1"\n    sha.js "^2.4.8"\n\ncross-env@^7.0.2:\n  version "7.0.2"\n  resolved "https://registry.yarnpkg.com/cross-env/-/cross-env-7.0.2.tgz#bd5ed31339a93a3418ac4f3ca9ca3403082ae5f9"\n  integrity sha512-KZP/bMEOJEDCkDQAyRhu3RL2ZO/SUVrxQVI0G3YEQ+OLbRA3c6zgixe8Mq8a/z7+HKlNEjo8oiLUs8iRijY2Rw==\n  dependencies:\n    cross-spawn "^7.0.1"\n\ncross-spawn@^7.0.0, cross-spawn@^7.0.1, cross-spawn@^7.0.2:\n  version "7.0.3"\n  resolved "https://registry.yarnpkg.com/cross-spawn/-/cross-spawn-7.0.3.tgz#f73a85b9d5d41d045551c177e2882d4ac85728a6"\n  integrity sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\n  dependencies:\n    path-key "^3.1.0"\n    shebang-command "^2.0.0"\n    which "^2.0.1"\n\ncryptiles@0.2.x:\n  version "0.2.2"\n  resolved "https://registry.yarnpkg.com/cryptiles/-/cryptiles-0.2.2.tgz#ed91ff1f17ad13d3748288594f8a48a0d26f325c"\n  integrity sha1-7ZH/HxetE9N0gohZT4pIoNJvMlw=\n  dependencies:\n    boom "0.4.x"\n\ncrypto-browserify@^3.0.0, crypto-browserify@^3.11.0:\n  version "3.12.0"\n  resolved "https://registry.yarnpkg.com/crypto-browserify/-/crypto-browserify-3.12.0.tgz#396cf9f3137f03e4b8e532c58f698254e00f80ec"\n  integrity sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==\n  dependencies:\n    browserify-cipher "^1.0.0"\n    browserify-sign "^4.0.0"\n    create-ecdh "^4.0.0"\n    create-hash "^1.1.0"\n    create-hmac "^1.1.0"\n    diffie-hellman "^5.0.0"\n    inherits "^2.0.1"\n    pbkdf2 "^3.0.3"\n    public-encrypt "^4.0.0"\n    randombytes "^2.0.0"\n    randomfill "^1.0.3"\n\ncrypto-random-string@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/crypto-random-string/-/crypto-random-string-2.0.0.tgz#ef2a7a966ec11083388369baa02ebead229b30d5"\n  integrity sha512-v1plID3y9r/lPhviJ1wrXpLeyUIGAZ2SHNYTEapm7/8A9nLPoyvVp3RK/EPFqn5kEznyWgYZNsRtYYIWbuG8KA==\n\nctype@0.5.3:\n  version "0.5.3"\n  resolved "https://registry.yarnpkg.com/ctype/-/ctype-0.5.3.tgz#82c18c2461f74114ef16c135224ad0b9144ca12f"\n  integrity sha1-gsGMJGH3QRTvFsE1IkrQuRRMoS8=\n\ncurrently-unhandled@^0.4.1:\n  version "0.4.1"\n  resolved "https://registry.yarnpkg.com/currently-unhandled/-/currently-unhandled-0.4.1.tgz#988df33feab191ef799a61369dd76c17adf957ea"\n  integrity sha1-mI3zP+qxke95mmE2nddsF635V+o=\n  dependencies:\n    array-find-index "^1.0.1"\n\nd@1, d@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/d/-/d-1.0.1.tgz#8698095372d58dbee346ffd0c7093f99f8f9eb5a"\n  integrity sha512-m62ShEObQ39CfralilEQRjH6oAMtNCV1xJyEx5LpRYUVN+EviphDgUc/F3hnYbADmkiNs67Y+3ylmlG7Lnu+FA==\n  dependencies:\n    es5-ext "^0.10.50"\n    type "^1.0.1"\n\ndargs@^7.0.0:\n  version "7.0.0"\n  resolved "https://registry.yarnpkg.com/dargs/-/dargs-7.0.0.tgz#04015c41de0bcb69ec84050f3d9be0caf8d6d5cc"\n  integrity sha512-2iy1EkLdlBzQGvbweYRFxmFath8+K7+AKB0TlhHWkNuH+TmovaMH/Wp7V7R4u7f4SnX3OgLsU9t1NI9ioDnUpg==\n\ndash-ast@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/dash-ast/-/dash-ast-1.0.0.tgz#12029ba5fb2f8aa6f0a861795b23c1b4b6c27d37"\n  integrity sha512-Vy4dx7gquTeMcQR/hDkYLGUnwVil6vk4FOOct+djUnHOUWt+zJPJAaRIXaAFkPXtJjvlY7o3rfRu0/3hpnwoUA==\n\ndash-ast@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/dash-ast/-/dash-ast-2.0.1.tgz#8d0fd2e601c59bf874cc22877ee7dd889f54dee8"\n  integrity sha512-5TXltWJGc+RdnabUGzhRae1TRq6m4gr+3K2wQX0is5/F2yS6MJXJvLyI3ErAnsAXuJoGqvfVD5icRgim07DrxQ==\n\ndebug@*, debug@4, debug@^4.0.0, debug@^4.0.1, debug@^4.1.0, debug@^4.1.1:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-4.1.1.tgz#3b72260255109c6b589cee050f1d516139664791"\n  integrity sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==\n  dependencies:\n    ms "^2.1.1"\n\ndebug@0.7.4, debug@~0.7.2, debug@~0.7.4:\n  version "0.7.4"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-0.7.4.tgz#06e1ea8082c2cb14e39806e22e2f6f757f92af39"\n  integrity sha1-BuHqgILCyxTjmAbiLi9vdX+Srzk=\n\ndebug@2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-2.1.0.tgz#33ab915659d8c2cc8a41443d94d6ebd37697ed21"\n  integrity sha1-M6uRVlnYwsyKQUQ9lNbr03aX7SE=\n  dependencies:\n    ms "0.6.2"\n\ndebug@2.6.8:\n  version "2.6.8"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-2.6.8.tgz#e731531ca2ede27d188222427da17821d68ff4fc"\n  integrity sha1-5zFTHKLt4n0YgiJCfaF4IdaP9Pw=\n  dependencies:\n    ms "2.0.0"\n\ndebug@2.6.9, debug@^2.2.0, debug@^2.3.3, debug@^2.6.9:\n  version "2.6.9"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-2.6.9.tgz#5d128515df134ff327e90a4c93f4e077a536341f"\n  integrity sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\n  dependencies:\n    ms "2.0.0"\n\n"debug@>= 0.7.3 < 1":\n  version "0.8.1"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-0.8.1.tgz#20ff4d26f5e422cb68a1bacbbb61039ad8c1c130"\n  integrity sha1-IP9NJvXkIstoobrLu2EDmtjBwTA=\n\ndebug@^3.2.6:\n  version "3.2.6"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-3.2.6.tgz#e83d17de16d8a7efb7717edbe5fb10135eee629b"\n  integrity sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==\n  dependencies:\n    ms "^2.1.1"\n\ndebug@~2.2.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/debug/-/debug-2.2.0.tgz#f87057e995b1a1f6ae6a4960664137bc56f039da"\n  integrity sha1-+HBX6ZWxofauaklgZkE3vFbwOdo=\n  dependencies:\n    ms "0.7.1"\n\ndecamelize-keys@^1.0.0, decamelize-keys@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/decamelize-keys/-/decamelize-keys-1.1.0.tgz#d171a87933252807eb3cb61dc1c1445d078df2d9"\n  integrity sha1-0XGoeTMlKAfrPLYdwcFEXQeN8tk=\n  dependencies:\n    decamelize "^1.1.0"\n    map-obj "^1.0.0"\n\ndecamelize@^1.1.0, decamelize@^1.2.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/decamelize/-/decamelize-1.2.0.tgz#f6534d15148269b20352e7bee26f501f9a191290"\n  integrity sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=\n\ndecode-uri-component@^0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/decode-uri-component/-/decode-uri-component-0.2.0.tgz#eb3913333458775cb84cd1a1fae062106bb87545"\n  integrity sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=\n\ndecompress-response@^3.3.0:\n  version "3.3.0"\n  resolved "https://registry.yarnpkg.com/decompress-response/-/decompress-response-3.3.0.tgz#80a4dd323748384bfa248083622aedec982adff3"\n  integrity sha1-gKTdMjdIOEv6JICDYirt7Jgq3/M=\n  dependencies:\n    mimic-response "^1.0.0"\n\ndedent@^0.7.0:\n  version "0.7.0"\n  resolved "https://registry.yarnpkg.com/dedent/-/dedent-0.7.0.tgz#2495ddbaf6eb874abb0e1be9df22d2e5a544326c"\n  integrity sha1-JJXduvbrh0q7Dhvp3yLS5aVEMmw=\n\ndeep-equal@^1.0.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/deep-equal/-/deep-equal-1.1.1.tgz#b5c98c942ceffaf7cb051e24e1434a25a2e6076a"\n  integrity sha512-yd9c5AdiqVcR+JjcwUQb9DkhJc8ngNr0MahEBGvDiJw8puWab2yZlh+nkasOnZP+EGTAP6rRp2JzJhJZzvNF8g==\n  dependencies:\n    is-arguments "^1.0.4"\n    is-date-object "^1.0.1"\n    is-regex "^1.0.4"\n    object-is "^1.0.1"\n    object-keys "^1.1.1"\n    regexp.prototype.flags "^1.2.0"\n\ndeep-extend@^0.6.0:\n  version "0.6.0"\n  resolved "https://registry.yarnpkg.com/deep-extend/-/deep-extend-0.6.0.tgz#c4fa7c95404a17a9c3e8ca7e1537312b736330ac"\n  integrity sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==\n\ndeep-is@^0.1.3, deep-is@~0.1.3:\n  version "0.1.3"\n  resolved "https://registry.yarnpkg.com/deep-is/-/deep-is-0.1.3.tgz#b369d6fb5dbc13eecf524f91b070feedc357cf34"\n  integrity sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=\n\ndeep-strict-equal@^0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/deep-strict-equal/-/deep-strict-equal-0.2.0.tgz#4a078147a8ab57f6a0d4f5547243cd22f44eb4e4"\n  integrity sha1-SgeBR6irV/ag1PVUckPNIvROtOQ=\n  dependencies:\n    core-assert "^0.2.0"\n\ndefault-require-extensions@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/default-require-extensions/-/default-require-extensions-3.0.0.tgz#e03f93aac9b2b6443fc52e5e4a37b3ad9ad8df96"\n  integrity sha512-ek6DpXq/SCpvjhpFsLFRVtIxJCRw6fUR42lYMVZuUMK7n8eMz4Uh5clckdBjEpLhn/gEBZo7hDJnJcwdKLKQjg==\n  dependencies:\n    strip-bom "^4.0.0"\n\ndefer-to-connect@^1.0.1:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/defer-to-connect/-/defer-to-connect-1.1.3.tgz#331ae050c08dcf789f8c83a7b81f0ed94f4ac591"\n  integrity sha512-0ISdNousHvZT2EiFlZeZAHBUvSxmKswVCEf8hW7KWgG4a8MVEu/3Vb6uWYozkjylyCxe0JBIiRB1jV45S70WVQ==\n\ndefine-properties@^1.1.2, define-properties@^1.1.3:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/define-properties/-/define-properties-1.1.3.tgz#cf88da6cbee26fe6db7094f61d870cbd84cee9f1"\n  integrity sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==\n  dependencies:\n    object-keys "^1.0.12"\n\ndefine-property@^0.2.5:\n  version "0.2.5"\n  resolved "https://registry.yarnpkg.com/define-property/-/define-property-0.2.5.tgz#c35b1ef918ec3c990f9a5bc57be04aacec5c8116"\n  integrity sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=\n  dependencies:\n    is-descriptor "^0.1.0"\n\ndefine-property@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/define-property/-/define-property-1.0.0.tgz#769ebaaf3f4a63aad3af9e8d304c9bbe79bfb0e6"\n  integrity sha1-dp66rz9KY6rTr56NMEybvnm/sOY=\n  dependencies:\n    is-descriptor "^1.0.0"\n\ndefine-property@^2.0.2:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/define-property/-/define-property-2.0.2.tgz#d459689e8d654ba77e02a817f8710d702cb16e9d"\n  integrity sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==\n  dependencies:\n    is-descriptor "^1.0.2"\n    isobject "^3.0.1"\n\ndefined@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/defined/-/defined-1.0.0.tgz#c98d9bcef75674188e110969151199e39b1fa693"\n  integrity sha1-yY2bzvdWdBiOEQlpFRGZ45sfppM=\n\ndelayed-stream@0.0.5:\n  version "0.0.5"\n  resolved "https://registry.yarnpkg.com/delayed-stream/-/delayed-stream-0.0.5.tgz#d4b1f43a93e8296dfe02694f4680bc37a313c73f"\n  integrity sha1-1LH0OpPoKW3+AmlPRoC8N6MTxz8=\n\ndelayed-stream@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/delayed-stream/-/delayed-stream-1.0.0.tgz#df3ae199acadfb7d440aaae0b29e2272b24ec619"\n  integrity sha1-3zrhmayt+31ECqrgsp4icrJOxhk=\n\ndepd@~1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/depd/-/depd-1.0.1.tgz#80aec64c9d6d97e65cc2a9caa93c0aa6abf73aaa"\n  integrity sha1-gK7GTJ1tl+ZcwqnKqTwKpqv3Oqo=\n\ndepd@~1.1.2:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/depd/-/depd-1.1.2.tgz#9bcd52e14c097763e749b274c4346ed2e560b5a9"\n  integrity sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak=\n\ndepd@~2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/depd/-/depd-2.0.0.tgz#b696163cc757560d09cf22cc8fad1571b79e76df"\n  integrity sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\n\ndeps-sort@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/deps-sort/-/deps-sort-2.0.1.tgz#9dfdc876d2bcec3386b6829ac52162cda9fa208d"\n  integrity sha512-1orqXQr5po+3KI6kQb9A4jnXT1PBwggGl2d7Sq2xsnOeI9GPcE/tGcF9UiSZtZBM7MukY4cAh7MemS6tZYipfw==\n  dependencies:\n    JSONStream "^1.0.3"\n    shasum-object "^1.0.0"\n    subarg "^1.0.0"\n    through2 "^2.0.0"\n\ndes.js@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/des.js/-/des.js-1.0.1.tgz#5382142e1bdc53f85d86d53e5f4aa7deb91e0843"\n  integrity sha512-Q0I4pfFrv2VPd34/vfLrFOoRmlYj3OV50i7fskps1jZWK1kApMWWT9G6RRUeYedLcBDIhnSDaUvJMb3AhUlaEA==\n  dependencies:\n    inherits "^2.0.1"\n    minimalistic-assert "^1.0.0"\n\ndestroy@~1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/destroy/-/destroy-1.0.4.tgz#978857442c44749e4206613e37946205826abd80"\n  integrity sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA=\n\ndetective@^4.0.0:\n  version "4.7.1"\n  resolved "https://registry.yarnpkg.com/detective/-/detective-4.7.1.tgz#0eca7314338442febb6d65da54c10bb1c82b246e"\n  integrity sha512-H6PmeeUcZloWtdt4DAkFyzFL94arpHr3NOwwmVILFiy+9Qd4JTxxXrzfyGk/lmct2qVGBwTSwSXagqu2BxmWig==\n  dependencies:\n    acorn "^5.2.1"\n    defined "^1.0.0"\n\ndetective@^5.2.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/detective/-/detective-5.2.0.tgz#feb2a77e85b904ecdea459ad897cc90a99bd2a7b"\n  integrity sha512-6SsIx+nUUbuK0EthKjv0zrdnajCCXVYGmbYYiYjFVpzcjwEs/JMDZ8tPRG29J/HhN56t3GJp2cGSWDRjjot8Pg==\n  dependencies:\n    acorn-node "^1.6.1"\n    defined "^1.0.0"\n    minimist "^1.1.1"\n\ndicer@0.2.5:\n  version "0.2.5"\n  resolved "https://registry.yarnpkg.com/dicer/-/dicer-0.2.5.tgz#5996c086bb33218c812c090bddc09cd12facb70f"\n  integrity sha1-WZbAhrszIYyBLAkL3cCc0S+stw8=\n  dependencies:\n    readable-stream "1.1.x"\n    streamsearch "0.1.2"\n\ndiff@3.2.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/diff/-/diff-3.2.0.tgz#c9ce393a4b7cbd0b058a725c93df299027868ff9"\n  integrity sha1-yc45Okt8vQsFinJck98pkCeGj/k=\n\ndiffie-hellman@^5.0.0:\n  version "5.0.3"\n  resolved "https://registry.yarnpkg.com/diffie-hellman/-/diffie-hellman-5.0.3.tgz#40e8ee98f55a2149607146921c63e1ae5f3d2875"\n  integrity sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==\n  dependencies:\n    bn.js "^4.1.0"\n    miller-rabin "^4.0.0"\n    randombytes "^2.0.0"\n\ndir-glob@^2.2.2:\n  version "2.2.2"\n  resolved "https://registry.yarnpkg.com/dir-glob/-/dir-glob-2.2.2.tgz#fa09f0694153c8918b18ba0deafae94769fc50c4"\n  integrity sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==\n  dependencies:\n    path-type "^3.0.0"\n\ndoctrine@1.5.0:\n  version "1.5.0"\n  resolved "https://registry.yarnpkg.com/doctrine/-/doctrine-1.5.0.tgz#379dce730f6166f76cefa4e6707a159b02c5a6fa"\n  integrity sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=\n  dependencies:\n    esutils "^2.0.2"\n    isarray "^1.0.0"\n\ndoctrine@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/doctrine/-/doctrine-3.0.0.tgz#addebead72a6574db783639dc87a121773973961"\n  integrity sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==\n  dependencies:\n    esutils "^2.0.2"\n\ndomain-browser@^1.1.1, domain-browser@^1.2.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/domain-browser/-/domain-browser-1.2.0.tgz#3d31f50191a6749dd1375a7f522e823d42e54eda"\n  integrity sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA==\n\ndomain-browser@~1.1.0:\n  version "1.1.7"\n  resolved "https://registry.yarnpkg.com/domain-browser/-/domain-browser-1.1.7.tgz#867aa4b093faa05f1de08c06f4d7b21fdf8698bc"\n  integrity sha1-hnqksJP6oF8d4IwG9NeyH9+GmLw=\n\ndot-prop@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/dot-prop/-/dot-prop-3.0.0.tgz#1b708af094a49c9a0e7dbcad790aba539dac1177"\n  integrity sha1-G3CK8JSknJoOfbyteQq6U52sEXc=\n  dependencies:\n    is-obj "^1.0.0"\n\ndot-prop@^5.1.0, dot-prop@^5.2.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/dot-prop/-/dot-prop-5.2.0.tgz#c34ecc29556dc45f1f4c22697b6f4904e0cc4fcb"\n  integrity sha512-uEUyaDKoSQ1M4Oq8l45hSE26SnTxL6snNnqvK/VWx5wJhmff5z0FUVJDKDanor/6w3kzE3i7XZOk+7wC0EXr1A==\n  dependencies:\n    is-obj "^2.0.0"\n\nduplexer2@^0.1.2, duplexer2@~0.1.0, duplexer2@~0.1.2:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/duplexer2/-/duplexer2-0.1.4.tgz#8b12dab878c0d69e3e7891051662a32fc6bddcc1"\n  integrity sha1-ixLauHjA1p4+eJEFFmKjL8a93ME=\n  dependencies:\n    readable-stream "^2.0.2"\n\nduplexer3@^0.1.4:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/duplexer3/-/duplexer3-0.1.4.tgz#ee01dd1cac0ed3cbc7fdbea37dc0a8f1ce002ce2"\n  integrity sha1-7gHdHKwO08vH/b6jfcCo8c4ALOI=\n\nduplexer@~0.1.1:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/duplexer/-/duplexer-0.1.1.tgz#ace6ff808c1ce66b57d1ebf97977acb02334cfc1"\n  integrity sha1-rOb/gIwc5mtX0ev5eXessCM0z8E=\n\nduplexify@^4.1.1:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/duplexify/-/duplexify-4.1.1.tgz#7027dc374f157b122a8ae08c2d3ea4d2d953aa61"\n  integrity sha512-DY3xVEmVHTv1wSzKNbwoU6nVjzI369Y6sPoqfYr0/xlx3IdX2n94xIszTcjPO8W8ZIv0Wb0PXNcjuZyT4wiICA==\n  dependencies:\n    end-of-stream "^1.4.1"\n    inherits "^2.0.3"\n    readable-stream "^3.1.1"\n    stream-shift "^1.0.0"\n\nee-first@1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/ee-first/-/ee-first-1.1.0.tgz#6a0d7c6221e490feefd92ec3f441c9ce8cd097f4"\n  integrity sha1-ag18YiHkkP7v2S7D9EHJzozQl/Q=\n\nee-first@1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/ee-first/-/ee-first-1.1.1.tgz#590c61156b0ae2f4f0255732a158b266bc56b21d"\n  integrity sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0=\n\nelectron-to-chromium@^1.3.523:\n  version "1.3.526"\n  resolved "https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.3.526.tgz#0e004899edf75afc172cce1b8189aac5dca646aa"\n  integrity sha512-HiroW5ZbGwgT8kCnoEO8qnGjoTPzJxduvV/Vv/wH63eo2N6Zj3xT5fmmaSPAPUM05iN9/5fIEkIg3owTtV6QZg==\n\nelliptic@^6.5.3:\n  version "6.5.3"\n  resolved "https://registry.yarnpkg.com/elliptic/-/elliptic-6.5.3.tgz#cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6"\n  integrity sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==\n  dependencies:\n    bn.js "^4.4.0"\n    brorand "^1.0.1"\n    hash.js "^1.0.0"\n    hmac-drbg "^1.0.0"\n    inherits "^2.0.1"\n    minimalistic-assert "^1.0.0"\n    minimalistic-crypto-utils "^1.0.0"\n\nemitter-component@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/emitter-component/-/emitter-component-1.0.0.tgz#f04dd18fc3dc3e9a74cbc0f310b088666e4c016f"\n  integrity sha1-8E3Rj8PcPpp0y8DzELCIZm5MAW8=\n\n"emoji-regex@>=6.0.0 <=6.1.1":\n  version "6.1.1"\n  resolved "https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-6.1.1.tgz#c6cd0ec1b0642e2a3c67a1137efc5e796da4f88e"\n  integrity sha1-xs0OwbBkLio8Z6ETfvxeeW2k+I4=\n\nemoji-regex@^7.0.1:\n  version "7.0.3"\n  resolved "https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-7.0.3.tgz#933a04052860c85e83c122479c4748a8e4c72156"\n  integrity sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA==\n\nemoji-regex@^8.0.0:\n  version "8.0.0"\n  resolved "https://registry.yarnpkg.com/emoji-regex/-/emoji-regex-8.0.0.tgz#e818fd69ce5ccfcb404594f842963bf53164cc37"\n  integrity sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\n\nencodeurl@~1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/encodeurl/-/encodeurl-1.0.2.tgz#ad3ff4c86ec2d029322f5a02c3a9a606c95b3f59"\n  integrity sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k=\n\nend-of-stream@^1.0.0, end-of-stream@^1.1.0, end-of-stream@^1.4.1:\n  version "1.4.4"\n  resolved "https://registry.yarnpkg.com/end-of-stream/-/end-of-stream-1.4.4.tgz#5ae64a5f45057baf3626ec14da0ca5e4b2431eb0"\n  integrity sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==\n  dependencies:\n    once "^1.4.0"\n\nenhance-visitors@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/enhance-visitors/-/enhance-visitors-1.0.0.tgz#aa945d05da465672a1ebd38fee2ed3da8518e95a"\n  integrity sha1-qpRdBdpGVnKh69OP7i7T2oUY6Vo=\n  dependencies:\n    lodash "^4.13.1"\n\nenhanced-resolve@^0.9.1:\n  version "0.9.1"\n  resolved "https://registry.yarnpkg.com/enhanced-resolve/-/enhanced-resolve-0.9.1.tgz#4d6e689b3725f86090927ccc86cd9f1635b89e2e"\n  integrity sha1-TW5omzcl+GCQknzMhs2fFjW4ni4=\n  dependencies:\n    graceful-fs "^4.1.2"\n    memory-fs "^0.2.0"\n    tapable "^0.1.8"\n\nenquirer@^2.3.5:\n  version "2.3.6"\n  resolved "https://registry.yarnpkg.com/enquirer/-/enquirer-2.3.6.tgz#2a7fe5dd634a1e4125a975ec994ff5456dc3734d"\n  integrity sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==\n  dependencies:\n    ansi-colors "^4.1.1"\n\nenv-editor@^0.4.0:\n  version "0.4.1"\n  resolved "https://registry.yarnpkg.com/env-editor/-/env-editor-0.4.1.tgz#77011e08ce45f46e404e8d996b465c684ca57502"\n  integrity sha512-suh+Vm00GnPQgXpmONTkcUT9LgBSL6sJrRnJxbykT0j+ONjzmIS+1U3ne467ArdZN/42/npp+GnhtwkLQ+vUjw==\n\nerror-ex@^1.2.0, error-ex@^1.3.1:\n  version "1.3.2"\n  resolved "https://registry.yarnpkg.com/error-ex/-/error-ex-1.3.2.tgz#b4ac40648107fdcdcfae242f428bea8a14d4f1bf"\n  integrity sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\n  dependencies:\n    is-arrayish "^0.2.1"\n\nerror-stack-parser@^1.3.6:\n  version "1.3.6"\n  resolved "https://registry.yarnpkg.com/error-stack-parser/-/error-stack-parser-1.3.6.tgz#e0e73b93e417138d1cd7c0b746b1a4a14854c292"\n  integrity sha1-4Oc7k+QXE40c18C3RrGkoUhUwpI=\n  dependencies:\n    stackframe "^0.3.1"\n\nes-abstract@^1.17.0, es-abstract@^1.17.0-next.1, es-abstract@^1.17.5:\n  version "1.17.6"\n  resolved "https://registry.yarnpkg.com/es-abstract/-/es-abstract-1.17.6.tgz#9142071707857b2cacc7b89ecb670316c3e2d52a"\n  integrity sha512-Fr89bON3WFyUi5EvAeI48QTWX0AyekGgLA8H+c+7fbfCkJwRWRMLd8CQedNEyJuoYYhmtEqY92pgte1FAhBlhw==\n  dependencies:\n    es-to-primitive "^1.2.1"\n    function-bind "^1.1.1"\n    has "^1.0.3"\n    has-symbols "^1.0.1"\n    is-callable "^1.2.0"\n    is-regex "^1.1.0"\n    object-inspect "^1.7.0"\n    object-keys "^1.1.1"\n    object.assign "^4.1.0"\n    string.prototype.trimend "^1.0.1"\n    string.prototype.trimstart "^1.0.1"\n\nes-to-primitive@^1.2.1:\n  version "1.2.1"\n  resolved "https://registry.yarnpkg.com/es-to-primitive/-/es-to-primitive-1.2.1.tgz#e55cd4c9cdc188bcefb03b366c736323fc5c898a"\n  integrity sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==\n  dependencies:\n    is-callable "^1.1.4"\n    is-date-object "^1.0.1"\n    is-symbol "^1.0.2"\n\nes5-ext@^0.10.35, es5-ext@^0.10.46, es5-ext@^0.10.50, es5-ext@~0.10.14:\n  version "0.10.53"\n  resolved "https://registry.yarnpkg.com/es5-ext/-/es5-ext-0.10.53.tgz#93c5a3acfdbef275220ad72644ad02ee18368de1"\n  integrity sha512-Xs2Stw6NiNHWypzRTY1MtaG/uJlwCk8kH81920ma8mvN8Xq1gsfhZvpkImLQArw8AHnv8MT2I45J3c0R8slE+Q==\n  dependencies:\n    es6-iterator "~2.0.3"\n    es6-symbol "~3.1.3"\n    next-tick "~1.0.0"\n\nes6-error@^4.0.1:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/es6-error/-/es6-error-4.1.1.tgz#9e3af407459deed47e9a91f9b885a84eb05c561d"\n  integrity sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==\n\nes6-iterator@^2.0.3, es6-iterator@~2.0.1, es6-iterator@~2.0.3:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/es6-iterator/-/es6-iterator-2.0.3.tgz#a7de889141a05a94b0854403b2d0a0fbfa98f3b7"\n  integrity sha1-p96IkUGgWpSwhUQDstCg+/qY87c=\n  dependencies:\n    d "1"\n    es5-ext "^0.10.35"\n    es6-symbol "^3.1.1"\n\nes6-map@^0.1.3, es6-map@^0.1.5:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/es6-map/-/es6-map-0.1.5.tgz#9136e0503dcc06a301690f0bb14ff4e364e949f0"\n  integrity sha1-kTbgUD3MBqMBaQ8LsU/042TpSfA=\n  dependencies:\n    d "1"\n    es5-ext "~0.10.14"\n    es6-iterator "~2.0.1"\n    es6-set "~0.1.5"\n    es6-symbol "~3.1.1"\n    event-emitter "~0.3.5"\n\nes6-set@^0.1.5, es6-set@~0.1.5:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/es6-set/-/es6-set-0.1.5.tgz#d2b3ec5d4d800ced818db538d28974db0a73ccb1"\n  integrity sha1-0rPsXU2ADO2BjbU40ol02wpzzLE=\n  dependencies:\n    d "1"\n    es5-ext "~0.10.14"\n    es6-iterator "~2.0.1"\n    es6-symbol "3.1.1"\n    event-emitter "~0.3.5"\n\nes6-symbol@3.1.1:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/es6-symbol/-/es6-symbol-3.1.1.tgz#bf00ef4fdab6ba1b46ecb7b629b4c7ed5715cc77"\n  integrity sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=\n  dependencies:\n    d "1"\n    es5-ext "~0.10.14"\n\nes6-symbol@^3.1.1, es6-symbol@~3.1.1, es6-symbol@~3.1.3:\n  version "3.1.3"\n  resolved "https://registry.yarnpkg.com/es6-symbol/-/es6-symbol-3.1.3.tgz#bad5d3c1bcdac28269f4cb331e431c78ac705d18"\n  integrity sha512-NJ6Yn3FuDinBaBRWl/q5X/s4koRHBrgKAu+yGI6JCBeiu3qrcbJhwT2GeR/EXVfylRk8dpQVJoLEFhK+Mu31NA==\n  dependencies:\n    d "^1.0.1"\n    ext "^1.1.2"\n\nes6-weak-map@^2.0.1:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/es6-weak-map/-/es6-weak-map-2.0.3.tgz#b6da1f16cc2cc0d9be43e6bdbfc5e7dfcdf31d53"\n  integrity sha512-p5um32HOTO1kP+w7PRnB+5lQ43Z6muuMuIMffvDN8ZB4GcnjLBV6zGStpbASIMk4DCAvEaamhe2zhyCb/QXXsA==\n  dependencies:\n    d "1"\n    es5-ext "^0.10.46"\n    es6-iterator "^2.0.3"\n    es6-symbol "^3.1.1"\n\nescalade@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/escalade/-/escalade-3.0.2.tgz#6a580d70edb87880f22b4c91d0d56078df6962c4"\n  integrity sha512-gPYAU37hYCUhW5euPeR+Y74F7BL+IBsV93j5cvGriSaD1aG6MGsqsV1yamRdrWrb2j3aiZvb0X+UBOWpx3JWtQ==\n\nescape-goat@^2.0.0:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/escape-goat/-/escape-goat-2.1.1.tgz#1b2dc77003676c457ec760b2dc68edb648188675"\n  integrity sha512-8/uIhbG12Csjy2JEW7D9pHbreaVaS/OpN3ycnyvElTdwM5n6GY6W6e2IPemfvGZeUMqZ9A/3GqIZMgKnBhAw/Q==\n\nescape-html@~1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988"\n  integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\n\nescape-string-regexp@1.0.5, escape-string-regexp@^1.0.2, escape-string-regexp@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4"\n  integrity sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=\n\nescodegen@1.3.x:\n  version "1.3.3"\n  resolved "https://registry.yarnpkg.com/escodegen/-/escodegen-1.3.3.tgz#f024016f5a88e046fd12005055e939802e6c5f23"\n  integrity sha1-8CQBb1qI4Eb9EgBQVek5gC5sXyM=\n  dependencies:\n    esprima "~1.1.1"\n    estraverse "~1.5.0"\n    esutils "~1.0.0"\n  optionalDependencies:\n    source-map "~0.1.33"\n\nescodegen@1.8.x:\n  version "1.8.1"\n  resolved "https://registry.yarnpkg.com/escodegen/-/escodegen-1.8.1.tgz#5a5b53af4693110bebb0867aa3430dd3b70a1018"\n  integrity sha1-WltTr0aTEQvrsIZ6o0MN07cKEBg=\n  dependencies:\n    esprima "^2.7.1"\n    estraverse "^1.9.1"\n    esutils "^2.0.2"\n    optionator "^0.8.1"\n  optionalDependencies:\n    source-map "~0.2.0"\n\nescodegen@^1.6.1:\n  version "1.14.3"\n  resolved "https://registry.yarnpkg.com/escodegen/-/escodegen-1.14.3.tgz#4e7b81fba61581dc97582ed78cab7f0e8d63f503"\n  integrity sha512-qFcX0XJkdg+PB3xjZZG/wKSuT1PnQWx57+TVSjIMmILd2yC/6ByYElPwJnslDsuWuSAp4AwJGumarAAmJch5Kw==\n  dependencies:\n    esprima "^4.0.1"\n    estraverse "^4.2.0"\n    esutils "^2.0.2"\n    optionator "^0.8.1"\n  optionalDependencies:\n    source-map "~0.6.1"\n\nescope@^3.6.0:\n  version "3.6.0"\n  resolved "https://registry.yarnpkg.com/escope/-/escope-3.6.0.tgz#e01975e812781a163a6dadfdd80398dc64c889c3"\n  integrity sha1-4Bl16BJ4GhY6ba392AOY3GTIicM=\n  dependencies:\n    es6-map "^0.1.3"\n    es6-weak-map "^2.0.1"\n    esrecurse "^4.1.0"\n    estraverse "^4.1.1"\n\neslint-ast-utils@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/eslint-ast-utils/-/eslint-ast-utils-1.1.0.tgz#3d58ba557801cfb1c941d68131ee9f8c34bd1586"\n  integrity sha512-otzzTim2/1+lVrlH19EfQQJEhVJSu0zOb9ygb3iapN6UlyaDtyRq4b5U1FuW0v1lRa9Fp/GJyHkSwm6NqABgCA==\n  dependencies:\n    lodash.get "^4.4.2"\n    lodash.zip "^4.2.0"\n\neslint-config-prettier@^6.11.0:\n  version "6.11.0"\n  resolved "https://registry.yarnpkg.com/eslint-config-prettier/-/eslint-config-prettier-6.11.0.tgz#f6d2238c1290d01c859a8b5c1f7d352a0b0da8b1"\n  integrity sha512-oB8cpLWSAjOVFEJhhyMZh6NOEOtBVziaqdDQ86+qhDHFbZXoRTM7pNSvFRfW/W/L/LrQ38C99J5CGuRBBzBsdA==\n  dependencies:\n    get-stdin "^6.0.0"\n\neslint-config-xo-lass@^1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/eslint-config-xo-lass/-/eslint-config-xo-lass-1.0.3.tgz#2259fed4d18ef18ec00560360358aba538fb5ac6"\n  integrity sha512-hnry5qIMaVXAIt0QJwoTcRbny8E9x7K1GKW790ZLnAOWS42PK5BL5POpIG/NuumjwL/J5ThVgZpeVn8tFevhzw==\n\neslint-config-xo-typescript@^0.31.0:\n  version "0.31.0"\n  resolved "https://registry.yarnpkg.com/eslint-config-xo-typescript/-/eslint-config-xo-typescript-0.31.0.tgz#384b57f30732a5f2d374b5a6c466eee3b6b8db50"\n  integrity sha512-zxfUdKscsdrZTI5Uz9ZqAAR+W6fuH+DiQnTRRJAwLZaKJemT3hzH0DtIxNhB9t5fxKMwZYNYw2lvW4aWrSMbag==\n\neslint-config-xo@^0.30.0:\n  version "0.30.0"\n  resolved "https://registry.yarnpkg.com/eslint-config-xo/-/eslint-config-xo-0.30.0.tgz#a5d731e8e8ac9b65a0581dcc46be0bd84d837e32"\n  integrity sha512-0C+Hl1Mfrbh+LMc2A2v2BabI+n0MoVHYyGJOJoWped/Tfh/OoyZ7gLyed5vLqVR4czjR8Zi7DGW2S1nTGKUY4w==\n  dependencies:\n    confusing-browser-globals "1.0.9"\n\neslint-formatter-pretty@^3.0.1:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/eslint-formatter-pretty/-/eslint-formatter-pretty-3.0.1.tgz#97603fcb2ddcc6dd60662d6e9f327a734cc55a54"\n  integrity sha512-hhQ/ASD4i6BAEalcEfUxesFtJFftT8xFsimCzUpPbTzygJ4J17yCGcJ3XKCB2g7XTJTv0pi7rVTadfHVmtfSRA==\n  dependencies:\n    ansi-escapes "^4.2.1"\n    chalk "^3.0.0"\n    eslint-rule-docs "^1.1.5"\n    log-symbols "^3.0.0"\n    plur "^3.0.1"\n    string-width "^4.2.0"\n    supports-hyperlinks "^2.0.0"\n\neslint-import-resolver-node@^0.3.3:\n  version "0.3.4"\n  resolved "https://registry.yarnpkg.com/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.4.tgz#85ffa81942c25012d8231096ddf679c03042c717"\n  integrity sha512-ogtf+5AB/O+nM6DIeBUNr2fuT7ot9Qg/1harBfBtaP13ekEWFQEEMP94BCB7zaNW3gyY+8SHYF00rnqYwXKWOA==\n  dependencies:\n    debug "^2.6.9"\n    resolve "^1.13.1"\n\neslint-import-resolver-webpack@^0.12.1:\n  version "0.12.2"\n  resolved "https://registry.yarnpkg.com/eslint-import-resolver-webpack/-/eslint-import-resolver-webpack-0.12.2.tgz#769e86cd0c752a1536c19855ebd90aa14ce384ee"\n  integrity sha512-7Jnm4YAoNNkvqPaZkKdIHsKGmv8/uNnYC5QsXkiSodvX4XEEfH2AKOna98FK52fCDXm3q4HzuX+7pRMKkJ64EQ==\n  dependencies:\n    array-find "^1.0.0"\n    debug "^2.6.9"\n    enhanced-resolve "^0.9.1"\n    find-root "^1.1.0"\n    has "^1.0.3"\n    interpret "^1.2.0"\n    lodash "^4.17.15"\n    node-libs-browser "^1.0.0 || ^2.0.0"\n    resolve "^1.13.1"\n    semver "^5.7.1"\n\neslint-module-utils@^2.6.0:\n  version "2.6.0"\n  resolved "https://registry.yarnpkg.com/eslint-module-utils/-/eslint-module-utils-2.6.0.tgz#579ebd094f56af7797d19c9866c9c9486629bfa6"\n  integrity sha512-6j9xxegbqe8/kZY8cYpcp0xhbK0EgJlg3g9mib3/miLaExuuwc3n5UEfSnU6hWMbT0FAYVvDbL9RrRgpUeQIvA==\n  dependencies:\n    debug "^2.6.9"\n    pkg-dir "^2.0.0"\n\neslint-plugin-ava@^10.3.0:\n  version "10.5.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-ava/-/eslint-plugin-ava-10.5.0.tgz#2dc55dd6fc5d1bdd6f7a9ff32c6f199ce2905e33"\n  integrity sha512-2I0Ze8ZtwbSlLdnzms4bsa6PxxOxGMIJ9d4yy7aRy3yc5zEO2wHJLic8l3Lrct73hb5ML+PLt5VRqvdV87xWdQ==\n  dependencies:\n    deep-strict-equal "^0.2.0"\n    enhance-visitors "^1.0.0"\n    espree "^7.1.0"\n    espurify "^2.0.1"\n    import-modules "^2.0.0"\n    micro-spelling-correcter "^1.1.1"\n    pkg-dir "^4.2.0"\n    resolve-from "^5.0.0"\n\neslint-plugin-compat@^3.8.0:\n  version "3.8.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-compat/-/eslint-plugin-compat-3.8.0.tgz#2348d6105e7e87b823ae3b97b349512a2a45a7f2"\n  integrity sha512-5CuWUSZXZkXLCQJBriEpndn/YWrvggDSHTpRJq++kR8GVcsWbTdp8Eh+nBA7JlrNi7ZJ/+kniOVXmn3bpnxuRA==\n  dependencies:\n    ast-metadata-inferer "^0.4.0"\n    browserslist "^4.12.2"\n    caniuse-db "^1.0.30001090"\n    core-js "^3.6.5"\n    find-up "^4.1.0"\n    lodash.memoize "4.1.2"\n    mdn-browser-compat-data "^1.0.28"\n    semver "7.3.2"\n\neslint-plugin-es@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-es/-/eslint-plugin-es-3.0.1.tgz#75a7cdfdccddc0589934aeeb384175f221c57893"\n  integrity sha512-GUmAsJaN4Fc7Gbtl8uOBlayo2DqhwWvEzykMHSCZHU3XdJ+NSzzZcVhXh3VxX5icqQ+oQdIEawXX8xkR3mIFmQ==\n  dependencies:\n    eslint-utils "^2.0.0"\n    regexpp "^3.0.0"\n\neslint-plugin-eslint-comments@^3.2.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-eslint-comments/-/eslint-plugin-eslint-comments-3.2.0.tgz#9e1cd7b4413526abb313933071d7aba05ca12ffa"\n  integrity sha512-0jkOl0hfojIHHmEHgmNdqv4fmh7300NdpA9FFpF7zaoLvB/QeXOGNLIo86oAveJFrfB1p05kC8hpEMHM8DwWVQ==\n  dependencies:\n    escape-string-regexp "^1.0.5"\n    ignore "^5.0.5"\n\neslint-plugin-import@^2.20.2:\n  version "2.22.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-import/-/eslint-plugin-import-2.22.0.tgz#92f7736fe1fde3e2de77623c838dd992ff5ffb7e"\n  integrity sha512-66Fpf1Ln6aIS5Gr/55ts19eUuoDhAbZgnr6UxK5hbDx6l/QgQgx61AePq+BV4PP2uXQFClgMVzep5zZ94qqsxg==\n  dependencies:\n    array-includes "^3.1.1"\n    array.prototype.flat "^1.2.3"\n    contains-path "^0.1.0"\n    debug "^2.6.9"\n    doctrine "1.5.0"\n    eslint-import-resolver-node "^0.3.3"\n    eslint-module-utils "^2.6.0"\n    has "^1.0.3"\n    minimatch "^3.0.4"\n    object.values "^1.1.1"\n    read-pkg-up "^2.0.0"\n    resolve "^1.17.0"\n    tsconfig-paths "^3.9.0"\n\neslint-plugin-no-use-extend-native@^0.5.0:\n  version "0.5.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-no-use-extend-native/-/eslint-plugin-no-use-extend-native-0.5.0.tgz#d6855e3a823a819b467cf7df56adca57de741bf9"\n  integrity sha512-dBNjs8hor8rJgeXLH4HTut5eD3RGWf9JUsadIfuL7UosVQ/dnvOKwxEcRrXrFxrMZ8llUVWT+hOimxJABsAUzQ==\n  dependencies:\n    is-get-set-prop "^1.0.0"\n    is-js-type "^2.0.0"\n    is-obj-prop "^1.0.0"\n    is-proto-prop "^2.0.0"\n\neslint-plugin-node@^11.1.0:\n  version "11.1.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-node/-/eslint-plugin-node-11.1.0.tgz#c95544416ee4ada26740a30474eefc5402dc671d"\n  integrity sha512-oUwtPJ1W0SKD0Tr+wqu92c5xuCeQqB3hSCHasn/ZgjFdA9iDGNkNf2Zi9ztY7X+hNuMib23LNGRm6+uN+KLE3g==\n  dependencies:\n    eslint-plugin-es "^3.0.0"\n    eslint-utils "^2.0.0"\n    ignore "^5.1.1"\n    minimatch "^3.0.4"\n    resolve "^1.10.1"\n    semver "^6.1.0"\n\neslint-plugin-prettier@^3.1.3:\n  version "3.1.4"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-prettier/-/eslint-plugin-prettier-3.1.4.tgz#168ab43154e2ea57db992a2cd097c828171f75c2"\n  integrity sha512-jZDa8z76klRqo+TdGDTFJSavwbnWK2ZpqGKNZ+VvweMW516pDUMmQ2koXvxEE4JhzNvTv+radye/bWGBmA6jmg==\n  dependencies:\n    prettier-linter-helpers "^1.0.0"\n\neslint-plugin-promise@^4.2.1:\n  version "4.2.1"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-promise/-/eslint-plugin-promise-4.2.1.tgz#845fd8b2260ad8f82564c1222fce44ad71d9418a"\n  integrity sha512-VoM09vT7bfA7D+upt+FjeBO5eHIJQBUWki1aPvB+vbNiHS3+oGIJGIeyBtKQTME6UPXXy3vV07OL1tHd3ANuDw==\n\neslint-plugin-unicorn@^20.1.0:\n  version "20.1.0"\n  resolved "https://registry.yarnpkg.com/eslint-plugin-unicorn/-/eslint-plugin-unicorn-20.1.0.tgz#a43f60ffc98406d72ec2a5fcc6dad24ba0192bc9"\n  integrity sha512-XQxLBJT/gnwyRR6cfYsIK1AdekQchAt5tmcsnldevGjgR2xoZsRUa5/i6e0seNHy2RoT57CkTnbVHwHF8No8LA==\n  dependencies:\n    ci-info "^2.0.0"\n    clean-regexp "^1.0.0"\n    eslint-ast-utils "^1.1.0"\n    eslint-template-visitor "^2.0.0"\n    eslint-utils "^2.0.0"\n    import-modules "^2.0.0"\n    lodash "^4.17.15"\n    pluralize "^8.0.0"\n    read-pkg-up "^7.0.1"\n    regexp-tree "^0.1.21"\n    reserved-words "^0.1.2"\n    safe-regex "^2.1.1"\n    semver "^7.3.2"\n\neslint-rule-docs@^1.1.5:\n  version "1.1.202"\n  resolved "https://registry.yarnpkg.com/eslint-rule-docs/-/eslint-rule-docs-1.1.202.tgz#352f62dd7a12648804c52d69d867ee58e28d3b71"\n  integrity sha512-/VFOQimsl7KBP8zBaey1EDJndALu/IRbK7NeWwaBSPmHsjcucLBYBLWyp5UfrN8uI4kKNgcaoSk7RuE9GGY7lw==\n\neslint-scope@^5.0.0, eslint-scope@^5.1.0:\n  version "5.1.0"\n  resolved "https://registry.yarnpkg.com/eslint-scope/-/eslint-scope-5.1.0.tgz#d0f971dfe59c69e0cada684b23d49dbf82600ce5"\n  integrity sha512-iiGRvtxWqgtx5m8EyQUJihBloE4EnYeGE/bz1wSPwJE6tZuJUtHlhqDM4Xj2ukE8Dyy1+HCZ4hE0fzIVMzb58w==\n  dependencies:\n    esrecurse "^4.1.0"\n    estraverse "^4.1.1"\n\neslint-template-visitor@^2.0.0:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/eslint-template-visitor/-/eslint-template-visitor-2.2.1.tgz#2dccb1ab28fa7429e56ba6dd0144def2d89bc2d6"\n  integrity sha512-q3SxoBXz0XjPGkUpwGVAwIwIPIxzCAJX1uwfVc8tW3v7u/zS7WXNH3I2Mu2MDz2NgSITAyKLRaQFPHu/iyKxDQ==\n  dependencies:\n    babel-eslint "^10.1.0"\n    eslint-visitor-keys "^1.3.0"\n    esquery "^1.3.1"\n    multimap "^1.1.0"\n\neslint-utils@^2.0.0, eslint-utils@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/eslint-utils/-/eslint-utils-2.1.0.tgz#d2de5e03424e707dc10c74068ddedae708741b27"\n  integrity sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj9JqgwkwbCYD0/V3Zg==\n  dependencies:\n    eslint-visitor-keys "^1.1.0"\n\neslint-visitor-keys@^1.0.0, eslint-visitor-keys@^1.1.0, eslint-visitor-keys@^1.3.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz#30ebd1ef7c2fdff01c3a4f151044af25fab0523e"\n  integrity sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==\n\neslint@^7.1.0, eslint@^7.6.0:\n  version "7.6.0"\n  resolved "https://registry.yarnpkg.com/eslint/-/eslint-7.6.0.tgz#522d67cfaea09724d96949c70e7a0550614d64d6"\n  integrity sha512-QlAManNtqr7sozWm5TF4wIH9gmUm2hE3vNRUvyoYAa4y1l5/jxD/PQStEjBMQtCqZmSep8UxrcecI60hOpe61w==\n  dependencies:\n    "@babel/code-frame" "^7.0.0"\n    ajv "^6.10.0"\n    chalk "^4.0.0"\n    cross-spawn "^7.0.2"\n    debug "^4.0.1"\n    doctrine "^3.0.0"\n    enquirer "^2.3.5"\n    eslint-scope "^5.1.0"\n    eslint-utils "^2.1.0"\n    eslint-visitor-keys "^1.3.0"\n    espree "^7.2.0"\n    esquery "^1.2.0"\n    esutils "^2.0.2"\n    file-entry-cache "^5.0.1"\n    functional-red-black-tree "^1.0.1"\n    glob-parent "^5.0.0"\n    globals "^12.1.0"\n    ignore "^4.0.6"\n    import-fresh "^3.0.0"\n    imurmurhash "^0.1.4"\n    is-glob "^4.0.0"\n    js-yaml "^3.13.1"\n    json-stable-stringify-without-jsonify "^1.0.1"\n    levn "^0.4.1"\n    lodash "^4.17.19"\n    minimatch "^3.0.4"\n    natural-compare "^1.4.0"\n    optionator "^0.9.1"\n    progress "^2.0.0"\n    regexpp "^3.1.0"\n    semver "^7.2.1"\n    strip-ansi "^6.0.0"\n    strip-json-comments "^3.1.0"\n    table "^5.2.3"\n    text-table "^0.2.0"\n    v8-compile-cache "^2.0.3"\n\nespree@^7.1.0, espree@^7.2.0:\n  version "7.2.0"\n  resolved "https://registry.yarnpkg.com/espree/-/espree-7.2.0.tgz#1c263d5b513dbad0ac30c4991b93ac354e948d69"\n  integrity sha512-H+cQ3+3JYRMEIOl87e7QdHX70ocly5iW4+dttuR8iYSPr/hXKFb+7dBsZ7+u1adC4VrnPlTkv0+OwuPnDop19g==\n  dependencies:\n    acorn "^7.3.1"\n    acorn-jsx "^5.2.0"\n    eslint-visitor-keys "^1.3.0"\n\nesprima@1.2.x:\n  version "1.2.5"\n  resolved "https://registry.yarnpkg.com/esprima/-/esprima-1.2.5.tgz#0993502feaf668138325756f30f9a51feeec11e9"\n  integrity sha1-CZNQL+r2aBODJXVvMPmlH+7sEek=\n\nesprima@2.7.x, esprima@^2.7.1:\n  version "2.7.3"\n  resolved "https://registry.yarnpkg.com/esprima/-/esprima-2.7.3.tgz#96e3b70d5779f6ad49cd032673d1c312767ba581"\n  integrity sha1-luO3DVd59q1JzQMmc9HDEnZ7pYE=\n\nesprima@^4.0.0, esprima@^4.0.1:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/esprima/-/esprima-4.0.1.tgz#13b04cdb3e6c5d19df91ab6987a8695619b0aa71"\n  integrity sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\n\nesprima@~1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/esprima/-/esprima-1.0.4.tgz#9f557e08fc3b4d26ece9dd34f8fbf476b62585ad"\n  integrity sha1-n1V+CPw7TSbs6d00+Pv0drYlha0=\n\nesprima@~1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/esprima/-/esprima-1.1.1.tgz#5b6f1547f4d102e670e140c509be6771d6aeb549"\n  integrity sha1-W28VR/TRAuZw4UDFCb5ncdautUk=\n\nespurify@^2.0.0, espurify@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/espurify/-/espurify-2.0.1.tgz#c25b3bb613863daa142edcca052370a1a459f41d"\n  integrity sha512-7w/dUrReI/QbJFHRwfomTlkQOXaB1NuCrBRn5Y26HXn5gvh18/19AgLbayVrNxXQfkckvgrJloWyvZDuJ7dhEA==\n\nesquery@^1.2.0, esquery@^1.3.1:\n  version "1.3.1"\n  resolved "https://registry.yarnpkg.com/esquery/-/esquery-1.3.1.tgz#b78b5828aa8e214e29fb74c4d5b752e1c033da57"\n  integrity sha512-olpvt9QG0vniUBZspVRN6lwB7hOZoTRtT+jzR+tS4ffYx2mzbw+z0XCOk44aaLYKApNX5nMm+E+P6o25ip/DHQ==\n  dependencies:\n    estraverse "^5.1.0"\n\nesrecurse@^4.1.0:\n  version "4.2.1"\n  resolved "https://registry.yarnpkg.com/esrecurse/-/esrecurse-4.2.1.tgz#007a3b9fdbc2b3bb87e4879ea19c92fdbd3942cf"\n  integrity sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==\n  dependencies:\n    estraverse "^4.1.0"\n\nestraverse@^1.9.1:\n  version "1.9.3"\n  resolved "https://registry.yarnpkg.com/estraverse/-/estraverse-1.9.3.tgz#af67f2dc922582415950926091a4005d29c9bb44"\n  integrity sha1-r2fy3JIlgkFZUJJgkaQAXSnJu0Q=\n\nestraverse@^4.0.0, estraverse@^4.1.0, estraverse@^4.1.1, estraverse@^4.2.0:\n  version "4.3.0"\n  resolved "https://registry.yarnpkg.com/estraverse/-/estraverse-4.3.0.tgz#398ad3f3c5a24948be7725e83d11a7de28cdbd1d"\n  integrity sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==\n\nestraverse@^5.1.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/estraverse/-/estraverse-5.2.0.tgz#307df42547e6cc7324d3cf03c155d5cdb8c53880"\n  integrity sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==\n\nestraverse@~1.3.0:\n  version "1.3.2"\n  resolved "https://registry.yarnpkg.com/estraverse/-/estraverse-1.3.2.tgz#37c2b893ef13d723f276d878d60d8535152a6c42"\n  integrity sha1-N8K4k+8T1yPydth41g2FNRUqbEI=\n\nestraverse@~1.5.0:\n  version "1.5.1"\n  resolved "https://registry.yarnpkg.com/estraverse/-/estraverse-1.5.1.tgz#867a3e8e58a9f84618afb6c2ddbcd916b7cbaf71"\n  integrity sha1-hno+jlip+EYYr7bC3bzZFrfLr3E=\n\nestree-is-function@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/estree-is-function/-/estree-is-function-1.0.0.tgz#c0adc29806d7f18a74db7df0f3b2666702e37ad2"\n  integrity sha512-nSCWn1jkSq2QAtkaVLJZY2ezwcFO161HVc174zL1KPW3RJ+O6C3eJb8Nx7OXzvhoEv+nLgSR1g71oWUHUDTrJA==\n\nestree-is-identifier@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/estree-is-identifier/-/estree-is-identifier-1.0.0.tgz#50433fa88d3d00a1bf7a1d7df6e4e67f36aa89f7"\n  integrity sha512-2BDRGrkQJV/NhCAmmE33A35WAaxq3WQaGHgQuD//7orGWfpFqj8Srkwvx0TH+20yIdOF1yMQwi8anv5ISec2AQ==\n\nestree-is-member-expression@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/estree-is-member-expression/-/estree-is-member-expression-1.0.0.tgz#e724721e0a14949d363915fd71448eaa6312f590"\n  integrity sha512-Ec+X44CapIGExvSZN+pGkmr5p7HwUVQoPQSd458Lqwvaf4/61k/invHSh4BYK8OXnCkfEhWuIoG5hayKLQStIg==\n\nestree-is-require@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/estree-is-require/-/estree-is-require-1.0.0.tgz#fce2c6126d141d1f9316e8c07799d7f0a55bb69b"\n  integrity sha512-oWxQdSEmnUwNZsDQYiBNpVxKEhMmsJQSSxnDrwsr1MWtooCLfhgzsNGzmokdmfK0EzEIS5V4LPvqxv1Kmb1vvA==\n  dependencies:\n    estree-is-identifier "^1.0.0"\n\nesutils@^2.0.2:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/esutils/-/esutils-2.0.3.tgz#74d2eb4de0b8da1293711910d50775b9b710ef64"\n  integrity sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==\n\nesutils@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/esutils/-/esutils-1.0.0.tgz#8151d358e20c8acc7fb745e7472c0025fe496570"\n  integrity sha1-gVHTWOIMisx/t0XnRywAJf5JZXA=\n\netag@~1.8.1:\n  version "1.8.1"\n  resolved "https://registry.yarnpkg.com/etag/-/etag-1.8.1.tgz#41ae2eeb65efa62268aebfea83ac7d79299b0887"\n  integrity sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc=\n\nevent-emitter@~0.3.5:\n  version "0.3.5"\n  resolved "https://registry.yarnpkg.com/event-emitter/-/event-emitter-0.3.5.tgz#df8c69eef1647923c7157b9ce83840610b02cc39"\n  integrity sha1-34xp7vFkeSPHFXuc6DhAYQsCzDk=\n  dependencies:\n    d "1"\n    es5-ext "~0.10.14"\n\neventemitter3@1.x.x:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/eventemitter3/-/eventemitter3-1.2.0.tgz#1c86991d816ad1e504750e73874224ecf3bec508"\n  integrity sha1-HIaZHYFq0eUEdQ5zh0Ik7PO+xQg=\n\nevents@^2.0.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/events/-/events-2.1.0.tgz#2a9a1e18e6106e0e812aa9ebd4a819b3c29c0ba5"\n  integrity sha512-3Zmiobend8P9DjmKAty0Era4jV8oJ0yGYe2nJJAxgymF9+N8F2m0hhZiMoWtcfepExzNKZumFU3ksdQbInGWCg==\n\nevents@^3.0.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/events/-/events-3.2.0.tgz#93b87c18f8efcd4202a461aec4dfc0556b639379"\n  integrity sha512-/46HWwbfCX2xTawVfkKLGxMifJYQBWMwY1mjywRtb4c9x8l5NP3KoJtnIOiL1hfdRkIuYhETxQlo62IF8tcnlg==\n\nevents@~1.1.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/events/-/events-1.1.1.tgz#9ebdb7635ad099c70dcc4c2a1f5004288e8bd924"\n  integrity sha1-nr23Y1rQmccNzEwqH1AEKI6L2SQ=\n\nevp_bytestokey@^1.0.0, evp_bytestokey@^1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz#7fcbdb198dc71959432efe13842684e0525acb02"\n  integrity sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==\n  dependencies:\n    md5.js "^1.3.4"\n    safe-buffer "^5.1.1"\n\nexeca@^4.0.1:\n  version "4.0.3"\n  resolved "https://registry.yarnpkg.com/execa/-/execa-4.0.3.tgz#0a34dabbad6d66100bd6f2c576c8669403f317f2"\n  integrity sha512-WFDXGHckXPWZX19t1kCsXzOpqX9LWYNqn4C+HqZlk/V0imTkzJZqf87ZBhvpHaftERYknpk0fjSylnXVlVgI0A==\n  dependencies:\n    cross-spawn "^7.0.0"\n    get-stream "^5.0.0"\n    human-signals "^1.1.1"\n    is-stream "^2.0.0"\n    merge-stream "^2.0.0"\n    npm-run-path "^4.0.0"\n    onetime "^5.1.0"\n    signal-exit "^3.0.2"\n    strip-final-newline "^2.0.0"\n\nexpand-brackets@^0.1.4:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/expand-brackets/-/expand-brackets-0.1.5.tgz#df07284e342a807cd733ac5af72411e581d1177b"\n  integrity sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=\n  dependencies:\n    is-posix-bracket "^0.1.0"\n\nexpand-brackets@^2.1.4:\n  version "2.1.4"\n  resolved "https://registry.yarnpkg.com/expand-brackets/-/expand-brackets-2.1.4.tgz#b77735e315ce30f6b6eff0f83b04151a22449622"\n  integrity sha1-t3c14xXOMPa27/D4OwQVGiJEliI=\n  dependencies:\n    debug "^2.3.3"\n    define-property "^0.2.5"\n    extend-shallow "^2.0.1"\n    posix-character-classes "^0.1.0"\n    regex-not "^1.0.0"\n    snapdragon "^0.8.1"\n    to-regex "^3.0.1"\n\nexpand-range@^1.8.1:\n  version "1.8.2"\n  resolved "https://registry.yarnpkg.com/expand-range/-/expand-range-1.8.2.tgz#a299effd335fe2721ebae8e257ec79644fc85337"\n  integrity sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=\n  dependencies:\n    fill-range "^2.1.0"\n\nexpress-session@^1.17.1:\n  version "1.17.1"\n  resolved "https://registry.yarnpkg.com/express-session/-/express-session-1.17.1.tgz#36ecbc7034566d38c8509885c044d461c11bf357"\n  integrity sha512-UbHwgqjxQZJiWRTMyhvWGvjBQduGCSBDhhZXYenziMFjxst5rMV+aJZ6hKPHZnPyHGsrqRICxtX8jtEbm/z36Q==\n  dependencies:\n    cookie "0.4.0"\n    cookie-signature "1.0.6"\n    debug "2.6.9"\n    depd "~2.0.0"\n    on-headers "~1.0.2"\n    parseurl "~1.3.3"\n    safe-buffer "5.2.0"\n    uid-safe "~2.1.5"\n\nexpress-state@1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/express-state/-/express-state-1.0.3.tgz#b6f368743a95d8a91b7683adf593d02b1577ec02"\n  integrity sha1-tvNodDqV2KkbdoOt9ZPQKxV37AI=\n\nexpress@3.4.8:\n  version "3.4.8"\n  resolved "https://registry.yarnpkg.com/express/-/express-3.4.8.tgz#aa7a8986de07053337f4bc5ed9a6453d9cc8e2e1"\n  integrity sha1-qnqJht4HBTM39Lxe2aZFPZzI4uE=\n  dependencies:\n    buffer-crc32 "0.2.1"\n    commander "1.3.2"\n    connect "2.12.0"\n    cookie "0.1.0"\n    cookie-signature "1.0.1"\n    debug ">= 0.7.3 < 1"\n    fresh "0.2.0"\n    merge-descriptors "0.0.1"\n    methods "0.1.0"\n    mkdirp "0.3.5"\n    range-parser "0.0.4"\n    send "0.1.4"\n\nexpress@4.x, express@^4.17.1:\n  version "4.17.1"\n  resolved "https://registry.yarnpkg.com/express/-/express-4.17.1.tgz#4491fc38605cf51f8629d39c2b5d026f98a4c134"\n  integrity sha512-mHJ9O79RqluphRrcw2X/GTh3k9tVv8YcoyY4Kkh4WDMUYKRZUq0h1o0w2rrrxBqM7VoeUVqgb27xlEMXTnYt4g==\n  dependencies:\n    accepts "~1.3.7"\n    array-flatten "1.1.1"\n    body-parser "1.19.0"\n    content-disposition "0.5.3"\n    content-type "~1.0.4"\n    cookie "0.4.0"\n    cookie-signature "1.0.6"\n    debug "2.6.9"\n    depd "~1.1.2"\n    encodeurl "~1.0.2"\n    escape-html "~1.0.3"\n    etag "~1.8.1"\n    finalhandler "~1.1.2"\n    fresh "0.5.2"\n    merge-descriptors "1.0.1"\n    methods "~1.1.2"\n    on-finished "~2.3.0"\n    parseurl "~1.3.3"\n    path-to-regexp "0.1.7"\n    proxy-addr "~2.0.5"\n    qs "6.7.0"\n    range-parser "~1.2.1"\n    safe-buffer "5.1.2"\n    send "0.17.1"\n    serve-static "1.14.1"\n    setprototypeof "1.1.1"\n    statuses "~1.5.0"\n    type-is "~1.6.18"\n    utils-merge "1.0.1"\n    vary "~1.1.2"\n\next@^1.1.2:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/ext/-/ext-1.4.0.tgz#89ae7a07158f79d35517882904324077e4379244"\n  integrity sha512-Key5NIsUxdqKg3vIsdw9dSuXpPCQ297y6wBjL30edxwPgt2E44WcWBZey/ZvUc6sERLTxKdyCu4gZFmUbk1Q7A==\n  dependencies:\n    type "^2.0.0"\n\nextend-object@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/extend-object/-/extend-object-1.0.0.tgz#42514f84015d1356caf5187969dfb2bc1bda0823"\n  integrity sha1-QlFPhAFdE1bK9Rh5ad+yvBvaCCM=\n\nextend-shallow@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/extend-shallow/-/extend-shallow-2.0.1.tgz#51af7d614ad9a9f610ea1bafbb989d6b1c56890f"\n  integrity sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=\n  dependencies:\n    is-extendable "^0.1.0"\n\nextend-shallow@^3.0.0, extend-shallow@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/extend-shallow/-/extend-shallow-3.0.2.tgz#26a71aaf073b39fb2127172746131c2704028db8"\n  integrity sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=\n  dependencies:\n    assign-symbols "^1.0.0"\n    is-extendable "^1.0.1"\n\nextend@3.0.2, extend@^3.0.0, extend@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/extend/-/extend-3.0.2.tgz#f8b1136b4071fbd8eb140aff858b1019ec2915fa"\n  integrity sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==\n\nextglob@^0.3.1:\n  version "0.3.2"\n  resolved "https://registry.yarnpkg.com/extglob/-/extglob-0.3.2.tgz#2e18ff3d2f49ab2765cec9023f011daa8d8349a1"\n  integrity sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=\n  dependencies:\n    is-extglob "^1.0.0"\n\nextglob@^2.0.4:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/extglob/-/extglob-2.0.4.tgz#ad00fe4dc612a9232e8718711dc5cb5ab0285543"\n  integrity sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==\n  dependencies:\n    array-unique "^0.3.2"\n    define-property "^1.0.0"\n    expand-brackets "^2.1.4"\n    extend-shallow "^2.0.1"\n    fragment-cache "^0.2.1"\n    regex-not "^1.0.0"\n    snapdragon "^0.8.1"\n    to-regex "^3.0.1"\n\nfalafel@^2.1.0:\n  version "2.2.4"\n  resolved "https://registry.yarnpkg.com/falafel/-/falafel-2.2.4.tgz#b5d86c060c2412a43166243cb1bce44d1abd2819"\n  integrity sha512-0HXjo8XASWRmsS0X1EkhwEMZaD3Qvp7FfURwjLKjG1ghfRm/MGZl2r4cWUTv41KdNghTw4OUMmVtdGQp3+H+uQ==\n  dependencies:\n    acorn "^7.1.1"\n    foreach "^2.0.5"\n    isarray "^2.0.1"\n    object-keys "^1.0.6"\n\nfast-deep-equal@^3.1.1:\n  version "3.1.3"\n  resolved "https://registry.yarnpkg.com/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz#3a7d56b559d6cbc3eb512325244e619a65c6c525"\n  integrity sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\n\nfast-diff@^1.1.2:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/fast-diff/-/fast-diff-1.2.0.tgz#73ee11982d86caaf7959828d519cfe927fac5f03"\n  integrity sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDlA0eO0c3wBvQcmzx4w==\n\nfast-glob@^2.2.6:\n  version "2.2.7"\n  resolved "https://registry.yarnpkg.com/fast-glob/-/fast-glob-2.2.7.tgz#6953857c3afa475fff92ee6015d52da70a4cd39d"\n  integrity sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==\n  dependencies:\n    "@mrmlnc/readdir-enhanced" "^2.2.1"\n    "@nodelib/fs.stat" "^1.1.2"\n    glob-parent "^3.1.0"\n    is-glob "^4.0.0"\n    merge2 "^1.2.3"\n    micromatch "^3.1.10"\n\nfast-json-stable-stringify@^2.0.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz#874bf69c6f404c2b5d99c481341399fd55892633"\n  integrity sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\n\nfast-levenshtein@^2.0.6, fast-levenshtein@~2.0.6:\n  version "2.0.6"\n  resolved "https://registry.yarnpkg.com/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz#3d8a5c66883a16a30ca8643e851f19baa7797917"\n  integrity sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=\n\nfast-safe-stringify@^2.0.7:\n  version "2.0.7"\n  resolved "https://registry.yarnpkg.com/fast-safe-stringify/-/fast-safe-stringify-2.0.7.tgz#124aa885899261f68aedb42a7c080de9da608743"\n  integrity sha512-Utm6CdzT+6xsDk2m8S6uL8VHxNwI6Jub+e9NYTcAms28T84pTa25GJQV9j0CY0N1rM8hK4x6grpF2BQf+2qwVA==\n\nfault@^1.0.0, fault@^1.0.2:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/fault/-/fault-1.0.4.tgz#eafcfc0a6d214fc94601e170df29954a4f842f13"\n  integrity sha512-CJ0HCB5tL5fYTEA7ToAq5+kTwd++Borf1/bifxd9iT70QcXr4MRrO3Llf8Ifs70q+SJcGHFtnIE/Nw6giCtECA==\n  dependencies:\n    format "^0.2.0"\n\nfiggy-pudding@^3.5.1:\n  version "3.5.2"\n  resolved "https://registry.yarnpkg.com/figgy-pudding/-/figgy-pudding-3.5.2.tgz#b4eee8148abb01dcf1d1ac34367d59e12fa61d6e"\n  integrity sha512-0btnI/H8f2pavGMN8w40mlSKOfTK2SVJmBfBeVIj3kNw0swwgzyRq0d5TJVOwodFmtvpPeWPN/MCcfuWF0Ezbw==\n\nfigures@^3.0.0, figures@^3.2.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/figures/-/figures-3.2.0.tgz#625c18bd293c604dc4a8ddb2febf0c88341746af"\n  integrity sha512-yaduQFRKLXYOGgEn6AZau90j3ggSOyiqXU0F9JZfeXYhNa+Jk4X+s45A2zg5jns87GAFa34BBm2kXw4XpNcbdg==\n  dependencies:\n    escape-string-regexp "^1.0.5"\n\nfile-entry-cache@^5.0.1:\n  version "5.0.1"\n  resolved "https://registry.yarnpkg.com/file-entry-cache/-/file-entry-cache-5.0.1.tgz#ca0f6efa6dd3d561333fb14515065c2fafdf439c"\n  integrity sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==\n  dependencies:\n    flat-cache "^2.0.1"\n\nfile-uri-to-path@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/file-uri-to-path/-/file-uri-to-path-1.0.0.tgz#553a7b8446ff6f684359c445f1e37a05dacc33dd"\n  integrity sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==\n\nfile-utils@~0.1.5:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/file-utils/-/file-utils-0.1.5.tgz#dc8153c855387cb4dacb0a1725531fa444a6b48c"\n  integrity sha1-3IFTyFU4fLTaywoXJVMfpESmtIw=\n  dependencies:\n    findup-sync "~0.1.2"\n    glob "~3.2.6"\n    iconv-lite "~0.2.11"\n    isbinaryfile "~0.1.9"\n    lodash "~2.1.0"\n    minimatch "~0.2.12"\n    rimraf "~2.2.2"\n\nfilename-regex@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/filename-regex/-/filename-regex-2.0.1.tgz#c1c4b9bee3e09725ddb106b75c1e301fe2f18b26"\n  integrity sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY=\n\nfileset@0.1.x:\n  version "0.1.8"\n  resolved "https://registry.yarnpkg.com/fileset/-/fileset-0.1.8.tgz#506b91a9396eaa7e32fb42a84077c7a0c736b741"\n  integrity sha1-UGuRqTluqn4y+0KoQHfHoMc2t0E=\n  dependencies:\n    glob "3.x"\n    minimatch "0.x"\n\nfill-range@^2.1.0:\n  version "2.2.4"\n  resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-2.2.4.tgz#eb1e773abb056dcd8df2bfdf6af59b8b3a936565"\n  integrity sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==\n  dependencies:\n    is-number "^2.1.0"\n    isobject "^2.0.0"\n    randomatic "^3.0.0"\n    repeat-element "^1.1.2"\n    repeat-string "^1.5.2"\n\nfill-range@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-4.0.0.tgz#d544811d428f98eb06a63dc402d2403c328c38f7"\n  integrity sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=\n  dependencies:\n    extend-shallow "^2.0.1"\n    is-number "^3.0.0"\n    repeat-string "^1.6.1"\n    to-regex-range "^2.1.0"\n\nfill-range@^7.0.1:\n  version "7.0.1"\n  resolved "https://registry.yarnpkg.com/fill-range/-/fill-range-7.0.1.tgz#1919a6a7c75fe38b2c7c77e5198535da9acdda40"\n  integrity sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\n  dependencies:\n    to-regex-range "^5.0.1"\n\nfinalhandler@~1.1.2:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/finalhandler/-/finalhandler-1.1.2.tgz#b7e7d000ffd11938d0fdb053506f6ebabe9f587d"\n  integrity sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\n  dependencies:\n    debug "2.6.9"\n    encodeurl "~1.0.2"\n    escape-html "~1.0.3"\n    on-finished "~2.3.0"\n    parseurl "~1.3.3"\n    statuses "~1.5.0"\n    unpipe "~1.0.0"\n\nfind-cache-dir@^3.2.0, find-cache-dir@^3.3.1:\n  version "3.3.1"\n  resolved "https://registry.yarnpkg.com/find-cache-dir/-/find-cache-dir-3.3.1.tgz#89b33fad4a4670daa94f855f7fbe31d6d84fe880"\n  integrity sha512-t2GDMt3oGC/v+BMwzmllWDuJF/xcDtE5j/fCGbqDD7OLuJkj0cfh1YSA5VKPvwMeLFLNDBkwOKZ2X85jGLVftQ==\n  dependencies:\n    commondir "^1.0.1"\n    make-dir "^3.0.2"\n    pkg-dir "^4.1.0"\n\nfind-nearest-file@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/find-nearest-file/-/find-nearest-file-1.0.0.tgz#bf539d7d0f02996631fa2196680f6776762b9f70"\n  integrity sha1-v1OdfQ8CmWYx+iGWaA9ndnYrn3A=\n\nfind-root@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/find-root/-/find-root-1.1.0.tgz#abcfc8ba76f708c42a97b3d685b7e9450bfb9ce4"\n  integrity sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng==\n\nfind-up@^2.0.0, find-up@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/find-up/-/find-up-2.1.0.tgz#45d1b7e506c717ddd482775a2b77920a3c0c57a7"\n  integrity sha1-RdG35QbHF93UgndaK3eSCjwMV6c=\n  dependencies:\n    locate-path "^2.0.0"\n\nfind-up@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/find-up/-/find-up-3.0.0.tgz#49169f1d7993430646da61ecc5ae355c21c97b73"\n  integrity sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==\n  dependencies:\n    locate-path "^3.0.0"\n\nfind-up@^4.0.0, find-up@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/find-up/-/find-up-4.1.0.tgz#97afe7d6cdc0bc5928584b7c8d7b16e8a9aa5d19"\n  integrity sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\n  dependencies:\n    locate-path "^5.0.0"\n    path-exists "^4.0.0"\n\nfind-versions@^3.2.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/find-versions/-/find-versions-3.2.0.tgz#10297f98030a786829681690545ef659ed1d254e"\n  integrity sha512-P8WRou2S+oe222TOCHitLy8zj+SIsVJh52VP4lvXkaFVnOFFdoWv1H1Jjvel1aI6NCFOAaeAVm8qrI0odiLcww==\n  dependencies:\n    semver-regex "^2.0.0"\n\nfindup-sync@~0.1.2:\n  version "0.1.3"\n  resolved "https://registry.yarnpkg.com/findup-sync/-/findup-sync-0.1.3.tgz#7f3e7a97b82392c653bf06589bd85190e93c3683"\n  integrity sha1-fz56l7gjksZTvwZYm9hRkOk8NoM=\n  dependencies:\n    glob "~3.2.9"\n    lodash "~2.4.1"\n\nfirefox-profile@0.2.7:\n  version "0.2.7"\n  resolved "https://registry.yarnpkg.com/firefox-profile/-/firefox-profile-0.2.7.tgz#fe46afc2ed6a96f62c5c3bd446fa259f6014a909"\n  integrity sha1-/kavwu1qlvYsXDvURvoln2AUqQk=\n  dependencies:\n    adm-zip "~0.4.3"\n    archiver "~0.7.1"\n    async "~0.2.9"\n    fs-extra "~0.8.1"\n    lazystream "~0.1.0"\n    node-uuid "~1.4.1"\n    wrench "~1.5.1"\n    xml2js "~0.4.0"\n\nfixpack@^3.0.6:\n  version "3.0.6"\n  resolved "https://registry.yarnpkg.com/fixpack/-/fixpack-3.0.6.tgz#80128402ece98095803362d41d8c7c1d57f77f5e"\n  integrity sha512-RfEXT2IMmoeAyr7PCwUHSRvC2K2VrrXQkmXwqjdTxoJ9TDDIWxgevr93ZIaEFFB+aQR17SN8zB6G0YCNQ6v83w==\n  dependencies:\n    alce "1.0.0"\n    chalk "^2.4.1"\n    extend-object "^1.0.0"\n    rc "^1.2.8"\n\nflat-cache@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/flat-cache/-/flat-cache-2.0.1.tgz#5d296d6f04bda44a4630a301413bdbc2ec085ec0"\n  integrity sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==\n  dependencies:\n    flatted "^2.0.0"\n    rimraf "2.6.3"\n    write "1.0.3"\n\nflatted@^2.0.0:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/flatted/-/flatted-2.0.2.tgz#4575b21e2bcee7434aa9be662f4b7b5f9c2b5138"\n  integrity sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i+75zmd8jcKdMR4O6jA==\n\nfor-in@^1.0.1, for-in@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/for-in/-/for-in-1.0.2.tgz#81068d295a8142ec0ac726c6e2200c30fb6d5e80"\n  integrity sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=\n\nfor-own@^0.1.4:\n  version "0.1.5"\n  resolved "https://registry.yarnpkg.com/for-own/-/for-own-0.1.5.tgz#5265c681a4f294dabbf17c9509b6763aa84510ce"\n  integrity sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=\n  dependencies:\n    for-in "^1.0.1"\n\nforEachAsync@~2.2:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/forEachAsync/-/forEachAsync-2.2.1.tgz#e3723f00903910e1eb4b1db3ad51b5c64a319fec"\n  integrity sha1-43I/AJA5EOHrSx2zrVG1xkoxn+w=\n  dependencies:\n    sequence "2.x"\n\nforeach-shim@~0.1.1:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/foreach-shim/-/foreach-shim-0.1.1.tgz#be61d75f46abb7176f5abd295e35885751b71d94"\n  integrity sha1-vmHXX0artxdvWr0pXjWIV1G3HZQ=\n\nforeach@^2.0.5:\n  version "2.0.5"\n  resolved "https://registry.yarnpkg.com/foreach/-/foreach-2.0.5.tgz#0bee005018aeb260d0a3af3ae658dd0136ec1b99"\n  integrity sha1-C+4AUBiusmDQo6865ljdATbsG5k=\n\nforeground-child@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/foreground-child/-/foreground-child-2.0.0.tgz#71b32800c9f15aa8f2f83f4a6bd9bff35d861a53"\n  integrity sha512-dCIq9FpEcyQyXKCkyzmlPTFNgrCzPudOe+mhvJU5zAtlBnGVy2yKxtfsxK2tQBThwq225jcvBjpw1Gr40uzZCA==\n  dependencies:\n    cross-spawn "^7.0.0"\n    signal-exit "^3.0.2"\n\nforever-agent@~0.5.0:\n  version "0.5.2"\n  resolved "https://registry.yarnpkg.com/forever-agent/-/forever-agent-0.5.2.tgz#6d0e09c4921f94a27f63d3b49c5feff1ea4c5130"\n  integrity sha1-bQ4JxJIflKJ/Y9O0nF/v8epMUTA=\n\nform-data@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/form-data/-/form-data-3.0.0.tgz#31b7e39c85f1355b7139ee0c647cf0de7f83c682"\n  integrity sha512-CKMFDglpbMi6PyN+brwB9Q/GOw0eAnsrEZDgcsH5Krhz5Od/haKHAX0NmQfha2zPPz0JpWzA7GJHGSnvCRLWsg==\n  dependencies:\n    asynckit "^0.4.0"\n    combined-stream "^1.0.8"\n    mime-types "^2.1.12"\n\nform-data@~0.0.3:\n  version "0.0.10"\n  resolved "https://registry.yarnpkg.com/form-data/-/form-data-0.0.10.tgz#db345a5378d86aeeb1ed5d553b869ac192d2f5ed"\n  integrity sha1-2zRaU3jYau6x7V1VO4aawZLS9e0=\n  dependencies:\n    async "~0.2.7"\n    combined-stream "~0.0.4"\n    mime "~1.2.2"\n\nform-data@~0.1.0:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/form-data/-/form-data-0.1.4.tgz#91abd788aba9702b1aabfa8bc01031a2ac9e3b12"\n  integrity sha1-kavXiKupcCsaq/qLwBAxoqyeOxI=\n  dependencies:\n    async "~0.9.0"\n    combined-stream "~0.0.4"\n    mime "~1.2.11"\n\nformat@^0.2.0, format@^0.2.2:\n  version "0.2.2"\n  resolved "https://registry.yarnpkg.com/format/-/format-0.2.2.tgz#d6170107e9efdc4ed30c9dc39016df942b5cb58b"\n  integrity sha1-1hcBB+nv3E7TDJ3DkBbflCtctYs=\n\nformidable@1.0.14:\n  version "1.0.14"\n  resolved "https://registry.yarnpkg.com/formidable/-/formidable-1.0.14.tgz#2b3f4c411cbb5fdd695c44843e2a23514a43231a"\n  integrity sha1-Kz9MQRy7X91pXESEPiojUUpDIxo=\n\nformidable@^1.2.2:\n  version "1.2.2"\n  resolved "https://registry.yarnpkg.com/formidable/-/formidable-1.2.2.tgz#bf69aea2972982675f00865342b982986f6b8dd9"\n  integrity sha512-V8gLm+41I/8kguQ4/o1D3RIHRmhYFG4pnNyonvua+40rqcEmT4+V71yaZ3B457xbbgCsCfjSPi65u/W6vK1U5Q==\n\nforwarded@~0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/forwarded/-/forwarded-0.1.2.tgz#98c23dab1175657b8c0573e8ceccd91b0ff18c84"\n  integrity sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ=\n\nfragment-cache@^0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/fragment-cache/-/fragment-cache-0.2.1.tgz#4290fad27f13e89be7f33799c6bc5a0abfff0d19"\n  integrity sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=\n  dependencies:\n    map-cache "^0.2.2"\n\nfresh@0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/fresh/-/fresh-0.2.0.tgz#bfd9402cf3df12c4a4c310c79f99a3dde13d34a7"\n  integrity sha1-v9lALPPfEsSkwxDHn5mj3eE9NKc=\n\nfresh@0.5.2:\n  version "0.5.2"\n  resolved "https://registry.yarnpkg.com/fresh/-/fresh-0.5.2.tgz#3d8cadd90d976569fa835ab1f8e4b23a105605a7"\n  integrity sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac=\n\nfrom2-string@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/from2-string/-/from2-string-1.1.0.tgz#18282b27d08a267cb3030cd2b8b4b0f212af752a"\n  integrity sha1-GCgrJ9CKJnyzAwzSuLSw8hKvdSo=\n  dependencies:\n    from2 "^2.0.3"\n\nfrom2@^2.0.3:\n  version "2.3.0"\n  resolved "https://registry.yarnpkg.com/from2/-/from2-2.3.0.tgz#8bfb5502bde4a4d36cfdeea007fcca21d7e382af"\n  integrity sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=\n  dependencies:\n    inherits "^2.0.1"\n    readable-stream "^2.0.0"\n\nfromentries@^1.2.0:\n  version "1.2.1"\n  resolved "https://registry.yarnpkg.com/fromentries/-/fromentries-1.2.1.tgz#64c31665630479bc993cd800d53387920dc61b4d"\n  integrity sha512-Xu2Qh8yqYuDhQGOhD5iJGninErSfI9A3FrriD3tjUgV5VbJFeH8vfgZ9HnC6jWN80QDVNQK5vmxRAmEAp7Mevw==\n\nfs-extra@^8.1.0:\n  version "8.1.0"\n  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-8.1.0.tgz#49d43c45a88cd9677668cb7be1b46efdb8d2e1c0"\n  integrity sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==\n  dependencies:\n    graceful-fs "^4.2.0"\n    jsonfile "^4.0.0"\n    universalify "^0.1.0"\n\nfs-extra@^9.0.0:\n  version "9.0.1"\n  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-9.0.1.tgz#910da0062437ba4c39fedd863f1675ccfefcb9fc"\n  integrity sha512-h2iAoN838FqAFJY2/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+B8ihI+k0c7JK5erwqQ==\n  dependencies:\n    at-least-node "^1.0.0"\n    graceful-fs "^4.2.0"\n    jsonfile "^6.0.1"\n    universalify "^1.0.0"\n\nfs-extra@~0.8.1:\n  version "0.8.1"\n  resolved "https://registry.yarnpkg.com/fs-extra/-/fs-extra-0.8.1.tgz#0e5779ffbfedf511bc755595c7f03c06d4b43e8d"\n  integrity sha1-Dld5/7/t9RG8dVWVx/A8BtS0Po0=\n  dependencies:\n    jsonfile "~1.1.0"\n    mkdirp "0.3.x"\n    ncp "~0.4.2"\n    rimraf "~2.2.0"\n\nfs-readdir-recursive@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/fs-readdir-recursive/-/fs-readdir-recursive-1.1.0.tgz#e32fc030a2ccee44a6b5371308da54be0b397d27"\n  integrity sha512-GNanXlVr2pf02+sPN40XN8HG+ePaNcvM0q5mZBd668Obwb0yD5GiUbZOFgwn8kGMY6I3mdyDJzieUy3PTYyTRA==\n\nfs.realpath@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f"\n  integrity sha1-FQStJSMVjKpA20onh8sBQRmU6k8=\n\nfsevents@^1.0.0, fsevents@^1.2.7:\n  version "1.2.13"\n  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-1.2.13.tgz#f325cb0455592428bcf11b383370ef70e3bfcc38"\n  integrity sha512-oWb1Z6mkHIskLzEJ/XWX0srkpkTQ7vaopMQkyaEIoq0fmtFVxOthb8cCxeT+p3ynTdkk/RZwbgG4brR5BeWECw==\n  dependencies:\n    bindings "^1.5.0"\n    nan "^2.12.1"\n\nfsevents@~2.1.2:\n  version "2.1.3"\n  resolved "https://registry.yarnpkg.com/fsevents/-/fsevents-2.1.3.tgz#fb738703ae8d2f9fe900c33836ddebee8b97f23e"\n  integrity sha512-Auw9a4AxqWpa9GUfj370BMPzzyncfBABW8Mab7BGWBYDj4Isgq+cDKtx0i6u9jcX9pQDnswsaaOTgTmA5pEjuQ==\n\nfunction-bind@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/function-bind/-/function-bind-1.1.1.tgz#a56899d3ea3c9bab874bb9773b7c5ede92f4895d"\n  integrity sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==\n\nfunctional-red-black-tree@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz#1b0ab3bd553b2a0d6399d29c0e3ea0b252078327"\n  integrity sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=\n\ngensync@^1.0.0-beta.1:\n  version "1.0.0-beta.1"\n  resolved "https://registry.yarnpkg.com/gensync/-/gensync-1.0.0-beta.1.tgz#58f4361ff987e5ff6e1e7a210827aa371eaac269"\n  integrity sha512-r8EC6NO1sngH/zdD9fiRDLdcgnbayXah+mLgManTaIZJqEC1MZstmnox8KpnI2/fxQwrp5OpCOYWLp4rBl4Jcg==\n\nget-assigned-identifiers@^1.1.0, get-assigned-identifiers@^1.2.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/get-assigned-identifiers/-/get-assigned-identifiers-1.2.0.tgz#6dbf411de648cbaf8d9169ebb0d2d576191e2ff1"\n  integrity sha512-mBBwmeGTrxEMO4pMaaf/uUEFHnYtwr8FTe8Y/mer4rcV/bye0qGm6pw1bGZFGStxC5O76c5ZAVBGnqHmOaJpdQ==\n\nget-caller-file@^2.0.1:\n  version "2.0.5"\n  resolved "https://registry.yarnpkg.com/get-caller-file/-/get-caller-file-2.0.5.tgz#4f94412a82db32f36e3b0b9741f8a97feb031f7e"\n  integrity sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\n\nget-own-enumerable-property-symbols@^3.0.0:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.2.tgz#b5fde77f22cbe35f390b4e089922c50bce6ef664"\n  integrity sha512-I0UBV/XOz1XkIJHEUDMZAbzCThU/H8DxmSfmdGcKPnVhu2VfFqr34jr9777IyaTYvxjedWhqVIilEDsCdP5G6g==\n\nget-package-type@^0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/get-package-type/-/get-package-type-0.1.0.tgz#8de2d803cff44df3bc6c456e6668b36c3926e11a"\n  integrity sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\n\nget-set-props@^0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/get-set-props/-/get-set-props-0.1.0.tgz#998475c178445686d0b32246da5df8dbcfbe8ea3"\n  integrity sha1-mYR1wXhEVobQsyJG2l3428++jqM=\n\nget-stdin@7.0.0:\n  version "7.0.0"\n  resolved "https://registry.yarnpkg.com/get-stdin/-/get-stdin-7.0.0.tgz#8d5de98f15171a125c5e516643c7a6d0ea8a96f6"\n  integrity sha512-zRKcywvrXlXsA0v0i9Io4KDRaAw7+a1ZpjRwl9Wox8PFlVCCHra7E9c4kqXCoCM9nR5tBkaTTZRBoCm60bFqTQ==\n\nget-stdin@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/get-stdin/-/get-stdin-6.0.0.tgz#9e09bf712b360ab9225e812048f71fde9c89657b"\n  integrity sha512-jp4tHawyV7+fkkSKyvjuLZswblUtz+SQKzSWnBbii16BuZksJlU1wuBYXY75r+duh/llF1ur6oNwi+2ZzjKZ7g==\n\nget-stdin@^8.0.0:\n  version "8.0.0"\n  resolved "https://registry.yarnpkg.com/get-stdin/-/get-stdin-8.0.0.tgz#cbad6a73feb75f6eeb22ba9e01f89aa28aa97a53"\n  integrity sha512-sY22aA6xchAzprjyqmSEQv4UbAAzRN0L2dQB0NlN5acTTK9Don6nhoc3eAbUnpZiCANAMfd/+40kVdKfFygohg==\n\nget-stream@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-4.1.0.tgz#c1b255575f3dc21d59bfc79cd3d2b46b1c3a54b5"\n  integrity sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==\n  dependencies:\n    pump "^3.0.0"\n\nget-stream@^5.0.0, get-stream@^5.1.0:\n  version "5.1.0"\n  resolved "https://registry.yarnpkg.com/get-stream/-/get-stream-5.1.0.tgz#01203cdc92597f9b909067c3e656cc1f4d3c4dc9"\n  integrity sha512-EXr1FOzrzTfGeL0gQdeFEvOMm2mzMOglyiOXSTpPC+iAjAKftbr3jpCMWynogwYnM+eSj9sHGc6wjIcDvYiygw==\n  dependencies:\n    pump "^3.0.0"\n\nget-value@^2.0.3, get-value@^2.0.6:\n  version "2.0.6"\n  resolved "https://registry.yarnpkg.com/get-value/-/get-value-2.0.6.tgz#dc15ca1c672387ca76bd37ac0a395ba2042a2c28"\n  integrity sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=\n\ngit-raw-commits@^2.0.0:\n  version "2.0.7"\n  resolved "https://registry.yarnpkg.com/git-raw-commits/-/git-raw-commits-2.0.7.tgz#02e9357727a9755efa8e14dd5e59b381c29068fb"\n  integrity sha512-SkwrTqrDxw8y0G1uGJ9Zw13F7qu3LF8V4BifyDeiJCxSnjRGZD9SaoMiMqUvvXMXh6S3sOQ1DsBN7L2fMUZW/g==\n  dependencies:\n    dargs "^7.0.0"\n    lodash.template "^4.0.2"\n    meow "^7.0.0"\n    split2 "^2.0.0"\n    through2 "^3.0.0"\n\ngithub-slugger@^1.2.1:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/github-slugger/-/github-slugger-1.3.0.tgz#9bd0a95c5efdfc46005e82a906ef8e2a059124c9"\n  integrity sha512-gwJScWVNhFYSRDvURk/8yhcFBee6aFjye2a7Lhb2bUyRulpIoek9p0I9Kt7PT67d/nUlZbFu8L9RLiA0woQN8Q==\n  dependencies:\n    emoji-regex ">=6.0.0 <=6.1.1"\n\nglob-base@^0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/glob-base/-/glob-base-0.3.0.tgz#dbb164f6221b1c0b1ccf82aea328b497df0ea3c4"\n  integrity sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=\n  dependencies:\n    glob-parent "^2.0.0"\n    is-glob "^2.0.0"\n\nglob-parent@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/glob-parent/-/glob-parent-2.0.0.tgz#81383d72db054fcccf5336daa902f182f6edbb28"\n  integrity sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=\n  dependencies:\n    is-glob "^2.0.0"\n\nglob-parent@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/glob-parent/-/glob-parent-3.1.0.tgz#9e6af6299d8d3bd2bd40430832bd113df906c5ae"\n  integrity sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=\n  dependencies:\n    is-glob "^3.1.0"\n    path-dirname "^1.0.0"\n\nglob-parent@^5.0.0, glob-parent@~5.1.0:\n  version "5.1.1"\n  resolved "https://registry.yarnpkg.com/glob-parent/-/glob-parent-5.1.1.tgz#b6c1ef417c4e5663ea498f1c45afac6916bbc229"\n  integrity sha512-FnI+VGOpnlGHWZxthPGR+QhR78fuiK0sNLkHQv+bL9fQi57lNNdquIbna/WrfROrolq8GK5Ek6BiMwqL/voRYQ==\n  dependencies:\n    is-glob "^4.0.1"\n\nglob-to-regexp@^0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz#8c5a1494d2066c570cc3bfe4496175acc4d502ab"\n  integrity sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs=\n\nglob@3.x, glob@~3.2.6, glob@~3.2.9:\n  version "3.2.11"\n  resolved "https://registry.yarnpkg.com/glob/-/glob-3.2.11.tgz#4a973f635b9190f715d10987d5c00fd2815ebe3d"\n  integrity sha1-Spc/Y1uRkPcV0QmH1cAP0oFevj0=\n  dependencies:\n    inherits "2"\n    minimatch "0.3"\n\nglob@7.1.1:\n  version "7.1.1"\n  resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.1.tgz#805211df04faaf1c63a3600306cdf5ade50b2ec8"\n  integrity sha1-gFIR3wT6rxxjo2ADBs31reULLsg=\n  dependencies:\n    fs.realpath "^1.0.0"\n    inflight "^1.0.4"\n    inherits "2"\n    minimatch "^3.0.2"\n    once "^1.3.0"\n    path-is-absolute "^1.0.0"\n\nglob@^5.0.10, glob@^5.0.15:\n  version "5.0.15"\n  resolved "https://registry.yarnpkg.com/glob/-/glob-5.0.15.tgz#1bc936b9e02f4a603fcc222ecf7633d30b8b93b1"\n  integrity sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=\n  dependencies:\n    inflight "^1.0.4"\n    inherits "2"\n    minimatch "2 || 3"\n    once "^1.3.0"\n    path-is-absolute "^1.0.0"\n\nglob@^7.0.0, glob@^7.0.3, glob@^7.0.5, glob@^7.1.0, glob@^7.1.3, glob@^7.1.4, glob@^7.1.6:\n  version "7.1.6"\n  resolved "https://registry.yarnpkg.com/glob/-/glob-7.1.6.tgz#141f33b81a7c2492e125594307480c46679278a6"\n  integrity sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==\n  dependencies:\n    fs.realpath "^1.0.0"\n    inflight "^1.0.4"\n    inherits "2"\n    minimatch "^3.0.4"\n    once "^1.3.0"\n    path-is-absolute "^1.0.0"\n\nglob@~4.0.6:\n  version "4.0.6"\n  resolved "https://registry.yarnpkg.com/glob/-/glob-4.0.6.tgz#695c50bdd4e2fb5c5d370b091f388d3707e291a7"\n  integrity sha1-aVxQvdTi+1xdNwsJHziNNwfikac=\n  dependencies:\n    graceful-fs "^3.0.2"\n    inherits "2"\n    minimatch "^1.0.0"\n    once "^1.3.0"\n\nglob@~4.3.0:\n  version "4.3.5"\n  resolved "https://registry.yarnpkg.com/glob/-/glob-4.3.5.tgz#80fbb08ca540f238acce5d11d1e9bc41e75173d3"\n  integrity sha1-gPuwjKVA8jiszl0R0em8QedRc9M=\n  dependencies:\n    inflight "^1.0.4"\n    inherits "2"\n    minimatch "^2.0.1"\n    once "^1.3.0"\n\nglobal-dirs@^0.1.1:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/global-dirs/-/global-dirs-0.1.1.tgz#b319c0dd4607f353f3be9cca4c72fc148c49f445"\n  integrity sha1-sxnA3UYH81PzvpzKTHL8FIxJ9EU=\n  dependencies:\n    ini "^1.3.4"\n\nglobal-dirs@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/global-dirs/-/global-dirs-2.0.1.tgz#acdf3bb6685bcd55cb35e8a052266569e9469201"\n  integrity sha512-5HqUqdhkEovj2Of/ms3IeS/EekcO54ytHRLV4PEY2rhRwrHXLQjeVEES0Lhka0xwNDtGYn58wyC4s5+MHsOO6A==\n  dependencies:\n    ini "^1.3.5"\n\nglobals@^11.1.0:\n  version "11.12.0"\n  resolved "https://registry.yarnpkg.com/globals/-/globals-11.12.0.tgz#ab8795338868a0babd8525758018c2a7eb95c42e"\n  integrity sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\n\nglobals@^12.1.0:\n  version "12.4.0"\n  resolved "https://registry.yarnpkg.com/globals/-/globals-12.4.0.tgz#a18813576a41b00a24a97e7f815918c2e19925f8"\n  integrity sha512-BWICuzzDvDoH54NHKCseDanAhE3CeDorgDL5MT6LMXXj2WCnd9UC2szdk4AWLfjdgNBCXLUanXYcpBBKOSWGwg==\n  dependencies:\n    type-fest "^0.8.1"\n\nglobby@^9.0.0:\n  version "9.2.0"\n  resolved "https://registry.yarnpkg.com/globby/-/globby-9.2.0.tgz#fd029a706c703d29bdd170f4b6db3a3f7a7cb63d"\n  integrity sha512-ollPHROa5mcxDEkwg6bPt3QbEf4pDQSNtd6JPL1YvOvAo/7/0VAm9TccUeoTmarjPw4pfUthSCqcyfNB1I3ZSg==\n  dependencies:\n    "@types/glob" "^7.1.1"\n    array-union "^1.0.2"\n    dir-glob "^2.2.2"\n    fast-glob "^2.2.6"\n    glob "^7.1.3"\n    ignore "^4.0.3"\n    pify "^4.0.1"\n    slash "^2.0.0"\n\nglobs-to-files@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/globs-to-files/-/globs-to-files-1.0.0.tgz#54490f6d1f4b9fd2de9d99445146ffb37550380d"\n  integrity sha1-VEkPbR9Ln9LenZlEUUb/s3VQOA0=\n  dependencies:\n    array-uniq "~1.0.2"\n    asyncreduce "~0.1.4"\n    glob "^5.0.10"\n    xtend "^4.0.0"\n\ngot@^9.6.0:\n  version "9.6.0"\n  resolved "https://registry.yarnpkg.com/got/-/got-9.6.0.tgz#edf45e7d67f99545705de1f7bbeeeb121765ed85"\n  integrity sha512-R7eWptXuGYxwijs0eV+v3o6+XH1IqVK8dJOEecQfTmkncw9AV4dcw/Dhxi8MdlqPthxxpZyizMzyg8RTmEsG+Q==\n  dependencies:\n    "@sindresorhus/is" "^0.14.0"\n    "@szmarczak/http-timer" "^1.1.2"\n    cacheable-request "^6.0.0"\n    decompress-response "^3.3.0"\n    duplexer3 "^0.1.4"\n    get-stream "^4.1.0"\n    lowercase-keys "^1.0.1"\n    mimic-response "^1.0.1"\n    p-cancelable "^1.0.0"\n    to-readable-stream "^1.0.0"\n    url-parse-lax "^3.0.0"\n\ngraceful-fs@^3.0.2:\n  version "3.0.12"\n  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-3.0.12.tgz#0034947ce9ed695ec8ab0b854bc919e82b1ffaef"\n  integrity sha512-J55gaCS4iTTJfTXIxSVw3EMQckcqkpdRv3IR7gu6sq0+tbC363Zx6KH/SEwXASK9JRbhyZmVjJEVJIOxYsB3Qg==\n  dependencies:\n    natives "^1.1.3"\n\ngraceful-fs@^4.1.11, graceful-fs@^4.1.15, graceful-fs@^4.1.2, graceful-fs@^4.1.6, graceful-fs@^4.2.0:\n  version "4.2.4"\n  resolved "https://registry.yarnpkg.com/graceful-fs/-/graceful-fs-4.2.4.tgz#2256bde14d3632958c465ebc96dc467ca07a29fb"\n  integrity sha512-WjKPNJF79dtJAVniUlGGWHYGz2jWxT6VhN/4m1NdkbZ2nOsEF+cI1Edgql5zCRhs/VsQYRvrXctxktVXZUkixw==\n\n"graceful-readlink@>= 1.0.0":\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/graceful-readlink/-/graceful-readlink-1.0.1.tgz#4cafad76bc62f02fa039b2f94e9a3dd3a391a725"\n  integrity sha1-TK+tdrxi8C+gObL5Tpo906ORpyU=\n\ngrowl@1.9.2:\n  version "1.9.2"\n  resolved "https://registry.yarnpkg.com/growl/-/growl-1.9.2.tgz#0ea7743715db8d8de2c5ede1775e1b45ac85c02f"\n  integrity sha1-Dqd0NxXbjY3ixe3hd14bRayFwC8=\n\nhandlebars@1.0.12:\n  version "1.0.12"\n  resolved "https://registry.yarnpkg.com/handlebars/-/handlebars-1.0.12.tgz#18c6d3440c35e91b19b3ff582b9151ab4985d4fc"\n  integrity sha1-GMbTRAw16RsZs/9YK5FRq0mF1Pw=\n  dependencies:\n    optimist "~0.3"\n    uglify-js "~2.3"\n\nhandlebars@1.3.x:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/handlebars/-/handlebars-1.3.0.tgz#9e9b130a93e389491322d975cf3ec1818c37ce34"\n  integrity sha1-npsTCpPjiUkTItl1zz7BgYw3zjQ=\n  dependencies:\n    optimist "~0.3"\n  optionalDependencies:\n    uglify-js "~2.3"\n\nhandlebars@^4.0.1:\n  version "4.7.6"\n  resolved "https://registry.yarnpkg.com/handlebars/-/handlebars-4.7.6.tgz#d4c05c1baf90e9945f77aa68a7a219aa4a7df74e"\n  integrity sha512-1f2BACcBfiwAfStCKZNrUCgqNZkGsAT7UM3kkYtXuLo0KnaVfjKOyf7PRzB6++aK9STyT1Pd2ZCPe3EGOXleXA==\n  dependencies:\n    minimist "^1.2.5"\n    neo-async "^2.6.0"\n    source-map "^0.6.1"\n    wordwrap "^1.0.0"\n  optionalDependencies:\n    uglify-js "^3.1.4"\n\nhard-rejection@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/hard-rejection/-/hard-rejection-2.1.0.tgz#1c6eda5c1685c63942766d79bb40ae773cecd883"\n  integrity sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA==\n\nhas-ansi@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/has-ansi/-/has-ansi-2.0.0.tgz#34f5049ce1ecdf2b0649af3ef24e45ed35416d91"\n  integrity sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=\n  dependencies:\n    ansi-regex "^2.0.0"\n\nhas-flag@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-1.0.0.tgz#9d9e793165ce017a00f00418c43f942a7b1d11fa"\n  integrity sha1-nZ55MWXOAXoA8AQYxD+UKnsdEfo=\n\nhas-flag@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-3.0.0.tgz#b5d454dc2199ae225699f3467e5a07f3b955bafd"\n  integrity sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\n\nhas-flag@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/has-flag/-/has-flag-4.0.0.tgz#944771fd9c81c81265c4d6941860da06bb59479b"\n  integrity sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\n\nhas-symbols@^1.0.0, has-symbols@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/has-symbols/-/has-symbols-1.0.1.tgz#9f5214758a44196c406d9bd76cebf81ec2dd31e8"\n  integrity sha512-PLcsoqu++dmEIZB+6totNFKq/7Do+Z0u4oT0zKOJNl3lYK6vGwwu2hjHs+68OEZbTjiUE9bgOABXbP/GvrS0Kg==\n\nhas-value@^0.3.1:\n  version "0.3.1"\n  resolved "https://registry.yarnpkg.com/has-value/-/has-value-0.3.1.tgz#7b1f58bada62ca827ec0a2078025654845995e1f"\n  integrity sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=\n  dependencies:\n    get-value "^2.0.3"\n    has-values "^0.1.4"\n    isobject "^2.0.0"\n\nhas-value@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/has-value/-/has-value-1.0.0.tgz#18b281da585b1c5c51def24c930ed29a0be6b177"\n  integrity sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=\n  dependencies:\n    get-value "^2.0.6"\n    has-values "^1.0.0"\n    isobject "^3.0.0"\n\nhas-values@^0.1.4:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/has-values/-/has-values-0.1.4.tgz#6d61de95d91dfca9b9a02089ad384bff8f62b771"\n  integrity sha1-bWHeldkd/Km5oCCJrThL/49it3E=\n\nhas-values@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/has-values/-/has-values-1.0.0.tgz#95b0b63fec2146619a6fe57fe75628d5a39efe4f"\n  integrity sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=\n  dependencies:\n    is-number "^3.0.0"\n    kind-of "^4.0.0"\n\nhas-yarn@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/has-yarn/-/has-yarn-2.1.0.tgz#137e11354a7b5bf11aa5cb649cf0c6f3ff2b2e77"\n  integrity sha512-UqBRqi4ju7T+TqGNdqAO0PaSVGsDGJUBQvk9eUWNGRY1CFGDzYhLWoM7JQEemnlvVcv/YEmc2wNW8BC24EnUsw==\n\nhas@^1.0.0, has@^1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/has/-/has-1.0.3.tgz#722d7cbfc1f6aa8241f16dd814e011e1f41e8796"\n  integrity sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==\n  dependencies:\n    function-bind "^1.1.1"\n\nhash-base@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/hash-base/-/hash-base-3.1.0.tgz#55c381d9e06e1d2997a883b4a3fddfe7f0d3af33"\n  integrity sha512-1nmYp/rhMDiE7AYkDw+lLwlAzz0AntGIe51F3RfFfEqyQ3feY2eI/NcwC6umIQVOASPMsWJLJScWKSSvzL9IVA==\n  dependencies:\n    inherits "^2.0.4"\n    readable-stream "^3.6.0"\n    safe-buffer "^5.2.0"\n\nhash.js@^1.0.0, hash.js@^1.0.3:\n  version "1.1.7"\n  resolved "https://registry.yarnpkg.com/hash.js/-/hash.js-1.1.7.tgz#0babca538e8d4ee4a0f8988d68866537a003cf42"\n  integrity sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==\n  dependencies:\n    inherits "^2.0.3"\n    minimalistic-assert "^1.0.1"\n\nhasha@^5.0.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/hasha/-/hasha-5.2.0.tgz#33094d1f69c40a4a6ac7be53d5fe3ff95a269e0c"\n  integrity sha512-2W+jKdQbAdSIrggA8Q35Br8qKadTrqCTC8+XZvBWepKDK6m9XkX6Iz1a2yh2KP01kzAR/dpuMeUnocoLYDcskw==\n  dependencies:\n    is-stream "^2.0.0"\n    type-fest "^0.8.0"\n\nhawk@1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/hawk/-/hawk-1.1.1.tgz#87cd491f9b46e4e2aeaca335416766885d2d1ed9"\n  integrity sha1-h81JH5tG5OKurKM1QWdmiF0tHtk=\n  dependencies:\n    boom "0.4.x"\n    cryptiles "0.2.x"\n    hoek "0.9.x"\n    sntp "0.2.x"\n\nhbs@2.4.0:\n  version "2.4.0"\n  resolved "https://registry.yarnpkg.com/hbs/-/hbs-2.4.0.tgz#f4c956cb660d6974dc61214b7c49a21f6aaa3f51"\n  integrity sha1-9MlWy2YNaXTcYSFLfEmiH2qqP1E=\n  dependencies:\n    handlebars "1.0.12"\n    walk "2.2.1"\n\nhe@1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/he/-/he-1.1.1.tgz#93410fd21b009735151f8868c2f271f3427e23fd"\n  integrity sha1-k0EP0hsAlzUVH4howvJx80J+I/0=\n\nhighlight.js@7.5.0:\n  version "7.5.0"\n  resolved "https://registry.yarnpkg.com/highlight.js/-/highlight.js-7.5.0.tgz#0052595eef15845d842e02a03313afadc3ebd6cc"\n  integrity sha1-AFJZXu8VhF2ELgKgMxOvrcPr1sw=\n\nhmac-drbg@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/hmac-drbg/-/hmac-drbg-1.0.1.tgz#d2745701025a6c775a6c545793ed502fc0c649a1"\n  integrity sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=\n  dependencies:\n    hash.js "^1.0.3"\n    minimalistic-assert "^1.0.0"\n    minimalistic-crypto-utils "^1.0.1"\n\nhoek@0.9.x:\n  version "0.9.1"\n  resolved "https://registry.yarnpkg.com/hoek/-/hoek-0.9.1.tgz#3d322462badf07716ea7eb85baf88079cddce505"\n  integrity sha1-PTIkYrrfB3Fup+uFuviAec3c5QU=\n\nhosted-git-info@^2.1.4:\n  version "2.8.8"\n  resolved "https://registry.yarnpkg.com/hosted-git-info/-/hosted-git-info-2.8.8.tgz#7539bd4bc1e0e0a895815a2e0262420b12858488"\n  integrity sha512-f/wzC2QaWBs7t9IYqB4T3sR1xviIViXJRJTWBlx2Gf3g0Xi5vI7Yy4koXQ1c9OYDGHN9sBy1DQ2AB8fqZBWhUg==\n\nhtml-escaper@^2.0.0:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/html-escaper/-/html-escaper-2.0.2.tgz#dfd60027da36a36dfcbe236262c00a5822681453"\n  integrity sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\n\nhtmlescape@^1.1.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/htmlescape/-/htmlescape-1.1.1.tgz#3a03edc2214bca3b66424a3e7959349509cb0351"\n  integrity sha1-OgPtwiFLyjtmQko+eVk0lQnLA1E=\n\nhttp-cache-semantics@^4.0.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz#49e91c5cbf36c9b94bcfcd71c23d5249ec74e390"\n  integrity sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==\n\nhttp-errors@1.7.2:\n  version "1.7.2"\n  resolved "https://registry.yarnpkg.com/http-errors/-/http-errors-1.7.2.tgz#4f5029cf13239f31036e5b2e55292bcfbcc85c8f"\n  integrity sha512-uUQBt3H/cSIVfch6i1EuPNy/YsRSOUBXTVfZ+yR7Zjez3qjBz6i9+i4zjNaoqcoFVI4lQJ5plg63TvGfRSDCRg==\n  dependencies:\n    depd "~1.1.2"\n    inherits "2.0.3"\n    setprototypeof "1.1.1"\n    statuses ">= 1.5.0 < 2"\n    toidentifier "1.0.0"\n\nhttp-errors@~1.7.2:\n  version "1.7.3"\n  resolved "https://registry.yarnpkg.com/http-errors/-/http-errors-1.7.3.tgz#6c619e4f9c60308c38519498c14fbb10aacebb06"\n  integrity sha512-ZTTX0MWrsQ2ZAhA1cejAwDLycFsd7I7nVtnkT3Ol0aqodaKW+0CTZDQ1uBv5whptCnc8e8HeRRJxRs0kmm/Qfw==\n  dependencies:\n    depd "~1.1.2"\n    inherits "2.0.4"\n    setprototypeof "1.1.1"\n    statuses ">= 1.5.0 < 2"\n    toidentifier "1.0.0"\n\nhttp-proxy-agent@^4.0.0:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/http-proxy-agent/-/http-proxy-agent-4.0.1.tgz#8a8c8ef7f5932ccf953c296ca8291b95aa74aa3a"\n  integrity sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq/Y+BOyPrgpUrA7HylqvU8vIZGsRuXmspskV0Tg==\n  dependencies:\n    "@tootallnate/once" "1"\n    agent-base "6"\n    debug "4"\n\nhttp-proxy@1.11.2:\n  version "1.11.2"\n  resolved "https://registry.yarnpkg.com/http-proxy/-/http-proxy-1.11.2.tgz#c50d2fb06eca79d4238e66fd94393d2e41e63740"\n  integrity sha1-xQ0vsG7KedQjjmb9lDk9LkHmN0A=\n  dependencies:\n    eventemitter3 "1.x.x"\n    requires-port "0.x.x"\n\nhttp-signature@~0.10.0:\n  version "0.10.1"\n  resolved "https://registry.yarnpkg.com/http-signature/-/http-signature-0.10.1.tgz#4fbdac132559aa8323121e540779c0a012b27e66"\n  integrity sha1-T72sEyVZqoMjEh5UB3nAoBKyfmY=\n  dependencies:\n    asn1 "0.1.11"\n    assert-plus "^0.1.5"\n    ctype "0.5.3"\n\nhttps-browserify@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/https-browserify/-/https-browserify-1.0.0.tgz#ec06c10e0a34c0f2faf199f7fd7fc78fffd03c73"\n  integrity sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM=\n\nhttps-browserify@~0.0.0:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/https-browserify/-/https-browserify-0.0.1.tgz#3f91365cabe60b77ed0ebba24b454e3e09d95a82"\n  integrity sha1-P5E2XKvmC3ftDruiS0VOPgnZWoI=\n\nhttps-proxy-agent@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/https-proxy-agent/-/https-proxy-agent-4.0.0.tgz#702b71fb5520a132a66de1f67541d9e62154d82b"\n  integrity sha512-zoDhWrkR3of1l9QAL8/scJZyLu8j/gBkcwcaQOZh7Gyh/+uJQzGVETdgT30akuwkpL8HTRfssqI3BZuV18teDg==\n  dependencies:\n    agent-base "5"\n    debug "4"\n\nhuman-signals@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/human-signals/-/human-signals-1.1.1.tgz#c5b1cd14f50aeae09ab6c59fe63ba3395fe4dfa3"\n  integrity sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj/3EdaNfAlxKthD1xjEQfGOUhllCGGJVNY34bRr6lPINhNjyZw==\n\nhumanize-duration@2.4.0:\n  version "2.4.0"\n  resolved "https://registry.yarnpkg.com/humanize-duration/-/humanize-duration-2.4.0.tgz#04da89e6784af1c881b06ebc9f494dda07b08a17"\n  integrity sha1-BNqJ5nhK8ciBsG68n0lN2gewihc=\n\nhusky@^4.2.5:\n  version "4.2.5"\n  resolved "https://registry.yarnpkg.com/husky/-/husky-4.2.5.tgz#2b4f7622673a71579f901d9885ed448394b5fa36"\n  integrity sha512-SYZ95AjKcX7goYVZtVZF2i6XiZcHknw50iXvY7b0MiGoj5RwdgRQNEHdb+gPDPCXKlzwrybjFjkL6FOj8uRhZQ==\n  dependencies:\n    chalk "^4.0.0"\n    ci-info "^2.0.0"\n    compare-versions "^3.6.0"\n    cosmiconfig "^6.0.0"\n    find-versions "^3.2.0"\n    opencollective-postinstall "^2.0.2"\n    pkg-dir "^4.2.0"\n    please-upgrade-node "^3.2.0"\n    slash "^3.0.0"\n    which-pm-runs "^1.0.0"\n\niconv-lite@0.4.24:\n  version "0.4.24"\n  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.24.tgz#2022b4b25fbddc21d2f524974a474aafe733908b"\n  integrity sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\n  dependencies:\n    safer-buffer ">= 2.1.2 < 3"\n\niconv-lite@0.4.8:\n  version "0.4.8"\n  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.8.tgz#c6019a7595f2cefca702eab694a010bcd9298d20"\n  integrity sha1-xgGadZXyzvynAuq2lKAQvNkpjSA=\n\niconv-lite@~0.2.11:\n  version "0.2.11"\n  resolved "https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.2.11.tgz#1ce60a3a57864a292d1321ff4609ca4bb965adc8"\n  integrity sha1-HOYKOleGSiktEyH/RgnKS7llrcg=\n\nieee754@^1.1.4:\n  version "1.1.13"\n  resolved "https://registry.yarnpkg.com/ieee754/-/ieee754-1.1.13.tgz#ec168558e95aa181fd87d37f55c32bbcb6708b84"\n  integrity sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg==\n\nignore-walk@3.0.3:\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/ignore-walk/-/ignore-walk-3.0.3.tgz#017e2447184bfeade7c238e4aefdd1e8f95b1e37"\n  integrity sha512-m7o6xuOaT1aqheYHKf8W6J5pYH85ZI9w077erOzLje3JsB1gkafkAhHHY19dqjulgIZHFm32Cp5uNZgcQqdJKw==\n  dependencies:\n    minimatch "^3.0.4"\n\nignore@^4.0.3, ignore@^4.0.6:\n  version "4.0.6"\n  resolved "https://registry.yarnpkg.com/ignore/-/ignore-4.0.6.tgz#750e3db5862087b4737ebac8207ffd1ef27b25fc"\n  integrity sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==\n\nignore@^5.0.0, ignore@^5.0.5, ignore@^5.1.1:\n  version "5.1.8"\n  resolved "https://registry.yarnpkg.com/ignore/-/ignore-5.1.8.tgz#f150a8b50a34289b33e22f5889abd4d8016f0e57"\n  integrity sha512-BMpfD7PpiETpBl/A6S498BaIJ6Y/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53pJY7EtZk5KACI57i1Uw==\n\nimport-fresh@^3.0.0, import-fresh@^3.1.0:\n  version "3.2.1"\n  resolved "https://registry.yarnpkg.com/import-fresh/-/import-fresh-3.2.1.tgz#633ff618506e793af5ac91bf48b72677e15cbe66"\n  integrity sha512-6e1q1cnWP2RXD9/keSkxHScg508CdXqXWgWBaETNhyuBFz+kUZlKboh+ISK+bU++DmbHimVBrOz/zzPe0sZ3sQ==\n  dependencies:\n    parent-module "^1.0.0"\n    resolve-from "^4.0.0"\n\nimport-lazy@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/import-lazy/-/import-lazy-2.1.0.tgz#05698e3d45c88e8d7e9d92cb0584e77f096f3e43"\n  integrity sha1-BWmOPUXIjo1+nZLLBYTnfwlvPkM=\n\nimport-modules@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/import-modules/-/import-modules-2.0.0.tgz#9c1e13b4e7a15682f70a6e3fa29534e4540cfc5d"\n  integrity sha512-iczM/v9drffdNnABOKwj0f9G3cFDon99VcG1mxeBsdqnbd+vnQ5c2uAiCHNQITqFTOPaEvwg3VjoWCur0uHLEw==\n\nimurmurhash@^0.1.4:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/imurmurhash/-/imurmurhash-0.1.4.tgz#9218b9b2b928a238b13dc4fb6b6d576f231453ea"\n  integrity sha1-khi5srkoojixPcT7a21XbyMUU+o=\n\nindent-string@^3.0.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/indent-string/-/indent-string-3.2.0.tgz#4a5fd6d27cc332f37e5419a504dbb837105c9289"\n  integrity sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok=\n\nindent-string@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/indent-string/-/indent-string-4.0.0.tgz#624f8f4497d619b2d9768531d58f4122854d7251"\n  integrity sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\n\nindexof@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/indexof/-/indexof-0.0.1.tgz#82dc336d232b9062179d05ab3293a66059fd435d"\n  integrity sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10=\n\ninflight@^1.0.4:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9"\n  integrity sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=\n  dependencies:\n    once "^1.3.0"\n    wrappy "1"\n\ninherits@2, inherits@2.0.4, inherits@^2.0.0, inherits@^2.0.1, inherits@^2.0.3, inherits@^2.0.4, inherits@~2.0.1, inherits@~2.0.3:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.4.tgz#0fa2c64f932917c3433a0ded55363aae37416b7c"\n  integrity sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\n\ninherits@2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.1.tgz#b17d08d326b4423e568eff719f91b0b1cbdf69f1"\n  integrity sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE=\n\ninherits@2.0.3:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/inherits/-/inherits-2.0.3.tgz#633c2c83e3da42a502f52466022480f4208261de"\n  integrity sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\n\nini@^1.3.4, ini@^1.3.5, ini@~1.3.0:\n  version "1.3.5"\n  resolved "https://registry.yarnpkg.com/ini/-/ini-1.3.5.tgz#eee25f56db1c9ec6085e0c22778083f596abf927"\n  integrity sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==\n\ninline-source-map@~0.6.0:\n  version "0.6.2"\n  resolved "https://registry.yarnpkg.com/inline-source-map/-/inline-source-map-0.6.2.tgz#f9393471c18a79d1724f863fa38b586370ade2a5"\n  integrity sha1-+Tk0ccGKedFyT4Y/o4tYY3Ct4qU=\n  dependencies:\n    source-map "~0.5.3"\n\ninsert-module-globals@^7.0.0:\n  version "7.2.0"\n  resolved "https://registry.yarnpkg.com/insert-module-globals/-/insert-module-globals-7.2.0.tgz#ec87e5b42728479e327bd5c5c71611ddfb4752ba"\n  integrity sha512-VE6NlW+WGn2/AeOMd496AHFYmE7eLKkUY6Ty31k4og5vmA3Fjuwe9v6ifH6Xx/Hz27QvdoMoviw1/pqWRB09Sw==\n  dependencies:\n    JSONStream "^1.0.3"\n    acorn-node "^1.5.2"\n    combine-source-map "^0.8.0"\n    concat-stream "^1.6.1"\n    is-buffer "^1.1.0"\n    path-is-absolute "^1.0.1"\n    process "~0.11.0"\n    through2 "^2.0.0"\n    undeclared-identifiers "^1.1.2"\n    xtend "^4.0.0"\n\ninterpret@^1.2.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/interpret/-/interpret-1.4.0.tgz#665ab8bc4da27a774a40584e812e3e0fa45b1a1e"\n  integrity sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==\n\ninvariant@^2.2.2, invariant@^2.2.4:\n  version "2.2.4"\n  resolved "https://registry.yarnpkg.com/invariant/-/invariant-2.2.4.tgz#610f3c92c9359ce1db616e538008d23ff35158e6"\n  integrity sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==\n  dependencies:\n    loose-envify "^1.0.0"\n\nipaddr.js@1.9.1:\n  version "1.9.1"\n  resolved "https://registry.yarnpkg.com/ipaddr.js/-/ipaddr.js-1.9.1.tgz#bff38543eeb8984825079ff3a2a8e6cbd46781b3"\n  integrity sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\n\nirregular-plurals@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/irregular-plurals/-/irregular-plurals-2.0.0.tgz#39d40f05b00f656d0b7fa471230dd3b714af2872"\n  integrity sha512-Y75zBYLkh0lJ9qxeHlMjQ7bSbyiSqNW/UOPWDmzC7cXskL1hekSITh1Oc6JV0XCWWZ9DE8VYSB71xocLk3gmGw==\n\nis-absolute@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-absolute/-/is-absolute-1.0.0.tgz#395e1ae84b11f26ad1795e73c17378e48a301576"\n  integrity sha512-dOWoqflvcydARa360Gvv18DZ/gRuHKi2NU/wU5X1ZFzdYfH29nkiNZsF3mp4OJ3H4yo9Mx8A/uAGNzpzPN3yBA==\n  dependencies:\n    is-relative "^1.0.0"\n    is-windows "^1.0.1"\n\nis-accessor-descriptor@^0.1.6:\n  version "0.1.6"\n  resolved "https://registry.yarnpkg.com/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz#a9e12cb3ae8d876727eeef3843f8a0897b5c98d6"\n  integrity sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=\n  dependencies:\n    kind-of "^3.0.2"\n\nis-accessor-descriptor@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz#169c2f6d3df1f992618072365c9b0ea1f6878656"\n  integrity sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==\n  dependencies:\n    kind-of "^6.0.0"\n\nis-alphabetical@^1.0.0:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-alphabetical/-/is-alphabetical-1.0.4.tgz#9e7d6b94916be22153745d184c298cbf986a686d"\n  integrity sha512-DwzsA04LQ10FHTZuL0/grVDk4rFoVH1pjAToYwBrHSxcrBIGQuXrQMtD5U1b0U2XVgKZCTLLP8u2Qxqhy3l2Vg==\n\nis-alphanumeric@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-alphanumeric/-/is-alphanumeric-1.0.0.tgz#4a9cef71daf4c001c1d81d63d140cf53fd6889f4"\n  integrity sha1-Spzvcdr0wAHB2B1j0UDPU/1oifQ=\n\nis-alphanumerical@^1.0.0:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-alphanumerical/-/is-alphanumerical-1.0.4.tgz#7eb9a2431f855f6b1ef1a78e326df515696c4dbf"\n  integrity sha512-UzoZUr+XfVz3t3v4KyGEniVL9BDRoQtY7tOyrRybkVNjDFWyo1yhXNGrrBTQxp3ib9BLAWs7k2YKBQsFRkZG9A==\n  dependencies:\n    is-alphabetical "^1.0.0"\n    is-decimal "^1.0.0"\n\nis-arguments@^1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-arguments/-/is-arguments-1.0.4.tgz#3faf966c7cba0ff437fb31f6250082fcf0448cf3"\n  integrity sha512-xPh0Rmt8NE65sNzvyUmWgI1tz3mKq74lGA0mL8LYZcoIzKOzDh6HmrYm3d18k60nHerC8A9Km8kYu87zfSFnLA==\n\nis-arrayish@^0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/is-arrayish/-/is-arrayish-0.2.1.tgz#77c99840527aa8ecb1a8ba697b80645a7a926a9d"\n  integrity sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=\n\nis-binary-path@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/is-binary-path/-/is-binary-path-1.0.1.tgz#75f16642b480f187a711c814161fd3a4a7655898"\n  integrity sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=\n  dependencies:\n    binary-extensions "^1.0.0"\n\nis-binary-path@~2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/is-binary-path/-/is-binary-path-2.1.0.tgz#ea1f7f3b80f064236e83470f86c09c254fb45b09"\n  integrity sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\n  dependencies:\n    binary-extensions "^2.0.0"\n\nis-buffer@^1.1.0, is-buffer@^1.1.5:\n  version "1.1.6"\n  resolved "https://registry.yarnpkg.com/is-buffer/-/is-buffer-1.1.6.tgz#efaa2ea9daa0d7ab2ea13a97b2b8ad51fefbe8be"\n  integrity sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==\n\nis-buffer@^2.0.0:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/is-buffer/-/is-buffer-2.0.4.tgz#3e572f23c8411a5cfd9557c849e3665e0b290623"\n  integrity sha512-Kq1rokWXOPXWuaMAqZiJW4XxsmD9zGx9q4aePabbn3qCRGedtH7Cm+zV8WETitMfu1wdh+Rvd6w5egwSngUX2A==\n\nis-callable@^1.1.4, is-callable@^1.2.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/is-callable/-/is-callable-1.2.0.tgz#83336560b54a38e35e3a2df7afd0454d691468bb"\n  integrity sha512-pyVD9AaGLxtg6srb2Ng6ynWJqkHU9bEM087AKck0w8QwDarTfNcpIYoU8x8Hv2Icm8u6kFJM18Dag8lyqGkviw==\n\nis-ci@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-ci/-/is-ci-2.0.0.tgz#6bc6334181810e04b5c22b3d589fdca55026404c"\n  integrity sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==\n  dependencies:\n    ci-info "^2.0.0"\n\nis-data-descriptor@^0.1.4:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz#0b5ee648388e2c860282e793f1856fec3f301b56"\n  integrity sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=\n  dependencies:\n    kind-of "^3.0.2"\n\nis-data-descriptor@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz#d84876321d0e7add03990406abbbbd36ba9268c7"\n  integrity sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==\n  dependencies:\n    kind-of "^6.0.0"\n\nis-date-object@^1.0.1:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/is-date-object/-/is-date-object-1.0.2.tgz#bda736f2cd8fd06d32844e7743bfa7494c3bfd7e"\n  integrity sha512-USlDT524woQ08aoZFzh3/Z6ch9Y/EWXEHQ/AaRN0SkKq4t2Jw2R2339tSXmwuVoY7LLlBCbOIlx2myP/L5zk0g==\n\nis-decimal@^1.0.0, is-decimal@^1.0.2:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-decimal/-/is-decimal-1.0.4.tgz#65a3a5958a1c5b63a706e1b333d7cd9f630d3fa5"\n  integrity sha512-RGdriMmQQvZ2aqaQq3awNA6dCGtKpiDFcOzrTWrDAT2MiWrKQVPmxLGHl7Y2nNu6led0kEyoX0enY0qXYsv9zw==\n\nis-descriptor@^0.1.0:\n  version "0.1.6"\n  resolved "https://registry.yarnpkg.com/is-descriptor/-/is-descriptor-0.1.6.tgz#366d8240dde487ca51823b1ab9f07a10a78251ca"\n  integrity sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==\n  dependencies:\n    is-accessor-descriptor "^0.1.6"\n    is-data-descriptor "^0.1.4"\n    kind-of "^5.0.0"\n\nis-descriptor@^1.0.0, is-descriptor@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/is-descriptor/-/is-descriptor-1.0.2.tgz#3b159746a66604b04f8c81524ba365c5f14d86ec"\n  integrity sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==\n  dependencies:\n    is-accessor-descriptor "^1.0.0"\n    is-data-descriptor "^1.0.0"\n    kind-of "^6.0.2"\n\nis-dotfile@^1.0.0:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/is-dotfile/-/is-dotfile-1.0.3.tgz#a6a2f32ffd2dfb04f5ca25ecd0f6b83cf798a1e1"\n  integrity sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE=\n\nis-empty@^1.0.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/is-empty/-/is-empty-1.2.0.tgz#de9bb5b278738a05a0b09a57e1fb4d4a341a9f6b"\n  integrity sha1-3pu1snhzigWgsJpX4ftNSjQan2s=\n\nis-equal-shallow@^0.1.3:\n  version "0.1.3"\n  resolved "https://registry.yarnpkg.com/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz#2238098fc221de0bcfa5d9eac4c45d638aa1c534"\n  integrity sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=\n  dependencies:\n    is-primitive "^2.0.0"\n\nis-error@^2.2.0:\n  version "2.2.2"\n  resolved "https://registry.yarnpkg.com/is-error/-/is-error-2.2.2.tgz#c10ade187b3c93510c5470a5567833ee25649843"\n  integrity sha512-IOQqts/aHWbiisY5DuPJQ0gcbvaLFCa7fBa9xoLfxBZvQ+ZI/Zh9xoI7Gk+G64N0FdK4AbibytHht2tWgpJWLg==\n\nis-extendable@^0.1.0, is-extendable@^0.1.1:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/is-extendable/-/is-extendable-0.1.1.tgz#62b110e289a471418e3ec36a617d472e301dfc89"\n  integrity sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=\n\nis-extendable@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/is-extendable/-/is-extendable-1.0.1.tgz#a7470f9e426733d81bd81e1155264e3a3507cab4"\n  integrity sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==\n  dependencies:\n    is-plain-object "^2.0.4"\n\nis-extglob@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-extglob/-/is-extglob-1.0.0.tgz#ac468177c4943405a092fc8f29760c6ffc6206c0"\n  integrity sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA=\n\nis-extglob@^2.1.0, is-extglob@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/is-extglob/-/is-extglob-2.1.1.tgz#a88c02535791f02ed37c76a1b9ea9773c833f8c2"\n  integrity sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\n\nis-fullwidth-code-point@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz#a3b30a5c4f199183167aaab93beefae3ddfb654f"\n  integrity sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\n\nis-fullwidth-code-point@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz#f116f8064fe90b3f7844a38997c0b75051269f1d"\n  integrity sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\n\nis-get-set-prop@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-get-set-prop/-/is-get-set-prop-1.0.0.tgz#2731877e4d78a6a69edcce6bb9d68b0779e76312"\n  integrity sha1-JzGHfk14pqae3M5rudaLB3nnYxI=\n  dependencies:\n    get-set-props "^0.1.0"\n    lowercase-keys "^1.0.0"\n\nis-glob@^2.0.0, is-glob@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/is-glob/-/is-glob-2.0.1.tgz#d096f926a3ded5600f3fdfd91198cb0888c2d863"\n  integrity sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=\n  dependencies:\n    is-extglob "^1.0.0"\n\nis-glob@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/is-glob/-/is-glob-3.1.0.tgz#7ba5ae24217804ac70707b96922567486cc3e84a"\n  integrity sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=\n  dependencies:\n    is-extglob "^2.1.0"\n\nis-glob@^4.0.0, is-glob@^4.0.1, is-glob@~4.0.1:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/is-glob/-/is-glob-4.0.1.tgz#7567dbe9f2f5e2467bc77ab83c4a29482407a5dc"\n  integrity sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==\n  dependencies:\n    is-extglob "^2.1.1"\n\nis-hexadecimal@^1.0.0:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-hexadecimal/-/is-hexadecimal-1.0.4.tgz#cc35c97588da4bd49a8eedd6bc4082d44dcb23a7"\n  integrity sha512-gyPJuv83bHMpocVYoqof5VDiZveEoGoFL8m3BXNb2VW8Xs+rz9kqO8LOQ5DH6EsuvilT1ApazU0pyl+ytbPtlw==\n\nis-installed-globally@^0.3.1:\n  version "0.3.2"\n  resolved "https://registry.yarnpkg.com/is-installed-globally/-/is-installed-globally-0.3.2.tgz#fd3efa79ee670d1187233182d5b0a1dd00313141"\n  integrity sha512-wZ8x1js7Ia0kecP/CHM/3ABkAmujX7WPvQk6uu3Fly/Mk44pySulQpnHG46OMjHGXApINnV4QhY3SWnECO2z5g==\n  dependencies:\n    global-dirs "^2.0.1"\n    is-path-inside "^3.0.1"\n\nis-js-type@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-js-type/-/is-js-type-2.0.0.tgz#73617006d659b4eb4729bba747d28782df0f7e22"\n  integrity sha1-c2FwBtZZtOtHKbunR9KHgt8PfiI=\n  dependencies:\n    js-types "^1.0.0"\n\nis-negated-glob@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-negated-glob/-/is-negated-glob-1.0.0.tgz#6910bca5da8c95e784b5751b976cf5a10fee36d2"\n  integrity sha1-aRC8pdqMleeEtXUbl2z1oQ/uNtI=\n\nis-npm@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/is-npm/-/is-npm-4.0.0.tgz#c90dd8380696df87a7a6d823c20d0b12bbe3c84d"\n  integrity sha512-96ECIfh9xtDDlPylNPXhzjsykHsMJZ18ASpaWzQyBr4YRTcVjUvzaHayDAES2oU/3KpljhHUjtSRNiDwi0F0ig==\n\nis-number@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/is-number/-/is-number-2.1.0.tgz#01fcbbb393463a548f2f466cce16dece49db908f"\n  integrity sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=\n  dependencies:\n    kind-of "^3.0.2"\n\nis-number@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/is-number/-/is-number-3.0.0.tgz#24fd6201a4782cf50561c810276afc7d12d71195"\n  integrity sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=\n  dependencies:\n    kind-of "^3.0.2"\n\nis-number@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/is-number/-/is-number-4.0.0.tgz#0026e37f5454d73e356dfe6564699867c6a7f0ff"\n  integrity sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ==\n\nis-number@^7.0.0:\n  version "7.0.0"\n  resolved "https://registry.yarnpkg.com/is-number/-/is-number-7.0.0.tgz#7535345b896734d5f80c4d06c50955527a14f12b"\n  integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\n\nis-obj-prop@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-obj-prop/-/is-obj-prop-1.0.0.tgz#b34de79c450b8d7c73ab2cdf67dc875adb85f80e"\n  integrity sha1-s03nnEULjXxzqyzfZ9yHWtuF+A4=\n  dependencies:\n    lowercase-keys "^1.0.0"\n    obj-props "^1.0.0"\n\nis-obj@^1.0.0, is-obj@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/is-obj/-/is-obj-1.0.1.tgz#3e4729ac1f5fde025cd7d83a896dab9f4f67db0f"\n  integrity sha1-PkcprB9f3gJc19g6iW2rn09n2w8=\n\nis-obj@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-obj/-/is-obj-2.0.0.tgz#473fb05d973705e3fd9620545018ca8e22ef4982"\n  integrity sha512-drqDG3cbczxxEJRoOXcOjtdp1J/lyp1mNn0xaznRs8+muBhgQcrnbspox5X5fOw0HnMnbfDzvnEMEtqDEJEo8w==\n\nis-path-inside@^3.0.1, is-path-inside@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/is-path-inside/-/is-path-inside-3.0.2.tgz#f5220fc82a3e233757291dddc9c5877f2a1f3017"\n  integrity sha512-/2UGPSgmtqwo1ktx8NDHjuPwZWmHhO+gj0f93EkhLB5RgW9RZevWYYlIkS6zePc6U2WpOdQYIwHe9YC4DWEBVg==\n\nis-plain-obj@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/is-plain-obj/-/is-plain-obj-1.1.0.tgz#71a50c8429dfca773c92a390a4a03b39fcd51d3e"\n  integrity sha1-caUMhCnfync8kqOQpKA7OfzVHT4=\n\nis-plain-obj@^2.0.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/is-plain-obj/-/is-plain-obj-2.1.0.tgz#45e42e37fccf1f40da8e5f76ee21515840c09287"\n  integrity sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\n\nis-plain-object@^2.0.3, is-plain-object@^2.0.4:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/is-plain-object/-/is-plain-object-2.0.4.tgz#2c163b3fafb1b606d9d17928f05c2a1c38e07677"\n  integrity sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==\n  dependencies:\n    isobject "^3.0.1"\n\nis-posix-bracket@^0.1.0:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz#3334dc79774368e92f016e6fbc0a88f5cd6e6bc4"\n  integrity sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q=\n\nis-primitive@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-primitive/-/is-primitive-2.0.0.tgz#207bab91638499c07b2adf240a41a87210034575"\n  integrity sha1-IHurkWOEmcB7Kt8kCkGochADRXU=\n\nis-proto-prop@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-proto-prop/-/is-proto-prop-2.0.0.tgz#99ab2863462e44090fd083efd1929058f9d935e1"\n  integrity sha512-jl3NbQ/fGLv5Jhan4uX+Ge9ohnemqyblWVVCpAvtTQzNFvV2xhJq+esnkIbYQ9F1nITXoLfDDQLp7LBw/zzncg==\n  dependencies:\n    lowercase-keys "^1.0.0"\n    proto-props "^2.0.0"\n\nis-regex@^1.0.4, is-regex@^1.1.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/is-regex/-/is-regex-1.1.1.tgz#c6f98aacc546f6cec5468a07b7b153ab564a57b9"\n  integrity sha512-1+QkEcxiLlB7VEyFtyBg94e08OAsvq7FUBgApTq/w2ymCLyKJgDPsybBENVtA7XCQEgEXxKPonG+mvYRxh/LIg==\n  dependencies:\n    has-symbols "^1.0.1"\n\nis-regexp@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-regexp/-/is-regexp-1.0.0.tgz#fd2d883545c46bac5a633e7b9a09e87fa2cb5069"\n  integrity sha1-/S2INUXEa6xaYz57mgnof6LLUGk=\n\nis-relative@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-relative/-/is-relative-1.0.0.tgz#a1bb6935ce8c5dba1e8b9754b9b2dcc020e2260d"\n  integrity sha512-Kw/ReK0iqwKeu0MITLFuj0jbPAmEiOsIwyIXvvbfa6QfmN9pkD1M+8pdk7Rl/dTKbH34/XBFMbgD4iMJhLQbGA==\n  dependencies:\n    is-unc-path "^1.0.0"\n\nis-stream@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/is-stream/-/is-stream-2.0.0.tgz#bde9c32680d6fae04129d6ac9d921ce7815f78e3"\n  integrity sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==\n\nis-string@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/is-string/-/is-string-1.0.5.tgz#40493ed198ef3ff477b8c7f92f644ec82a5cd3a6"\n  integrity sha512-buY6VNRjhQMiF1qWDouloZlQbRhDPCebwxSjxMjxgemYT46YMd2NR0/H+fBhEfWX4A/w9TBJ+ol+okqJKFE6vQ==\n\nis-symbol@^1.0.2:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/is-symbol/-/is-symbol-1.0.3.tgz#38e1014b9e6329be0de9d24a414fd7441ec61937"\n  integrity sha512-OwijhaRSgqvhm/0ZdAcXNZt9lYdKFpcRDT5ULUuYXPoT794UNOdU+gpT6Rzo7b4V2HUl/op6GqY894AZwv9faQ==\n  dependencies:\n    has-symbols "^1.0.1"\n\nis-text-path@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/is-text-path/-/is-text-path-1.0.1.tgz#4e1aa0fb51bfbcb3e92688001397202c1775b66e"\n  integrity sha1-Thqg+1G/vLPpJogAE5cgLBd1tm4=\n  dependencies:\n    text-extensions "^1.0.0"\n\nis-typedarray@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-typedarray/-/is-typedarray-1.0.0.tgz#e479c80858df0c1b11ddda6940f96011fcda4a9a"\n  integrity sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=\n\nis-unc-path@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/is-unc-path/-/is-unc-path-1.0.0.tgz#d731e8898ed090a12c352ad2eaed5095ad322c9d"\n  integrity sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==\n  dependencies:\n    unc-path-regex "^0.1.2"\n\nis-url@^1.2.2:\n  version "1.2.4"\n  resolved "https://registry.yarnpkg.com/is-url/-/is-url-1.2.4.tgz#04a4df46d28c4cff3d73d01ff06abeb318a1aa52"\n  integrity sha512-ITvGim8FhRiYe4IQ5uHSkj7pVaPDrCTkNd3yq3cV7iZAcJdHTUMPMEHcqSOy9xZ9qFenQCvi+2wjH9a1nXqHww==\n\nis-whitespace-character@^1.0.0:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-whitespace-character/-/is-whitespace-character-1.0.4.tgz#0858edd94a95594c7c9dd0b5c174ec6e45ee4aa7"\n  integrity sha512-SDweEzfIZM0SJV0EUga669UTKlmL0Pq8Lno0QDQsPnvECB3IM2aP0gdx5TrU0A01MAPfViaZiI2V1QMZLaKK5w==\n\nis-windows@^1.0.1, is-windows@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/is-windows/-/is-windows-1.0.2.tgz#d1850eb9791ecd18e6182ce12a30f396634bb19d"\n  integrity sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==\n\nis-word-character@^1.0.0:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/is-word-character/-/is-word-character-1.0.4.tgz#ce0e73216f98599060592f62ff31354ddbeb0230"\n  integrity sha512-5SMO8RVennx3nZrqtKwCGyyetPE9VDba5ugvKLaD4KopPG5kR4mQ7tNt/r7feL5yt5h3lpuBbIUmCOG2eSzXHA==\n\nis-wsl@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/is-wsl/-/is-wsl-1.1.0.tgz#1f16e4aa22b04d1336b66188a66af3c600c3a66d"\n  integrity sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0=\n\nis-yarn-global@^0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/is-yarn-global/-/is-yarn-global-0.3.0.tgz#d502d3382590ea3004893746754c89139973e232"\n  integrity sha512-VjSeb/lHmkoyd8ryPVIKvOCn4D1koMqY+vqyjjUfc3xyKtP4dYOxM44sZrnqQSzSds3xyOrUTLTC9LVCVgLngw==\n\nisarray@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/isarray/-/isarray-0.0.1.tgz#8a18acfca9a8f4177e09abfc6038939b05d1eedf"\n  integrity sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8=\n\nisarray@1.0.0, isarray@^1.0.0, isarray@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/isarray/-/isarray-1.0.0.tgz#bb935d48582cba168c06834957a54a3e07124f11"\n  integrity sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=\n\nisarray@^2.0.1:\n  version "2.0.5"\n  resolved "https://registry.yarnpkg.com/isarray/-/isarray-2.0.5.tgz#8af1e4c1221244cc62459faf38940d4e644a5723"\n  integrity sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\n\nisbinaryfile@~0.1.9:\n  version "0.1.9"\n  resolved "https://registry.yarnpkg.com/isbinaryfile/-/isbinaryfile-0.1.9.tgz#15eece35c4ab708d8924da99fb874f2b5cc0b6c4"\n  integrity sha1-Fe7ONcSrcI2JJNqZ+4dPK1zAtsQ=\n\nisexe@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/isexe/-/isexe-2.0.0.tgz#e8fbf374dc556ff8947a10dcb0572d633f2cfa10"\n  integrity sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=\n\nisobject@^2.0.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/isobject/-/isobject-2.1.0.tgz#f065561096a3f1da2ef46272f815c840d87e0c89"\n  integrity sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=\n  dependencies:\n    isarray "1.0.0"\n\nisobject@^3.0.0, isobject@^3.0.1:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/isobject/-/isobject-3.0.1.tgz#4e431e92b11a9731636aa1f9c8d1ccbcfdab78df"\n  integrity sha1-TkMekrEalzFjaqH5yNHMvP2reN8=\n\nistanbul-lib-coverage@^3.0.0, istanbul-lib-coverage@^3.0.0-alpha.1:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/istanbul-lib-coverage/-/istanbul-lib-coverage-3.0.0.tgz#f5944a37c70b550b02a78a5c3b2055b280cec8ec"\n  integrity sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC/mggutCMUIhWMm8gAHb8tHlyfD3/l6rlgNA5cKdDzEAf6hEg==\n\nistanbul-lib-hook@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/istanbul-lib-hook/-/istanbul-lib-hook-3.0.0.tgz#8f84c9434888cc6b1d0a9d7092a76d239ebf0cc6"\n  integrity sha512-Pt/uge1Q9s+5VAZ+pCo16TYMWPBIl+oaNIjgLQxcX0itS6ueeaA+pEfThZpH8WxhFgCiEb8sAJY6MdUKgiIWaQ==\n  dependencies:\n    append-transform "^2.0.0"\n\nistanbul-lib-instrument@^4.0.0:\n  version "4.0.3"\n  resolved "https://registry.yarnpkg.com/istanbul-lib-instrument/-/istanbul-lib-instrument-4.0.3.tgz#873c6fff897450118222774696a3f28902d77c1d"\n  integrity sha512-BXgQl9kf4WTCPCCpmFGoJkz/+uhvm7h7PFKUYxh7qarQd3ER33vHG//qaE8eN25l07YqZPpHXU9I09l/RD5aGQ==\n  dependencies:\n    "@babel/core" "^7.7.5"\n    "@istanbuljs/schema" "^0.1.2"\n    istanbul-lib-coverage "^3.0.0"\n    semver "^6.3.0"\n\nistanbul-lib-processinfo@^2.0.2:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/istanbul-lib-processinfo/-/istanbul-lib-processinfo-2.0.2.tgz#e1426514662244b2f25df728e8fd1ba35fe53b9c"\n  integrity sha512-kOwpa7z9hme+IBPZMzQ5vdQj8srYgAtaRqeI48NGmAQ+/5yKiHLV0QbYqQpxsdEF0+w14SoB8YbnHKcXE2KnYw==\n  dependencies:\n    archy "^1.0.0"\n    cross-spawn "^7.0.0"\n    istanbul-lib-coverage "^3.0.0-alpha.1"\n    make-dir "^3.0.0"\n    p-map "^3.0.0"\n    rimraf "^3.0.0"\n    uuid "^3.3.3"\n\nistanbul-lib-report@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/istanbul-lib-report/-/istanbul-lib-report-3.0.0.tgz#7518fe52ea44de372f460a76b5ecda9ffb73d8a6"\n  integrity sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5yuydOLINXsfbus9ROw==\n  dependencies:\n    istanbul-lib-coverage "^3.0.0"\n    make-dir "^3.0.0"\n    supports-color "^7.1.0"\n\nistanbul-lib-source-maps@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.0.tgz#75743ce6d96bb86dc7ee4352cf6366a23f0b1ad9"\n  integrity sha512-c16LpFRkR8vQXyHZ5nLpY35JZtzj1PQY1iZmesUbf1FZHbIupcWfjgOXBY9YHkLEQ6puz1u4Dgj6qmU/DisrZg==\n  dependencies:\n    debug "^4.1.1"\n    istanbul-lib-coverage "^3.0.0"\n    source-map "^0.6.1"\n\nistanbul-middleware@0.2.2:\n  version "0.2.2"\n  resolved "https://registry.yarnpkg.com/istanbul-middleware/-/istanbul-middleware-0.2.2.tgz#83c4c13c128e1a0d6a147792391af3c15a8ab8e0"\n  integrity sha1-g8TBPBKOGg1qFHeSORrzwVqKuOA=\n  dependencies:\n    archiver "0.14.x"\n    body-parser "~1.12.3"\n    express "4.x"\n    istanbul "0.4.x"\n\nistanbul-reports@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/istanbul-reports/-/istanbul-reports-3.0.2.tgz#d593210e5000683750cb09fc0644e4b6e27fd53b"\n  integrity sha512-9tZvz7AiR3PEDNGiV9vIouQ/EAcqMXFmkcA1CDFTwOB98OZVDL0PH9glHotf5Ugp6GCOTypfzGWI/OqjWNCRUw==\n  dependencies:\n    html-escaper "^2.0.0"\n    istanbul-lib-report "^3.0.0"\n\nistanbul@0.4.x:\n  version "0.4.5"\n  resolved "https://registry.yarnpkg.com/istanbul/-/istanbul-0.4.5.tgz#65c7d73d4c4da84d4f3ac310b918fb0b8033733b"\n  integrity sha1-ZcfXPUxNqE1POsMQuRj7C4Azczs=\n  dependencies:\n    abbrev "1.0.x"\n    async "1.x"\n    escodegen "1.8.x"\n    esprima "2.7.x"\n    glob "^5.0.15"\n    handlebars "^4.0.1"\n    js-yaml "3.x"\n    mkdirp "0.5.x"\n    nopt "3.x"\n    once "1.x"\n    resolve "1.1.x"\n    supports-color "^3.1.0"\n    which "^1.1.1"\n    wordwrap "^1.0.0"\n\nistanbul@^0.2.8:\n  version "0.2.16"\n  resolved "https://registry.yarnpkg.com/istanbul/-/istanbul-0.2.16.tgz#870545a0d4f4b4ce161039e9e805a98c2c700bd9"\n  integrity sha1-hwVFoNT0tM4WEDnp6AWpjCxwC9k=\n  dependencies:\n    abbrev "1.0.x"\n    async "0.9.x"\n    escodegen "1.3.x"\n    esprima "1.2.x"\n    fileset "0.1.x"\n    handlebars "1.3.x"\n    js-yaml "3.x"\n    mkdirp "0.5.x"\n    nopt "3.x"\n    resolve "0.7.x"\n    which "1.0.x"\n    wordwrap "0.0.x"\n\n"js-tokens@^3.0.0 || ^4.0.0", js-tokens@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/js-tokens/-/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499"\n  integrity sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\n\njs-types@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/js-types/-/js-types-1.0.0.tgz#d242e6494ed572ad3c92809fc8bed7f7687cbf03"\n  integrity sha1-0kLmSU7Vcq08koCfyL7X92h8vwM=\n\njs-yaml@3.13.1:\n  version "3.13.1"\n  resolved "https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.13.1.tgz#aff151b30bfdfa8e49e05da22e7415e9dfa37847"\n  integrity sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==\n  dependencies:\n    argparse "^1.0.7"\n    esprima "^4.0.0"\n\njs-yaml@3.x, js-yaml@^3.13.1, js-yaml@^3.6.1:\n  version "3.14.0"\n  resolved "https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.14.0.tgz#a7a34170f26a21bb162424d8adacb4113a69e482"\n  integrity sha512-/4IbIeHcD9VMHFqDR/gQ7EdZdLimOvW2DdcxFjdyyZ9NsbS+ccrXqVWDtab/lRl5AlUqmpBx8EhPaWR+OtY17A==\n  dependencies:\n    argparse "^1.0.7"\n    esprima "^4.0.0"\n\njsesc@^2.5.1:\n  version "2.5.2"\n  resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-2.5.2.tgz#80564d2e483dacf6e8ef209650a67df3f0c283a4"\n  integrity sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==\n\njsesc@~0.5.0:\n  version "0.5.0"\n  resolved "https://registry.yarnpkg.com/jsesc/-/jsesc-0.5.0.tgz#e7dee66e35d6fc16f710fe91d5cf69f70f08911d"\n  integrity sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0=\n\njson-buffer@3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/json-buffer/-/json-buffer-3.0.0.tgz#5b1f397afc75d677bde8bcfc0e47e1f9a3d9a898"\n  integrity sha1-Wx85evx11ne96Lz8Dkfh+aPZqJg=\n\njson-parse-better-errors@^1.0.1:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz#bb867cfb3450e69107c131d1c514bab3dc8bcaa9"\n  integrity sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw==\n\njson-schema-traverse@^0.4.1:\n  version "0.4.1"\n  resolved "https://registry.yarnpkg.com/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz#69f6a87d9513ab8bb8fe63bdb0979c448e684660"\n  integrity sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==\n\njson-stable-stringify-without-jsonify@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz#9db7b59496ad3f3cfef30a75142d2d930ad72651"\n  integrity sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=\n\njson-stable-stringify@~0.0.0:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/json-stable-stringify/-/json-stable-stringify-0.0.1.tgz#611c23e814db375527df851193db59dd2af27f45"\n  integrity sha1-YRwj6BTbN1Un34URk9tZ3Sryf0U=\n  dependencies:\n    jsonify "~0.0.0"\n\njson-stringify-safe@~5.0.0:\n  version "5.0.1"\n  resolved "https://registry.yarnpkg.com/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz#1296a2d58fd45f19a0f6ce01d65701e2c735b6eb"\n  integrity sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus=\n\njson3@3.3.2:\n  version "3.3.2"\n  resolved "https://registry.yarnpkg.com/json3/-/json3-3.3.2.tgz#3c0434743df93e2f5c42aee7b19bcb483575f4e1"\n  integrity sha1-PAQ0dD35Pi9cQq7nsZvLSDV19OE=\n\njson5@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/json5/-/json5-1.0.1.tgz#779fb0018604fa854eacbf6252180d83543e3dbe"\n  integrity sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==\n  dependencies:\n    minimist "^1.2.0"\n\njson5@^2.0.0, json5@^2.1.2, json5@^2.1.3:\n  version "2.1.3"\n  resolved "https://registry.yarnpkg.com/json5/-/json5-2.1.3.tgz#c9b0f7fa9233bfe5807fe66fcf3a5617ed597d43"\n  integrity sha512-KXPvOm8K9IJKFM0bmdn8QXh7udDh1g/giieX0NLCaMnb4hEiVFqnop2ImTXCc5e0/oHz3LTqmHGtExn5hfMkOA==\n  dependencies:\n    minimist "^1.2.5"\n\njsonfile@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-4.0.0.tgz#8771aae0799b64076b76640fca058f9c10e33ecb"\n  integrity sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=\n  optionalDependencies:\n    graceful-fs "^4.1.6"\n\njsonfile@^6.0.1:\n  version "6.0.1"\n  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-6.0.1.tgz#98966cba214378c8c84b82e085907b40bf614179"\n  integrity sha512-jR2b5v7d2vIOust+w3wtFKZIfpC2pnRmFAhAC/BuweZFQR8qZzxH1OyrQ10HmdVYiXWkYUqPVsz91cG7EL2FBg==\n  dependencies:\n    universalify "^1.0.0"\n  optionalDependencies:\n    graceful-fs "^4.1.6"\n\njsonfile@~1.1.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/jsonfile/-/jsonfile-1.1.1.tgz#da4fd6ad77f1a255203ea63c7bc32dc31ef64433"\n  integrity sha1-2k/WrXfxolUgPqY8e8Mtwx72RDM=\n\njsonify@~0.0.0:\n  version "0.0.0"\n  resolved "https://registry.yarnpkg.com/jsonify/-/jsonify-0.0.0.tgz#2c74b6ee41d93ca51b7b5aaee8f503631d252a73"\n  integrity sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=\n\njsonparse@^1.2.0:\n  version "1.3.1"\n  resolved "https://registry.yarnpkg.com/jsonparse/-/jsonparse-1.3.1.tgz#3f4dae4a91fac315f71062f8521cc239f1366280"\n  integrity sha1-P02uSpH6wxX3EGL4UhzCOfE2YoA=\n\nkeypress@0.1.x:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/keypress/-/keypress-0.1.0.tgz#4a3188d4291b66b4f65edb99f806aa9ae293592a"\n  integrity sha1-SjGI1CkbZrT2XtuZ+AaqmuKTWSo=\n\nkeyv@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/keyv/-/keyv-3.1.0.tgz#ecc228486f69991e49e9476485a5be1e8fc5c4d9"\n  integrity sha512-9ykJ/46SN/9KPM/sichzQ7OvXyGDYKGTaDlKMGCAlg2UK8KRy4jb0d8sFc+0Tt0YYnThq8X2RZgCg74RPxgcVA==\n  dependencies:\n    json-buffer "3.0.0"\n\nkind-of@^3.0.2, kind-of@^3.0.3, kind-of@^3.2.0:\n  version "3.2.2"\n  resolved "https://registry.yarnpkg.com/kind-of/-/kind-of-3.2.2.tgz#31ea21a734bab9bbb0f32466d893aea51e4a3c64"\n  integrity sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=\n  dependencies:\n    is-buffer "^1.1.5"\n\nkind-of@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/kind-of/-/kind-of-4.0.0.tgz#20813df3d712928b207378691a45066fae72dd57"\n  integrity sha1-IIE989cSkosgc3hpGkUGb65y3Vc=\n  dependencies:\n    is-buffer "^1.1.5"\n\nkind-of@^5.0.0:\n  version "5.1.0"\n  resolved "https://registry.yarnpkg.com/kind-of/-/kind-of-5.1.0.tgz#729c91e2d857b7a419a1f9aa65685c4c33f5845d"\n  integrity sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==\n\nkind-of@^6.0.0, kind-of@^6.0.2, kind-of@^6.0.3:\n  version "6.0.3"\n  resolved "https://registry.yarnpkg.com/kind-of/-/kind-of-6.0.3.tgz#07c05034a6c349fa06e24fa35aa76db4580ce4dd"\n  integrity sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==\n\nlabeled-stream-splicer@^2.0.0:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/labeled-stream-splicer/-/labeled-stream-splicer-2.0.2.tgz#42a41a16abcd46fd046306cf4f2c3576fffb1c21"\n  integrity sha512-Ca4LSXFFZUjPScRaqOcFxneA0VpKZr4MMYCljyQr4LIewTLb3Y0IUTIsnBBsVubIeEfxeSZpSjSsRM8APEQaAw==\n  dependencies:\n    inherits "^2.0.1"\n    stream-splicer "^2.0.0"\n\nlatest-version@^5.0.0:\n  version "5.1.0"\n  resolved "https://registry.yarnpkg.com/latest-version/-/latest-version-5.1.0.tgz#119dfe908fe38d15dfa43ecd13fa12ec8832face"\n  integrity sha512-weT+r0kTkRQdCdYCNtkMwWXQTMEswKrFBkm4ckQOMVhhqhIMI1UT2hMj+1iigIhgSZm5gTmrRXBNoGUgaTY1xA==\n  dependencies:\n    package-json "^6.3.0"\n\nlazystream@~0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/lazystream/-/lazystream-0.1.0.tgz#1b25d63c772a4c20f0a5ed0a9d77f484b6e16920"\n  integrity sha1-GyXWPHcqTCDwpe0KnXf0hLbhaSA=\n  dependencies:\n    readable-stream "~1.0.2"\n\nleven@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/leven/-/leven-3.1.0.tgz#77891de834064cccba82ae7842bb6b14a13ed7f2"\n  integrity sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==\n\nlevenary@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/levenary/-/levenary-1.1.1.tgz#842a9ee98d2075aa7faeedbe32679e9205f46f77"\n  integrity sha512-mkAdOIt79FD6irqjYSs4rdbnlT5vRonMEvBVPVb3XmevfS8kgRXwfes0dhPdEtzTWD/1eNE/Bm/G1iRt6DcnQQ==\n  dependencies:\n    leven "^3.1.0"\n\nlevn@^0.4.1:\n  version "0.4.1"\n  resolved "https://registry.yarnpkg.com/levn/-/levn-0.4.1.tgz#ae4562c007473b932a6200d403268dd2fffc6ade"\n  integrity sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==\n  dependencies:\n    prelude-ls "^1.2.1"\n    type-check "~0.4.0"\n\nlevn@~0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/levn/-/levn-0.3.0.tgz#3b09924edf9f083c0490fdd4c0bc4421e04764ee"\n  integrity sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=\n  dependencies:\n    prelude-ls "~1.1.2"\n    type-check "~0.3.2"\n\nlibnpmconfig@^1.0.0:\n  version "1.2.1"\n  resolved "https://registry.yarnpkg.com/libnpmconfig/-/libnpmconfig-1.2.1.tgz#c0c2f793a74e67d4825e5039e7a02a0044dfcbc0"\n  integrity sha512-9esX8rTQAHqarx6qeZqmGQKBNZR5OIbl/Ayr0qQDy3oXja2iFVQQI81R6GZ2a02bSNZ9p3YOGX1O6HHCb1X7kA==\n  dependencies:\n    figgy-pudding "^3.5.1"\n    find-up "^3.0.0"\n    ini "^1.3.5"\n\nline-column-path@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/line-column-path/-/line-column-path-2.0.0.tgz#439aff48ef80d74c475801a25b560d021acf1288"\n  integrity sha512-nz3A+vi4bElhwd62E9+Qk/f9BDYLSzD/4Hy1rir0I4GnMxSTezSymzANyph5N1PgRZ3sSbA+yR5hOuXxc71a0Q==\n  dependencies:\n    type-fest "^0.4.1"\n\nlines-and-columns@^1.1.6:\n  version "1.1.6"\n  resolved "https://registry.yarnpkg.com/lines-and-columns/-/lines-and-columns-1.1.6.tgz#1c00c743b433cd0a4e80758f7b64a57440d9ff00"\n  integrity sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA=\n\nlint-staged@^10.2.11:\n  version "10.2.11"\n  resolved "https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.2.11.tgz#713c80877f2dc8b609b05bc59020234e766c9720"\n  integrity sha512-LRRrSogzbixYaZItE2APaS4l2eJMjjf5MbclRZpLJtcQJShcvUzKXsNeZgsLIZ0H0+fg2tL4B59fU9wHIHtFIA==\n  dependencies:\n    chalk "^4.0.0"\n    cli-truncate "2.1.0"\n    commander "^5.1.0"\n    cosmiconfig "^6.0.0"\n    debug "^4.1.1"\n    dedent "^0.7.0"\n    enquirer "^2.3.5"\n    execa "^4.0.1"\n    listr2 "^2.1.0"\n    log-symbols "^4.0.0"\n    micromatch "^4.0.2"\n    normalize-path "^3.0.0"\n    please-upgrade-node "^3.2.0"\n    string-argv "0.3.1"\n    stringify-object "^3.3.0"\n\nlistr2@^2.1.0:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/listr2/-/listr2-2.4.1.tgz#006fc94ae77b3195403cbf3a4a563e2d6366224f"\n  integrity sha512-8pYsCZCztr5+KAjReLyBeGhLV0vaQ2Du/eMe/ux9QAfQl7efiWejM1IWjALh0zHIRYuIbhQ8N2KztZ4ci56pnQ==\n  dependencies:\n    chalk "^4.1.0"\n    cli-truncate "^2.1.0"\n    figures "^3.2.0"\n    indent-string "^4.0.0"\n    log-update "^4.0.0"\n    p-map "^4.0.0"\n    rxjs "^6.6.0"\n    through "^2.3.8"\n\nload-json-file@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/load-json-file/-/load-json-file-2.0.0.tgz#7947e42149af80d696cbf797bcaabcfe1fe29ca8"\n  integrity sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=\n  dependencies:\n    graceful-fs "^4.1.2"\n    parse-json "^2.2.0"\n    pify "^2.0.0"\n    strip-bom "^3.0.0"\n\nload-json-file@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/load-json-file/-/load-json-file-4.0.0.tgz#2f5f45ab91e33216234fd53adab668eb4ec0993b"\n  integrity sha1-L19Fq5HjMhYjT9U62rZo607AmTs=\n  dependencies:\n    graceful-fs "^4.1.2"\n    parse-json "^4.0.0"\n    pify "^3.0.0"\n    strip-bom "^3.0.0"\n\nload-plugin@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/load-plugin/-/load-plugin-3.0.0.tgz#8f3ce57cf4e5111639911012487bc1c2ba3d0e6c"\n  integrity sha512-od7eKCCZ62ITvFf8nHHrIiYmgOHb4xVNDRDqxBWSaao5FZyyZVX8OmRCbwjDGPrSrgIulwPNyBsWCGnhiDC0oQ==\n  dependencies:\n    libnpmconfig "^1.0.0"\n    resolve-from "^5.0.0"\n\nload-script@0.0.5:\n  version "0.0.5"\n  resolved "https://registry.yarnpkg.com/load-script/-/load-script-0.0.5.tgz#cbd54b27cd7309902b749640c70e996f4c643b63"\n  integrity sha1-y9VLJ81zCZArdJZAxw6Zb0xkO2M=\n\nlocaltunnel@1.5.0:\n  version "1.5.0"\n  resolved "https://registry.yarnpkg.com/localtunnel/-/localtunnel-1.5.0.tgz#5be949779325e9f3273021a3f38d2e7a8dcd7c4f"\n  integrity sha1-W+lJd5Ml6fMnMCGj840ueo3NfE8=\n  dependencies:\n    debug "0.7.4"\n    optimist "0.3.4"\n    request "2.11.4"\n\nlocate-path@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-2.0.0.tgz#2b568b265eec944c6d9c0de9c3dbbbca0354cd8e"\n  integrity sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=\n  dependencies:\n    p-locate "^2.0.0"\n    path-exists "^3.0.0"\n\nlocate-path@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-3.0.0.tgz#dbec3b3ab759758071b58fe59fc41871af21400e"\n  integrity sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==\n  dependencies:\n    p-locate "^3.0.0"\n    path-exists "^3.0.0"\n\nlocate-path@^5.0.0:\n  version "5.0.0"\n  resolved "https://registry.yarnpkg.com/locate-path/-/locate-path-5.0.0.tgz#1afba396afd676a6d42504d0a67a3a7eb9f62aa0"\n  integrity sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\n  dependencies:\n    p-locate "^4.1.0"\n\nlodash._baseassign@^3.0.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/lodash._baseassign/-/lodash._baseassign-3.2.0.tgz#8c38a099500f215ad09e59f1722fd0c52bfe0a4e"\n  integrity sha1-jDigmVAPIVrQnlnxci/QxSv+Ck4=\n  dependencies:\n    lodash._basecopy "^3.0.0"\n    lodash.keys "^3.0.0"\n\nlodash._basecopy@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz#8da0e6a876cf344c0ad8a54882111dd3c5c7ca36"\n  integrity sha1-jaDmqHbPNEwK2KVIghEd08XHyjY=\n\nlodash._basecreate@^3.0.0:\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/lodash._basecreate/-/lodash._basecreate-3.0.3.tgz#1bc661614daa7fc311b7d03bf16806a0213cf821"\n  integrity sha1-G8ZhYU2qf8MRt9A78WgGoCE8+CE=\n\nlodash._getnative@^3.0.0:\n  version "3.9.1"\n  resolved "https://registry.yarnpkg.com/lodash._getnative/-/lodash._getnative-3.9.1.tgz#570bc7dede46d61cdcde687d65d3eecbaa3aaff5"\n  integrity sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U=\n\nlodash._isiterateecall@^3.0.0:\n  version "3.0.9"\n  resolved "https://registry.yarnpkg.com/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz#5203ad7ba425fae842460e696db9cf3e6aac057c"\n  integrity sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw=\n\nlodash._isnative@~2.4.1:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/lodash._isnative/-/lodash._isnative-2.4.1.tgz#3ea6404b784a7be836c7b57580e1cdf79b14832c"\n  integrity sha1-PqZAS3hKe+g2x7V1gOHN95sUgyw=\n\nlodash._objecttypes@~2.4.1:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/lodash._objecttypes/-/lodash._objecttypes-2.4.1.tgz#7c0b7f69d98a1f76529f890b0cdb1b4dfec11c11"\n  integrity sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE=\n\nlodash._reinterpolate@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz#0ccf2d89166af03b3663c796538b75ac6e114d9d"\n  integrity sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0=\n\nlodash._shimkeys@~2.4.1:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/lodash._shimkeys/-/lodash._shimkeys-2.4.1.tgz#6e9cc9666ff081f0b5a6c978b83e242e6949d203"\n  integrity sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=\n  dependencies:\n    lodash._objecttypes "~2.4.1"\n\nlodash.create@3.1.1:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/lodash.create/-/lodash.create-3.1.1.tgz#d7f2849f0dbda7e04682bb8cd72ab022461debe7"\n  integrity sha1-1/KEnw29p+BGgruM1yqwIkYd6+c=\n  dependencies:\n    lodash._baseassign "^3.0.0"\n    lodash._basecreate "^3.0.0"\n    lodash._isiterateecall "^3.0.0"\n\nlodash.defaults@~2.4.1:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/lodash.defaults/-/lodash.defaults-2.4.1.tgz#a7e8885f05e68851144b6e12a8f3678026bc4c54"\n  integrity sha1-p+iIXwXmiFEUS24SqPNngCa8TFQ=\n  dependencies:\n    lodash._objecttypes "~2.4.1"\n    lodash.keys "~2.4.1"\n\nlodash.flattendeep@^4.4.0:\n  version "4.4.0"\n  resolved "https://registry.yarnpkg.com/lodash.flattendeep/-/lodash.flattendeep-4.4.0.tgz#fb030917f86a3134e5bc9bec0d69e0013ddfedb2"\n  integrity sha1-+wMJF/hqMTTlvJvsDWngAT3f7bI=\n\nlodash.get@^4.4.2:\n  version "4.4.2"\n  resolved "https://registry.yarnpkg.com/lodash.get/-/lodash.get-4.4.2.tgz#2d177f652fa31e939b4438d5341499dfa3825e99"\n  integrity sha1-LRd/ZS+jHpObRDjVNBSZ36OCXpk=\n\nlodash.isarguments@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz#2f573d85c6a24289ff00663b491c1d338ff3458a"\n  integrity sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo=\n\nlodash.isarray@^3.0.0:\n  version "3.0.4"\n  resolved "https://registry.yarnpkg.com/lodash.isarray/-/lodash.isarray-3.0.4.tgz#79e4eb88c36a8122af86f844aa9bcd851b5fbb55"\n  integrity sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U=\n\nlodash.isobject@~2.4.1:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/lodash.isobject/-/lodash.isobject-2.4.1.tgz#5a2e47fe69953f1ee631a7eba1fe64d2d06558f5"\n  integrity sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=\n  dependencies:\n    lodash._objecttypes "~2.4.1"\n\nlodash.keys@^3.0.0:\n  version "3.1.2"\n  resolved "https://registry.yarnpkg.com/lodash.keys/-/lodash.keys-3.1.2.tgz#4dbc0472b156be50a0b286855d1bd0b0c656098a"\n  integrity sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=\n  dependencies:\n    lodash._getnative "^3.0.0"\n    lodash.isarguments "^3.0.0"\n    lodash.isarray "^3.0.0"\n\nlodash.keys@~2.4.1:\n  version "2.4.1"\n  resolved "https://registry.yarnpkg.com/lodash.keys/-/lodash.keys-2.4.1.tgz#48dea46df8ff7632b10d706b8acb26591e2b3727"\n  integrity sha1-SN6kbfj/djKxDXBrissmWR4rNyc=\n  dependencies:\n    lodash._isnative "~2.4.1"\n    lodash._shimkeys "~2.4.1"\n    lodash.isobject "~2.4.1"\n\nlodash.memoize@4.1.2:\n  version "4.1.2"\n  resolved "https://registry.yarnpkg.com/lodash.memoize/-/lodash.memoize-4.1.2.tgz#bcc6c49a42a2840ed997f323eada5ecd182e0bfe"\n  integrity sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4=\n\nlodash.memoize@~3.0.3:\n  version "3.0.4"\n  resolved "https://registry.yarnpkg.com/lodash.memoize/-/lodash.memoize-3.0.4.tgz#2dcbd2c287cbc0a55cc42328bd0c736150d53e3f"\n  integrity sha1-LcvSwofLwKVcxCMovQxzYVDVPj8=\n\nlodash.template@^4.0.2:\n  version "4.5.0"\n  resolved "https://registry.yarnpkg.com/lodash.template/-/lodash.template-4.5.0.tgz#f976195cf3f347d0d5f52483569fe8031ccce8ab"\n  integrity sha512-84vYFxIkmidUiFxidA/KjjH9pAycqW+h980j7Fuz5qxRtO9pgB7MDFTdys1N7A5mcucRiDyEq4fusljItR1T/A==\n  dependencies:\n    lodash._reinterpolate "^3.0.0"\n    lodash.templatesettings "^4.0.0"\n\nlodash.templatesettings@^4.0.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/lodash.templatesettings/-/lodash.templatesettings-4.2.0.tgz#e481310f049d3cf6d47e912ad09313b154f0fb33"\n  integrity sha512-stgLz+i3Aa9mZgnjr/O+v9ruKZsPsndy7qPZOchbqk2cnTU1ZaldKK+v7m54WoKIyxiuMZTKT2H81F8BeAc3ZQ==\n  dependencies:\n    lodash._reinterpolate "^3.0.0"\n\nlodash.zip@^4.2.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/lodash.zip/-/lodash.zip-4.2.0.tgz#ec6662e4896408ed4ab6c542a3990b72cc080020"\n  integrity sha1-7GZi5IlkCO1KtsVCo5kLcswIACA=\n\nlodash@3.10.1:\n  version "3.10.1"\n  resolved "https://registry.yarnpkg.com/lodash/-/lodash-3.10.1.tgz#5bf45e8e49ba4189e17d482789dfd15bd140b7b6"\n  integrity sha1-W/Rejkm6QYnhfUgnid/RW9FAt7Y=\n\nlodash@^4.13.1, lodash@^4.17.14, lodash@^4.17.15, lodash@^4.17.19:\n  version "4.17.19"\n  resolved "https://registry.yarnpkg.com/lodash/-/lodash-4.17.19.tgz#e48ddedbe30b3321783c5b4301fbd353bc1e4a4b"\n  integrity sha512-JNvd8XER9GQX0v2qJgsaN/mzFCNA5BRe/j8JN9d+tWyGLSodKQHKFicdwNYzWwI3wjRnaKPsGj1XkBjx/F96DQ==\n\nlodash@~2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/lodash/-/lodash-2.1.0.tgz#0637eaaa36a8a1cfc865c3adfb942189bfb0998d"\n  integrity sha1-Bjfqqjaooc/IZcOt+5Qhib+wmY0=\n\nlodash@~2.4.1:\n  version "2.4.2"\n  resolved "https://registry.yarnpkg.com/lodash/-/lodash-2.4.2.tgz#fadd834b9683073da179b3eae6d9c0d15053f73e"\n  integrity sha1-+t2DS5aDBz2hebPq5tnA0VBT9z4=\n\nlodash@~3.2.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/lodash/-/lodash-3.2.0.tgz#4bf50a3243f9aeb0bac41a55d3d5990675a462fb"\n  integrity sha1-S/UKMkP5rrC6xBpV09WZBnWkYvs=\n\nlog-symbols@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/log-symbols/-/log-symbols-3.0.0.tgz#f3a08516a5dea893336a7dee14d18a1cfdab77c4"\n  integrity sha512-dSkNGuI7iG3mfvDzUuYZyvk5dD9ocYCYzNU6CYDE6+Xqd+gwme6Z00NS3dUh8mq/73HaEtT7m6W+yUPtU6BZnQ==\n  dependencies:\n    chalk "^2.4.2"\n\nlog-symbols@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/log-symbols/-/log-symbols-4.0.0.tgz#69b3cc46d20f448eccdb75ea1fa733d9e821c920"\n  integrity sha512-FN8JBzLx6CzeMrB0tg6pqlGU1wCrXW+ZXGH481kfsBqer0hToTIiHdjH4Mq8xJUbvATujKCvaREGWpGUionraA==\n  dependencies:\n    chalk "^4.0.0"\n\nlog-update@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/log-update/-/log-update-4.0.0.tgz#589ecd352471f2a1c0c570287543a64dfd20e0a1"\n  integrity sha512-9fkkDevMefjg0mmzWFBW8YkFP91OrizzkW3diF7CpG+S2EYdy4+TVfGwz1zeF8x7hCx1ovSPTOE9Ngib74qqUg==\n  dependencies:\n    ansi-escapes "^4.3.0"\n    cli-cursor "^3.1.0"\n    slice-ansi "^4.0.0"\n    wrap-ansi "^6.2.0"\n\nlongest-streak@^2.0.1:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/longest-streak/-/longest-streak-2.0.4.tgz#b8599957da5b5dab64dee3fe316fa774597d90e4"\n  integrity sha512-vM6rUVCVUJJt33bnmHiZEvr7wPT78ztX7rojL+LW51bHtLh6HTjx84LA5W4+oa6aKEJA7jJu5LR6vQRBpA5DVg==\n\nloose-envify@^1.0.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/loose-envify/-/loose-envify-1.4.0.tgz#71ee51fa7be4caec1a63839f7e682d8132d30caf"\n  integrity sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\n  dependencies:\n    js-tokens "^3.0.0 || ^4.0.0"\n\nloud-rejection@^1.0.0:\n  version "1.6.0"\n  resolved "https://registry.yarnpkg.com/loud-rejection/-/loud-rejection-1.6.0.tgz#5b46f80147edee578870f086d04821cf998e551f"\n  integrity sha1-W0b4AUft7leIcPCG0Eghz5mOVR8=\n  dependencies:\n    currently-unhandled "^0.4.1"\n    signal-exit "^3.0.0"\n\nlowercase-keys@^1.0.0, lowercase-keys@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/lowercase-keys/-/lowercase-keys-1.0.1.tgz#6f9e30b47084d971a7c820ff15a6c5167b74c26f"\n  integrity sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==\n\nlowercase-keys@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/lowercase-keys/-/lowercase-keys-2.0.0.tgz#2603e78b7b4b0006cbca2fbcc8a3202558ac9479"\n  integrity sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==\n\nlru-cache@2:\n  version "2.7.3"\n  resolved "https://registry.yarnpkg.com/lru-cache/-/lru-cache-2.7.3.tgz#6d4524e8b955f95d4f5b58851ce21dd72fb4e952"\n  integrity sha1-bUUk6LlV+V1PW1iFHOId1y+06VI=\n\nmagic-string@^0.23.2:\n  version "0.23.2"\n  resolved "https://registry.yarnpkg.com/magic-string/-/magic-string-0.23.2.tgz#204d7c3ea36c7d940209fcc54c39b9f243f13369"\n  integrity sha512-oIUZaAxbcxYIp4AyLafV6OVKoB3YouZs0UTCJ8mOKBHNyJgGDaMJ4TgA+VylJh6fx7EQCC52XkbURxxG9IoJXA==\n  dependencies:\n    sourcemap-codec "^1.4.1"\n\nmake-dir@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/make-dir/-/make-dir-2.1.0.tgz#5f0310e18b8be898cc07009295a30ae41e91e6f5"\n  integrity sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==\n  dependencies:\n    pify "^4.0.1"\n    semver "^5.6.0"\n\nmake-dir@^3.0.0, make-dir@^3.0.2:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/make-dir/-/make-dir-3.1.0.tgz#415e967046b3a7f1d185277d84aa58203726a13f"\n  integrity sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==\n  dependencies:\n    semver "^6.0.0"\n\nmap-cache@^0.2.2:\n  version "0.2.2"\n  resolved "https://registry.yarnpkg.com/map-cache/-/map-cache-0.2.2.tgz#c32abd0bd6525d9b051645bb4f26ac5dc98a0dbf"\n  integrity sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=\n\nmap-obj@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/map-obj/-/map-obj-1.0.1.tgz#d933ceb9205d82bdcf4886f6742bdc2b4dea146d"\n  integrity sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=\n\nmap-obj@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/map-obj/-/map-obj-2.0.0.tgz#a65cd29087a92598b8791257a523e021222ac1f9"\n  integrity sha1-plzSkIepJZi4eRJXpSPgISIqwfk=\n\nmap-obj@^4.0.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/map-obj/-/map-obj-4.1.0.tgz#b91221b542734b9f14256c0132c897c5d7256fd5"\n  integrity sha512-glc9y00wgtwcDmp7GaE/0b0OnxpNJsVf3ael/An6Fe2Q51LLwN1er6sdomLRzz5h0+yMpiYLhWYF5R7HeqVd4g==\n\nmap-visit@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/map-visit/-/map-visit-1.0.0.tgz#ecdca8f13144e660f1b5bd41f12f3479d98dfb8f"\n  integrity sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=\n  dependencies:\n    object-visit "^1.0.0"\n\nmarkdown-escapes@^1.0.0:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/markdown-escapes/-/markdown-escapes-1.0.4.tgz#c95415ef451499d7602b91095f3c8e8975f78535"\n  integrity sha512-8z4efJYk43E0upd0NbVXwgSTQs6cT3T06etieCMEg7dRbzCbxUCK/GHlX8mhHRDcp+OLlHkPKsvqQTCvsRl2cg==\n\nmarkdown-extensions@^1.1.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/markdown-extensions/-/markdown-extensions-1.1.1.tgz#fea03b539faeaee9b4ef02a3769b455b189f7fc3"\n  integrity sha512-WWC0ZuMzCyDHYCasEGs4IPvLyTGftYwh6wIEOULOF0HXcqZlhwRzrK0w2VUlxWA98xnvb/jszw4ZSkJ6ADpM6Q==\n\nmarkdown-table@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/markdown-table/-/markdown-table-2.0.0.tgz#194a90ced26d31fe753d8b9434430214c011865b"\n  integrity sha512-Ezda85ToJUBhM6WGaG6veasyym+Tbs3cMAw/ZhOPqXiYsr0jgocBV3j3nx+4lk47plLlIqjwuTm/ywVI+zjJ/A==\n  dependencies:\n    repeat-string "^1.0.0"\n\nmarked@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/marked/-/marked-1.1.1.tgz#e5d61b69842210d5df57b05856e0c91572703e6a"\n  integrity sha512-mJzT8D2yPxoPh7h0UXkB+dBj4FykPJ2OIfxAWeIHrvoHDkFxukV/29QxoFQoPM6RLEwhIFdJpmKBlqVM3s2ZIw==\n\nmatch-casing@^1.0.0:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/match-casing/-/match-casing-1.0.3.tgz#cda6c33e377dbe49daff286e0d500d90766b16a4"\n  integrity sha512-oMyC3vUVCFbGu+M2Zxl212LPJThcaw7QxB5lFuJPQCgV/dsGBP0yZeCoLmX6CiBkoBcVbAKDJZrBpJVu0XcLMw==\n\nmath-random@^1.0.1:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/math-random/-/math-random-1.0.4.tgz#5dd6943c938548267016d4e34f057583080c514c"\n  integrity sha512-rUxjysqif/BZQH2yhd5Aaq7vXMSx9NdEsQcyA07uEzIvxgI7zIr33gGsh+RU0/XjmQpCW7RsVof1vlkvQVCK5A==\n\nmd5.js@^1.3.4:\n  version "1.3.5"\n  resolved "https://registry.yarnpkg.com/md5.js/-/md5.js-1.3.5.tgz#b5d07b8e3216e3e27cd728d72f70d1e6a342005f"\n  integrity sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==\n  dependencies:\n    hash-base "^3.0.0"\n    inherits "^2.0.1"\n    safe-buffer "^5.1.2"\n\nmdast-comment-marker@^1.0.0, mdast-comment-marker@^1.0.1:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/mdast-comment-marker/-/mdast-comment-marker-1.1.2.tgz#5ad2e42cfcc41b92a10c1421a98c288d7b447a6d"\n  integrity sha512-vTFXtmbbF3rgnTh3Zl3irso4LtvwUq/jaDvT2D1JqTGAwaipcS7RpTxzi6KjoRqI9n2yuAhzLDAC8xVTF3XYVQ==\n\nmdast-util-compact@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/mdast-util-compact/-/mdast-util-compact-2.0.1.tgz#cabc69a2f43103628326f35b1acf735d55c99490"\n  integrity sha512-7GlnT24gEwDrdAwEHrU4Vv5lLWrEer4KOkAiKT9nYstsTad7Oc1TwqT2zIMKRdZF7cTuaf+GA1E4Kv7jJh8mPA==\n  dependencies:\n    unist-util-visit "^2.0.0"\n\nmdast-util-heading-range@^2.0.0, mdast-util-heading-range@^2.1.2:\n  version "2.1.4"\n  resolved "https://registry.yarnpkg.com/mdast-util-heading-range/-/mdast-util-heading-range-2.1.4.tgz#152d1c71affb6172b1bbf5fee01072bf1b058709"\n  integrity sha512-ea+YwoFQZiwSf5TLlk9qtKb0AUKsn1oCzdskn2SXsHylA/vW9ZxmMzuCNsFi9siWW1WS1/JSOipX2brUwisIHA==\n  dependencies:\n    mdast-util-to-string "^1.0.0"\n\nmdast-util-heading-style@^1.0.2:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/mdast-util-heading-style/-/mdast-util-heading-style-1.0.6.tgz#6410418926fd5673d40f519406b35d17da10e3c5"\n  integrity sha512-8ZuuegRqS0KESgjAGW8zTx4tJ3VNIiIaGFNEzFpRSAQBavVc7AvOo9I4g3crcZBfYisHs4seYh0rAVimO6HyOw==\n\nmdast-util-to-nlcst@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/mdast-util-to-nlcst/-/mdast-util-to-nlcst-4.0.0.tgz#a5ea370e2d26e1e18b7ed59bfeb6872c6a8e514e"\n  integrity sha512-CPDf82bVAVImJTZgZ9S1yxGczDyoYi1R+edzz8EVFUPvT3RN0RZnnSnMikawLf6ukAKj6pyhsG0exSO7UEA3DA==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n    repeat-string "^1.5.2"\n    unist-util-position "^3.0.0"\n    vfile-location "^3.0.0"\n\nmdast-util-to-string@^1.0.0, mdast-util-to-string@^1.0.2, mdast-util-to-string@^1.0.5:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/mdast-util-to-string/-/mdast-util-to-string-1.1.0.tgz#27055500103f51637bd07d01da01eb1967a43527"\n  integrity sha512-jVU0Nr2B9X3MU4tSK7JP1CMkSvOj7X5l/GboG1tKRw52lLF1x2Ju92Ms9tNetCcbfX3hzlM73zYo2NKkWSfF/A==\n\nmdast-util-toc@^5.0.0:\n  version "5.0.3"\n  resolved "https://registry.yarnpkg.com/mdast-util-toc/-/mdast-util-toc-5.0.3.tgz#5fb1503e3655688929d596799a6910cc6548e420"\n  integrity sha512-A3xzcgC1XFHK0+abFmbINOxjwo7Bi0Nsfp3yTgTy5JHo2q2V6YZ5BVJreDWoK3szcLlSMvHqe8WPbjY50wAkow==\n  dependencies:\n    "@types/mdast" "^3.0.3"\n    "@types/unist" "^2.0.3"\n    extend "^3.0.2"\n    github-slugger "^1.2.1"\n    mdast-util-to-string "^1.0.5"\n    unist-util-is "^4.0.0"\n    unist-util-visit "^2.0.0"\n\nmdn-browser-compat-data@^1.0.28:\n  version "1.0.34"\n  resolved "https://registry.yarnpkg.com/mdn-browser-compat-data/-/mdn-browser-compat-data-1.0.34.tgz#6c62df103ebefb68207098f90aaf7d840028d21c"\n  integrity sha512-bIufENDguhcjV4qAguNEyEBoYuRgS7vIwSNifYt8s3FIBrsRwUd0xWah0P7H1lLIcBCPwwwQWpLgWHx3K7rFFg==\n  dependencies:\n    extend "3.0.2"\n\nmedia-typer@0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/media-typer/-/media-typer-0.3.0.tgz#8710d7af0aa626f8fffa1ce00168545263255748"\n  integrity sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g=\n\nmemory-fs@^0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/memory-fs/-/memory-fs-0.2.0.tgz#f2bb25368bc121e391c2520de92969caee0a0290"\n  integrity sha1-8rslNovBIeORwlIN6Slpyu4KApA=\n\nmeow@5.0.0:\n  version "5.0.0"\n  resolved "https://registry.yarnpkg.com/meow/-/meow-5.0.0.tgz#dfc73d63a9afc714a5e371760eb5c88b91078aa4"\n  integrity sha512-CbTqYU17ABaLefO8vCU153ZZlprKYWDljcndKKDCFcYQITzWCXZAVk4QMFZPgvzrnUQ3uItnIE/LoUOwrT15Ig==\n  dependencies:\n    camelcase-keys "^4.0.0"\n    decamelize-keys "^1.0.0"\n    loud-rejection "^1.0.0"\n    minimist-options "^3.0.1"\n    normalize-package-data "^2.3.4"\n    read-pkg-up "^3.0.0"\n    redent "^2.0.0"\n    trim-newlines "^2.0.0"\n    yargs-parser "^10.0.0"\n\nmeow@^7.0.0, meow@^7.0.1:\n  version "7.0.1"\n  resolved "https://registry.yarnpkg.com/meow/-/meow-7.0.1.tgz#1ed4a0a50b3844b451369c48362eb0515f04c1dc"\n  integrity sha512-tBKIQqVrAHqwit0vfuFPY3LlzJYkEOFyKa3bPgxzNl6q/RtN8KQ+ALYEASYuFayzSAsjlhXj/JZ10rH85Q6TUw==\n  dependencies:\n    "@types/minimist" "^1.2.0"\n    arrify "^2.0.1"\n    camelcase "^6.0.0"\n    camelcase-keys "^6.2.2"\n    decamelize-keys "^1.1.0"\n    hard-rejection "^2.1.0"\n    minimist-options "^4.0.2"\n    normalize-package-data "^2.5.0"\n    read-pkg-up "^7.0.1"\n    redent "^3.0.0"\n    trim-newlines "^3.0.0"\n    type-fest "^0.13.1"\n    yargs-parser "^18.1.3"\n\nmerge-descriptors@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/merge-descriptors/-/merge-descriptors-0.0.1.tgz#2ff0980c924cf81d0b5d1fb601177cb8bb56c0d0"\n  integrity sha1-L/CYDJJM+B0LXR+2ARd8uLtWwNA=\n\nmerge-descriptors@1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/merge-descriptors/-/merge-descriptors-1.0.1.tgz#b00aaa556dd8b44568150ec9d1b953f3f90cbb61"\n  integrity sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=\n\nmerge-source-map@1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/merge-source-map/-/merge-source-map-1.0.4.tgz#a5de46538dae84d4114cc5ea02b4772a6346701f"\n  integrity sha1-pd5GU42uhNQRTMXqArR3KmNGcB8=\n  dependencies:\n    source-map "^0.5.6"\n\nmerge-stream@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/merge-stream/-/merge-stream-2.0.0.tgz#52823629a14dd00c9770fb6ad47dc6310f2c1f60"\n  integrity sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\n\nmerge2@^1.2.3:\n  version "1.4.1"\n  resolved "https://registry.yarnpkg.com/merge2/-/merge2-1.4.1.tgz#4368892f885e907455a6fd7dc55c0c9d404990ae"\n  integrity sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\n\nmethods@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/methods/-/methods-0.0.1.tgz#277c90f8bef39709645a8371c51c3b6c648e068c"\n  integrity sha1-J3yQ+L7zlwlkWoNxxRw7bGSOBow=\n\nmethods@0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/methods/-/methods-0.1.0.tgz#335d429eefd21b7bacf2e9c922a8d2bd14a30e4f"\n  integrity sha1-M11Cnu/SG3us8unJIqjSvRSjDk8=\n\nmethods@^1.1.2, methods@~1.1.2:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/methods/-/methods-1.1.2.tgz#5529a4d67654134edcc5266656835b0f851afcee"\n  integrity sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4=\n\nmicro-spelling-correcter@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/micro-spelling-correcter/-/micro-spelling-correcter-1.1.1.tgz#805a06a26ccfcad8f3e5c6a1ac5ff29d4530166e"\n  integrity sha512-lkJ3Rj/mtjlRcHk6YyCbvZhyWTOzdBvTHsxMmZSk5jxN1YyVSQ+JETAom55mdzfcyDrY/49Z7UCW760BK30crg==\n\nmicromatch@^2.1.5:\n  version "2.3.11"\n  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-2.3.11.tgz#86677c97d1720b363431d04d0d15293bd38c1565"\n  integrity sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=\n  dependencies:\n    arr-diff "^2.0.0"\n    array-unique "^0.2.1"\n    braces "^1.8.2"\n    expand-brackets "^0.1.4"\n    extglob "^0.3.1"\n    filename-regex "^2.0.0"\n    is-extglob "^1.0.0"\n    is-glob "^2.0.1"\n    kind-of "^3.0.2"\n    normalize-path "^2.0.1"\n    object.omit "^2.0.0"\n    parse-glob "^3.0.4"\n    regex-cache "^0.4.2"\n\nmicromatch@^3.1.10, micromatch@^3.1.4:\n  version "3.1.10"\n  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-3.1.10.tgz#70859bc95c9840952f359a068a3fc49f9ecfac23"\n  integrity sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==\n  dependencies:\n    arr-diff "^4.0.0"\n    array-unique "^0.3.2"\n    braces "^2.3.1"\n    define-property "^2.0.2"\n    extend-shallow "^3.0.2"\n    extglob "^2.0.4"\n    fragment-cache "^0.2.1"\n    kind-of "^6.0.2"\n    nanomatch "^1.2.9"\n    object.pick "^1.3.0"\n    regex-not "^1.0.0"\n    snapdragon "^0.8.1"\n    to-regex "^3.0.2"\n\nmicromatch@^4.0.2:\n  version "4.0.2"\n  resolved "https://registry.yarnpkg.com/micromatch/-/micromatch-4.0.2.tgz#4fcb0999bf9fbc2fcbdd212f6d629b9a56c39259"\n  integrity sha512-y7FpHSbMUMoyPbYUSzO6PaZ6FyRnQOpHuKwbo1G+Knck95XVU4QAiKdGEnj5wwoS7PlOgthX/09u5iFJ+aYf5Q==\n  dependencies:\n    braces "^3.0.1"\n    picomatch "^2.0.5"\n\nmiller-rabin@^4.0.0:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/miller-rabin/-/miller-rabin-4.0.1.tgz#f080351c865b0dc562a8462966daa53543c78a4d"\n  integrity sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==\n  dependencies:\n    bn.js "^4.0.0"\n    brorand "^1.0.1"\n\nmime-db@1.44.0, "mime-db@>= 1.43.0 < 2":\n  version "1.44.0"\n  resolved "https://registry.yarnpkg.com/mime-db/-/mime-db-1.44.0.tgz#fa11c5eb0aca1334b4233cb4d52f10c5a6272f92"\n  integrity sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg==\n\nmime-types@^2.1.12, mime-types@~2.1.24, mime-types@~2.1.6:\n  version "2.1.27"\n  resolved "https://registry.yarnpkg.com/mime-types/-/mime-types-2.1.27.tgz#47949f98e279ea53119f5722e0f34e529bec009f"\n  integrity sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==\n  dependencies:\n    mime-db "1.44.0"\n\nmime-types@~1.0.1:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/mime-types/-/mime-types-1.0.2.tgz#995ae1392ab8affcbfcb2641dd054e943c0d5dce"\n  integrity sha1-mVrhOSq4r/y/yyZB3QVOlDwNXc4=\n\nmime@1.2.5:\n  version "1.2.5"\n  resolved "https://registry.yarnpkg.com/mime/-/mime-1.2.5.tgz#9eed073022a8bf5e16c8566c6867b8832bfbfa13"\n  integrity sha1-nu0HMCKov14WyFZsaGe4gyv7+hM=\n\nmime@1.6.0:\n  version "1.6.0"\n  resolved "https://registry.yarnpkg.com/mime/-/mime-1.6.0.tgz#32cd9e5c64553bd58d19a568af452acff04981b1"\n  integrity sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\n\nmime@^2.4.6:\n  version "2.4.6"\n  resolved "https://registry.yarnpkg.com/mime/-/mime-2.4.6.tgz#e5b407c90db442f2beb5b162373d07b69affa4d1"\n  integrity sha512-RZKhC3EmpBchfTGBVb8fb+RL2cWyw/32lshnsETttkBAyAUXSGHxbEJWWRXc751DrIxG1q04b8QwMbAwkRPpUA==\n\nmime@~1.2.11, mime@~1.2.2, mime@~1.2.7, mime@~1.2.9:\n  version "1.2.11"\n  resolved "https://registry.yarnpkg.com/mime/-/mime-1.2.11.tgz#58203eed86e3a5ef17aed2b7d9ebd47f0a60dd10"\n  integrity sha1-WCA+7Ybjpe8XrtK32evUfwpg3RA=\n\nmimic-fn@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/mimic-fn/-/mimic-fn-2.1.0.tgz#7ed2c2ccccaf84d3ffcb7a69b57711fc2083401b"\n  integrity sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\n\nmimic-response@^1.0.0, mimic-response@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/mimic-response/-/mimic-response-1.0.1.tgz#4923538878eef42063cb8a3e3b0798781487ab1b"\n  integrity sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==\n\nmin-indent@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/min-indent/-/min-indent-1.0.1.tgz#a63f681673b30571fbe8bc25686ae746eefa9869"\n  integrity sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\n\nminify-stream@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/minify-stream/-/minify-stream-2.0.1.tgz#4f7009c951aec7fdbc95f2e0de82bf3d7a16209f"\n  integrity sha512-DAaWEQKgVHG7SbOmQxwzJZuErKCGdaPFehKyM/Dezo8FrNKsXMmUtsUMa1n7cjftAGp/CH/mzh8kjWTW7MTzMg==\n  dependencies:\n    concat-stream "^2.0.0"\n    convert-source-map "^1.5.0"\n    duplexify "^4.1.1"\n    from2-string "^1.1.0"\n    terser "^4.7.0"\n    xtend "^4.0.1"\n\nminimalistic-assert@^1.0.0, minimalistic-assert@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz#2e194de044626d4a10e7f7fbc00ce73e83e4d5c7"\n  integrity sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A==\n\nminimalistic-crypto-utils@^1.0.0, minimalistic-crypto-utils@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz#f6c00c1c0b082246e5c4d99dfb8c7c083b2b582a"\n  integrity sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo=\n\nminimatch@0.3:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-0.3.0.tgz#275d8edaac4f1bb3326472089e7949c8394699dd"\n  integrity sha1-J12O2qxPG7MyZHIInnlJyDlGmd0=\n  dependencies:\n    lru-cache "2"\n    sigmund "~1.0.0"\n\nminimatch@0.x:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-0.4.0.tgz#bd2c7d060d2c8c8fd7cde7f1f2ed2d5b270fdb1b"\n  integrity sha1-vSx9Bg0sjI/Xzefx8u0tWycP2xs=\n  dependencies:\n    lru-cache "2"\n    sigmund "~1.0.0"\n\n"minimatch@2 || 3", minimatch@^3.0.2, minimatch@^3.0.4:\n  version "3.0.4"\n  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083"\n  integrity sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==\n  dependencies:\n    brace-expansion "^1.1.7"\n\nminimatch@^0.2.14, minimatch@~0.2.12:\n  version "0.2.14"\n  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-0.2.14.tgz#c74e780574f63c6f9a090e90efbe6ef53a6a756a"\n  integrity sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=\n  dependencies:\n    lru-cache "2"\n    sigmund "~1.0.0"\n\nminimatch@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-1.0.0.tgz#e0dd2120b49e1b724ce8d714c520822a9438576d"\n  integrity sha1-4N0hILSeG3JM6NcUxSCCKpQ4V20=\n  dependencies:\n    lru-cache "2"\n    sigmund "~1.0.0"\n\nminimatch@^2.0.1:\n  version "2.0.10"\n  resolved "https://registry.yarnpkg.com/minimatch/-/minimatch-2.0.10.tgz#8d087c39c6b38c001b97fca7ce6d0e1e80afbac7"\n  integrity sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=\n  dependencies:\n    brace-expansion "^1.0.0"\n\nminimist-options@^3.0.1:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/minimist-options/-/minimist-options-3.0.2.tgz#fba4c8191339e13ecf4d61beb03f070103f3d954"\n  integrity sha512-FyBrT/d0d4+uiZRbqznPXqw3IpZZG3gl3wKWiX784FycUKVwBt0uLBFkQrtE4tZOrgo78nZp2jnKz3L65T5LdQ==\n  dependencies:\n    arrify "^1.0.1"\n    is-plain-obj "^1.1.0"\n\nminimist-options@^4.0.2:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/minimist-options/-/minimist-options-4.1.0.tgz#c0655713c53a8a2ebd77ffa247d342c40f010619"\n  integrity sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==\n  dependencies:\n    arrify "^1.0.1"\n    is-plain-obj "^1.1.0"\n    kind-of "^6.0.3"\n\nminimist@0.0.8:\n  version "0.0.8"\n  resolved "https://registry.yarnpkg.com/minimist/-/minimist-0.0.8.tgz#857fcabfc3397d2625b8228262e86aa7a011b05d"\n  integrity sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\n\nminimist@^0.2.0:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/minimist/-/minimist-0.2.1.tgz#827ba4e7593464e7c221e8c5bed930904ee2c455"\n  integrity sha512-GY8fANSrTMfBVfInqJAY41QkOM+upUTytK1jZ0c8+3HdHrJxBJ3rF5i9moClXTE8uUSnUo8cAsCoxDXvSY4DHg==\n\nminimist@^1.1.0, minimist@^1.1.1, minimist@^1.2.0, minimist@^1.2.5:\n  version "1.2.5"\n  resolved "https://registry.yarnpkg.com/minimist/-/minimist-1.2.5.tgz#67d66014b66a6a8aaa0c083c5fd58df4e4e97602"\n  integrity sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP/UODVpGsr5OhXhhXg6f+qtJ8uiZ+PUxkDWcgIXLw==\n\nmixin-deep@^1.2.0:\n  version "1.3.2"\n  resolved "https://registry.yarnpkg.com/mixin-deep/-/mixin-deep-1.3.2.tgz#1120b43dc359a785dce65b55b82e257ccf479566"\n  integrity sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==\n  dependencies:\n    for-in "^1.0.2"\n    is-extendable "^1.0.1"\n\nmkdirp-classic@^0.5.2:\n  version "0.5.3"\n  resolved "https://registry.yarnpkg.com/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz#fa10c9115cc6d8865be221ba47ee9bed78601113"\n  integrity sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==\n\nmkdirp@0.3.5, mkdirp@0.3.x:\n  version "0.3.5"\n  resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.3.5.tgz#de3e5f8961c88c787ee1368df849ac4413eca8d7"\n  integrity sha1-3j5fiWHIjHh+4TaN+EmsRBPsqNc=\n\nmkdirp@0.5.1:\n  version "0.5.1"\n  resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.5.1.tgz#30057438eac6cf7f8c4767f38648d6697d75c903"\n  integrity sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\n  dependencies:\n    minimist "0.0.8"\n\nmkdirp@0.5.x, mkdirp@^0.5.1:\n  version "0.5.5"\n  resolved "https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.5.5.tgz#d91cefd62d1436ca0f41620e251288d420099def"\n  integrity sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg/0BC0wiv9ih5NYPB1Wn1UEI1/L+xQ==\n  dependencies:\n    minimist "^1.2.5"\n\nmocha@3.5.3:\n  version "3.5.3"\n  resolved "https://registry.yarnpkg.com/mocha/-/mocha-3.5.3.tgz#1e0480fe36d2da5858d1eb6acc38418b26eaa20d"\n  integrity sha512-/6na001MJWEtYxHOV1WLfsmR4YIynkUEhBwzsb+fk2qmQ3iqsi258l/Q2MWHJMImAcNpZ8DEdYAK72NHoIQ9Eg==\n  dependencies:\n    browser-stdout "1.3.0"\n    commander "2.9.0"\n    debug "2.6.8"\n    diff "3.2.0"\n    escape-string-regexp "1.0.5"\n    glob "7.1.1"\n    growl "1.9.2"\n    he "1.1.1"\n    json3 "3.3.2"\n    lodash.create "3.1.1"\n    mkdirp "0.5.1"\n    supports-color "3.1.2"\n\nmodule-deps@^4.0.2, module-deps@^4.0.8:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/module-deps/-/module-deps-4.1.1.tgz#23215833f1da13fd606ccb8087b44852dcb821fd"\n  integrity sha1-IyFYM/HaE/1gbMuAh7RIUty4If0=\n  dependencies:\n    JSONStream "^1.0.3"\n    browser-resolve "^1.7.0"\n    cached-path-relative "^1.0.0"\n    concat-stream "~1.5.0"\n    defined "^1.0.0"\n    detective "^4.0.0"\n    duplexer2 "^0.1.2"\n    inherits "^2.0.1"\n    parents "^1.0.0"\n    readable-stream "^2.0.2"\n    resolve "^1.1.3"\n    stream-combiner2 "^1.1.1"\n    subarg "^1.0.0"\n    through2 "^2.0.0"\n    xtend "^4.0.0"\n\nmodule-deps@^6.2.3:\n  version "6.2.3"\n  resolved "https://registry.yarnpkg.com/module-deps/-/module-deps-6.2.3.tgz#15490bc02af4b56cf62299c7c17cba32d71a96ee"\n  integrity sha512-fg7OZaQBcL4/L+AK5f4iVqf9OMbCclXfy/znXRxTVhJSeW5AIlS9AwheYwDaXM3lVW7OBeaeUEY3gbaC6cLlSA==\n  dependencies:\n    JSONStream "^1.0.3"\n    browser-resolve "^2.0.0"\n    cached-path-relative "^1.0.2"\n    concat-stream "~1.6.0"\n    defined "^1.0.0"\n    detective "^5.2.0"\n    duplexer2 "^0.1.2"\n    inherits "^2.0.1"\n    parents "^1.0.0"\n    readable-stream "^2.0.2"\n    resolve "^1.4.0"\n    stream-combiner2 "^1.1.1"\n    subarg "^1.0.0"\n    through2 "^2.0.0"\n    xtend "^4.0.0"\n\nms@0.6.2:\n  version "0.6.2"\n  resolved "https://registry.yarnpkg.com/ms/-/ms-0.6.2.tgz#d89c2124c6fdc1353d65a8b77bf1aac4b193708c"\n  integrity sha1-2JwhJMb9wTU9Zai3e/GqxLGTcIw=\n\nms@0.7.1:\n  version "0.7.1"\n  resolved "https://registry.yarnpkg.com/ms/-/ms-0.7.1.tgz#9cd13c03adbff25b65effde7ce864ee952017098"\n  integrity sha1-nNE8A62/8ltl7/3nzoZO6VIBcJg=\n\nms@2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/ms/-/ms-2.0.0.tgz#5608aeadfc00be6c2901df5f9861788de0d597c8"\n  integrity sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\n\nms@2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/ms/-/ms-2.1.1.tgz#30a5864eb3ebb0a66f2ebe6d727af06a09d86e0a"\n  integrity sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==\n\nms@^2.1.1:\n  version "2.1.2"\n  resolved "https://registry.yarnpkg.com/ms/-/ms-2.1.2.tgz#d09d1f357b443f493382a8eb3ccd183872ae6009"\n  integrity sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\n\nmulter@^1.4.2:\n  version "1.4.2"\n  resolved "https://registry.yarnpkg.com/multer/-/multer-1.4.2.tgz#2f1f4d12dbaeeba74cb37e623f234bf4d3d2057a"\n  integrity sha512-xY8pX7V+ybyUpbYMxtjM9KAiD9ixtg5/JkeKUTD6xilfDv0vzzOFcCp4Ljb1UU3tSOM3VTZtKo63OmzOrGi3Cg==\n  dependencies:\n    append-field "^1.0.0"\n    busboy "^0.2.11"\n    concat-stream "^1.5.2"\n    mkdirp "^0.5.1"\n    object-assign "^4.1.1"\n    on-finished "^2.3.0"\n    type-is "^1.6.4"\n    xtend "^4.0.0"\n\nmulti-stage-sourcemap@^0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/multi-stage-sourcemap/-/multi-stage-sourcemap-0.2.1.tgz#b09fc8586eaa17f81d575c4ad02e0f7a3f6b1105"\n  integrity sha1-sJ/IWG6qF/gdV1xK0C4Pej9rEQU=\n  dependencies:\n    source-map "^0.1.34"\n\nmultimap@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/multimap/-/multimap-1.1.0.tgz#5263febc085a1791c33b59bb3afc6a76a2a10ca8"\n  integrity sha512-0ZIR9PasPxGXmRsEF8jsDzndzHDj7tIav+JUmvIFB/WHswliFnquxECT/De7GR4yg99ky/NlRKJT82G1y271bw==\n\nmultiparty@2.2.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/multiparty/-/multiparty-2.2.0.tgz#a567c2af000ad22dc8f2a653d91978ae1f5316f4"\n  integrity sha1-pWfCrwAK0i3I8qZT2Rl4rh9TFvQ=\n  dependencies:\n    readable-stream "~1.1.9"\n    stream-counter "~0.2.0"\n\nmultisplice@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/multisplice/-/multisplice-1.0.0.tgz#e74cf2948dcb51a6c317fc5e22980a652f7830e9"\n  integrity sha512-KU5tVjIdTGsMb92JlWwEZCGrvtI1ku9G9GuNbWdQT/Ici1ztFXX0L8lWpbbC3pISVMfBNL56wdqplHvva2XSlA==\n\nmutexify@^1.1.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/mutexify/-/mutexify-1.3.0.tgz#b32bee9319050963cf6b5d5bce7fbd6ea08ab609"\n  integrity sha512-WNPlgZ3AHETGSa4jeRP4aW6BPQ/a++MwoMFFIgrDg80+m70mbxuNOrevANfBDmur82zxTFAY3OwvMAvqrkV2sA==\n\nnan@^2.12.1:\n  version "2.14.1"\n  resolved "https://registry.yarnpkg.com/nan/-/nan-2.14.1.tgz#d7be34dfa3105b91494c3147089315eff8874b01"\n  integrity sha512-isWHgVjnFjh2x2yuJ/tj3JbwoHu3UC2dX5G/88Cm24yB6YopVgxvBObDY7n5xW6ExmFhJpSEQqFPvq9zaXc8Jw==\n\nnanobench@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/nanobench/-/nanobench-2.1.1.tgz#c2f23fcce116d50b4998b1954ba114674c137269"\n  integrity sha512-z+Vv7zElcjN+OpzAxAquUayFLGK3JI/ubCl0Oh64YQqsTGG09CGqieJVQw4ui8huDnnAgrvTv93qi5UaOoNj8A==\n  dependencies:\n    browser-process-hrtime "^0.1.2"\n    chalk "^1.1.3"\n    mutexify "^1.1.0"\n    pretty-hrtime "^1.0.2"\n\nnanomatch@^1.2.9:\n  version "1.2.13"\n  resolved "https://registry.yarnpkg.com/nanomatch/-/nanomatch-1.2.13.tgz#b87a8aa4fc0de8fe6be88895b38983ff265bd119"\n  integrity sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==\n  dependencies:\n    arr-diff "^4.0.0"\n    array-unique "^0.3.2"\n    define-property "^2.0.2"\n    extend-shallow "^3.0.2"\n    fragment-cache "^0.2.1"\n    is-windows "^1.0.2"\n    kind-of "^6.0.2"\n    object.pick "^1.3.0"\n    regex-not "^1.0.0"\n    snapdragon "^0.8.1"\n    to-regex "^3.0.1"\n\nnatives@^1.1.3:\n  version "1.1.6"\n  resolved "https://registry.yarnpkg.com/natives/-/natives-1.1.6.tgz#a603b4a498ab77173612b9ea1acdec4d980f00bb"\n  integrity sha512-6+TDFewD4yxY14ptjKaS63GVdtKiES1pTPyxn9Jb0rBqPMZ7VcCiooEhPNsr+mqHtMGxa/5c/HhcC4uPEUw/nA==\n\nnatural-compare@^1.4.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/natural-compare/-/natural-compare-1.4.0.tgz#4abebfeed7541f2c27acfb29bdbbd15c8d5ba4f7"\n  integrity sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=\n\nncp@~0.4.2:\n  version "0.4.2"\n  resolved "https://registry.yarnpkg.com/ncp/-/ncp-0.4.2.tgz#abcc6cbd3ec2ed2a729ff6e7c1fa8f01784a8574"\n  integrity sha1-q8xsvT7C7Spyn/bnwfqPAXhKhXQ=\n\nnegotiator@0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/negotiator/-/negotiator-0.3.0.tgz#706d692efeddf574d57ea9fb1ab89a4fa7ee8f60"\n  integrity sha1-cG1pLv7d9XTVfqn7GriaT6fuj2A=\n\nnegotiator@0.5.3:\n  version "0.5.3"\n  resolved "https://registry.yarnpkg.com/negotiator/-/negotiator-0.5.3.tgz#269d5c476810ec92edbe7b6c2f28316384f9a7e8"\n  integrity sha1-Jp1cR2gQ7JLtvntsLygxY4T5p+g=\n\nnegotiator@0.6.2:\n  version "0.6.2"\n  resolved "https://registry.yarnpkg.com/negotiator/-/negotiator-0.6.2.tgz#feacf7ccf525a77ae9634436a64883ffeca346fb"\n  integrity sha512-hZXc7K2e+PgeI1eDBe/10Ard4ekbfrrqG8Ep+8Jmf4JID2bNg7NvCPOZN+kfF574pFQI7mum2AUqDidoKqcTOw==\n\nneo-async@^2.6.0:\n  version "2.6.2"\n  resolved "https://registry.yarnpkg.com/neo-async/-/neo-async-2.6.2.tgz#b4aafb93e3aeb2d8174ca53cf163ab7d7308305f"\n  integrity sha512-Yd3UES5mWCSqR+qNT93S3UoYUkqAZ9lLg8a7g9rimsWmYGK8cVToA4/sF3RrshdyV3sAGMXVUmpMYOw+dLpOuw==\n\nnext-tick@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/next-tick/-/next-tick-1.0.0.tgz#ca86d1fe8828169b0120208e3dc8424b9db8342c"\n  integrity sha1-yobR/ogoFpsBICCOPchCS524NCw=\n\nnlcst-is-literal@^1.0.0, nlcst-is-literal@^1.1.0:\n  version "1.2.1"\n  resolved "https://registry.yarnpkg.com/nlcst-is-literal/-/nlcst-is-literal-1.2.1.tgz#878b68a43b5fd77b85e45b1b1737ae11a25f1be3"\n  integrity sha512-abNv1XY7TUoyLn5kSSorMIYHfRvVfXbgftNFNvEMiQQkyKteLdjrGuDqEMMyK70sMbn7uPA6oUbRvykM6pg+pg==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n\nnlcst-normalize@^2.0.0, nlcst-normalize@^2.1.0:\n  version "2.1.4"\n  resolved "https://registry.yarnpkg.com/nlcst-normalize/-/nlcst-normalize-2.1.4.tgz#2c854f84808b4f9d9f42cfa2a5978f300ca85f59"\n  integrity sha512-dWJ3XUoAoWoau24xOM59Y1FPozv7DyYWy+rdUaXj9Ow0hBCVuwqDQbXzTF7H+HskyTVpTkRPXYPu4YsMEScmRw==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n\nnlcst-search@^1.0.0:\n  version "1.5.1"\n  resolved "https://registry.yarnpkg.com/nlcst-search/-/nlcst-search-1.5.1.tgz#86791990b9b8785bb6d5a910d49b9ec4a7e81801"\n  integrity sha512-G3ws0fgNlVsUvHvA2G1PTjyxzGOJ0caI0+WOvlZzev5iSUTX+R1q4lnlL4Y7E+he4ZMUW/0FMn9rYwdYon/13g==\n  dependencies:\n    nlcst-is-literal "^1.1.0"\n    nlcst-normalize "^2.1.0"\n    unist-util-visit "^1.0.0"\n\nnlcst-to-string@^2.0.0:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/nlcst-to-string/-/nlcst-to-string-2.0.4.tgz#9315dfab80882bbfd86ddf1b706f53622dc400cc"\n  integrity sha512-3x3jwTd6UPG7vi5k4GEzvxJ5rDA7hVUIRNHPblKuMVP9Z3xmlsd9cgLcpAMkc5uPOBna82EeshROFhsPkbnTZg==\n\nnode-fetch@^2.2.0:\n  version "2.6.0"\n  resolved "https://registry.yarnpkg.com/node-fetch/-/node-fetch-2.6.0.tgz#e633456386d4aa55863f676a7ab0daa8fdecb0fd"\n  integrity sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA==\n\nnode-int64@~0.3.0:\n  version "0.3.3"\n  resolved "https://registry.yarnpkg.com/node-int64/-/node-int64-0.3.3.tgz#2d6e6b2ece5de8588b43d88d1bc41b26cd1fa84d"\n  integrity sha1-LW5rLs5d6FiLQ9iNG8QbJs0fqE0=\n\n"node-libs-browser@^1.0.0 || ^2.0.0":\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/node-libs-browser/-/node-libs-browser-2.2.1.tgz#b64f513d18338625f90346d27b0d235e631f6425"\n  integrity sha512-h/zcD8H9kaDZ9ALUWwlBUDo6TKF8a7qBSCSEGfjTVIYeqsioSKaAX+BN7NgiMGp6iSIXZ3PxgCu8KS3b71YK5Q==\n  dependencies:\n    assert "^1.1.1"\n    browserify-zlib "^0.2.0"\n    buffer "^4.3.0"\n    console-browserify "^1.1.0"\n    constants-browserify "^1.0.0"\n    crypto-browserify "^3.11.0"\n    domain-browser "^1.1.1"\n    events "^3.0.0"\n    https-browserify "^1.0.0"\n    os-browserify "^0.3.0"\n    path-browserify "0.0.1"\n    process "^0.11.10"\n    punycode "^1.2.4"\n    querystring-es3 "^0.2.0"\n    readable-stream "^2.3.3"\n    stream-browserify "^2.0.1"\n    stream-http "^2.7.2"\n    string_decoder "^1.0.0"\n    timers-browserify "^2.0.4"\n    tty-browserify "0.0.0"\n    url "^0.11.0"\n    util "^0.11.0"\n    vm-browserify "^1.0.1"\n\nnode-preload@^0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/node-preload/-/node-preload-0.2.1.tgz#c03043bb327f417a18fee7ab7ee57b408a144301"\n  integrity sha512-RM5oyBy45cLEoHqCeh+MNuFAxO0vTFBLskvQbOKnEE7YTTSN4tbN8QWDIPQ6L+WvKsB/qLEGpYe2ZZ9d4W9OIQ==\n  dependencies:\n    process-on-spawn "^1.0.0"\n\nnode-releases@^1.1.60:\n  version "1.1.60"\n  resolved "https://registry.yarnpkg.com/node-releases/-/node-releases-1.1.60.tgz#6948bdfce8286f0b5d0e5a88e8384e954dfe7084"\n  integrity sha512-gsO4vjEdQaTusZAEebUWp2a5d7dF5DYoIpDG7WySnk7BuZDW+GPpHXoXXuYawRBr/9t5q54tirPz79kFIWg4dA==\n\nnode-uuid@~1.4.0, node-uuid@~1.4.1:\n  version "1.4.8"\n  resolved "https://registry.yarnpkg.com/node-uuid/-/node-uuid-1.4.8.tgz#b040eb0923968afabf8d32fb1f17f1167fdab907"\n  integrity sha1-sEDrCSOWivq/jTL7HxfxFn/auQc=\n\nnopt@3.x:\n  version "3.0.6"\n  resolved "https://registry.yarnpkg.com/nopt/-/nopt-3.0.6.tgz#c6465dbf08abcd4db359317f79ac68a646b28ff9"\n  integrity sha1-xkZdvwirzU2zWTF/eaxopkayj/k=\n  dependencies:\n    abbrev "1"\n\nnormalize-package-data@^2.3.2, normalize-package-data@^2.3.4, normalize-package-data@^2.5.0:\n  version "2.5.0"\n  resolved "https://registry.yarnpkg.com/normalize-package-data/-/normalize-package-data-2.5.0.tgz#e66db1838b200c1dfc233225d12cb36520e234a8"\n  integrity sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==\n  dependencies:\n    hosted-git-info "^2.1.4"\n    resolve "^1.10.0"\n    semver "2 || 3 || 4 || 5"\n    validate-npm-package-license "^3.0.1"\n\nnormalize-path@^2.0.0, normalize-path@^2.0.1, normalize-path@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-2.1.1.tgz#1ab28b556e198363a8c1a6f7e6fa20137fe6aed9"\n  integrity sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=\n  dependencies:\n    remove-trailing-separator "^1.0.1"\n\nnormalize-path@^3.0.0, normalize-path@~3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/normalize-path/-/normalize-path-3.0.0.tgz#0dcd69ff23a1c9b11fd0978316644a0388216a65"\n  integrity sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\n\nnormalize-url@^4.1.0:\n  version "4.5.0"\n  resolved "https://registry.yarnpkg.com/normalize-url/-/normalize-url-4.5.0.tgz#453354087e6ca96957bd8f5baf753f5982142129"\n  integrity sha512-2s47yzUxdexf1OhyRi4Em83iQk0aPvwTddtFz4hnSSw9dCEsLEGf6SwIO8ss/19S9iBb5sJaOuTvTGDeZI00BQ==\n\nnpm-run-path@^4.0.0:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/npm-run-path/-/npm-run-path-4.0.1.tgz#b7ecd1e5ed53da8e37a55e1c2269e0b97ed748ea"\n  integrity sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\n  dependencies:\n    path-key "^3.0.0"\n\nnumber-to-words@^1.2.3:\n  version "1.2.4"\n  resolved "https://registry.yarnpkg.com/number-to-words/-/number-to-words-1.2.4.tgz#e0f124de9628f8d86c4eeb89bac6c07699264501"\n  integrity sha512-/fYevVkXRcyBiZDg6yzZbm0RuaD6i0qRfn8yr+6D0KgBMOndFPxuW10qCHpzs50nN8qKuv78k8MuotZhcVX6Pw==\n\nnyc@^15.1.0:\n  version "15.1.0"\n  resolved "https://registry.yarnpkg.com/nyc/-/nyc-15.1.0.tgz#1335dae12ddc87b6e249d5a1994ca4bdaea75f02"\n  integrity sha512-jMW04n9SxKdKi1ZMGhvUTHBN0EICCRkHemEoE5jm6mTYcqcdas0ATzgUgejlQUHMvpnOZqGB5Xxsv9KxJW1j8A==\n  dependencies:\n    "@istanbuljs/load-nyc-config" "^1.0.0"\n    "@istanbuljs/schema" "^0.1.2"\n    caching-transform "^4.0.0"\n    convert-source-map "^1.7.0"\n    decamelize "^1.2.0"\n    find-cache-dir "^3.2.0"\n    find-up "^4.1.0"\n    foreground-child "^2.0.0"\n    get-package-type "^0.1.0"\n    glob "^7.1.6"\n    istanbul-lib-coverage "^3.0.0"\n    istanbul-lib-hook "^3.0.0"\n    istanbul-lib-instrument "^4.0.0"\n    istanbul-lib-processinfo "^2.0.2"\n    istanbul-lib-report "^3.0.0"\n    istanbul-lib-source-maps "^4.0.0"\n    istanbul-reports "^3.0.2"\n    make-dir "^3.0.0"\n    node-preload "^0.2.1"\n    p-map "^3.0.0"\n    process-on-spawn "^1.0.0"\n    resolve-from "^5.0.0"\n    rimraf "^3.0.0"\n    signal-exit "^3.0.2"\n    spawn-wrap "^2.0.0"\n    test-exclude "^6.0.0"\n    yargs "^15.0.2"\n\noauth-sign@~0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/oauth-sign/-/oauth-sign-0.4.0.tgz#f22956f31ea7151a821e5f2fb32c113cad8b9f69"\n  integrity sha1-8ilW8x6nFRqCHl8vsywRPK2Ln2k=\n\nobj-props@^1.0.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/obj-props/-/obj-props-1.3.0.tgz#8884ab21c8d8496c4a7f696c78bf82289c51680b"\n  integrity sha512-k2Xkjx5wn6eC3537SWAXHzB6lkI81kS+icMKMkh4nG3w7shWG6MaWOBrNvhWVOszrtL5uxdfymQQfPUxwY+2eg==\n\nobject-assign@^4.1.0, object-assign@^4.1.1:\n  version "4.1.1"\n  resolved "https://registry.yarnpkg.com/object-assign/-/object-assign-4.1.1.tgz#2109adc7965887cfc05cbbd442cac8bfbb360863"\n  integrity sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=\n\nobject-copy@^0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/object-copy/-/object-copy-0.1.0.tgz#7e7d858b781bd7c991a41ba975ed3812754e998c"\n  integrity sha1-fn2Fi3gb18mRpBupde04EnVOmYw=\n  dependencies:\n    copy-descriptor "^0.1.0"\n    define-property "^0.2.5"\n    kind-of "^3.0.3"\n\nobject-inspect@^1.7.0:\n  version "1.8.0"\n  resolved "https://registry.yarnpkg.com/object-inspect/-/object-inspect-1.8.0.tgz#df807e5ecf53a609cc6bfe93eac3cc7be5b3a9d0"\n  integrity sha512-jLdtEOB112fORuypAyl/50VRVIBIdVQOSUUGQHzJ4xBSbit81zRarz7GThkEFZy1RceYrWYcPcBFPQwHyAc1gA==\n\nobject-is@^1.0.1:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/object-is/-/object-is-1.1.2.tgz#c5d2e87ff9e119f78b7a088441519e2eec1573b6"\n  integrity sha512-5lHCz+0uufF6wZ7CRFWJN3hp8Jqblpgve06U5CMQ3f//6iDjPr2PEo9MWCjEssDsa+UZEL4PkFpr+BMop6aKzQ==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.5"\n\nobject-keys@^1.0.11, object-keys@^1.0.12, object-keys@^1.0.6, object-keys@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/object-keys/-/object-keys-1.1.1.tgz#1c47f272df277f3b1daf061677d9c82e2322c60e"\n  integrity sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\n\nobject-keys@~0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/object-keys/-/object-keys-0.4.0.tgz#28a6aae7428dd2c3a92f3d95f21335dd204e0336"\n  integrity sha1-KKaq50KN0sOpLz2V8hM13SBOAzY=\n\nobject-visit@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/object-visit/-/object-visit-1.0.1.tgz#f79c4493af0c5377b59fe39d395e41042dd045bb"\n  integrity sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=\n  dependencies:\n    isobject "^3.0.0"\n\nobject.assign@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/object.assign/-/object.assign-4.1.0.tgz#968bf1100d7956bb3ca086f006f846b3bc4008da"\n  integrity sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==\n  dependencies:\n    define-properties "^1.1.2"\n    function-bind "^1.1.1"\n    has-symbols "^1.0.0"\n    object-keys "^1.0.11"\n\nobject.omit@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/object.omit/-/object.omit-2.0.1.tgz#1a9c744829f39dbb858c76ca3579ae2a54ebd1fa"\n  integrity sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=\n  dependencies:\n    for-own "^0.1.4"\n    is-extendable "^0.1.1"\n\nobject.pick@^1.3.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/object.pick/-/object.pick-1.3.0.tgz#87a10ac4c1694bd2e1cbf53591a66141fb5dd747"\n  integrity sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=\n  dependencies:\n    isobject "^3.0.1"\n\nobject.values@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/object.values/-/object.values-1.1.1.tgz#68a99ecde356b7e9295a3c5e0ce31dc8c953de5e"\n  integrity sha512-WTa54g2K8iu0kmS/us18jEmdv1a4Wi//BZ/DTVYEcH0XhLM5NYdpDHja3gt57VrZLcNAO2WGA+KpWsDBaHt6eA==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.0-next.1"\n    function-bind "^1.1.1"\n    has "^1.0.3"\n\non-finished@^2.3.0, on-finished@~2.3.0:\n  version "2.3.0"\n  resolved "https://registry.yarnpkg.com/on-finished/-/on-finished-2.3.0.tgz#20f1336481b083cd75337992a16971aa2d906947"\n  integrity sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=\n  dependencies:\n    ee-first "1.1.1"\n\non-finished@~2.2.1:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/on-finished/-/on-finished-2.2.1.tgz#5c85c1cc36299f78029653f667f27b6b99ebc029"\n  integrity sha1-XIXBzDYpn3gCllP2Z/J7a5nrwCk=\n  dependencies:\n    ee-first "1.1.0"\n\non-headers@~1.0.0, on-headers@~1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/on-headers/-/on-headers-1.0.2.tgz#772b0ae6aaa525c399e489adfad90c403eb3c28f"\n  integrity sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA==\n\nonce@1.x, once@^1.3.0, once@^1.3.1, once@^1.4.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1"\n  integrity sha1-WDsap3WWHUsROsF9nFC6753Xa9E=\n  dependencies:\n    wrappy "1"\n\nonetime@^5.1.0:\n  version "5.1.1"\n  resolved "https://registry.yarnpkg.com/onetime/-/onetime-5.1.1.tgz#5c8016847b0d67fcedb7eef254751cfcdc7e9418"\n  integrity sha512-ZpZpjcJeugQfWsfyQlshVoowIIQ1qBGSVll4rfDq6JJVO//fesjoX808hXWfBjY+ROZgpKDI5TRSRBSoJiZ8eg==\n  dependencies:\n    mimic-fn "^2.1.0"\n\nopen-editor@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/open-editor/-/open-editor-2.0.1.tgz#d001055770fbf6f6ee73c18f224915f444be863c"\n  integrity sha512-B3KdD7Pl8jYdpBSBBbdYaqVUI3whQjLl1G1+CvhNc8+d7GzKRUq+VuCIx1thxGiqD2oBGRvsZz7QWrBsFP2yVA==\n  dependencies:\n    env-editor "^0.4.0"\n    line-column-path "^2.0.0"\n    open "^6.2.0"\n\nopen@^6.2.0:\n  version "6.4.0"\n  resolved "https://registry.yarnpkg.com/open/-/open-6.4.0.tgz#5c13e96d0dc894686164f18965ecfe889ecfc8a9"\n  integrity sha512-IFenVPgF70fSm1keSd2iDBIDIBZkroLeuffXq+wKTzTJlBpesFWojV9lb8mzOfaAzM1sr7HQHuO0vtV0zYekGg==\n  dependencies:\n    is-wsl "^1.1.0"\n\nopencollective-postinstall@^2.0.2:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/opencollective-postinstall/-/opencollective-postinstall-2.0.3.tgz#7a0fff978f6dbfa4d006238fbac98ed4198c3259"\n  integrity sha512-8AV/sCtuzUeTo8gQK5qDZzARrulB3egtLzFgteqB2tcT4Mw7B8Kt7JcDHmltjz6FOAHsvTevk70gZEbhM4ZS9Q==\n\nopener@1.4.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/opener/-/opener-1.4.0.tgz#d11f86eeeb076883735c9d509f538fe82d10b941"\n  integrity sha1-0R+G7usHaINzXJ1Qn1OP6C0QuUE=\n\noptimist@0.3.4:\n  version "0.3.4"\n  resolved "https://registry.yarnpkg.com/optimist/-/optimist-0.3.4.tgz#4d6d0bd71ffad0da4ba4f6d876d5eeb04e07480b"\n  integrity sha1-TW0L1x/60NpLpPbYdtXusE4HSAs=\n  dependencies:\n    wordwrap "~0.0.2"\n\noptimist@~0.3, optimist@~0.3.5:\n  version "0.3.7"\n  resolved "https://registry.yarnpkg.com/optimist/-/optimist-0.3.7.tgz#c90941ad59e4273328923074d2cf2e7cbc6ec0d9"\n  integrity sha1-yQlBrVnkJzMokjB00s8ufLxuwNk=\n  dependencies:\n    wordwrap "~0.0.2"\n\noptionator@^0.8.1:\n  version "0.8.3"\n  resolved "https://registry.yarnpkg.com/optionator/-/optionator-0.8.3.tgz#84fa1d036fe9d3c7e21d99884b601167ec8fb495"\n  integrity sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==\n  dependencies:\n    deep-is "~0.1.3"\n    fast-levenshtein "~2.0.6"\n    levn "~0.3.0"\n    prelude-ls "~1.1.2"\n    type-check "~0.3.2"\n    word-wrap "~1.2.3"\n\noptionator@^0.9.1:\n  version "0.9.1"\n  resolved "https://registry.yarnpkg.com/optionator/-/optionator-0.9.1.tgz#4f236a6373dae0566a6d43e1326674f50c291499"\n  integrity sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91+qd1RvvENwg7jjRFw==\n  dependencies:\n    deep-is "^0.1.3"\n    fast-levenshtein "^2.0.6"\n    levn "^0.4.1"\n    prelude-ls "^1.2.1"\n    type-check "^0.4.0"\n    word-wrap "^1.2.3"\n\nos-browserify@^0.3.0, os-browserify@~0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/os-browserify/-/os-browserify-0.3.0.tgz#854373c7f5c2315914fc9bfc6bd8238fdda1ec27"\n  integrity sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc=\n\nos-browserify@~0.1.1:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/os-browserify/-/os-browserify-0.1.2.tgz#49ca0293e0b19590a5f5de10c7f265a617d8fe54"\n  integrity sha1-ScoCk+CxlZCl9d4Qx/JlphfY/lQ=\n\nosenv@0.0.3:\n  version "0.0.3"\n  resolved "https://registry.yarnpkg.com/osenv/-/osenv-0.0.3.tgz#cd6ad8ddb290915ad9e22765576025d411f29cb6"\n  integrity sha1-zWrY3bKQkVrZ4idlV2Al1BHynLY=\n\noutpipe@^1.1.0:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/outpipe/-/outpipe-1.1.1.tgz#50cf8616365e87e031e29a5ec9339a3da4725fa2"\n  integrity sha1-UM+GFjZeh+Ax4ppeyTOaPaRyX6I=\n  dependencies:\n    shell-quote "^1.4.2"\n\np-cancelable@^1.0.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/p-cancelable/-/p-cancelable-1.1.0.tgz#d078d15a3af409220c886f1d9a0ca2e441ab26cc"\n  integrity sha512-s73XxOZ4zpt1edZYZzvhqFa6uvQc1vwUa0K0BdtIZgQMAJj9IbebH+JkgKZc9h+B05PKHLOTl4ajG1BmNrVZlw==\n\np-limit@^1.1.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/p-limit/-/p-limit-1.3.0.tgz#b86bd5f0c25690911c7590fcbfc2010d54b3ccb8"\n  integrity sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==\n  dependencies:\n    p-try "^1.0.0"\n\np-limit@^2.0.0, p-limit@^2.2.0:\n  version "2.3.0"\n  resolved "https://registry.yarnpkg.com/p-limit/-/p-limit-2.3.0.tgz#3dd33c647a214fdfffd835933eb086da0dc21db1"\n  integrity sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\n  dependencies:\n    p-try "^2.0.0"\n\np-locate@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-2.0.0.tgz#20a0103b222a70c8fd39cc2e580680f3dde5ec43"\n  integrity sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=\n  dependencies:\n    p-limit "^1.1.0"\n\np-locate@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-3.0.0.tgz#322d69a05c0264b25997d9f40cd8a891ab0064a4"\n  integrity sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==\n  dependencies:\n    p-limit "^2.0.0"\n\np-locate@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/p-locate/-/p-locate-4.1.0.tgz#a3428bb7088b3a60292f66919278b7c297ad4f07"\n  integrity sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\n  dependencies:\n    p-limit "^2.2.0"\n\np-map@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/p-map/-/p-map-3.0.0.tgz#d704d9af8a2ba684e2600d9a215983d4141a979d"\n  integrity sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==\n  dependencies:\n    aggregate-error "^3.0.0"\n\np-map@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/p-map/-/p-map-4.0.0.tgz#bb2f95a5eda2ec168ec9274e06a747c3e2904d2b"\n  integrity sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==\n  dependencies:\n    aggregate-error "^3.0.0"\n\np-reduce@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/p-reduce/-/p-reduce-2.1.0.tgz#09408da49507c6c274faa31f28df334bc712b64a"\n  integrity sha512-2USApvnsutq8uoxZBGbbWM0JIYLiEMJ9RlaN7fAzVNb9OZN0SHjjTTfIcb667XynS5Y1VhwDJVDa72TnPzAYWw==\n\np-try@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/p-try/-/p-try-1.0.0.tgz#cbc79cdbaf8fd4228e13f621f2b1a237c1b207b3"\n  integrity sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M=\n\np-try@^2.0.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/p-try/-/p-try-2.2.0.tgz#cb2868540e313d61de58fafbe35ce9004d5540e6"\n  integrity sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\n\npackage-hash@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/package-hash/-/package-hash-4.0.0.tgz#3537f654665ec3cc38827387fc904c163c54f506"\n  integrity sha512-whdkPIooSu/bASggZ96BWVvZTRMOFxnyUG5PnTSGKoJE2gd5mbVNmR2Nj20QFzxYYgAXpoqC+AiXzl+UMRh7zQ==\n  dependencies:\n    graceful-fs "^4.1.15"\n    hasha "^5.0.0"\n    lodash.flattendeep "^4.4.0"\n    release-zalgo "^1.0.0"\n\npackage-json@^6.3.0:\n  version "6.5.0"\n  resolved "https://registry.yarnpkg.com/package-json/-/package-json-6.5.0.tgz#6feedaca35e75725876d0b0e64974697fed145b0"\n  integrity sha512-k3bdm2n25tkyxcjSKzB5x8kfVxlMdgsbPr0GkZcwHsLpba6cBjqCt1KlcChKEvxHIcTB1FVMuwoijZ26xex5MQ==\n  dependencies:\n    got "^9.6.0"\n    registry-auth-token "^4.0.0"\n    registry-url "^5.0.0"\n    semver "^6.2.0"\n\npako@~0.2.0:\n  version "0.2.9"\n  resolved "https://registry.yarnpkg.com/pako/-/pako-0.2.9.tgz#f3f7522f4ef782348da8161bad9ecfd51bf83a75"\n  integrity sha1-8/dSL073gjSNqBYbrZ7P1Rv4OnU=\n\npako@~1.0.5:\n  version "1.0.11"\n  resolved "https://registry.yarnpkg.com/pako/-/pako-1.0.11.tgz#6c9599d340d54dfd3946380252a35705a6b992bf"\n  integrity sha512-4hLB8Py4zZce5s4yd9XzopqwVv/yGNhV1Bl8NTmCq1763HeK2+EwVTv+leGeL13Dnh2wfbqowVPXCIO0z4taYw==\n\nparent-module@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/parent-module/-/parent-module-1.0.1.tgz#691d2709e78c79fae3a156622452d00762caaaa2"\n  integrity sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==\n  dependencies:\n    callsites "^3.0.0"\n\nparents@^1.0.0, parents@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/parents/-/parents-1.0.1.tgz#fedd4d2bf193a77745fe71e371d73c3307d9c751"\n  integrity sha1-/t1NK/GTp3dF/nHjcdc8MwfZx1E=\n  dependencies:\n    path-platform "~0.11.15"\n\nparse-asn1@^5.0.0, parse-asn1@^5.1.5:\n  version "5.1.5"\n  resolved "https://registry.yarnpkg.com/parse-asn1/-/parse-asn1-5.1.5.tgz#003271343da58dc94cace494faef3d2147ecea0e"\n  integrity sha512-jkMYn1dcJqF6d5CpU689bq7w/b5ALS9ROVSpQDPrZsqqesUJii9qutvoT5ltGedNXMO2e16YUWIghG9KxaViTQ==\n  dependencies:\n    asn1.js "^4.0.0"\n    browserify-aes "^1.0.0"\n    create-hash "^1.1.0"\n    evp_bytestokey "^1.0.0"\n    pbkdf2 "^3.0.3"\n    safe-buffer "^5.1.1"\n\nparse-author@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/parse-author/-/parse-author-2.0.0.tgz#d3460bf1ddd0dfaeed42da754242e65fb684a81f"\n  integrity sha1-00YL8d3Q367tQtp1QkLmX7aEqB8=\n  dependencies:\n    author-regex "^1.0.0"\n\nparse-english@^4.0.0:\n  version "4.1.3"\n  resolved "https://registry.yarnpkg.com/parse-english/-/parse-english-4.1.3.tgz#692ec002e515b4b9b3e9e64ee1224b082667a20b"\n  integrity sha512-IQl1v/ik9gw437T8083coohMihae0rozpc7JYC/9h6hi9xKBSxFwh5HWRpzVC2ZhEs2nUlze2aAktpNBJXdJKA==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n    parse-latin "^4.0.0"\n    unist-util-modify-children "^1.0.0"\n    unist-util-visit-children "^1.0.0"\n\nparse-entities@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/parse-entities/-/parse-entities-2.0.0.tgz#53c6eb5b9314a1f4ec99fa0fdf7ce01ecda0cbe8"\n  integrity sha512-kkywGpCcRYhqQIchaWqZ875wzpS/bMKhz5HnN3p7wveJTkTtyAB/AlnS0f8DFSqYW1T82t6yEAkEcB+A1I3MbQ==\n  dependencies:\n    character-entities "^1.0.0"\n    character-entities-legacy "^1.0.0"\n    character-reference-invalid "^1.0.0"\n    is-alphanumerical "^1.0.0"\n    is-decimal "^1.0.0"\n    is-hexadecimal "^1.0.0"\n\nparse-glob@^3.0.4:\n  version "3.0.4"\n  resolved "https://registry.yarnpkg.com/parse-glob/-/parse-glob-3.0.4.tgz#b2c376cfb11f35513badd173ef0bb6e3a388391c"\n  integrity sha1-ssN2z7EfNVE7rdFz7wu246OIORw=\n  dependencies:\n    glob-base "^0.3.0"\n    is-dotfile "^1.0.0"\n    is-extglob "^1.0.0"\n    is-glob "^2.0.0"\n\nparse-json@^2.2.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/parse-json/-/parse-json-2.2.0.tgz#f480f40434ef80741f8469099f8dea18f55a4dc9"\n  integrity sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=\n  dependencies:\n    error-ex "^1.2.0"\n\nparse-json@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/parse-json/-/parse-json-4.0.0.tgz#be35f5425be1f7f6c747184f98a788cb99477ee0"\n  integrity sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=\n  dependencies:\n    error-ex "^1.3.1"\n    json-parse-better-errors "^1.0.1"\n\nparse-json@^5.0.0:\n  version "5.0.1"\n  resolved "https://registry.yarnpkg.com/parse-json/-/parse-json-5.0.1.tgz#7cfe35c1ccd641bce3981467e6c2ece61b3b3878"\n  integrity sha512-ztoZ4/DYeXQq4E21v169sC8qWINGpcosGv9XhTDvg9/hWvx/zrFkc9BiWxR58OJLHGk28j5BL0SDLeV2WmFZlQ==\n  dependencies:\n    "@babel/code-frame" "^7.0.0"\n    error-ex "^1.3.1"\n    json-parse-better-errors "^1.0.1"\n    lines-and-columns "^1.1.6"\n\nparse-latin@^4.0.0:\n  version "4.2.1"\n  resolved "https://registry.yarnpkg.com/parse-latin/-/parse-latin-4.2.1.tgz#b78c57c026cdf8e4e9924b296a2d0aa69877fab8"\n  integrity sha512-7T9g6mIsFFpLlo0Zzb2jLWdCt+H9Qtf/hRmMYFi/Mq6Ovi+YKo+AyDFX3OhFfu0vXX5Nid9FKJGKSSzNcTkWiA==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n    unist-util-modify-children "^1.0.0"\n    unist-util-visit-children "^1.0.0"\n\nparseurl@~1.3.3:\n  version "1.3.3"\n  resolved "https://registry.yarnpkg.com/parseurl/-/parseurl-1.3.3.tgz#9da19e7bee8d12dff0513ed5b76957793bc2e8d4"\n  integrity sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\n\npascalcase@^0.1.1:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/pascalcase/-/pascalcase-0.1.1.tgz#b363e55e8006ca6fe21784d2db22bd15d7917f14"\n  integrity sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=\n\npath-browserify@0.0.1, path-browserify@~0.0.0:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/path-browserify/-/path-browserify-0.0.1.tgz#e6c4ddd7ed3aa27c68a20cc4e50e1a4ee83bbc4a"\n  integrity sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==\n\npath-dirname@^1.0.0:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/path-dirname/-/path-dirname-1.0.2.tgz#cc33d24d525e099a5388c0336c6e32b9160609e0"\n  integrity sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=\n\npath-exists@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-3.0.0.tgz#ce0ebeaa5f78cb18925ea7d810d7b59b010fd515"\n  integrity sha1-zg6+ql94yxiSXqfYENe1mwEP1RU=\n\npath-exists@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/path-exists/-/path-exists-4.0.0.tgz#513bdbe2d3b95d7762e8c1137efa195c6c61b5b3"\n  integrity sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\n\npath-is-absolute@^1.0.0, path-is-absolute@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f"\n  integrity sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\n\npath-key@^3.0.0, path-key@^3.1.0:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"\n  integrity sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\n\npath-parse@^1.0.5, path-parse@^1.0.6:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/path-parse/-/path-parse-1.0.6.tgz#d62dbb5679405d72c4737ec58600e9ddcf06d24c"\n  integrity sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw==\n\npath-platform@~0.11.15:\n  version "0.11.15"\n  resolved "https://registry.yarnpkg.com/path-platform/-/path-platform-0.11.15.tgz#e864217f74c36850f0852b78dc7bf7d4a5721bf2"\n  integrity sha1-6GQhf3TDaFDwhSt43Hv31KVyG/I=\n\npath-to-regexp@0.1.7:\n  version "0.1.7"\n  resolved "https://registry.yarnpkg.com/path-to-regexp/-/path-to-regexp-0.1.7.tgz#df604178005f522f15eb4490e7247a1bfaa67f8c"\n  integrity sha1-32BBeABfUi8V60SQ5yR6G/qmf4w=\n\npath-type@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/path-type/-/path-type-2.0.0.tgz#f012ccb8415b7096fc2daa1054c3d72389594c73"\n  integrity sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=\n  dependencies:\n    pify "^2.0.0"\n\npath-type@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/path-type/-/path-type-3.0.0.tgz#cef31dc8e0a1a3bb0d105c0cd97cf3bf47f4e36f"\n  integrity sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==\n  dependencies:\n    pify "^3.0.0"\n\npath-type@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/path-type/-/path-type-4.0.0.tgz#84ed01c0a7ba380afe09d90a8c180dcd9d03043b"\n  integrity sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\n\npause@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/pause/-/pause-0.0.1.tgz#1d408b3fdb76923b9543d96fb4c9dfd535d9cb5d"\n  integrity sha1-HUCLP9t2kjuVQ9lvtMnf1TXZy10=\n\npbkdf2@^3.0.3:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/pbkdf2/-/pbkdf2-3.1.1.tgz#cb8724b0fada984596856d1a6ebafd3584654b94"\n  integrity sha512-4Ejy1OPxi9f2tt1rRV7Go7zmfDQ+ZectEQz3VGUQhgq62HtIRPDyG/JtnwIxs6x3uNMwo2V7q1fMvKjb+Tnpqg==\n  dependencies:\n    create-hash "^1.1.2"\n    create-hmac "^1.1.4"\n    ripemd160 "^2.0.1"\n    safe-buffer "^5.0.1"\n    sha.js "^2.4.8"\n\npicomatch@^2.0.4, picomatch@^2.0.5, picomatch@^2.2.1:\n  version "2.2.2"\n  resolved "https://registry.yarnpkg.com/picomatch/-/picomatch-2.2.2.tgz#21f333e9b6b8eaff02468f5146ea406d345f4dad"\n  integrity sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==\n\npify@^2.0.0:\n  version "2.3.0"\n  resolved "https://registry.yarnpkg.com/pify/-/pify-2.3.0.tgz#ed141a6ac043a849ea588498e7dca8b15330e90c"\n  integrity sha1-7RQaasBDqEnqWISY59yosVMw6Qw=\n\npify@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/pify/-/pify-3.0.0.tgz#e5a4acd2c101fdf3d9a4d07f0dbc4db49dd28176"\n  integrity sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\n\npify@^4.0.1:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/pify/-/pify-4.0.1.tgz#4b2cd25c50d598735c50292224fd8c6df41e3231"\n  integrity sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==\n\npkg-dir@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/pkg-dir/-/pkg-dir-2.0.0.tgz#f6d5d1109e19d63edf428e0bd57e12777615334b"\n  integrity sha1-9tXREJ4Z1j7fQo4L1X4Sd3YVM0s=\n  dependencies:\n    find-up "^2.1.0"\n\npkg-dir@^4.1.0, pkg-dir@^4.2.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/pkg-dir/-/pkg-dir-4.2.0.tgz#f099133df7ede422e81d1d8448270eeb3e4261f3"\n  integrity sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\n  dependencies:\n    find-up "^4.0.0"\n\nplease-upgrade-node@^3.2.0:\n  version "3.2.0"\n  resolved "https://registry.yarnpkg.com/please-upgrade-node/-/please-upgrade-node-3.2.0.tgz#aeddd3f994c933e4ad98b99d9a556efa0e2fe942"\n  integrity sha512-gQR3WpIgNIKwBMVLkpMUeR3e1/E1y42bqDQZfql+kDeXd8COYfM8PQA4X6y7a8u9Ua9FHmsrrmirW2vHs45hWg==\n  dependencies:\n    semver-compare "^1.0.0"\n\nplur@^3.0.1:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/plur/-/plur-3.1.1.tgz#60267967866a8d811504fe58f2faaba237546a5b"\n  integrity sha512-t1Ax8KUvV3FFII8ltczPn2tJdjqbd1sIzu6t4JL7nQ3EyeL/lTrj5PWKb06ic5/6XYDr65rQ4uzQEGN70/6X5w==\n  dependencies:\n    irregular-plurals "^2.0.0"\n\npluralize@^8.0.0:\n  version "8.0.0"\n  resolved "https://registry.yarnpkg.com/pluralize/-/pluralize-8.0.0.tgz#1a6fa16a38d12a1901e0320fa017051c539ce3b1"\n  integrity sha512-Nc3IT5yHzflTfbjgqWcCPpo7DaKy4FnpB0l/zCAW0Tc7jxAiuqSxHasntB3D7887LSrA93kDJ9IXovxJYxyLCA==\n\nposix-character-classes@^0.1.0:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/posix-character-classes/-/posix-character-classes-0.1.1.tgz#01eac0fe3b5af71a2a6c02feabb8c1fef7e00eab"\n  integrity sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=\n\nprelude-ls@^1.2.1:\n  version "1.2.1"\n  resolved "https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.2.1.tgz#debc6489d7a6e6b0e7611888cec880337d316396"\n  integrity sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==\n\nprelude-ls@~1.1.2:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/prelude-ls/-/prelude-ls-1.1.2.tgz#21932a549f5e52ffd9a827f570e04be62a97da54"\n  integrity sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ=\n\nprepend-http@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/prepend-http/-/prepend-http-2.0.0.tgz#e92434bfa5ea8c19f41cdfd401d741a3c819d897"\n  integrity sha1-6SQ0v6XqjBn0HN/UAddBo8gZ2Jc=\n\npreserve@^0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/preserve/-/preserve-0.2.0.tgz#815ed1f6ebc65926f865b310c0713bcb3315ce4b"\n  integrity sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks=\n\nprettier-linter-helpers@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz#d23d41fe1375646de2d0104d3454a3008802cf7b"\n  integrity sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==\n  dependencies:\n    fast-diff "^1.1.2"\n\nprettier@2.0.4:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/prettier/-/prettier-2.0.4.tgz#2d1bae173e355996ee355ec9830a7a1ee05457ef"\n  integrity sha512-SVJIQ51spzFDvh4fIbCLvciiDMCrRhlN3mbZvv/+ycjvmF5E73bKdGfU8QDLNmjYJf+lsGnDBC4UUnvTe5OO0w==\n\npretty-hrtime@^1.0.2:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/pretty-hrtime/-/pretty-hrtime-1.0.3.tgz#b7e3ea42435a4c9b2759d99e0f201eb195802ee1"\n  integrity sha1-t+PqQkNaTJsnWdmeDyAesZWALuE=\n\nprocess-nextick-args@~1.0.6:\n  version "1.0.7"\n  resolved "https://registry.yarnpkg.com/process-nextick-args/-/process-nextick-args-1.0.7.tgz#150e20b756590ad3f91093f25a4f2ad8bff30ba3"\n  integrity sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M=\n\nprocess-nextick-args@~2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/process-nextick-args/-/process-nextick-args-2.0.1.tgz#7820d9b16120cc55ca9ae7792680ae7dba6d7fe2"\n  integrity sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\n\nprocess-on-spawn@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/process-on-spawn/-/process-on-spawn-1.0.0.tgz#95b05a23073d30a17acfdc92a440efd2baefdc93"\n  integrity sha512-1WsPDsUSMmZH5LeMLegqkPDrsGgsWwk1Exipy2hvB0o/F0ASzbpIctSCcZIK1ykJvtTJULEH+20WOFjMvGnCTg==\n  dependencies:\n    fromentries "^1.2.0"\n\nprocess@^0.11.10, process@~0.11.0:\n  version "0.11.10"\n  resolved "https://registry.yarnpkg.com/process/-/process-0.11.10.tgz#7332300e840161bda3e69a1d1d91a7d4bc16f182"\n  integrity sha1-czIwDoQBYb2j5podHZGn1LwW8YI=\n\nprogress@^2.0.0:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/progress/-/progress-2.0.3.tgz#7e8cf8d8f5b8f239c1bc68beb4eb78567d572ef8"\n  integrity sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==\n\nproto-props@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/proto-props/-/proto-props-2.0.0.tgz#8ac6e6dec658545815c623a3bc81580deda9a181"\n  integrity sha512-2yma2tog9VaRZY2mn3Wq51uiSW4NcPYT1cQdBagwyrznrilKSZwIZ0UG3ZPL/mx+axEns0hE35T5ufOYZXEnBQ==\n\nproxy-addr@~2.0.5:\n  version "2.0.6"\n  resolved "https://registry.yarnpkg.com/proxy-addr/-/proxy-addr-2.0.6.tgz#fdc2336505447d3f2f2c638ed272caf614bbb2bf"\n  integrity sha512-dh/frvCBVmSsDYzw6n926jv974gddhkFPfiN8hPOi30Wax25QZyZEGveluCgliBnqmuM+UJmBErbAUFIoDbjOw==\n  dependencies:\n    forwarded "~0.1.2"\n    ipaddr.js "1.9.1"\n\npsl@^1.1.33:\n  version "1.8.0"\n  resolved "https://registry.yarnpkg.com/psl/-/psl-1.8.0.tgz#9326f8bcfb013adcc005fdff056acce020e51c24"\n  integrity sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==\n\npublic-encrypt@^4.0.0:\n  version "4.0.3"\n  resolved "https://registry.yarnpkg.com/public-encrypt/-/public-encrypt-4.0.3.tgz#4fcc9d77a07e48ba7527e7cbe0de33d0701331e0"\n  integrity sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==\n  dependencies:\n    bn.js "^4.1.0"\n    browserify-rsa "^4.0.0"\n    create-hash "^1.1.0"\n    parse-asn1 "^5.0.0"\n    randombytes "^2.0.1"\n    safe-buffer "^5.1.2"\n\npump@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/pump/-/pump-3.0.0.tgz#b4a2116815bde2f4e1ea602354e8c75565107a64"\n  integrity sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==\n  dependencies:\n    end-of-stream "^1.1.0"\n    once "^1.3.1"\n\npunycode@1.3.2:\n  version "1.3.2"\n  resolved "https://registry.yarnpkg.com/punycode/-/punycode-1.3.2.tgz#9653a036fb7c1ee42342f2325cceefea3926c48d"\n  integrity sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0=\n\npunycode@^1.2.4, punycode@^1.3.2:\n  version "1.4.1"\n  resolved "https://registry.yarnpkg.com/punycode/-/punycode-1.4.1.tgz#c0d5a63b2718800ad8e1eb0fa5269c84dd41845e"\n  integrity sha1-wNWmOycYgArY4esPpSachN1BhF4=\n\npunycode@^2.1.0, punycode@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/punycode/-/punycode-2.1.1.tgz#b58b010ac40c22c5657616c8d2c2c02c7bf479ec"\n  integrity sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\n\npupa@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/pupa/-/pupa-2.0.1.tgz#dbdc9ff48ffbea4a26a069b6f9f7abb051008726"\n  integrity sha512-hEJH0s8PXLY/cdXh66tNEQGndDrIKNqNC5xmrysZy3i5C3oEoLna7YAOad+7u125+zH1HNXUmGEkrhb3c2VriA==\n  dependencies:\n    escape-goat "^2.0.0"\n\nq@^1.5.1:\n  version "1.5.1"\n  resolved "https://registry.yarnpkg.com/q/-/q-1.5.1.tgz#7e32f75b41381291d04611f1bf14109ac00651d7"\n  integrity sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc=\n\nq@~1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/q/-/q-1.0.1.tgz#11872aeedee89268110b10a718448ffb10112a14"\n  integrity sha1-EYcq7t7okmgRCxCnGESP+xARKhQ=\n\nqs@0.6.5:\n  version "0.6.5"\n  resolved "https://registry.yarnpkg.com/qs/-/qs-0.6.5.tgz#294b268e4b0d4250f6dde19b3b8b34935dff14ef"\n  integrity sha1-KUsmjksNQlD23eGbO4s0k13/FO8=\n\nqs@0.6.6:\n  version "0.6.6"\n  resolved "https://registry.yarnpkg.com/qs/-/qs-0.6.6.tgz#6e015098ff51968b8a3c819001d5f2c89bc4b107"\n  integrity sha1-bgFQmP9RlouKPIGQAdXyyJvEsQc=\n\nqs@2.4.2:\n  version "2.4.2"\n  resolved "https://registry.yarnpkg.com/qs/-/qs-2.4.2.tgz#f7ce788e5777df0b5010da7f7c4e73ba32470f5a"\n  integrity sha1-9854jld33wtQENp/fE5zujJHD1o=\n\nqs@6.7.0:\n  version "6.7.0"\n  resolved "https://registry.yarnpkg.com/qs/-/qs-6.7.0.tgz#41dc1a015e3d581f1621776be31afb2876a9b1bc"\n  integrity sha512-VCdBRNFTX1fyE7Nb6FYoURo/SPe62QCaAyzJvUjwRaIsc+NePBEniHlvxFmmX56+HZphIGtV0XeCirBtpDrTyQ==\n\nqs@^6.9.4:\n  version "6.9.4"\n  resolved "https://registry.yarnpkg.com/qs/-/qs-6.9.4.tgz#9090b290d1f91728d3c22e54843ca44aea5ab687"\n  integrity sha512-A1kFqHekCTM7cz0udomYUoYNWjBebHm/5wzU/XqrBRBNWectVH0QIiN+NEcZ0Dte5hvzHwbr8+XQmguPhJ6WdQ==\n\nqs@~1.2.0:\n  version "1.2.2"\n  resolved "https://registry.yarnpkg.com/qs/-/qs-1.2.2.tgz#19b57ff24dc2a99ce1f8bdf6afcda59f8ef61f88"\n  integrity sha1-GbV/8k3CqZzh+L32r82ln472H4g=\n\nquerystring-es3@^0.2.0, querystring-es3@~0.2.0:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/querystring-es3/-/querystring-es3-0.2.1.tgz#9ec61f79049875707d69414596fd907a4d711e73"\n  integrity sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM=\n\nquerystring@0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/querystring/-/querystring-0.2.0.tgz#b209849203bb25df820da756e747005878521620"\n  integrity sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=\n\nquick-lru@^1.0.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/quick-lru/-/quick-lru-1.1.0.tgz#4360b17c61136ad38078397ff11416e186dcfbb8"\n  integrity sha1-Q2CxfGETatOAeDl/8RQW4Ybc+7g=\n\nquick-lru@^4.0.1:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/quick-lru/-/quick-lru-4.0.1.tgz#5b8878f113a58217848c6482026c73e1ba57727f"\n  integrity sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g==\n\nquotation@^1.0.0, quotation@^1.0.1:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/quotation/-/quotation-1.1.3.tgz#2a4d11f70105ad398b577883f310469367f53351"\n  integrity sha512-45gUgmX/RtQOQV1kwM06boP49OYXcKCPrYwdmAvs5YqkpiobhNKKwo524JM6Ma0ko3oN9tXNcWs9+ABq3Ry7YA==\n\nrandom-bytes@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/random-bytes/-/random-bytes-1.0.0.tgz#4f68a1dc0ae58bd3fb95848c30324db75d64360b"\n  integrity sha1-T2ih3Arli9P7lYSMMDJNt11kNgs=\n\nrandomatic@^3.0.0:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/randomatic/-/randomatic-3.1.1.tgz#b776efc59375984e36c537b2f51a1f0aff0da1ed"\n  integrity sha512-TuDE5KxZ0J461RVjrJZCJc+J+zCkTb1MbH9AQUq68sMhOMcy9jLcb3BrZKgp9q9Ncltdg4QVqWrH02W2EFFVYw==\n  dependencies:\n    is-number "^4.0.0"\n    kind-of "^6.0.0"\n    math-random "^1.0.1"\n\nrandombytes@^2.0.0, randombytes@^2.0.1, randombytes@^2.0.5:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/randombytes/-/randombytes-2.1.0.tgz#df6f84372f0270dc65cdf6291349ab7a473d4f2a"\n  integrity sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\n  dependencies:\n    safe-buffer "^5.1.0"\n\nrandomfill@^1.0.3:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/randomfill/-/randomfill-1.0.4.tgz#c92196fc86ab42be983f1bf31778224931d61458"\n  integrity sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==\n  dependencies:\n    randombytes "^2.0.5"\n    safe-buffer "^5.1.0"\n\nrange-parser@0.0.4:\n  version "0.0.4"\n  resolved "https://registry.yarnpkg.com/range-parser/-/range-parser-0.0.4.tgz#c0427ffef51c10acba0782a46c9602e744ff620b"\n  integrity sha1-wEJ//vUcEKy6B4KkbJYC50T/Ygs=\n\nrange-parser@~1.2.1:\n  version "1.2.1"\n  resolved "https://registry.yarnpkg.com/range-parser/-/range-parser-1.2.1.tgz#3cf37023d199e1c24d1a55b84800c2f3e6468031"\n  integrity sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\n\nraw-body@1.1.2:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/raw-body/-/raw-body-1.1.2.tgz#c74b3004dea5defd1696171106ac740ec31d62be"\n  integrity sha1-x0swBN6l3v0WlhcRBqx0DsMdYr4=\n  dependencies:\n    bytes "~0.2.1"\n\nraw-body@2.4.0:\n  version "2.4.0"\n  resolved "https://registry.yarnpkg.com/raw-body/-/raw-body-2.4.0.tgz#a1ce6fb9c9bc356ca52e89256ab59059e13d0332"\n  integrity sha512-4Oz8DUIwdvoa5qMJelxipzi/iJIi40O5cGV1wNYp5hvZP8ZN0T+jiNkL0QepXs+EsQ9XJ8ipEDoiH70ySUJP3Q==\n  dependencies:\n    bytes "3.1.0"\n    http-errors "1.7.2"\n    iconv-lite "0.4.24"\n    unpipe "1.0.0"\n\nraw-body@~2.0.1:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/raw-body/-/raw-body-2.0.2.tgz#a2c2f98c8531cee99c63d8d238b7de97bb659fca"\n  integrity sha1-osL5jIUxzumcY9jSOLfel7tln8o=\n  dependencies:\n    bytes "2.1.0"\n    iconv-lite "0.4.8"\n\nrc@^1.2.8:\n  version "1.2.8"\n  resolved "https://registry.yarnpkg.com/rc/-/rc-1.2.8.tgz#cd924bf5200a075b83c188cd6b9e211b7fc0d3ed"\n  integrity sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==\n  dependencies:\n    deep-extend "^0.6.0"\n    ini "~1.3.0"\n    minimist "^1.2.0"\n    strip-json-comments "~2.0.1"\n\nread-only-stream@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/read-only-stream/-/read-only-stream-2.0.0.tgz#2724fd6a8113d73764ac288d4386270c1dbf17f0"\n  integrity sha1-JyT9aoET1zdkrCiNQ4YnDB2/F/A=\n  dependencies:\n    readable-stream "^2.0.2"\n\nread-pkg-up@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/read-pkg-up/-/read-pkg-up-2.0.0.tgz#6b72a8048984e0c41e79510fd5e9fa99b3b549be"\n  integrity sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=\n  dependencies:\n    find-up "^2.0.0"\n    read-pkg "^2.0.0"\n\nread-pkg-up@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/read-pkg-up/-/read-pkg-up-3.0.0.tgz#3ed496685dba0f8fe118d0691dc51f4a1ff96f07"\n  integrity sha1-PtSWaF26D4/hGNBpHcUfSh/5bwc=\n  dependencies:\n    find-up "^2.0.0"\n    read-pkg "^3.0.0"\n\nread-pkg-up@^7.0.1:\n  version "7.0.1"\n  resolved "https://registry.yarnpkg.com/read-pkg-up/-/read-pkg-up-7.0.1.tgz#f3a6135758459733ae2b95638056e1854e7ef507"\n  integrity sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==\n  dependencies:\n    find-up "^4.1.0"\n    read-pkg "^5.2.0"\n    type-fest "^0.8.1"\n\nread-pkg@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/read-pkg/-/read-pkg-2.0.0.tgz#8ef1c0623c6a6db0dc6713c4bfac46332b2368f8"\n  integrity sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=\n  dependencies:\n    load-json-file "^2.0.0"\n    normalize-package-data "^2.3.2"\n    path-type "^2.0.0"\n\nread-pkg@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/read-pkg/-/read-pkg-3.0.0.tgz#9cbc686978fee65d16c00e2b19c237fcf6e38389"\n  integrity sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=\n  dependencies:\n    load-json-file "^4.0.0"\n    normalize-package-data "^2.3.2"\n    path-type "^3.0.0"\n\nread-pkg@^5.2.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/read-pkg/-/read-pkg-5.2.0.tgz#7bf295438ca5a33e56cd30e053b34ee7250c93cc"\n  integrity sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==\n  dependencies:\n    "@types/normalize-package-data" "^2.4.0"\n    normalize-package-data "^2.5.0"\n    parse-json "^5.0.0"\n    type-fest "^0.6.0"\n\nreadable-stream@1.1.x, readable-stream@^1.0.27-1, readable-stream@~1.1.11, readable-stream@~1.1.8, readable-stream@~1.1.9:\n  version "1.1.14"\n  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-1.1.14.tgz#7cf4c54ef648e3813084c636dd2079e166c081d9"\n  integrity sha1-fPTFTvZI44EwhMY23SB54WbAgdk=\n  dependencies:\n    core-util-is "~1.0.0"\n    inherits "~2.0.1"\n    isarray "0.0.1"\n    string_decoder "~0.10.x"\n\n"readable-stream@2 || 3", readable-stream@^3.0.2, readable-stream@^3.1.1, readable-stream@^3.6.0:\n  version "3.6.0"\n  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-3.6.0.tgz#337bbda3adc0706bd3e024426a286d4b4b2c9198"\n  integrity sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==\n  dependencies:\n    inherits "^2.0.3"\n    string_decoder "^1.1.1"\n    util-deprecate "^1.0.1"\n\nreadable-stream@^2.0.0, readable-stream@^2.0.2, readable-stream@^2.2.2, readable-stream@^2.3.3, readable-stream@^2.3.6, readable-stream@~2.3.6:\n  version "2.3.7"\n  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-2.3.7.tgz#1eca1cf711aef814c04f62252a36a62f6cb23b57"\n  integrity sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\n  dependencies:\n    core-util-is "~1.0.0"\n    inherits "~2.0.3"\n    isarray "~1.0.0"\n    process-nextick-args "~2.0.0"\n    safe-buffer "~5.1.1"\n    string_decoder "~1.1.1"\n    util-deprecate "~1.0.1"\n\nreadable-stream@~1.0.2, readable-stream@~1.0.24, readable-stream@~1.0.26, readable-stream@~1.0.33:\n  version "1.0.34"\n  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-1.0.34.tgz#125820e34bc842d2f2aaafafe4c2916ee32c157c"\n  integrity sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\n  dependencies:\n    core-util-is "~1.0.0"\n    inherits "~2.0.1"\n    isarray "0.0.1"\n    string_decoder "~0.10.x"\n\nreadable-stream@~2.0.0:\n  version "2.0.6"\n  resolved "https://registry.yarnpkg.com/readable-stream/-/readable-stream-2.0.6.tgz#8f90341e68a53ccc928788dacfcd11b36eb9b78e"\n  integrity sha1-j5A0HmilPMySh4jaz80Rs265t44=\n  dependencies:\n    core-util-is "~1.0.0"\n    inherits "~2.0.1"\n    isarray "~1.0.0"\n    process-nextick-args "~1.0.6"\n    string_decoder "~0.10.x"\n    util-deprecate "~1.0.1"\n\nreaddirp@^2.0.0, readdirp@^2.2.1:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/readdirp/-/readdirp-2.2.1.tgz#0e87622a3325aa33e892285caf8b4e846529a525"\n  integrity sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==\n  dependencies:\n    graceful-fs "^4.1.11"\n    micromatch "^3.1.10"\n    readable-stream "^2.0.2"\n\nreaddirp@~3.4.0:\n  version "3.4.0"\n  resolved "https://registry.yarnpkg.com/readdirp/-/readdirp-3.4.0.tgz#9fdccdf9e9155805449221ac645e8303ab5b9ada"\n  integrity sha512-0xe001vZBnJEK+uKcj8qOhyAKPzIT+gStxWr3LCB0DwcXR5NZJ3IaC+yGnHCYzB/S7ov3m3EEbZI2zeNvX+hGQ==\n  dependencies:\n    picomatch "^2.2.1"\n\nredent@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/redent/-/redent-2.0.0.tgz#c1b2007b42d57eb1389079b3c8333639d5e1ccaa"\n  integrity sha1-wbIAe0LVfrE4kHmzyDM2OdXhzKo=\n  dependencies:\n    indent-string "^3.0.0"\n    strip-indent "^2.0.0"\n\nredent@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/redent/-/redent-3.0.0.tgz#e557b7998316bb53c9f1f56fa626352c6963059f"\n  integrity sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==\n  dependencies:\n    indent-string "^4.0.0"\n    strip-indent "^3.0.0"\n\nreduce-component@1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/reduce-component/-/reduce-component-1.0.1.tgz#e0c93542c574521bea13df0f9488ed82ab77c5da"\n  integrity sha1-4Mk1QsV0UhvqE98PlIjtgqt3xdo=\n\nregenerate-unicode-properties@^8.2.0:\n  version "8.2.0"\n  resolved "https://registry.yarnpkg.com/regenerate-unicode-properties/-/regenerate-unicode-properties-8.2.0.tgz#e5de7111d655e7ba60c057dbe9ff37c87e65cdec"\n  integrity sha512-F9DjY1vKLo/tPePDycuH3dn9H1OTPIkVD9Kz4LODu+F2C75mgjAJ7x/gwy6ZcSNRAAkhNlJSOHRe8k3p+K9WhA==\n  dependencies:\n    regenerate "^1.4.0"\n\nregenerate@^1.4.0:\n  version "1.4.1"\n  resolved "https://registry.yarnpkg.com/regenerate/-/regenerate-1.4.1.tgz#cad92ad8e6b591773485fbe05a485caf4f457e6f"\n  integrity sha512-j2+C8+NtXQgEKWk49MMP5P/u2GhnahTtVkRIHr5R5lVRlbKvmQ+oS+A5aLKWp2ma5VkT8sh6v+v4hbH0YHR66A==\n\nregenerator-runtime@0.13.5:\n  version "0.13.5"\n  resolved "https://registry.yarnpkg.com/regenerator-runtime/-/regenerator-runtime-0.13.5.tgz#d878a1d094b4306d10b9096484b33ebd55e26697"\n  integrity sha512-ZS5w8CpKFinUzOwW3c83oPeVXoNsrLsaCoLtJvAClH135j/R77RuymhiSErhm2lKcwSCIpmvIWSbDkIfAqKQlA==\n\nregenerator-runtime@^0.13.4:\n  version "0.13.7"\n  resolved "https://registry.yarnpkg.com/regenerator-runtime/-/regenerator-runtime-0.13.7.tgz#cac2dacc8a1ea675feaabaeb8ae833898ae46f55"\n  integrity sha512-a54FxoJDIr27pgf7IgeQGxmqUNYrcV338lf/6gH456HZ/PhX+5BcwHXG9ajESmwe6WRO0tAzRUrRmNONWgkrew==\n\nregenerator-transform@^0.14.2:\n  version "0.14.5"\n  resolved "https://registry.yarnpkg.com/regenerator-transform/-/regenerator-transform-0.14.5.tgz#c98da154683671c9c4dcb16ece736517e1b7feb4"\n  integrity sha512-eOf6vka5IO151Jfsw2NO9WpGX58W6wWmefK3I1zEGr0lOD0u8rwPaNqQL1aRxUaxLeKO3ArNh3VYg1KbaD+FFw==\n  dependencies:\n    "@babel/runtime" "^7.8.4"\n\nregex-cache@^0.4.2:\n  version "0.4.4"\n  resolved "https://registry.yarnpkg.com/regex-cache/-/regex-cache-0.4.4.tgz#75bdc58a2a1496cec48a12835bc54c8d562336dd"\n  integrity sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==\n  dependencies:\n    is-equal-shallow "^0.1.3"\n\nregex-not@^1.0.0, regex-not@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/regex-not/-/regex-not-1.0.2.tgz#1f4ece27e00b0b65e0247a6810e6a85d83a5752c"\n  integrity sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==\n  dependencies:\n    extend-shallow "^3.0.2"\n    safe-regex "^1.1.0"\n\nregexp-tree@^0.1.21, regexp-tree@~0.1.1:\n  version "0.1.21"\n  resolved "https://registry.yarnpkg.com/regexp-tree/-/regexp-tree-0.1.21.tgz#55e2246b7f7d36f1b461490942fa780299c400d7"\n  integrity sha512-kUUXjX4AnqnR8KRTCrayAo9PzYMRKmVoGgaz2tBuz0MF3g1ZbGebmtW0yFHfFK9CmBjQKeYIgoL22pFLBJY7sw==\n\nregexp.prototype.flags@^1.2.0:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/regexp.prototype.flags/-/regexp.prototype.flags-1.3.0.tgz#7aba89b3c13a64509dabcf3ca8d9fbb9bdf5cb75"\n  integrity sha512-2+Q0C5g951OlYlJz6yu5/M33IcsESLlLfsyIaLJaG4FA2r4yP8MvVMJUUP/fVBkSpbbbZlS5gynbEWLipiiXiQ==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.0-next.1"\n\nregexpp@^3.0.0, regexpp@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/regexpp/-/regexpp-3.1.0.tgz#206d0ad0a5648cffbdb8ae46438f3dc51c9f78e2"\n  integrity sha512-ZOIzd8yVsQQA7j8GCSlPGXwg5PfmA1mrq0JP4nGhh54LaKN3xdai/vHUDu74pKwV8OxseMS65u2NImosQcSD0Q==\n\nregexpu-core@^4.7.0:\n  version "4.7.0"\n  resolved "https://registry.yarnpkg.com/regexpu-core/-/regexpu-core-4.7.0.tgz#fcbf458c50431b0bb7b45d6967b8192d91f3d938"\n  integrity sha512-TQ4KXRnIn6tz6tjnrXEkD/sshygKH/j5KzK86X8MkeHyZ8qst/LZ89j3X4/8HEIfHANTFIP/AbXakeRhWIl5YQ==\n  dependencies:\n    regenerate "^1.4.0"\n    regenerate-unicode-properties "^8.2.0"\n    regjsgen "^0.5.1"\n    regjsparser "^0.6.4"\n    unicode-match-property-ecmascript "^1.0.4"\n    unicode-match-property-value-ecmascript "^1.2.0"\n\nregistry-auth-token@^4.0.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/registry-auth-token/-/registry-auth-token-4.2.0.tgz#1d37dffda72bbecd0f581e4715540213a65eb7da"\n  integrity sha512-P+lWzPrsgfN+UEpDS3U8AQKg/UjZX6mQSJueZj3EK+vNESoqBSpBUD3gmu4sF9lOsjXWjF11dQKUqemf3veq1w==\n  dependencies:\n    rc "^1.2.8"\n\nregistry-url@^5.0.0:\n  version "5.1.0"\n  resolved "https://registry.yarnpkg.com/registry-url/-/registry-url-5.1.0.tgz#e98334b50d5434b81136b44ec638d9c2009c5009"\n  integrity sha512-8acYXXTI0AkQv6RAOjE3vOaIXZkT9wo4LOFbBKYQEEnnMNBpKqdUrI6S4NT0KPIo/WVvJ5tE/X5LF/TQUf0ekw==\n  dependencies:\n    rc "^1.2.8"\n\nregjsgen@^0.5.1:\n  version "0.5.2"\n  resolved "https://registry.yarnpkg.com/regjsgen/-/regjsgen-0.5.2.tgz#92ff295fb1deecbf6ecdab2543d207e91aa33733"\n  integrity sha512-OFFT3MfrH90xIW8OOSyUrk6QHD5E9JOTeGodiJeBS3J6IwlgzJMNE/1bZklWz5oTg+9dCMyEetclvCVXOPoN3A==\n\nregjsparser@^0.6.4:\n  version "0.6.4"\n  resolved "https://registry.yarnpkg.com/regjsparser/-/regjsparser-0.6.4.tgz#a769f8684308401a66e9b529d2436ff4d0666272"\n  integrity sha512-64O87/dPDgfk8/RQqC4gkZoGyyWFIEUTTh80CU6CWuK5vkCGyekIx+oKcEIYtP/RAxSQltCZHCNu/mdd7fqlJw==\n  dependencies:\n    jsesc "~0.5.0"\n\nrelease-zalgo@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/release-zalgo/-/release-zalgo-1.0.0.tgz#09700b7e5074329739330e535c5a90fb67851730"\n  integrity sha1-CXALflB0Mpc5Mw5TXFqQ+2eFFzA=\n  dependencies:\n    es6-error "^4.0.1"\n\nremark-cli@^8.0.1:\n  version "8.0.1"\n  resolved "https://registry.yarnpkg.com/remark-cli/-/remark-cli-8.0.1.tgz#093e9f27c1d56a591f4c44c017de5749d4e79a08"\n  integrity sha512-UaYeFI5qUAzkthUd8/MLBQD5OKM6jLN8GRvF6v+KF7xO/i1jQ+X2VqUSQAxWFYxZ8R25gM56GVjeoKOZ0EIr8A==\n  dependencies:\n    markdown-extensions "^1.1.0"\n    remark "^12.0.0"\n    unified-args "^8.0.0"\n\nremark-comment-config@^5.1.1:\n  version "5.1.1"\n  resolved "https://registry.yarnpkg.com/remark-comment-config/-/remark-comment-config-5.1.1.tgz#d2f8856c32f1c92dc79904eaff45c56a955585fc"\n  integrity sha512-35u4q9uOvyczD2CQ5W9yjw2VWuyGOih8DzMmxkOaDywQ2irrBhNvfJGHsv5D8seWFEdFSgK9p6l4C2vVkPRt1A==\n  dependencies:\n    mdast-comment-marker "^1.0.1"\n\nremark-contributors@4.x:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/remark-contributors/-/remark-contributors-4.0.1.tgz#f28269adb91f7ca6c95bb14ce1e08a9822ac9dad"\n  integrity sha512-5G76tKfpRl/TrOljvD1KZvA53S+jm0DeL2HDwFgdkxTexUdv8A0EG2JQNxGWXEVmOhch3yJ4tF2QlsiRf8SXWg==\n  dependencies:\n    is-url "^1.2.2"\n    mdast-util-heading-range "^2.1.2"\n    parse-author "^2.0.0"\n    unist-builder "^1.0.3"\n\nremark-heading-gap@^3.1.2:\n  version "3.1.2"\n  resolved "https://registry.yarnpkg.com/remark-heading-gap/-/remark-heading-gap-3.1.2.tgz#480b71a655e793848db42b714358b5533d7d5ec3"\n  integrity sha512-LNm1B4UveH1BkSLx4OPab0vW/p3KOc+8wV4kd94CHXmhuJ8i+kdroG2AonkUVzbOElc8U8ylxF3WPfmqYbRjJg==\n\nremark-license@niftylettuce/remark-license:\n  version "4.0.1"\n  resolved "https://codeload.github.com/niftylettuce/remark-license/tar.gz/17ecb8f64f8f6082414d14f9267a12764e6ddbfb"\n  dependencies:\n    mdast-util-heading-range "^2.0.0"\n    parse-author "^2.0.0"\n    spdx-license-list "^3.0.1"\n\nremark-lint-blockquote-indentation@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-blockquote-indentation/-/remark-lint-blockquote-indentation-2.0.1.tgz#27347959acf42a6c3e401488d8210e973576b254"\n  integrity sha512-uJ9az/Ms9AapnkWpLSCJfawBfnBI2Tn1yUsPNqIFv6YM98ymetItUMyP6ng9NFPqDvTQBbiarulkgoEo0wcafQ==\n  dependencies:\n    mdast-util-to-string "^1.0.2"\n    pluralize "^8.0.0"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-checkbox-character-style@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-checkbox-character-style/-/remark-lint-checkbox-character-style-2.0.1.tgz#2ff2df31cb0ec99744f5122086610578c2d13754"\n  integrity sha512-ANs1HaNOEYmc+O9Xyew7HRA48VXPnk7VLM76fLEf6bifXZU+VAJe+a6cmS+ohTSVSTjkMDl9dnbqiWQRE1U4zg==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n    vfile-location "^3.0.0"\n\nremark-lint-checkbox-content-indent@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-checkbox-content-indent/-/remark-lint-checkbox-content-indent-2.0.1.tgz#6730ff34aad5d8f389c02e6371b03cb9885aeb09"\n  integrity sha512-NYOLJK8G/8BMQmhnstBjlZYmiH+xj1ECVWAGndRG5cRYmFZL87FVEm44Jd57VKczIAHPkOp8rn8fPpVgvghjAw==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n    vfile-location "^3.0.0"\n\nremark-lint-code-block-style@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-code-block-style/-/remark-lint-code-block-style-2.0.1.tgz#448b0f2660acfcdfff2138d125ff5b1c1279c0cb"\n  integrity sha512-eRhmnColmSxJhO61GHZkvO67SpHDshVxs2j3+Zoc5Y1a4zQT2133ZAij04XKaBFfsVLjhbY/+YOWxgvtjx2nmA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-definition-case@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-definition-case/-/remark-lint-definition-case-2.0.1.tgz#10340eb2f87acff41140d52ad7e5b40b47e6690a"\n  integrity sha512-M+XlThtQwEJLQnQb5Gi6xZdkw92rGp7m2ux58WMw/Qlcg02WgHR/O0OcHPe5VO5hMJrtI+cGG5T0svsCgRZd3w==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-definition-spacing@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-definition-spacing/-/remark-lint-definition-spacing-2.0.1.tgz#97f01bf9bf77a7bdf8013b124b7157dd90b07c64"\n  integrity sha512-xK9DOQO5MudITD189VyUiMHBIKltW1oc55L7Fti3i9DedXoBG7Phm+V9Mm7IdWzCVkquZVgVk63xQdqzSQRrSQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-emphasis-marker@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-emphasis-marker/-/remark-lint-emphasis-marker-2.0.1.tgz#1d5ca2070d4798d16c23120726158157796dc317"\n  integrity sha512-7mpbAUrSnHiWRyGkbXRL5kfSKY9Cs8cdob7Fw+Z02/pufXMF4yRWaegJ5NTUu1RE+SKlF44wtWWjvcIoyY6/aw==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-fenced-code-flag@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-fenced-code-flag/-/remark-lint-fenced-code-flag-2.0.1.tgz#2cb3ddb1157082c45760c7d01ca08e13376aaf62"\n  integrity sha512-+COnWHlS/h02FMxoZWxNlZW3Y8M0cQQpmx3aNCbG7xkyMyCKsMLg9EmRvYHHIbxQCuF3JT0WWx5AySqlc7d+NA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-fenced-code-marker@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-fenced-code-marker/-/remark-lint-fenced-code-marker-2.0.1.tgz#7bbeb0fb45b0818a3c8a2d232cf0c723ade58ecf"\n  integrity sha512-lujpjm04enn3ma6lITlttadld6eQ1OWAEcT3qZzvFHp+zPraC0yr0eXlvtDN/0UH8mrln/QmGiZp3i8IdbucZg==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-file-extension@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/remark-lint-file-extension/-/remark-lint-file-extension-1.0.5.tgz#7e2feec02919aa3db5c71fda19d726a9e24a4c6c"\n  integrity sha512-oVQdf5vEomwHkfQ7R/mgmsWW2H/t9kSvnrxtVoNOHr+qnOEafKKDn+AFhioN2kqtjCZBAjSSrePs6xGKmXKDTw==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-final-definition@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-final-definition/-/remark-lint-final-definition-2.0.1.tgz#ec37fb2a61452960ddff15055ac7c2f180ca5377"\n  integrity sha512-LG7nM0Xk6J9npYuJOf6xXdMWCLsb6M4LMc3SDcUa4KoBCoF646RrtT5MyMAq8OXlKROwugObyyW3aXUjG3blyA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-final-newline@^1.0.0:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/remark-lint-final-newline/-/remark-lint-final-newline-1.0.5.tgz#666f609a91f97c44f5ab7facf1fb3c5b3ffe398f"\n  integrity sha512-rfLlW8+Fz2dqnaEgU4JwLA55CQF1T4mfSs/GwkkeUCGPenvEYwSkCN2KO2Gr1dy8qPoOdTFE1rSufLjmeTW5HA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-first-heading-level@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-first-heading-level/-/remark-lint-first-heading-level-2.0.1.tgz#24d0fd118d69a3aa08bda64b3435a9db0457eb45"\n  integrity sha512-XoK/eLfnz1VSA8QkfMbdbvlCqOwgw29MAWEGC4Cv0666nTcY9uWHlZ/SV/20YNmuEVdfCA+92v92mM486qcASQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-hard-break-spaces@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-hard-break-spaces/-/remark-lint-hard-break-spaces-2.0.1.tgz#2149b55cda17604562d040c525a2a0d26aeb0f0f"\n  integrity sha512-Qfn/BMQFamHhtbfLrL8Co/dbYJFLRL4PGVXZ5wumkUO5f9FkZC2RsV+MD9lisvGTkJK0ZEJrVVeaPbUIFM0OAw==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-heading-style@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-heading-style/-/remark-lint-heading-style-2.0.1.tgz#8216fca67d97bbbeec8a19b6c71bfefc16549f72"\n  integrity sha512-IrFLNs0M5Vbn9qg51AYhGUfzgLAcDOjh2hFGMz3mx664dV6zLcNZOPSdJBBJq3JQR4gKpoXcNwN1+FFaIATj+A==\n  dependencies:\n    mdast-util-heading-style "^1.0.2"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-list-item-bullet-indent@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-list-item-bullet-indent/-/remark-lint-list-item-bullet-indent-2.0.1.tgz#cc8b07ab32c7a6911952933cf0243fecaf8a1986"\n  integrity sha512-tozDt9LChG1CvYJnBQH/oh45vNcHYBvg79ogvV0f8MtE/K0CXsM8EpfQ6pImFUdHpBV1op6aF6zPMrB0AkRhcQ==\n  dependencies:\n    pluralize "^8.0.0"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-list-item-indent@2.0.1, remark-lint-list-item-indent@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-list-item-indent/-/remark-lint-list-item-indent-2.0.1.tgz#c6472514e17bc02136ca87936260407ada90bf8d"\n  integrity sha512-4IKbA9GA14Q9PzKSQI6KEHU/UGO36CSQEjaDIhmb9UOhyhuzz4vWhnSIsxyI73n9nl9GGRAMNUSGzr4pQUFwTA==\n  dependencies:\n    pluralize "^8.0.0"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-auto-link-without-protocol@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-auto-link-without-protocol/-/remark-lint-no-auto-link-without-protocol-2.0.1.tgz#f75e5c24adb42385593e0d75ca39987edb70b6c4"\n  integrity sha512-TFcXxzucsfBb/5uMqGF1rQA+WJJqm1ZlYQXyvJEXigEZ8EAxsxZGPb/gOQARHl/y0vymAuYxMTaChavPKaBqpQ==\n  dependencies:\n    mdast-util-to-string "^1.0.2"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-blockquote-without-marker@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-blockquote-without-marker/-/remark-lint-no-blockquote-without-marker-3.0.1.tgz#fb1d5a87ee6f21b731bb2ee52df55632c519a5eb"\n  integrity sha512-sM953+u0zN90SGd2V5hWcFbacbpaROUslS5Q5F7/aa66/2rAwh6zVnrXc4pf7fFOpj7I9Xa8Aw+uB+3RJWwdrQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n    vfile-location "^3.0.0"\n\nremark-lint-no-consecutive-blank-lines@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-consecutive-blank-lines/-/remark-lint-no-consecutive-blank-lines-2.0.1.tgz#4163fa21619fe69325333f83eed8a933ed32e7ec"\n  integrity sha512-CP34b9AOaK1iD8FDplWvF9cJ318izoOaPXb2nb7smf/NdVHBI7joDzXcD4ojHOb3DTZuQcZ2bVv36vTPi/mv0Q==\n  dependencies:\n    pluralize "^8.0.0"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-duplicate-definitions@^2.0.0, remark-lint-no-duplicate-definitions@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-duplicate-definitions/-/remark-lint-no-duplicate-definitions-2.0.1.tgz#588039881f63fe01df69d3b64265760b3e83b477"\n  integrity sha512-XL22benJZB01m+aOse91nsu1IMFqeWJWme9QvoJuxIcBROO1BG1VoqLOkwNcawE/M/0CkvTo5rfx0eMlcnXOIw==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-stringify-position "^2.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-emphasis-as-heading@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-emphasis-as-heading/-/remark-lint-no-emphasis-as-heading-2.0.1.tgz#fcc064133fe00745943c334080fed822f72711ea"\n  integrity sha512-z86+yWtVivtuGIxIC4g9RuATbgZgOgyLcnaleonJ7/HdGTYssjJNyqCJweaWSLoaI0akBQdDwmtJahW5iuX3/g==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-file-name-articles@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-file-name-articles/-/remark-lint-no-file-name-articles-1.0.5.tgz#4ca3425f6613f94feaef6941028583299727c339"\n  integrity sha512-AQk5eTb3s3TAPPjiglZgqlQj4ycao+gPs8/XkdN1VCPUtewW0GgwoQe7YEuBKayJ6ioN8dGP37Kg/P/PlKaRQA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-no-file-name-consecutive-dashes@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-file-name-consecutive-dashes/-/remark-lint-no-file-name-consecutive-dashes-1.0.5.tgz#e9a6f2aeab948aa249c8a8356359e3d8843a4c5c"\n  integrity sha512-Mg2IDsi790/dSdAzwnBnsMYdZm3qC2QgGwqOWcr0TPABJhhjC3p8r5fX4MNMTXI5It7B7bW9+ImmCeLOZiXkLg==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-no-file-name-irregular-characters@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-file-name-irregular-characters/-/remark-lint-no-file-name-irregular-characters-1.0.5.tgz#6866f5b8370cdc916d55e7cf87bb6a55f9b6e0c6"\n  integrity sha512-Oe5i99qNUKc2bxmiH421o5B/kqlf1dfjAxpHNLhi2X2dXE91zRGavrlRM/4f4oR0N9Bqb3qB9JZPyMPWrzu9XA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-no-file-name-mixed-case@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-file-name-mixed-case/-/remark-lint-no-file-name-mixed-case-1.0.5.tgz#3e37bfef74bbdd4b07aa9ef9dd452758f8b46731"\n  integrity sha512-ilrUCbHZin/ENwr8c3SC2chgkFsizXjBQIB/oZ7gnm1IkCkZPiMyXZAHdpwC/DjbrpGxfMYh9JmIHao4giS5+A==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-no-file-name-outer-dashes@^1.0.6:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-file-name-outer-dashes/-/remark-lint-no-file-name-outer-dashes-1.0.6.tgz#4e0e4d42a63f0fdfb856bb5d8d8112725656e700"\n  integrity sha512-rT8CmcIlenegS0Yst4maYXdZfqIjBOiRUY8j/KJkORF5tKH+3O1/S07025qPGmcRihzK3w4yO0K8rgkKQw0b9w==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n\nremark-lint-no-heading-content-indent@^2.0.0, remark-lint-no-heading-content-indent@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-heading-content-indent/-/remark-lint-no-heading-content-indent-2.0.1.tgz#2f3bd39af31aa034f5c5b0fec1a54f438fff7352"\n  integrity sha512-Jp0zCykGwg13z7XU4VuoFK7DN8bVZ1u3Oqu3hqECsH6LMASb0tW4zcTIc985kcVo3OQTRyb6KLQXL2ltOvppKA==\n  dependencies:\n    mdast-util-heading-style "^1.0.2"\n    pluralize "^8.0.0"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-heading-indent@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-heading-indent/-/remark-lint-no-heading-indent-2.0.1.tgz#0dcf741e120bf5c59e34554d6a5ac030b931777d"\n  integrity sha512-eU4t3t8icfRzQlna74gQqNQ1Y9TuXZjNKriMBEmhLzyniHqcY4TO3pBmrkm2TJN/ji6gVBWjaT0uYO2Vm6KxLA==\n  dependencies:\n    pluralize "^8.0.0"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-heading-punctuation@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-heading-punctuation/-/remark-lint-no-heading-punctuation-2.0.1.tgz#face59f9a95c8aa278a8ee0c728bc44cd53ea9ed"\n  integrity sha512-lY/eF6GbMeGu4cSuxfGHyvaQQBIq/6T/o+HvAR5UfxSTxmxZFwbZneAI2lbeR1zPcqOU87NsZ5ZZzWVwdLpPBw==\n  dependencies:\n    mdast-util-to-string "^1.0.2"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-inline-padding@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-inline-padding/-/remark-lint-no-inline-padding-2.0.1.tgz#630b546566d34bde87943da318a80fc7ff856f1f"\n  integrity sha512-a36UlPvRrLCgxjjG3YZA9VCDvLBcoBtGNyM04VeCPz+d9hHe+5Fs1C/jL+DRLCH7nff90jJ5C/9b8/LTwhjaWA==\n  dependencies:\n    mdast-util-to-string "^1.0.2"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-literal-urls@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-literal-urls/-/remark-lint-no-literal-urls-2.0.1.tgz#731908f9866c1880e6024dcee1269fb0f40335d6"\n  integrity sha512-IDdKtWOMuKVQIlb1CnsgBoyoTcXU3LppelDFAIZePbRPySVHklTtuK57kacgU5grc7gPM04bZV96eliGrRU7Iw==\n  dependencies:\n    mdast-util-to-string "^1.0.2"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-missing-blank-lines@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-missing-blank-lines/-/remark-lint-no-missing-blank-lines-2.0.1.tgz#217bfb35c68eb0486b3db654d6cd3853a1703f8d"\n  integrity sha512-gM46JM8NMFj5PG8pkxOQ0AvkRMEX1lD7UO9b/eqUgYQ6OiJaCG8dInogCd++MVSUDpMMf4FF9dksRM/AOiFgIQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-multiple-toplevel-headings@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-multiple-toplevel-headings/-/remark-lint-no-multiple-toplevel-headings-2.0.1.tgz#3ff2b505adf720f4ff2ad2b1021f8cfd50ad8635"\n  integrity sha512-VKSItR6c+u3OsE5pUiSmNusERNyQS9Nnji26ezoQ1uvy06k3RypIjmzQqJ/hCkSiF+hoyC3ibtrrGT8gorzCmQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-stringify-position "^2.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-shell-dollars@^2.0.2:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-shell-dollars/-/remark-lint-no-shell-dollars-2.0.2.tgz#b2c6c3ed95e5615f8e5f031c7d271a18dc17618e"\n  integrity sha512-zhkHZOuyaD3r/TUUkkVqW0OxsR9fnSrAnHIF63nfJoAAUezPOu8D1NBsni6rX8H2DqGbPYkoeWrNsTwiKP0yow==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-shortcut-reference-image@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-shortcut-reference-image/-/remark-lint-no-shortcut-reference-image-2.0.1.tgz#d174d12a57e8307caf6232f61a795bc1d64afeaa"\n  integrity sha512-2jcZBdnN6ecP7u87gkOVFrvICLXIU5OsdWbo160FvS/2v3qqqwF2e/n/e7D9Jd+KTq1mR1gEVVuTqkWWuh3cig==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-shortcut-reference-link@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-shortcut-reference-link/-/remark-lint-no-shortcut-reference-link-2.0.1.tgz#8f963f81036e45cfb7061b3639e9c6952308bc94"\n  integrity sha512-pTZbslG412rrwwGQkIboA8wpBvcjmGFmvugIA+UQR+GfFysKtJ5OZMPGJ98/9CYWjw9Z5m0/EktplZ5TjFjqwA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-table-indentation@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-table-indentation/-/remark-lint-no-table-indentation-2.0.1.tgz#67ef344389fa40be9c6017835cf58ca417c417d0"\n  integrity sha512-PnqIyg5qf+QbaIfolxXpakk/MR1RxZ0EdhKgVqsaEwv8+fka1LZYu7QO+ZFmrT82gVzvjRqHJkmxTskC/VP30w==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-tabs@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-tabs/-/remark-lint-no-tabs-2.0.1.tgz#abb30e6d61a6add664a1e26325ef9febc65c1528"\n  integrity sha512-Fy5fMKNA8AsfhRtxyxBnHlGMpDDfns9VSSYv00RiC96qwRD82VhDRM3tYWZRBBxE+j71t6g47x9o/poGC7PThQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    vfile-location "^3.0.0"\n\nremark-lint-no-undefined-references@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-undefined-references/-/remark-lint-no-undefined-references-2.0.1.tgz#4b2ac02db0740359ca0749fdb35cf648f8673385"\n  integrity sha512-tXM2ctFnduC3QcskrIePUajcjtNtBmo2dvlj4aoQJtQy09Soav/rYngb8u/SgERc6Irdmm5s55UAwR9CcSrzVg==\n  dependencies:\n    collapse-white-space "^1.0.4"\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-no-unused-definitions@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-no-unused-definitions/-/remark-lint-no-unused-definitions-2.0.1.tgz#ba45d9105b61b77ae02b92d3d339a638ab4ed59a"\n  integrity sha512-+BMc0BOjc364SvKYLkspmxDch8OaKPbnUGgQBvK0Bmlwy42baR4C9zhwAWBxm0SBy5Z4AyM4G4jKpLXPH40Oxg==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-ordered-list-marker-style@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-ordered-list-marker-style/-/remark-lint-ordered-list-marker-style-2.0.1.tgz#183c31967e6f2ae8ef00effad03633f7fd00ffaa"\n  integrity sha512-Cnpw1Dn9CHn+wBjlyf4qhPciiJroFOEGmyfX008sQ8uGoPZsoBVIJx76usnHklojSONbpjEDcJCjnOvfAcWW1A==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-ordered-list-marker-value@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-ordered-list-marker-value/-/remark-lint-ordered-list-marker-value-2.0.1.tgz#0de343de2efb41f01eae9f0f7e7d30fe43db5595"\n  integrity sha512-blt9rS7OKxZ2NW8tqojELeyNEwPhhTJGVa+YpUkdEH+KnrdcD7Nzhnj6zfLWOx6jFNZk3jpq5nvLFAPteHaNKg==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-rule-style@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-rule-style/-/remark-lint-rule-style-2.0.1.tgz#f59bd82e75d3eaabd0eee1c8c0f5513372eb553c"\n  integrity sha512-hz4Ff9UdlYmtO6Czz99WJavCjqCer7Cav4VopXt+yVIikObw96G5bAuLYcVS7hvMUGqC9ZuM02/Y/iq9n8pkAg==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-strong-marker@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-strong-marker/-/remark-lint-strong-marker-2.0.1.tgz#1ad8f190c6ac0f8138b638965ccf3bcd18f6d4e4"\n  integrity sha512-8X2IsW1jZ5FmW9PLfQjkL0OVy/J3xdXLcZrG1GTeQKQ91BrPFyEZqUM2oM6Y4S6LGtxWer+neZkPZNroZoRPBQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-table-cell-padding@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-table-cell-padding/-/remark-lint-table-cell-padding-2.0.1.tgz#b1e557ec44e1a33beb45578e97bf9441149379f6"\n  integrity sha512-vytUq4O1cg9UBXyeduANqpVqlbZpEtpXe/hYdvAObWgp1Jr7l74Zcvm+pn/ouaCuAsrxDVWeTa5Mg3V4OByw4g==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-table-pipe-alignment@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-table-pipe-alignment/-/remark-lint-table-pipe-alignment-2.0.1.tgz#12b7e4c54473d69c9866cb33439c718d09cffcc5"\n  integrity sha512-O89U7bp0ja6uQkT2uQrNB76GaPvFabrHiUGhqEUnld21yEdyj7rgS57kn84lZNSuuvN1Oor6bDyCwWQGzzpoOQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-table-pipes@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-table-pipes/-/remark-lint-table-pipes-2.0.1.tgz#b8594394f65053a030e8a51baa8504e388139a19"\n  integrity sha512-ZdR9rj1BZYXHPXFk3Gnb4agwL+CtO/SojhHua4iRBx1WCQElCeZS3M9naRrE41+2QSNkKnytgGZJzyAlm2nFGQ==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint-unordered-list-marker-style@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint-unordered-list-marker-style/-/remark-lint-unordered-list-marker-style-2.0.1.tgz#e64692aa9594dbe7e945ae76ab2218949cd92477"\n  integrity sha512-8KIDJNDtgbymEvl3LkrXgdxPMTOndcux3BHhNGB2lU4UnxSpYeHsxcDgirbgU6dqCAfQfvMjPvfYk19QTF9WZA==\n  dependencies:\n    unified-lint-rule "^1.0.0"\n    unist-util-generated "^1.1.0"\n    unist-util-position "^3.0.0"\n    unist-util-visit "^2.0.0"\n\nremark-lint@^7.0.0:\n  version "7.0.1"\n  resolved "https://registry.yarnpkg.com/remark-lint/-/remark-lint-7.0.1.tgz#665a5cbea9f7c95e64593f69bb6816ee8343ffdf"\n  integrity sha512-caZXo3qhuBxzvq9JSJFVQ/ERDq/6TJVgWn0KDwKOIJCGOuLXfQhby5XttUq+Rn7kLbNMtvwfWHJlte14LpaeXQ==\n  dependencies:\n    remark-message-control "^6.0.0"\n\nremark-message-control@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/remark-message-control/-/remark-message-control-6.0.0.tgz#955b054b38c197c9f2e35b1d88a4912949db7fc5"\n  integrity sha512-k9bt7BYc3G7YBdmeAhvd3VavrPa/XlKWR3CyHjr4sLO9xJyly8WHHT3Sp+8HPR8lEUv+/sZaffL7IjMLV0f6BA==\n  dependencies:\n    mdast-comment-marker "^1.0.0"\n    unified-message-control "^3.0.0"\n\nremark-parse@^8.0.0:\n  version "8.0.3"\n  resolved "https://registry.yarnpkg.com/remark-parse/-/remark-parse-8.0.3.tgz#9c62aa3b35b79a486454c690472906075f40c7e1"\n  integrity sha512-E1K9+QLGgggHxCQtLt++uXltxEprmWzNfg+MxpfHsZlrddKzZ/hZyWHDbK3/Ap8HJQqYJRXP+jHczdL6q6i85Q==\n  dependencies:\n    ccount "^1.0.0"\n    collapse-white-space "^1.0.2"\n    is-alphabetical "^1.0.0"\n    is-decimal "^1.0.0"\n    is-whitespace-character "^1.0.0"\n    is-word-character "^1.0.0"\n    markdown-escapes "^1.0.0"\n    parse-entities "^2.0.0"\n    repeat-string "^1.5.4"\n    state-toggle "^1.0.0"\n    trim "0.0.1"\n    trim-trailing-lines "^1.0.0"\n    unherit "^1.0.4"\n    unist-util-remove-position "^2.0.0"\n    vfile-location "^3.0.0"\n    xtend "^4.0.1"\n\nremark-preset-github@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/remark-preset-github/-/remark-preset-github-3.0.0.tgz#a2a0d23bdd8c14895f4c57829b6c078572c373a2"\n  integrity sha512-4UjmPtRMTP7w7OcV+V9VaclH2PE1c4aiasktBYUKamxVpXTS13K8KXFofmXPRCCo3SSvWNFokDcchej/72mccQ==\n  dependencies:\n    remark-comment-config "^5.1.1"\n    remark-contributors "4.x"\n    remark-heading-gap "^3.1.2"\n    remark-license niftylettuce/remark-license\n    remark-lint-blockquote-indentation "^2.0.1"\n    remark-lint-checkbox-character-style "^2.0.1"\n    remark-lint-checkbox-content-indent "^2.0.1"\n    remark-lint-code-block-style "^2.0.1"\n    remark-lint-definition-case "^2.0.1"\n    remark-lint-definition-spacing "^2.0.1"\n    remark-lint-emphasis-marker "^2.0.1"\n    remark-lint-fenced-code-flag "^2.0.1"\n    remark-lint-fenced-code-marker "^2.0.1"\n    remark-lint-file-extension "^1.0.5"\n    remark-lint-final-definition "^2.0.1"\n    remark-lint-first-heading-level "^2.0.1"\n    remark-lint-heading-style "^2.0.1"\n    remark-lint-list-item-indent "2.0.1"\n    remark-lint-no-consecutive-blank-lines "^2.0.1"\n    remark-lint-no-duplicate-definitions "^2.0.1"\n    remark-lint-no-emphasis-as-heading "^2.0.1"\n    remark-lint-no-file-name-articles "^1.0.5"\n    remark-lint-no-file-name-consecutive-dashes "^1.0.5"\n    remark-lint-no-file-name-irregular-characters "^1.0.5"\n    remark-lint-no-file-name-mixed-case "^1.0.5"\n    remark-lint-no-file-name-outer-dashes "^1.0.6"\n    remark-lint-no-heading-content-indent "^2.0.1"\n    remark-lint-no-heading-indent "^2.0.1"\n    remark-lint-no-heading-punctuation "^2.0.1"\n    remark-lint-no-missing-blank-lines "^2.0.1"\n    remark-lint-no-multiple-toplevel-headings "^2.0.1"\n    remark-lint-no-shell-dollars "^2.0.2"\n    remark-lint-no-table-indentation "^2.0.1"\n    remark-lint-no-tabs "^2.0.1"\n    remark-lint-ordered-list-marker-value "^2.0.1"\n    remark-lint-rule-style "^2.0.1"\n    remark-lint-strong-marker "^2.0.1"\n    remark-lint-table-cell-padding "^2.0.1"\n    remark-lint-table-pipe-alignment "^2.0.1"\n    remark-lint-table-pipes "^2.0.1"\n    remark-lint-unordered-list-marker-style "^2.0.1"\n    remark-preset-lint-recommended "^4.0.1"\n    remark-retext "^4.0.0"\n    remark-toc "^7.0.0"\n    retext-english "^3.0.4"\n    retext-preset-github "^0.0.6"\n    unified "^9.1.0"\n\nremark-preset-lint-recommended@^4.0.1:\n  version "4.0.1"\n  resolved "https://registry.yarnpkg.com/remark-preset-lint-recommended/-/remark-preset-lint-recommended-4.0.1.tgz#2077b38706759277c0eb304c57453ebfa3e63207"\n  integrity sha512-zn+ImQbOVcAQVWLL0R0rFQ2Wy8JyWnuU3mJ8Zh0EVOckglcxByssvTbKqPih3Lh8ogpE38EfnC3a/vshj4Jx6A==\n  dependencies:\n    remark-lint "^7.0.0"\n    remark-lint-final-newline "^1.0.0"\n    remark-lint-hard-break-spaces "^2.0.0"\n    remark-lint-list-item-bullet-indent "^2.0.0"\n    remark-lint-list-item-indent "^2.0.0"\n    remark-lint-no-auto-link-without-protocol "^2.0.0"\n    remark-lint-no-blockquote-without-marker "^3.0.0"\n    remark-lint-no-duplicate-definitions "^2.0.0"\n    remark-lint-no-heading-content-indent "^2.0.0"\n    remark-lint-no-inline-padding "^2.0.0"\n    remark-lint-no-literal-urls "^2.0.0"\n    remark-lint-no-shortcut-reference-image "^2.0.0"\n    remark-lint-no-shortcut-reference-link "^2.0.0"\n    remark-lint-no-undefined-references "^2.0.0"\n    remark-lint-no-unused-definitions "^2.0.0"\n    remark-lint-ordered-list-marker-style "^2.0.0"\n\nremark-retext@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/remark-retext/-/remark-retext-4.0.0.tgz#255ed98ac3e0a68da5c6ba4f172299b8d062bb28"\n  integrity sha512-cYCchalpf25bTtfXF24ribYvqytPKq0TiEhqQDBHvVEEsApebwruPWP1cTcvTFBidmpXyqzycm+y8ng7Kmvc8Q==\n  dependencies:\n    mdast-util-to-nlcst "^4.0.0"\n\nremark-stringify@^8.0.0:\n  version "8.1.1"\n  resolved "https://registry.yarnpkg.com/remark-stringify/-/remark-stringify-8.1.1.tgz#e2a9dc7a7bf44e46a155ec78996db896780d8ce5"\n  integrity sha512-q4EyPZT3PcA3Eq7vPpT6bIdokXzFGp9i85igjmhRyXWmPs0Y6/d2FYwUNotKAWyLch7g0ASZJn/KHHcHZQ163A==\n  dependencies:\n    ccount "^1.0.0"\n    is-alphanumeric "^1.0.0"\n    is-decimal "^1.0.0"\n    is-whitespace-character "^1.0.0"\n    longest-streak "^2.0.1"\n    markdown-escapes "^1.0.0"\n    markdown-table "^2.0.0"\n    mdast-util-compact "^2.0.0"\n    parse-entities "^2.0.0"\n    repeat-string "^1.5.4"\n    state-toggle "^1.0.0"\n    stringify-entities "^3.0.0"\n    unherit "^1.0.4"\n    xtend "^4.0.1"\n\nremark-toc@^7.0.0:\n  version "7.0.0"\n  resolved "https://registry.yarnpkg.com/remark-toc/-/remark-toc-7.0.0.tgz#d0f455b63fed00cccfe08050d75c2abef4508e38"\n  integrity sha512-NyW/W7ttlj003eFXeIgq7eV2bffTQuO48PyC9zbh/RhTA/QaHJOAgJ4qvaRwKAVMWSBIh4W/5nZFWQ4rceV3fw==\n  dependencies:\n    "@types/unist" "^2.0.3"\n    mdast-util-toc "^5.0.0"\n\nremark@^12.0.0:\n  version "12.0.1"\n  resolved "https://registry.yarnpkg.com/remark/-/remark-12.0.1.tgz#f1ddf68db7be71ca2bad0a33cd3678b86b9c709f"\n  integrity sha512-gS7HDonkdIaHmmP/+shCPejCEEW+liMp/t/QwmF0Xt47Rpuhl32lLtDV1uKWvGoq+kxr5jSgg5oAIpGuyULjUw==\n  dependencies:\n    remark-parse "^8.0.0"\n    remark-stringify "^8.0.0"\n    unified "^9.0.0"\n\nremove-trailing-separator@^1.0.1:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz#c24bce2a283adad5bc3f58e0d48249b92379d8ef"\n  integrity sha1-wkvOKig62tW8P1jg1IJJuSN52O8=\n\nrepeat-element@^1.1.2:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/repeat-element/-/repeat-element-1.1.3.tgz#782e0d825c0c5a3bb39731f84efee6b742e6b1ce"\n  integrity sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g==\n\nrepeat-string@^1.0.0, repeat-string@^1.5.0, repeat-string@^1.5.2, repeat-string@^1.5.4, repeat-string@^1.6.1:\n  version "1.6.1"\n  resolved "https://registry.yarnpkg.com/repeat-string/-/repeat-string-1.6.1.tgz#8dcae470e1c88abc2d600fff4a776286da75e637"\n  integrity sha1-jcrkcOHIirwtYA//Sndihtp15jc=\n\nreplace-ext@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/replace-ext/-/replace-ext-1.0.0.tgz#de63128373fcbf7c3ccfa4de5a480c45a67958eb"\n  integrity sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs=\n\nrequest@2.11.4:\n  version "2.11.4"\n  resolved "https://registry.yarnpkg.com/request/-/request-2.11.4.tgz#6347d7d44e52dc588108cc1ce5cee975fc8926de"\n  integrity sha1-Y0fX1E5S3FiBCMwc5c7pdfyJJt4=\n  dependencies:\n    form-data "~0.0.3"\n    mime "~1.2.7"\n\nrequest@~2.46.0:\n  version "2.46.0"\n  resolved "https://registry.yarnpkg.com/request/-/request-2.46.0.tgz#359195d52eaf720bc69742579d04ad6d265a8274"\n  integrity sha1-NZGV1S6vcgvGl0JXnQStbSZagnQ=\n  dependencies:\n    aws-sign2 "~0.5.0"\n    bl "~0.9.0"\n    caseless "~0.6.0"\n    forever-agent "~0.5.0"\n    form-data "~0.1.0"\n    hawk "1.1.1"\n    http-signature "~0.10.0"\n    json-stringify-safe "~5.0.0"\n    mime-types "~1.0.1"\n    node-uuid "~1.4.0"\n    oauth-sign "~0.4.0"\n    qs "~1.2.0"\n    stringstream "~0.0.4"\n    tough-cookie ">=0.12.0"\n    tunnel-agent "~0.4.0"\n\nrequire-directory@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/require-directory/-/require-directory-2.1.1.tgz#8c64ad5fd30dab1c976e2344ffe7f792a6a6df42"\n  integrity sha1-jGStX9MNqxyXbiNE/+f3kqam30I=\n\nrequire-main-filename@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/require-main-filename/-/require-main-filename-2.0.0.tgz#d0b329ecc7cc0f61649f62215be69af54aa8989b"\n  integrity sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==\n\nrequires-port@0.x.x:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/requires-port/-/requires-port-0.0.1.tgz#4b4414411d9df7c855995dd899a8c78a2951c16d"\n  integrity sha1-S0QUQR2d98hVmV3YmajHiilRwW0=\n\nreserved-words@^0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/reserved-words/-/reserved-words-0.1.2.tgz#00a0940f98cd501aeaaac316411d9adc52b31ab1"\n  integrity sha1-AKCUD5jNUBrqqsMWQR2a3FKzGrE=\n\nresolve-cwd@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/resolve-cwd/-/resolve-cwd-3.0.0.tgz#0f0075f1bb2544766cf73ba6a6e2adfebcb13f2d"\n  integrity sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==\n  dependencies:\n    resolve-from "^5.0.0"\n\nresolve-from@5.0.0, resolve-from@^5.0.0:\n  version "5.0.0"\n  resolved "https://registry.yarnpkg.com/resolve-from/-/resolve-from-5.0.0.tgz#c35225843df8f776df21c57557bc087e9dfdfc69"\n  integrity sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\n\nresolve-from@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/resolve-from/-/resolve-from-4.0.0.tgz#4abcd852ad32dd7baabfe9b40e00a36db5f392e6"\n  integrity sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==\n\nresolve-global@1.0.0, resolve-global@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/resolve-global/-/resolve-global-1.0.0.tgz#a2a79df4af2ca3f49bf77ef9ddacd322dad19255"\n  integrity sha512-zFa12V4OLtT5XUX/Q4VLvTfBf+Ok0SPc1FNGM/z9ctUdiU618qwKpWnd0CHs3+RqROfyEg/DhuHbMWYqcgljEw==\n  dependencies:\n    global-dirs "^0.1.1"\n\nresolve-url@^0.2.1:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/resolve-url/-/resolve-url-0.2.1.tgz#2c637fe77c893afd2a663fe21aa9080068e2052a"\n  integrity sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=\n\nresolve@0.7.x:\n  version "0.7.4"\n  resolved "https://registry.yarnpkg.com/resolve/-/resolve-0.7.4.tgz#395a9ef9e873fbfe12bd14408bd91bb936003d69"\n  integrity sha1-OVqe+ehz+/4SvRRAi9kbuTYAPWk=\n\nresolve@1.1.7, resolve@1.1.x:\n  version "1.1.7"\n  resolved "https://registry.yarnpkg.com/resolve/-/resolve-1.1.7.tgz#203114d82ad2c5ed9e8e0411b3932875e889e97b"\n  integrity sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs=\n\nresolve@^1.1.3, resolve@^1.1.4, resolve@^1.10.0, resolve@^1.10.1, resolve@^1.12.0, resolve@^1.13.1, resolve@^1.17.0, resolve@^1.3.2, resolve@^1.4.0, resolve@^1.8.1:\n  version "1.17.0"\n  resolved "https://registry.yarnpkg.com/resolve/-/resolve-1.17.0.tgz#b25941b54968231cc2d1bb76a79cb7f2c0bf8444"\n  integrity sha512-ic+7JYiV8Vi2yzQGFWOkiZD5Z9z7O2Zhm9XMaTxdJExKasieFCr+yXZ/WmXsckHiKl12ar0y6XiXDx3m4RHn1w==\n  dependencies:\n    path-parse "^1.0.6"\n\nresponselike@^1.0.2:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/responselike/-/responselike-1.0.2.tgz#918720ef3b631c5642be068f15ade5a46f4ba1e7"\n  integrity sha1-kYcg7ztjHFZCvgaPFa3lpG9Loec=\n  dependencies:\n    lowercase-keys "^1.0.0"\n\nrestore-cursor@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/restore-cursor/-/restore-cursor-3.1.0.tgz#39f67c54b3a7a58cea5236d95cf0034239631f7e"\n  integrity sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==\n  dependencies:\n    onetime "^5.1.0"\n    signal-exit "^3.0.2"\n\nret@~0.1.10:\n  version "0.1.15"\n  resolved "https://registry.yarnpkg.com/ret/-/ret-0.1.15.tgz#b8a4825d5bdb1fc3f6f53c2bc33f81388681c7bc"\n  integrity sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==\n\nretext-contractions@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/retext-contractions/-/retext-contractions-3.0.0.tgz#01fa2d0864340cf79bf4c86637c87dd4f9eab767"\n  integrity sha512-Wn95agseXHTsoXvhavuTcnwUEb9TbL7QtnYkHeFMh8L53jdQbbooLX68cbpKyaaPbxYiomrgJpu7eB3arcr2rw==\n  dependencies:\n    nlcst-is-literal "^1.0.0"\n    nlcst-to-string "^2.0.0"\n    unist-util-visit "^1.1.0"\n\nretext-diacritics@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/retext-diacritics/-/retext-diacritics-2.0.0.tgz#db4f6da81d42acae34fb149500421dec1f26af78"\n  integrity sha512-wr3mqJ9whlIG/q6vP601qR+/C7AMgc7O60kebs9kvN/HtTX7CpvFsKF68+yw86drMOMVCBJP8JB1Qlnj8CkY5A==\n  dependencies:\n    match-casing "^1.0.0"\n    nlcst-search "^1.0.0"\n    nlcst-to-string "^2.0.0"\n    quotation "^1.0.1"\n    unist-util-position "^3.0.0"\n\nretext-english@^3.0.4:\n  version "3.0.4"\n  resolved "https://registry.yarnpkg.com/retext-english/-/retext-english-3.0.4.tgz#f978828d51fbcee842bc3807a45b7f709822ea8d"\n  integrity sha512-yr1PgaBDde+25aJXrnt3p1jvT8FVLVat2Bx8XeAWX13KXo8OT+3nWGU3HWxM4YFJvmfqvJYJZG2d7xxaO774gw==\n  dependencies:\n    parse-english "^4.0.0"\n    unherit "^1.0.4"\n\nretext-indefinite-article@^1.1.7:\n  version "1.1.7"\n  resolved "https://registry.yarnpkg.com/retext-indefinite-article/-/retext-indefinite-article-1.1.7.tgz#a9de7cca8c24a11cb8fcd5c68e54d8e38e5ab525"\n  integrity sha512-pqvEfEHL8uoeonbEjk8+d/hmyA3ozIeNTl4t3uurMcBpoIqN3+nbuMCFQrfDy2wjaKZ40KsLmEi+Zjv7m1ejLQ==\n  dependencies:\n    format "^0.2.2"\n    nlcst-to-string "^2.0.0"\n    number-to-words "^1.2.3"\n    unist-util-is "^3.0.0"\n    unist-util-visit "^1.1.0"\n\nretext-preset-github@^0.0.6:\n  version "0.0.6"\n  resolved "https://registry.yarnpkg.com/retext-preset-github/-/retext-preset-github-0.0.6.tgz#708f9d6d693d0e5913aa2b0354dd28f33a8bf092"\n  integrity sha512-6YGaTBK7YJBYTrHOeorIqJUtm72/y1rWV0zKB8ba1Kb0gs57YigLaWjuKnRzULSmhP1i1uXUx2xcsEh6lwgNvw==\n  dependencies:\n    retext-contractions "^3.0.0"\n    retext-diacritics "^2.0.0"\n    retext-indefinite-article "^1.1.7"\n    retext-quotes "^3.0.0"\n    retext-redundant-acronyms "^2.0.0"\n    retext-repeated-words "^2.0.0"\n    retext-sentence-spacing "^3.0.0"\n\nretext-quotes@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/retext-quotes/-/retext-quotes-3.0.0.tgz#47f772e886b9b513dc6f1b97c482e15b1446b84a"\n  integrity sha512-2htggeOFsrorhXrQvb4BI1O/r7CGVQZx/TysAT7wlVMsRUTZooiIGkBcLrcySa4sbqjsVgg1RjMy8K5O+gCQlg==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n    unist-util-is "^3.0.0"\n    unist-util-visit "^1.1.0"\n\nretext-redundant-acronyms@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/retext-redundant-acronyms/-/retext-redundant-acronyms-2.0.0.tgz#e4fb92a97b0db76dfa20192e0d3915470458e80c"\n  integrity sha512-9E62yXkDKYItNZO+lT4Pp0rAP8e/H7ppjYP681L0fk74xyItoE6okl0BMNVOa0W4XidLoGX2uWdlwWpCUeqQiw==\n  dependencies:\n    nlcst-normalize "^2.0.0"\n    nlcst-search "^1.0.0"\n    nlcst-to-string "^2.0.0"\n    pluralize "^8.0.0"\n    quotation "^1.0.0"\n    unist-util-find-after "^2.0.0"\n    unist-util-position "^3.0.0"\n\nretext-repeated-words@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/retext-repeated-words/-/retext-repeated-words-2.0.0.tgz#93e8f5b81b76388910b1453a0d9c527460e95637"\n  integrity sha512-CGqM88ViAKtSgdWGObTU974AdmfxyiyB19MvuQTBBW3crWYIS7p21m0sJH/pCnp11gVa0YOU+vqdNaSvRiLTFA==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n    unist-util-is "^3.0.0"\n    unist-util-visit "^1.1.0"\n\nretext-sentence-spacing@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/retext-sentence-spacing/-/retext-sentence-spacing-3.0.0.tgz#bfdfc4fc5990f816cc79a6caa335046878208300"\n  integrity sha512-UWltTXZNh6kBwJJc0js3nOmbqze3LqhJg68jaRErNIPZQHtZ5hMn7h7f8kVY5OrbEL9XiY88m5DRPbFz16eTkQ==\n  dependencies:\n    nlcst-to-string "^2.0.0"\n    unist-util-is "^3.0.0"\n    unist-util-visit "^1.1.0"\n\nrimraf@2.6.3:\n  version "2.6.3"\n  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-2.6.3.tgz#b2d104fe0d8fb27cf9e0a1cda8262dd3833c6cab"\n  integrity sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==\n  dependencies:\n    glob "^7.1.3"\n\nrimraf@^3.0.0, rimraf@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-3.0.2.tgz#f1a5402ba6220ad52cc1282bac1ae3aa49fd061a"\n  integrity sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==\n  dependencies:\n    glob "^7.1.3"\n\nrimraf@~2.2.0, rimraf@~2.2.2:\n  version "2.2.8"\n  resolved "https://registry.yarnpkg.com/rimraf/-/rimraf-2.2.8.tgz#e439be2aaee327321952730f99a8929e4fc50582"\n  integrity sha1-5Dm+Kq7jJzIZUnMPmaiSnk/FBYI=\n\nripemd160@^2.0.0, ripemd160@^2.0.1:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/ripemd160/-/ripemd160-2.0.2.tgz#a1c1a6f624751577ba5d07914cbc92850585890c"\n  integrity sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==\n  dependencies:\n    hash-base "^3.0.0"\n    inherits "^2.0.1"\n\nrunnel@~0.5.0:\n  version "0.5.3"\n  resolved "https://registry.yarnpkg.com/runnel/-/runnel-0.5.3.tgz#f9362b165a05fc6f5e46e458f77a1f7ecdc0daec"\n  integrity sha1-+TYrFloF/G9eRuRY93offs3A2uw=\n\nrxjs@^6.6.0:\n  version "6.6.2"\n  resolved "https://registry.yarnpkg.com/rxjs/-/rxjs-6.6.2.tgz#8096a7ac03f2cc4fe5860ef6e572810d9e01c0d2"\n  integrity sha512-BHdBMVoWC2sL26w//BCu3YzKT4s2jip/WhwsGEDmeKYBhKDZeYezVUnHatYB7L85v5xs0BAQmg6BEYJEKxBabg==\n  dependencies:\n    tslib "^1.9.0"\n\nsafe-buffer@5.1.2, safe-buffer@~5.1.0, safe-buffer@~5.1.1:\n  version "5.1.2"\n  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.2.tgz#991ec69d296e0313747d59bdfd2b745c35f8828d"\n  integrity sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\n\nsafe-buffer@5.2.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.2.0.tgz#b74daec49b1148f88c64b68d49b1e815c1f2f519"\n  integrity sha512-fZEwUGbVl7kouZs1jCdMLdt95hdIv0ZeHg6L7qPeciMZhZ+/gdesW4wgTARkrFWEpspjEATAzUGPG8N2jJiwbg==\n\nsafe-buffer@^5.0.1, safe-buffer@^5.1.0, safe-buffer@^5.1.1, safe-buffer@^5.1.2, safe-buffer@^5.2.0, safe-buffer@~5.2.0:\n  version "5.2.1"\n  resolved "https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.2.1.tgz#1eaf9fa9bdb1fdd4ec75f58f9cdb4e6b7827eec6"\n  integrity sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\n\nsafe-regex@^1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/safe-regex/-/safe-regex-1.1.0.tgz#40a3669f3b077d1e943d44629e157dd48023bf2e"\n  integrity sha1-QKNmnzsHfR6UPURinhV91IAjvy4=\n  dependencies:\n    ret "~0.1.10"\n\nsafe-regex@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/safe-regex/-/safe-regex-2.1.1.tgz#f7128f00d056e2fe5c11e81a1324dd974aadced2"\n  integrity sha512-rx+x8AMzKb5Q5lQ95Zoi6ZbJqwCLkqi3XuJXp5P3rT8OEc6sZCJG5AE5dU3lsgRr/F4Bs31jSlVN+j5KrsGu9A==\n  dependencies:\n    regexp-tree "~0.1.1"\n\n"safer-buffer@>= 2.1.2 < 3":\n  version "2.1.2"\n  resolved "https://registry.yarnpkg.com/safer-buffer/-/safer-buffer-2.1.2.tgz#44fa161b0187b9549dd84bb91802f9bd8385cd6a"\n  integrity sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\n\nsax@>=0.6.0:\n  version "1.2.4"\n  resolved "https://registry.yarnpkg.com/sax/-/sax-1.2.4.tgz#2816234e2378bddc4e5354fab5caa895df7100d9"\n  integrity sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw==\n\nscope-analyzer@^2.0.0:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/scope-analyzer/-/scope-analyzer-2.1.1.tgz#5156c27de084d74bf75af9e9506aaf95c6e73dd6"\n  integrity sha512-azEAihtQ9mEyZGhfgTJy3IbOWEzeOrYbg7NcYEshPKnKd+LZmC3TNd5dmDxbLBsTG/JVWmCp+vDJ03vJjeXMHg==\n  dependencies:\n    array-from "^2.1.1"\n    dash-ast "^1.0.0"\n    es6-map "^0.1.5"\n    es6-set "^0.1.5"\n    es6-symbol "^3.1.1"\n    estree-is-function "^1.0.0"\n    get-assigned-identifiers "^1.1.0"\n\nsemver-compare@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/semver-compare/-/semver-compare-1.0.0.tgz#0dee216a1c941ab37e9efb1788f6afc5ff5537fc"\n  integrity sha1-De4hahyUGrN+nvsXiPavxf9VN/w=\n\nsemver-diff@^3.1.1:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/semver-diff/-/semver-diff-3.1.1.tgz#05f77ce59f325e00e2706afd67bb506ddb1ca32b"\n  integrity sha512-GX0Ix/CJcHyB8c4ykpHGIAvLyOwOobtM/8d+TQkAd81/bEjgPHrfba41Vpesr7jX/t8Uh+R3EX9eAS5be+jQYg==\n  dependencies:\n    semver "^6.3.0"\n\nsemver-regex@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/semver-regex/-/semver-regex-2.0.0.tgz#a93c2c5844539a770233379107b38c7b4ac9d338"\n  integrity sha512-mUdIBBvdn0PLOeP3TEkMH7HHeUP3GjsXCwKarjv/kGmUFOYg1VqEemKhoQpWMu6X2I8kHeuVdGibLGkVK+/5Qw==\n\n"semver@2 || 3 || 4 || 5", semver@^5.4.1, semver@^5.5.0, semver@^5.5.1, semver@^5.6.0, semver@^5.7.1:\n  version "5.7.1"\n  resolved "https://registry.yarnpkg.com/semver/-/semver-5.7.1.tgz#a954f931aeba508d307bbf069eff0c01c96116f7"\n  integrity sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==\n\nsemver@7.0.0:\n  version "7.0.0"\n  resolved "https://registry.yarnpkg.com/semver/-/semver-7.0.0.tgz#5f3ca35761e47e05b206c6daff2cf814f0316b8e"\n  integrity sha512-+GB6zVA9LWh6zovYQLALHwv5rb2PHGlJi3lfiqIHxR0uuwCgefcOJc59v9fv1w8GbStwxuuqqAjI9NMAOOgq1A==\n\nsemver@7.3.2, semver@^7.2.1, semver@^7.3.2:\n  version "7.3.2"\n  resolved "https://registry.yarnpkg.com/semver/-/semver-7.3.2.tgz#604962b052b81ed0786aae84389ffba70ffd3938"\n  integrity sha512-OrOb32TeeambH6UrhtShmF7CRDqhL6/5XpPNp2DuRH6+9QLw/orhp72j87v8Qa1ScDkvrrBNpZcDejAirJmfXQ==\n\nsemver@^6.0.0, semver@^6.1.0, semver@^6.2.0, semver@^6.3.0:\n  version "6.3.0"\n  resolved "https://registry.yarnpkg.com/semver/-/semver-6.3.0.tgz#ee0a64c8af5e8ceea67687b133761e1becbd1d3d"\n  integrity sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==\n\nsend@0.1.4:\n  version "0.1.4"\n  resolved "https://registry.yarnpkg.com/send/-/send-0.1.4.tgz#be70d8d1be01de61821af13780b50345a4f71abd"\n  integrity sha1-vnDY0b4B3mGCGvE3gLUDRaT3Gr0=\n  dependencies:\n    debug "*"\n    fresh "0.2.0"\n    mime "~1.2.9"\n    range-parser "0.0.4"\n\nsend@0.17.1:\n  version "0.17.1"\n  resolved "https://registry.yarnpkg.com/send/-/send-0.17.1.tgz#c1d8b059f7900f7466dd4938bdc44e11ddb376c8"\n  integrity sha512-BsVKsiGcQMFwT8UxypobUKyv7irCNRHk1T0G680vk88yf6LBByGcZJOTJCrTP2xVN6yI+XjPJcNuE3V4fT9sAg==\n  dependencies:\n    debug "2.6.9"\n    depd "~1.1.2"\n    destroy "~1.0.4"\n    encodeurl "~1.0.2"\n    escape-html "~1.0.3"\n    etag "~1.8.1"\n    fresh "0.5.2"\n    http-errors "~1.7.2"\n    mime "1.6.0"\n    ms "2.1.1"\n    on-finished "~2.3.0"\n    range-parser "~1.2.1"\n    statuses "~1.5.0"\n\nsequence@2.x:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/sequence/-/sequence-2.2.1.tgz#7f5617895d44351c0a047e764467690490a16b03"\n  integrity sha1-f1YXiV1ENRwKBH52RGdpBJChawM=\n\nserve-static@1.14.1:\n  version "1.14.1"\n  resolved "https://registry.yarnpkg.com/serve-static/-/serve-static-1.14.1.tgz#666e636dc4f010f7ef29970a88a674320898b2f9"\n  integrity sha512-JMrvUwE54emCYWlTI+hGrGv5I8dEwmco/00EvkzIIsR7MqrHonbD9pO2MOfFnpFntl7ecpZs+3mW+XbQZu9QCg==\n  dependencies:\n    encodeurl "~1.0.2"\n    escape-html "~1.0.3"\n    parseurl "~1.3.3"\n    send "0.17.1"\n\nset-blocking@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/set-blocking/-/set-blocking-2.0.0.tgz#045f9782d011ae9a6803ddd382b24392b3d890f7"\n  integrity sha1-BF+XgtARrppoA93TgrJDkrPYkPc=\n\nset-value@^2.0.0, set-value@^2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/set-value/-/set-value-2.0.1.tgz#a18d40530e6f07de4228c7defe4227af8cad005b"\n  integrity sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==\n  dependencies:\n    extend-shallow "^2.0.1"\n    is-extendable "^0.1.1"\n    is-plain-object "^2.0.3"\n    split-string "^3.0.1"\n\nsetimmediate@^1.0.4:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/setimmediate/-/setimmediate-1.0.5.tgz#290cbb232e306942d7d7ea9b83732ab7856f8285"\n  integrity sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU=\n\nsetprototypeof@1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/setprototypeof/-/setprototypeof-1.1.1.tgz#7e95acb24aa92f5885e0abef5ba131330d4ae683"\n  integrity sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==\n\nsha.js@^2.4.0, sha.js@^2.4.8, sha.js@~2.4.4:\n  version "2.4.11"\n  resolved "https://registry.yarnpkg.com/sha.js/-/sha.js-2.4.11.tgz#37a5cf0b81ecbc6943de109ba2960d1b26584ae7"\n  integrity sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==\n  dependencies:\n    inherits "^2.0.1"\n    safe-buffer "^5.0.1"\n\nshallow-copy@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/shallow-copy/-/shallow-copy-0.0.1.tgz#415f42702d73d810330292cc5ee86eae1a11a170"\n  integrity sha1-QV9CcC1z2BAzApLMXuhurhoRoXA=\n\nshasum-object@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/shasum-object/-/shasum-object-1.0.0.tgz#0b7b74ff5b66ecf9035475522fa05090ac47e29e"\n  integrity sha512-Iqo5rp/3xVi6M4YheapzZhhGPVs0yZwHj7wvwQ1B9z8H6zk+FEnI7y3Teq7qwnekfEhu8WmG2z0z4iWZaxLWVg==\n  dependencies:\n    fast-safe-stringify "^2.0.7"\n\nshasum@^1.0.0:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/shasum/-/shasum-1.0.2.tgz#e7012310d8f417f4deb5712150e5678b87ae565f"\n  integrity sha1-5wEjENj0F/TetXEhUOVni4euVl8=\n  dependencies:\n    json-stable-stringify "~0.0.0"\n    sha.js "~2.4.4"\n\nshebang-command@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/shebang-command/-/shebang-command-2.0.0.tgz#ccd0af4f8835fbdc265b82461aaf0c36663f34ea"\n  integrity sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\n  dependencies:\n    shebang-regex "^3.0.0"\n\nshebang-regex@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/shebang-regex/-/shebang-regex-3.0.0.tgz#ae16f1644d873ecad843b0307b143362d4c42172"\n  integrity sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\n\nshell-quote@1.4.1:\n  version "1.4.1"\n  resolved "https://registry.yarnpkg.com/shell-quote/-/shell-quote-1.4.1.tgz#ae18442b536a08c720239b079d2f228acbedee40"\n  integrity sha1-rhhEK1NqCMcgI5sHnS8iisvt7kA=\n  dependencies:\n    array-filter "~0.0.0"\n    array-map "~0.0.0"\n    array-reduce "~0.0.0"\n    jsonify "~0.0.0"\n\nshell-quote@^1.4.2, shell-quote@^1.4.3, shell-quote@^1.6.1:\n  version "1.7.2"\n  resolved "https://registry.yarnpkg.com/shell-quote/-/shell-quote-1.7.2.tgz#67a7d02c76c9da24f99d20808fcaded0e0e04be2"\n  integrity sha512-mRz/m/JVscCrkMyPqHc/bczi3OQHkLTqXHEFu0zDhK/qfv3UcOA4SVmRCLmos4bhjr9ekVQubj/R7waKapmiQg==\n\nshould-equal@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/should-equal/-/should-equal-2.0.0.tgz#6072cf83047360867e68e98b09d71143d04ee0c3"\n  integrity sha512-ZP36TMrK9euEuWQYBig9W55WPC7uo37qzAEmbjHz4gfyuXrEUgF8cUvQVO+w+d3OMfPvSRQJ22lSm8MQJ43LTA==\n  dependencies:\n    should-type "^1.4.0"\n\nshould-format@^3.0.3:\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/should-format/-/should-format-3.0.3.tgz#9bfc8f74fa39205c53d38c34d717303e277124f1"\n  integrity sha1-m/yPdPo5IFxT04w01xcwPidxJPE=\n  dependencies:\n    should-type "^1.3.0"\n    should-type-adaptors "^1.0.1"\n\nshould-http@^0.1.1:\n  version "0.1.1"\n  resolved "https://registry.yarnpkg.com/should-http/-/should-http-0.1.1.tgz#9b793843f4024885781eb6abacc4030e1e9f21f0"\n  integrity sha1-m3k4Q/QCSIV4HrarrMQDDh6fIfA=\n  dependencies:\n    content-type "^1.0.2"\n\nshould-type-adaptors@^1.0.1:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/should-type-adaptors/-/should-type-adaptors-1.1.0.tgz#401e7f33b5533033944d5cd8bf2b65027792e27a"\n  integrity sha512-JA4hdoLnN+kebEp2Vs8eBe9g7uy0zbRo+RMcU0EsNy+R+k049Ki+N5tT5Jagst2g7EAja+euFuoXFCa8vIklfA==\n  dependencies:\n    should-type "^1.3.0"\n    should-util "^1.0.0"\n\nshould-type@^1.3.0, should-type@^1.4.0:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/should-type/-/should-type-1.4.0.tgz#0756d8ce846dfd09843a6947719dfa0d4cff5cf3"\n  integrity sha1-B1bYzoRt/QmEOmlHcZ36DUz/XPM=\n\nshould-util@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/should-util/-/should-util-1.0.1.tgz#fb0d71338f532a3a149213639e2d32cbea8bcb28"\n  integrity sha512-oXF8tfxx5cDk8r2kYqlkUJzZpDBqVY/II2WhvU0n9Y3XYvAYRmeaf1PvvIvTgPnv4KJ+ES5M0PyDq5Jp+Ygy2g==\n\nshould@^13.2.3:\n  version "13.2.3"\n  resolved "https://registry.yarnpkg.com/should/-/should-13.2.3.tgz#96d8e5acf3e97b49d89b51feaa5ae8d07ef58f10"\n  integrity sha512-ggLesLtu2xp+ZxI+ysJTmNjh2U0TsC+rQ/pfED9bUZZ4DKefP27D+7YJVVTvKsmjLpIi9jAa7itwDGkDDmt1GQ==\n  dependencies:\n    should-equal "^2.0.0"\n    should-format "^3.0.3"\n    should-type "^1.4.0"\n    should-type-adaptors "^1.0.1"\n    should-util "^1.0.0"\n\nsigmund@~1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/sigmund/-/sigmund-1.0.1.tgz#3ff21f198cad2175f9f3b781853fd94d0d19b590"\n  integrity sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA=\n\nsignal-exit@^3.0.0, signal-exit@^3.0.2:\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/signal-exit/-/signal-exit-3.0.3.tgz#a1410c2edd8f077b08b4e253c8eacfcaf057461c"\n  integrity sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFRoeDoJO7wthSLq42EjA==\n\nsimple-concat@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/simple-concat/-/simple-concat-1.0.1.tgz#f46976082ba35c2263f1c8ab5edfe26c41c9552f"\n  integrity sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==\n\nslash@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/slash/-/slash-2.0.0.tgz#de552851a1759df3a8f206535442f5ec4ddeab44"\n  integrity sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==\n\nslash@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/slash/-/slash-3.0.0.tgz#6539be870c165adbd5240220dbe361f1bc4d4634"\n  integrity sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\n\nslice-ansi@^2.1.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/slice-ansi/-/slice-ansi-2.1.0.tgz#cacd7693461a637a5788d92a7dd4fba068e81636"\n  integrity sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==\n  dependencies:\n    ansi-styles "^3.2.0"\n    astral-regex "^1.0.0"\n    is-fullwidth-code-point "^2.0.0"\n\nslice-ansi@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/slice-ansi/-/slice-ansi-3.0.0.tgz#31ddc10930a1b7e0b67b08c96c2f49b77a789787"\n  integrity sha512-pSyv7bSTC7ig9Dcgbw9AuRNUb5k5V6oDudjZoMBSr13qpLBG7tB+zgCkARjq7xIUgdz5P1Qe8u+rSGdouOOIyQ==\n  dependencies:\n    ansi-styles "^4.0.0"\n    astral-regex "^2.0.0"\n    is-fullwidth-code-point "^3.0.0"\n\nslice-ansi@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/slice-ansi/-/slice-ansi-4.0.0.tgz#500e8dd0fd55b05815086255b3195adf2a45fe6b"\n  integrity sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==\n  dependencies:\n    ansi-styles "^4.0.0"\n    astral-regex "^2.0.0"\n    is-fullwidth-code-point "^3.0.0"\n\nsliced@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/sliced/-/sliced-1.0.1.tgz#0b3a662b5d04c3177b1926bea82b03f837a2ef41"\n  integrity sha1-CzpmK10Ewxd7GSa+qCsD+Dei70E=\n\nsnapdragon-node@^2.0.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/snapdragon-node/-/snapdragon-node-2.1.1.tgz#6c175f86ff14bdb0724563e8f3c1b021a286853b"\n  integrity sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==\n  dependencies:\n    define-property "^1.0.0"\n    isobject "^3.0.0"\n    snapdragon-util "^3.0.1"\n\nsnapdragon-util@^3.0.1:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/snapdragon-util/-/snapdragon-util-3.0.1.tgz#f956479486f2acd79700693f6f7b805e45ab56e2"\n  integrity sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==\n  dependencies:\n    kind-of "^3.2.0"\n\nsnapdragon@^0.8.1:\n  version "0.8.2"\n  resolved "https://registry.yarnpkg.com/snapdragon/-/snapdragon-0.8.2.tgz#64922e7c565b0e14204ba1aa7d6964278d25182d"\n  integrity sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==\n  dependencies:\n    base "^0.11.1"\n    debug "^2.2.0"\n    define-property "^0.2.5"\n    extend-shallow "^2.0.1"\n    map-cache "^0.2.2"\n    source-map "^0.5.6"\n    source-map-resolve "^0.5.0"\n    use "^3.1.0"\n\nsntp@0.2.x:\n  version "0.2.4"\n  resolved "https://registry.yarnpkg.com/sntp/-/sntp-0.2.4.tgz#fb885f18b0f3aad189f824862536bceeec750900"\n  integrity sha1-+4hfGLDzqtGJ+CSGJTa87ux1CQA=\n  dependencies:\n    hoek "0.9.x"\n\nsource-map-cjs@~0.1.31:\n  version "0.1.32"\n  resolved "https://registry.yarnpkg.com/source-map-cjs/-/source-map-cjs-0.1.32.tgz#b113f00065b484f4d3a1123ef084046a56228ce7"\n  integrity sha1-sRPwAGW0hPTToRI+8IQEalYijOc=\n\nsource-map-resolve@^0.5.0:\n  version "0.5.3"\n  resolved "https://registry.yarnpkg.com/source-map-resolve/-/source-map-resolve-0.5.3.tgz#190866bece7553e1f8f267a2ee82c606b5509a1a"\n  integrity sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==\n  dependencies:\n    atob "^2.1.2"\n    decode-uri-component "^0.2.0"\n    resolve-url "^0.2.1"\n    source-map-url "^0.4.0"\n    urix "^0.1.0"\n\nsource-map-support@~0.5.10, source-map-support@~0.5.12:\n  version "0.5.19"\n  resolved "https://registry.yarnpkg.com/source-map-support/-/source-map-support-0.5.19.tgz#a98b62f86dcaf4f67399648c085291ab9e8fed61"\n  integrity sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi/Mdjv7Tip2cyVbLj5o0cFPN4EVkuTwb3GDDyUx2DGnGw==\n  dependencies:\n    buffer-from "^1.0.0"\n    source-map "^0.6.0"\n\nsource-map-url@^0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/source-map-url/-/source-map-url-0.4.0.tgz#3e935d7ddd73631b97659956d55128e87b5084a3"\n  integrity sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM=\n\nsource-map@0.5.6:\n  version "0.5.6"\n  resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.5.6.tgz#75ce38f52bf0733c5a7f0c118d81334a2bb5f412"\n  integrity sha1-dc449SvwczxafwwRjYEzSiu19BI=\n\nsource-map@^0.1.34, source-map@~0.1.33, source-map@~0.1.7:\n  version "0.1.43"\n  resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.1.43.tgz#c24bc146ca517c1471f5dacbe2571b2b7f9e3346"\n  integrity sha1-wkvBRspRfBRx9drL4lcbK3+eM0Y=\n  dependencies:\n    amdefine ">=0.0.4"\n\nsource-map@^0.5.0, source-map@^0.5.6, source-map@~0.5.3:\n  version "0.5.7"\n  resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.5.7.tgz#8a039d2d1021d22d1ea14c80d8ea468ba2ef3fcc"\n  integrity sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=\n\nsource-map@^0.6.0, source-map@^0.6.1, source-map@~0.6.1:\n  version "0.6.1"\n  resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.6.1.tgz#74722af32e9614e9c287a8d0bbde48b5e2f1a263"\n  integrity sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\n\nsource-map@~0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/source-map/-/source-map-0.2.0.tgz#dab73fbcfc2ba819b4de03bd6f6eaa48164b3f9d"\n  integrity sha1-2rc/vPwrqBm03gO9b26qSBZLP50=\n  dependencies:\n    amdefine ">=0.0.4"\n\nsourcemap-codec@^1.4.1:\n  version "1.4.8"\n  resolved "https://registry.yarnpkg.com/sourcemap-codec/-/sourcemap-codec-1.4.8.tgz#ea804bd94857402e6992d05a38ef1ae35a9ab4c4"\n  integrity sha512-9NykojV5Uih4lgo5So5dtw+f0JgJX30KCNI8gwhz2J9A15wD0Ml6tjHKwf6fTSa6fAdVBdZeNOs9eJ71qCk8vA==\n\nspawn-wrap@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/spawn-wrap/-/spawn-wrap-2.0.0.tgz#103685b8b8f9b79771318827aa78650a610d457e"\n  integrity sha512-EeajNjfN9zMnULLwhZZQU3GWBoFNkbngTUPfaawT4RkMiviTxcX0qfhVbGey39mfctfDHkWtuecgQ8NJcyQWHg==\n  dependencies:\n    foreground-child "^2.0.0"\n    is-windows "^1.0.2"\n    make-dir "^3.0.0"\n    rimraf "^3.0.0"\n    signal-exit "^3.0.2"\n    which "^2.0.1"\n\nspdx-correct@^3.0.0:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/spdx-correct/-/spdx-correct-3.1.1.tgz#dece81ac9c1e6713e5f7d1b6f17d468fa53d89a9"\n  integrity sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==\n  dependencies:\n    spdx-expression-parse "^3.0.0"\n    spdx-license-ids "^3.0.0"\n\nspdx-exceptions@^2.1.0:\n  version "2.3.0"\n  resolved "https://registry.yarnpkg.com/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz#3f28ce1a77a00372683eade4a433183527a2163d"\n  integrity sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==\n\nspdx-expression-parse@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz#cf70f50482eefdc98e3ce0a6833e4a53ceeba679"\n  integrity sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==\n  dependencies:\n    spdx-exceptions "^2.1.0"\n    spdx-license-ids "^3.0.0"\n\nspdx-license-ids@^3.0.0:\n  version "3.0.5"\n  resolved "https://registry.yarnpkg.com/spdx-license-ids/-/spdx-license-ids-3.0.5.tgz#3694b5804567a458d3c8045842a6358632f62654"\n  integrity sha512-J+FWzZoynJEXGphVIS+XEh3kFSjZX/1i9gFBaWQcB+/tmpe2qUsSBABpcxqxnAxFdiUFEgAX1bjYGQvIZmoz9Q==\n\nspdx-license-list@^3.0.1:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/spdx-license-list/-/spdx-license-list-3.0.1.tgz#163d72123e00f4f8bd6e18125696b009f1248ff5"\n  integrity sha1-Fj1yEj4A9Pi9bhgSVpawCfEkj/U=\n\nsplit-string@^3.0.1, split-string@^3.0.2:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/split-string/-/split-string-3.1.0.tgz#7cb09dda3a86585705c64b39a6466038682e8fe2"\n  integrity sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==\n  dependencies:\n    extend-shallow "^3.0.0"\n\nsplit2@^2.0.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/split2/-/split2-2.2.0.tgz#186b2575bcf83e85b7d18465756238ee4ee42493"\n  integrity sha512-RAb22TG39LhI31MbreBgIuKiIKhVsawfTgEGqKHTK87aG+ul/PB8Sqoi3I7kVdRWiCfrKxK3uo4/YUkpNvhPbw==\n  dependencies:\n    through2 "^2.0.2"\n\nsplit@~0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/split/-/split-0.1.2.tgz#f0710744c453d551fc7143ead983da6014e336cc"\n  integrity sha1-8HEHRMRT1VH8cUPq2YPaYBTjNsw=\n  dependencies:\n    through "1"\n\nsprintf-js@~1.0.2:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/sprintf-js/-/sprintf-js-1.0.3.tgz#04e6926f662895354f3dd015203633b857297e2c"\n  integrity sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\n\nstack-generator@^1.0.7:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/stack-generator/-/stack-generator-1.1.0.tgz#36f6a920751a6c10f499a13c32cbb5f51a0b8b25"\n  integrity sha1-NvapIHUabBD0maE8Msu19RoLiyU=\n  dependencies:\n    stackframe "^1.0.2"\n\nstack-mapper@0.2.2:\n  version "0.2.2"\n  resolved "https://registry.yarnpkg.com/stack-mapper/-/stack-mapper-0.2.2.tgz#789029054937b7d47c1b5b67612cbb1e7cfe7071"\n  integrity sha1-eJApBUk3t9R8G1tnYSy7Hnz+cHE=\n  dependencies:\n    array-map "0.0.0"\n    foreach-shim "~0.1.1"\n    isarray "0.0.1"\n    source-map-cjs "~0.1.31"\n\nstackframe@^0.3.1, stackframe@~0.3:\n  version "0.3.1"\n  resolved "https://registry.yarnpkg.com/stackframe/-/stackframe-0.3.1.tgz#33aa84f1177a5548c8935533cbfeb3420975f5a4"\n  integrity sha1-M6qE8Rd6VUjIk1Uzy/6zQgl19aQ=\n\nstackframe@^1.0.2:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/stackframe/-/stackframe-1.2.0.tgz#52429492d63c62eb989804c11552e3d22e779303"\n  integrity sha512-GrdeshiRmS1YLMYgzF16olf2jJ/IzxXY9lhKOskuVziubpTYcYqyOwYeJKzQkwy7uN0fYSsbsC4RQaXf9LCrYA==\n\nstacktrace-gps@^2.4.3:\n  version "2.4.4"\n  resolved "https://registry.yarnpkg.com/stacktrace-gps/-/stacktrace-gps-2.4.4.tgz#69c827e9d6d6f41cf438d7f195e2e3cbfcf28c44"\n  integrity sha1-acgn6dbW9Bz0ONfxleLjy/zyjEQ=\n  dependencies:\n    source-map "0.5.6"\n    stackframe "~0.3"\n\nstacktrace-js@1.3.1:\n  version "1.3.1"\n  resolved "https://registry.yarnpkg.com/stacktrace-js/-/stacktrace-js-1.3.1.tgz#67cab2589af5c417b962f7369940277bb3b6a18b"\n  integrity sha1-Z8qyWJr1xBe5Yvc2mUAne7O2oYs=\n  dependencies:\n    error-stack-parser "^1.3.6"\n    stack-generator "^1.0.7"\n    stacktrace-gps "^2.4.3"\n\nstate-toggle@^1.0.0:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/state-toggle/-/state-toggle-1.0.3.tgz#e123b16a88e143139b09c6852221bc9815917dfe"\n  integrity sha512-d/5Z4/2iiCnHw6Xzghyhb+GcmF89bxwgXG60wjIiZaxnymbyOmI8Hk4VqHXiVVp6u2ysaskFfXg3ekCj4WNftQ==\n\nstatic-extend@^0.1.1:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/static-extend/-/static-extend-0.1.2.tgz#60809c39cbff55337226fd5e0b520f341f1fb5c6"\n  integrity sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=\n  dependencies:\n    define-property "^0.2.5"\n    object-copy "^0.1.0"\n\n"statuses@>= 1.5.0 < 2", statuses@~1.5.0:\n  version "1.5.0"\n  resolved "https://registry.yarnpkg.com/statuses/-/statuses-1.5.0.tgz#161c7dac177659fd9811f43771fa99381478628c"\n  integrity sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\n\nstream-browserify@^2.0.0, stream-browserify@^2.0.1:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/stream-browserify/-/stream-browserify-2.0.2.tgz#87521d38a44aa7ee91ce1cd2a47df0cb49dd660b"\n  integrity sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==\n  dependencies:\n    inherits "~2.0.1"\n    readable-stream "^2.0.2"\n\nstream-combiner2@^1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/stream-combiner2/-/stream-combiner2-1.1.1.tgz#fb4d8a1420ea362764e21ad4780397bebcb41cbe"\n  integrity sha1-+02KFCDqNidk4hrUeAOXvry0HL4=\n  dependencies:\n    duplexer2 "~0.1.0"\n    readable-stream "^2.0.2"\n\nstream-combiner@^0.2.2:\n  version "0.2.2"\n  resolved "https://registry.yarnpkg.com/stream-combiner/-/stream-combiner-0.2.2.tgz#aec8cbac177b56b6f4fa479ced8c1912cee52858"\n  integrity sha1-rsjLrBd7Vrb0+kec7YwZEs7lKFg=\n  dependencies:\n    duplexer "~0.1.1"\n    through "~2.3.4"\n\nstream-counter@~0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/stream-counter/-/stream-counter-0.2.0.tgz#ded266556319c8b0e222812b9cf3b26fa7d947de"\n  integrity sha1-3tJmVWMZyLDiIoErnPOyb6fZR94=\n  dependencies:\n    readable-stream "~1.1.8"\n\nstream-events@^1.0.5:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/stream-events/-/stream-events-1.0.5.tgz#bbc898ec4df33a4902d892333d47da9bf1c406d5"\n  integrity sha512-E1GUzBSgvct8Jsb3v2X15pjzN1tYebtbLaMg+eBOUOAxgbLoSbT2NS91ckc5lJD1KfLjId+jXJRgo0qnV5Nerg==\n  dependencies:\n    stubs "^3.0.0"\n\nstream-http@^2.0.0, stream-http@^2.7.2:\n  version "2.8.3"\n  resolved "https://registry.yarnpkg.com/stream-http/-/stream-http-2.8.3.tgz#b2d242469288a5a27ec4fe8933acf623de6514fc"\n  integrity sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==\n  dependencies:\n    builtin-status-codes "^3.0.0"\n    inherits "^2.0.1"\n    readable-stream "^2.3.6"\n    to-arraybuffer "^1.0.0"\n    xtend "^4.0.0"\n\nstream-http@^3.0.0:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/stream-http/-/stream-http-3.1.1.tgz#0370a8017cf8d050b9a8554afe608f043eaff564"\n  integrity sha512-S7OqaYu0EkFpgeGFb/NPOoPLxFko7TPqtEeFg5DXPB4v/KETHG0Ln6fRFrNezoelpaDKmycEmmZ81cC9DAwgYg==\n  dependencies:\n    builtin-status-codes "^3.0.0"\n    inherits "^2.0.4"\n    readable-stream "^3.6.0"\n    xtend "^4.0.2"\n\nstream-shift@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/stream-shift/-/stream-shift-1.0.1.tgz#d7088281559ab2778424279b0877da3c392d5a3d"\n  integrity sha512-AiisoFqQ0vbGcZgQPY1cdP2I76glaVA/RauYR4G4thNFgkTqr90yXTo4LYX60Jl+sIlPNHHdGSwo01AvbKUSVQ==\n\nstream-splicer@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/stream-splicer/-/stream-splicer-2.0.1.tgz#0b13b7ee2b5ac7e0609a7463d83899589a363fcd"\n  integrity sha512-Xizh4/NPuYSyAXyT7g8IvdJ9HJpxIGL9PjyhtywCZvvP0OPIdqyrr4dMikeuvY8xahpdKEBlBTySe583totajg==\n  dependencies:\n    inherits "^2.0.1"\n    readable-stream "^2.0.2"\n\nstreamsearch@0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/streamsearch/-/streamsearch-0.1.2.tgz#808b9d0e56fc273d809ba57338e929919a1a9f1a"\n  integrity sha1-gIudDlb8Jz2Am6VzOOkpkZoanxo=\n\nstring-argv@0.3.1:\n  version "0.3.1"\n  resolved "https://registry.yarnpkg.com/string-argv/-/string-argv-0.3.1.tgz#95e2fbec0427ae19184935f816d74aaa4c5c19da"\n  integrity sha512-a1uQGz7IyVy9YwhqjZIZu1c8JO8dNIe20xBmSS6qu9kv++k3JGzCVmprbNN5Kn+BgzD5E7YYwg1CcjuJMRNsvg==\n\nstring-width@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/string-width/-/string-width-3.1.0.tgz#22767be21b62af1081574306f69ac51b62203961"\n  integrity sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==\n  dependencies:\n    emoji-regex "^7.0.1"\n    is-fullwidth-code-point "^2.0.0"\n    strip-ansi "^5.1.0"\n\nstring-width@^4.0.0, string-width@^4.1.0, string-width@^4.2.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/string-width/-/string-width-4.2.0.tgz#952182c46cc7b2c313d1596e623992bd163b72b5"\n  integrity sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01/K5Paj5UHj7VyrQOJvzawSVlKpObApbfD0Ed6yJc+1eg==\n  dependencies:\n    emoji-regex "^8.0.0"\n    is-fullwidth-code-point "^3.0.0"\n    strip-ansi "^6.0.0"\n\nstring.prototype.trimend@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/string.prototype.trimend/-/string.prototype.trimend-1.0.1.tgz#85812a6b847ac002270f5808146064c995fb6913"\n  integrity sha512-LRPxFUaTtpqYsTeNKaFOw3R4bxIzWOnbQ837QfBylo8jIxtcbK/A/sMV7Q+OAV/vWo+7s25pOE10KYSjaSO06g==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.5"\n\nstring.prototype.trimstart@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/string.prototype.trimstart/-/string.prototype.trimstart-1.0.1.tgz#14af6d9f34b053f7cfc89b72f8f2ee14b9039a54"\n  integrity sha512-XxZn+QpvrBI1FOcg6dIpxUPgWCPuNXvMD72aaRaUQv1eD4e/Qy8i/hFTe0BUmD60p/QA6bh1avmuPTfNjqVWRw==\n  dependencies:\n    define-properties "^1.1.3"\n    es-abstract "^1.17.5"\n\nstring_decoder@^1.0.0, string_decoder@^1.1.1:\n  version "1.3.0"\n  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.3.0.tgz#42f114594a46cf1a8e30b0a84f56c78c3edac21e"\n  integrity sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==\n  dependencies:\n    safe-buffer "~5.2.0"\n\nstring_decoder@~0.10.0, string_decoder@~0.10.x:\n  version "0.10.31"\n  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-0.10.31.tgz#62e203bc41766c6c28c9fc84301dab1c5310fa94"\n  integrity sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\n\nstring_decoder@~1.1.1:\n  version "1.1.1"\n  resolved "https://registry.yarnpkg.com/string_decoder/-/string_decoder-1.1.1.tgz#9cf1611ba62685d7030ae9e4ba34149c3af03fc8"\n  integrity sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\n  dependencies:\n    safe-buffer "~5.1.0"\n\nstringify-entities@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/stringify-entities/-/stringify-entities-3.0.1.tgz#32154b91286ab0869ab2c07696223bd23b6dbfc0"\n  integrity sha512-Lsk3ISA2++eJYqBMPKcr/8eby1I6L0gP0NlxF8Zja6c05yr/yCYyb2c9PwXjd08Ib3If1vn1rbs1H5ZtVuOfvQ==\n  dependencies:\n    character-entities-html4 "^1.0.0"\n    character-entities-legacy "^1.0.0"\n    is-alphanumerical "^1.0.0"\n    is-decimal "^1.0.2"\n    is-hexadecimal "^1.0.0"\n\nstringify-object@^3.3.0:\n  version "3.3.0"\n  resolved "https://registry.yarnpkg.com/stringify-object/-/stringify-object-3.3.0.tgz#703065aefca19300d3ce88af4f5b3956d7556629"\n  integrity sha512-rHqiFh1elqCQ9WPLIC8I0Q/g/wj5J1eMkyoiD6eoQApWHP0FtlK7rqnhmabL5VUY9JQCcqwwvlOaSuutekgyrw==\n  dependencies:\n    get-own-enumerable-property-symbols "^3.0.0"\n    is-obj "^1.0.1"\n    is-regexp "^1.0.0"\n\nstringstream@~0.0.4:\n  version "0.0.6"\n  resolved "https://registry.yarnpkg.com/stringstream/-/stringstream-0.0.6.tgz#7880225b0d4ad10e30927d167a1d6f2fd3b33a72"\n  integrity sha512-87GEBAkegbBcweToUrdzf3eLhWNg06FJTebl4BVJz/JgWy8CvEr9dRtX5qWphiynMSQlxxi+QqN0z5T32SLlhA==\n\nstrip-ansi@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-3.0.1.tgz#6a385fb8853d952d5ff05d0e8aaf94278dc63dcf"\n  integrity sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\n  dependencies:\n    ansi-regex "^2.0.0"\n\nstrip-ansi@^5.1.0:\n  version "5.2.0"\n  resolved "https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-5.2.0.tgz#8c9a536feb6afc962bdfa5b104a5091c1ad9c0ae"\n  integrity sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==\n  dependencies:\n    ansi-regex "^4.1.0"\n\nstrip-ansi@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-6.0.0.tgz#0b1571dd7669ccd4f3e06e14ef1eed26225ae532"\n  integrity sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\n  dependencies:\n    ansi-regex "^5.0.0"\n\nstrip-bom@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/strip-bom/-/strip-bom-3.0.0.tgz#2334c18e9c759f7bdd56fdef7e9ae3d588e68ed3"\n  integrity sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM=\n\nstrip-bom@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/strip-bom/-/strip-bom-4.0.0.tgz#9c3505c1db45bcedca3d9cf7a16f5c5aa3901878"\n  integrity sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\n\nstrip-final-newline@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/strip-final-newline/-/strip-final-newline-2.0.0.tgz#89b852fb2fcbe936f6f4b3187afb0a12c1ab58ad"\n  integrity sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\n\nstrip-indent@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/strip-indent/-/strip-indent-2.0.0.tgz#5ef8db295d01e6ed6cbf7aab96998d7822527b68"\n  integrity sha1-XvjbKV0B5u1sv3qrlpmNeCJSe2g=\n\nstrip-indent@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/strip-indent/-/strip-indent-3.0.0.tgz#c32e1cee940b6b3432c771bc2c54bcce73cd3001"\n  integrity sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==\n  dependencies:\n    min-indent "^1.0.0"\n\nstrip-json-comments@^3.1.0:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/strip-json-comments/-/strip-json-comments-3.1.1.tgz#31f1281b3832630434831c310c01cccda8cbe006"\n  integrity sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\n\nstrip-json-comments@~2.0.1:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/strip-json-comments/-/strip-json-comments-2.0.1.tgz#3c531942e908c2697c0ec344858c286c7ca0a60a"\n  integrity sha1-PFMZQukIwml8DsNEhYwobHygpgo=\n\nstubs@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/stubs/-/stubs-3.0.0.tgz#e8d2ba1fa9c90570303c030b6900f7d5f89abe5b"\n  integrity sha1-6NK6H6nJBXAwPAMLaQD31fiavls=\n\nsubarg@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/subarg/-/subarg-1.0.0.tgz#f62cf17581e996b48fc965699f54c06ae268b8d2"\n  integrity sha1-9izxdYHplrSPyWVpn1TAauJouNI=\n  dependencies:\n    minimist "^1.1.0"\n\nsuperagent@0.15.7:\n  version "0.15.7"\n  resolved "https://registry.yarnpkg.com/superagent/-/superagent-0.15.7.tgz#095c70b8afffbc072f1458f39684d4854d6333a3"\n  integrity sha1-CVxwuK//vAcvFFjzloTUhU1jM6M=\n  dependencies:\n    cookiejar "1.3.0"\n    debug "~0.7.2"\n    emitter-component "1.0.0"\n    formidable "1.0.14"\n    methods "0.0.1"\n    mime "1.2.5"\n    qs "0.6.5"\n    reduce-component "1.0.1"\n\nsupports-color@3.1.2:\n  version "3.1.2"\n  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-3.1.2.tgz#72a262894d9d408b956ca05ff37b2ed8a6e2a2d5"\n  integrity sha1-cqJiiU2dQIuVbKBf83su2KbiotU=\n  dependencies:\n    has-flag "^1.0.0"\n\nsupports-color@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-2.0.0.tgz#535d045ce6b6363fa40117084629995e9df324c7"\n  integrity sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\n\nsupports-color@^3.1.0:\n  version "3.2.3"\n  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-3.2.3.tgz#65ac0504b3954171d8a64946b2ae3cbb8a5f54f6"\n  integrity sha1-ZawFBLOVQXHYpklGsq48u4pfVPY=\n  dependencies:\n    has-flag "^1.0.0"\n\nsupports-color@^5.3.0:\n  version "5.5.0"\n  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-5.5.0.tgz#e2e69a44ac8772f78a1ec0b35b689df6530efc8f"\n  integrity sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\n  dependencies:\n    has-flag "^3.0.0"\n\nsupports-color@^6.0.0:\n  version "6.1.0"\n  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-6.1.0.tgz#0764abc69c63d5ac842dd4867e8d025e880df8f3"\n  integrity sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==\n  dependencies:\n    has-flag "^3.0.0"\n\nsupports-color@^7.0.0, supports-color@^7.1.0:\n  version "7.1.0"\n  resolved "https://registry.yarnpkg.com/supports-color/-/supports-color-7.1.0.tgz#68e32591df73e25ad1c4b49108a2ec507962bfd1"\n  integrity sha512-oRSIpR8pxT1Wr2FquTNnGet79b3BWljqOuoW/h4oBhxJ/HUbX5nX6JSruTkvXDCFMwDPvsaTTbvMLKZWSy0R5g==\n  dependencies:\n    has-flag "^4.0.0"\n\nsupports-hyperlinks@^2.0.0:\n  version "2.1.0"\n  resolved "https://registry.yarnpkg.com/supports-hyperlinks/-/supports-hyperlinks-2.1.0.tgz#f663df252af5f37c5d49bbd7eeefa9e0b9e59e47"\n  integrity sha512-zoE5/e+dnEijk6ASB6/qrK+oYdm2do1hjoLWrqUC/8WEIW1gbxFcKuBof7sW8ArN6e+AYvsE8HBGiVRWL/F5CA==\n  dependencies:\n    has-flag "^4.0.0"\n    supports-color "^7.0.0"\n\nsyntax-error@^1.1.1:\n  version "1.4.0"\n  resolved "https://registry.yarnpkg.com/syntax-error/-/syntax-error-1.4.0.tgz#2d9d4ff5c064acb711594a3e3b95054ad51d907c"\n  integrity sha512-YPPlu67mdnHGTup2A8ff7BC2Pjq0e0Yp/IyTFN03zWO0RcK07uLcbi7C2KpGR2FvWbaB0+bfE27a+sBKebSo7w==\n  dependencies:\n    acorn-node "^1.2.0"\n\ntable@^5.2.3:\n  version "5.4.6"\n  resolved "https://registry.yarnpkg.com/table/-/table-5.4.6.tgz#1292d19500ce3f86053b05f0e8e7e4a3bb21079e"\n  integrity sha512-wmEc8m4fjnob4gt5riFRtTu/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6/YR3qRZv7e56kAEAtd6nKZaxe0Ug==\n  dependencies:\n    ajv "^6.10.2"\n    lodash "^4.17.14"\n    slice-ansi "^2.1.0"\n    string-width "^3.0.0"\n\ntap-finished@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/tap-finished/-/tap-finished-0.0.1.tgz#08b5b543fdc04830290c6c561279552e71c4bd67"\n  integrity sha1-CLW1Q/3ASDApDGxWEnlVLnHEvWc=\n  dependencies:\n    tap-parser "~0.2.0"\n    through "~2.3.4"\n\ntap-parser@0.7.0:\n  version "0.7.0"\n  resolved "https://registry.yarnpkg.com/tap-parser/-/tap-parser-0.7.0.tgz#728a61d64680a5b48d5dbd9dbd0a4d48f5c35bcb"\n  integrity sha1-coph1kaApbSNXb2dvQpNSPXDW8s=\n  dependencies:\n    inherits "~2.0.1"\n    minimist "^0.2.0"\n    readable-stream "~1.1.11"\n\ntap-parser@~0.2.0:\n  version "0.2.1"\n  resolved "https://registry.yarnpkg.com/tap-parser/-/tap-parser-0.2.1.tgz#8e1e823f2114ee21d032e2f31e4fb642a296f50b"\n  integrity sha1-jh6CPyEU7iHQMuLzHk+2QqKW9Qs=\n  dependencies:\n    split "~0.1.2"\n\ntapable@^0.1.8:\n  version "0.1.10"\n  resolved "https://registry.yarnpkg.com/tapable/-/tapable-0.1.10.tgz#29c35707c2b70e50d07482b5d202e8ed446dafd4"\n  integrity sha1-KcNXB8K3DlDQdIK10gLo7URtr9Q=\n\ntar-stream@~1.0.0:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/tar-stream/-/tar-stream-1.0.2.tgz#fd19b4a17900fa704f6a133e3045aead0562ab95"\n  integrity sha1-/Rm0oXkA+nBPahM+MEWurQViq5U=\n  dependencies:\n    bl "^0.9.0"\n    end-of-stream "^1.0.0"\n    readable-stream "^1.0.27-1"\n    xtend "^4.0.0"\n\ntar-stream@~1.1.0:\n  version "1.1.5"\n  resolved "https://registry.yarnpkg.com/tar-stream/-/tar-stream-1.1.5.tgz#be9218c130c20029e107b0f967fb23de0579d13c"\n  integrity sha1-vpIYwTDCACnhB7D5Z/sj3gV50Tw=\n  dependencies:\n    bl "^0.9.0"\n    end-of-stream "^1.0.0"\n    readable-stream "~1.0.33"\n    xtend "^4.0.0"\n\nteeny-request@6.0.1:\n  version "6.0.1"\n  resolved "https://registry.yarnpkg.com/teeny-request/-/teeny-request-6.0.1.tgz#9b1f512cef152945827ba7e34f62523a4ce2c5b0"\n  integrity sha512-TAK0c9a00ELOqLrZ49cFxvPVogMUFaWY8dUsQc/0CuQPGF+BOxOQzXfE413BAk2kLomwNplvdtMpeaeGWmoc2g==\n  dependencies:\n    http-proxy-agent "^4.0.0"\n    https-proxy-agent "^4.0.0"\n    node-fetch "^2.2.0"\n    stream-events "^1.0.5"\n    uuid "^3.3.2"\n\nterm-size@^2.1.0:\n  version "2.2.0"\n  resolved "https://registry.yarnpkg.com/term-size/-/term-size-2.2.0.tgz#1f16adedfe9bdc18800e1776821734086fcc6753"\n  integrity sha512-a6sumDlzyHVJWb8+YofY4TW112G6p2FCPEAFk+59gIYHv3XHRhm9ltVQ9kli4hNWeQBwSpe8cRN25x0ROunMOw==\n\nterser@^3.7.5:\n  version "3.17.0"\n  resolved "https://registry.yarnpkg.com/terser/-/terser-3.17.0.tgz#f88ffbeda0deb5637f9d24b0da66f4e15ab10cb2"\n  integrity sha512-/FQzzPJmCpjAH9Xvk2paiWrFq+5M6aVOf+2KRbwhByISDX/EujxsK+BAvrhb6H+2rtrLCHK9N01wO014vrIwVQ==\n  dependencies:\n    commander "^2.19.0"\n    source-map "~0.6.1"\n    source-map-support "~0.5.10"\n\nterser@^4.7.0:\n  version "4.8.0"\n  resolved "https://registry.yarnpkg.com/terser/-/terser-4.8.0.tgz#63056343d7c70bb29f3af665865a46fe03a0df17"\n  integrity sha512-EAPipTNeWsb/3wLPeup1tVPaXfIaU68xMnVdPafIL1TV05OhASArYyIfFvnvJCNrR2NIOvDVNNTFRa+Re2MWyw==\n  dependencies:\n    commander "^2.20.0"\n    source-map "~0.6.1"\n    source-map-support "~0.5.12"\n\ntest-exclude@^6.0.0:\n  version "6.0.0"\n  resolved "https://registry.yarnpkg.com/test-exclude/-/test-exclude-6.0.0.tgz#04a8698661d805ea6fa293b6cb9e63ac044ef15e"\n  integrity sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\n  dependencies:\n    "@istanbuljs/schema" "^0.1.2"\n    glob "^7.1.4"\n    minimatch "^3.0.4"\n\ntext-extensions@^1.0.0:\n  version "1.9.0"\n  resolved "https://registry.yarnpkg.com/text-extensions/-/text-extensions-1.9.0.tgz#1853e45fee39c945ce6f6c36b2d659b5aabc2a26"\n  integrity sha512-wiBrwC1EhBelW12Zy26JeOUkQ5mRu+5o8rpsJk5+2t+Y5vE7e842qtZDQ2g1NpX/29HdyFeJ4nSIhI47ENSxlQ==\n\ntext-table@^0.2.0:\n  version "0.2.0"\n  resolved "https://registry.yarnpkg.com/text-table/-/text-table-0.2.0.tgz#7f5ee823ae805207c00af2df4a84ec3fcfa570b4"\n  integrity sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=\n\nthrough2@^2.0.0, through2@^2.0.2, through2@^2.0.3, through2@^2.0.5:\n  version "2.0.5"\n  resolved "https://registry.yarnpkg.com/through2/-/through2-2.0.5.tgz#01c1e39eb31d07cb7d03a96a70823260b23132cd"\n  integrity sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==\n  dependencies:\n    readable-stream "~2.3.6"\n    xtend "~4.0.1"\n\nthrough2@^3.0.0, through2@^3.0.1:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/through2/-/through2-3.0.2.tgz#99f88931cfc761ec7678b41d5d7336b5b6a07bf4"\n  integrity sha512-enaDQ4MUyP2W6ZyT6EsMzqBPZaM/avg8iuo+l2d3QCs0J+6RaqkHV/2/lOwDTueBHeJ/2LG9lrLW3d5rWPucuQ==\n  dependencies:\n    inherits "^2.0.4"\n    readable-stream "2 || 3"\n\nthrough@1:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/through/-/through-1.1.2.tgz#344a5425a3773314ca7e0eb6512fbafaf76c0bfe"\n  integrity sha1-NEpUJaN3MxTKfg62US+6+vdsC/4=\n\nthrough@2.3.4:\n  version "2.3.4"\n  resolved "https://registry.yarnpkg.com/through/-/through-2.3.4.tgz#495e40e8d8a8eaebc7c275ea88c2b8fc14c56455"\n  integrity sha1-SV5A6Nio6uvHwnXqiMK4/BTFZFU=\n\n"through@>=2.2.7 <3", through@^2.3.4, through@^2.3.7, through@^2.3.8, through@~2.3.4:\n  version "2.3.8"\n  resolved "https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5"\n  integrity sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\n\ntimers-browserify@^1.0.1:\n  version "1.4.2"\n  resolved "https://registry.yarnpkg.com/timers-browserify/-/timers-browserify-1.4.2.tgz#c9c58b575be8407375cb5e2462dacee74359f41d"\n  integrity sha1-ycWLV1voQHN1y14kYtrO50NZ9B0=\n  dependencies:\n    process "~0.11.0"\n\ntimers-browserify@^2.0.4:\n  version "2.0.11"\n  resolved "https://registry.yarnpkg.com/timers-browserify/-/timers-browserify-2.0.11.tgz#800b1f3eee272e5bc53ee465a04d0e804c31211f"\n  integrity sha512-60aV6sgJ5YEbzUdn9c8kYGIqOubPoUdqQCul3SBAsRCZ40s6Y5cMcrW4dt3/k/EsbLVJNl9n6Vz3fTc+k2GeKQ==\n  dependencies:\n    setimmediate "^1.0.4"\n\ntinyify@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/tinyify/-/tinyify-3.0.0.tgz#99d5f805191558c6d85dacabe634d617da5509e6"\n  integrity sha512-RtjVjC1xwwxt8AMVfxEmo+FzRJB6p5sAOtFaJj8vMrkWShtArsM4dLVRWhx2Vc07Me3NWgmP7pi9UPm/a2XNNA==\n  dependencies:\n    "@goto-bus-stop/envify" "^5.0.0"\n    acorn-node "^1.8.2"\n    browser-pack-flat "^3.0.9"\n    bundle-collapser "^1.3.0"\n    common-shakeify "^0.6.0"\n    dash-ast "^1.0.0"\n    minify-stream "^2.0.1"\n    multisplice "^1.0.0"\n    through2 "^3.0.1"\n    uglifyify "^5.0.0"\n    unassertify "^2.1.1"\n\nto-absolute-glob@^2.0.2:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/to-absolute-glob/-/to-absolute-glob-2.0.2.tgz#1865f43d9e74b0822db9f145b78cff7d0f7c849b"\n  integrity sha1-GGX0PZ50sIItufFFt4z/fQ98hJs=\n  dependencies:\n    is-absolute "^1.0.0"\n    is-negated-glob "^1.0.0"\n\nto-arraybuffer@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz#7d229b1fcc637e466ca081180836a7aabff83f43"\n  integrity sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M=\n\nto-fast-properties@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/to-fast-properties/-/to-fast-properties-2.0.0.tgz#dc5e698cbd079265bc73e0377681a4e4e83f616e"\n  integrity sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4=\n\nto-object-path@^0.3.0:\n  version "0.3.0"\n  resolved "https://registry.yarnpkg.com/to-object-path/-/to-object-path-0.3.0.tgz#297588b7b0e7e0ac08e04e672f85c1f4999e17af"\n  integrity sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=\n  dependencies:\n    kind-of "^3.0.2"\n\nto-readable-stream@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/to-readable-stream/-/to-readable-stream-1.0.0.tgz#ce0aa0c2f3df6adf852efb404a783e77c0475771"\n  integrity sha512-Iq25XBt6zD5npPhlLVXGFN3/gyR2/qODcKNNyTMd4vbm39HUaOiAM4PMq0eMVC/Tkxz+Zjdsc55g9yyz+Yq00Q==\n\nto-regex-range@^2.1.0:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/to-regex-range/-/to-regex-range-2.1.1.tgz#7c80c17b9dfebe599e27367e0d4dd5590141db38"\n  integrity sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=\n  dependencies:\n    is-number "^3.0.0"\n    repeat-string "^1.6.1"\n\nto-regex-range@^5.0.1:\n  version "5.0.1"\n  resolved "https://registry.yarnpkg.com/to-regex-range/-/to-regex-range-5.0.1.tgz#1648c44aae7c8d988a326018ed72f5b4dd0392e4"\n  integrity sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\n  dependencies:\n    is-number "^7.0.0"\n\nto-regex@^3.0.1, to-regex@^3.0.2:\n  version "3.0.2"\n  resolved "https://registry.yarnpkg.com/to-regex/-/to-regex-3.0.2.tgz#13cfdd9b336552f30b51f33a8ae1b42a7a7599ce"\n  integrity sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==\n  dependencies:\n    define-property "^2.0.2"\n    extend-shallow "^3.0.2"\n    regex-not "^1.0.2"\n    safe-regex "^1.1.0"\n\nto-vfile@^6.0.0:\n  version "6.1.0"\n  resolved "https://registry.yarnpkg.com/to-vfile/-/to-vfile-6.1.0.tgz#5f7a3f65813c2c4e34ee1f7643a5646344627699"\n  integrity sha512-BxX8EkCxOAZe+D/ToHdDsJcVI4HqQfmw0tCkp31zf3dNP/XWIAjU4CmeuSwsSoOzOTqHPOL0KUzyZqJplkD0Qw==\n  dependencies:\n    is-buffer "^2.0.0"\n    vfile "^4.0.0"\n\ntoidentifier@1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/toidentifier/-/toidentifier-1.0.0.tgz#7e1be3470f1e77948bc43d94a3c8f4d7752ba553"\n  integrity sha512-yaOH/Pk/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==\n\ntough-cookie@>=0.12.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/tough-cookie/-/tough-cookie-4.0.0.tgz#d822234eeca882f991f0f908824ad2622ddbece4"\n  integrity sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwtcB0t/MjACGR18pcRbg==\n  dependencies:\n    psl "^1.1.33"\n    punycode "^2.1.1"\n    universalify "^0.1.2"\n\ntransform-ast@^2.4.2, transform-ast@^2.4.3:\n  version "2.4.4"\n  resolved "https://registry.yarnpkg.com/transform-ast/-/transform-ast-2.4.4.tgz#bebf494e2e73f024746f76348bc86a5992851d00"\n  integrity sha512-AxjeZAcIOUO2lev2GDe3/xZ1Q0cVGjIMk5IsriTy8zbWlsEnjeB025AhkhBJHoy997mXpLd4R+kRbvnnQVuQHQ==\n  dependencies:\n    acorn-node "^1.3.0"\n    convert-source-map "^1.5.1"\n    dash-ast "^1.0.0"\n    is-buffer "^2.0.0"\n    magic-string "^0.23.2"\n    merge-source-map "1.0.4"\n    nanobench "^2.1.1"\n\ntrim-newlines@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/trim-newlines/-/trim-newlines-2.0.0.tgz#b403d0b91be50c331dfc4b82eeceb22c3de16d20"\n  integrity sha1-tAPQuRvlDDMd/EuC7s6yLD3hbSA=\n\ntrim-newlines@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/trim-newlines/-/trim-newlines-3.0.0.tgz#79726304a6a898aa8373427298d54c2ee8b1cb30"\n  integrity sha512-C4+gOpvmxaSMKuEf9Qc134F1ZuOHVXKRbtEflf4NTtuuJDEIJ9p5PXsalL8SkeRw+qit1Mo+yuvMPAKwWg/1hA==\n\ntrim-off-newlines@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/trim-off-newlines/-/trim-off-newlines-1.0.1.tgz#9f9ba9d9efa8764c387698bcbfeb2c848f11adb3"\n  integrity sha1-n5up2e+odkw4dpi8v+sshI8RrbM=\n\ntrim-trailing-lines@^1.0.0:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/trim-trailing-lines/-/trim-trailing-lines-1.1.3.tgz#7f0739881ff76657b7776e10874128004b625a94"\n  integrity sha512-4ku0mmjXifQcTVfYDfR5lpgV7zVqPg6zV9rdZmwOPqq0+Zq19xDqEgagqVbc4pOOShbncuAOIs59R3+3gcF3ZA==\n\ntrim@0.0.1:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/trim/-/trim-0.0.1.tgz#5858547f6b290757ee95cccc666fb50084c460dd"\n  integrity sha1-WFhUf2spB1fulczMZm+1AITEYN0=\n\ntrough@^1.0.0:\n  version "1.0.5"\n  resolved "https://registry.yarnpkg.com/trough/-/trough-1.0.5.tgz#b8b639cefad7d0bb2abd37d433ff8293efa5f406"\n  integrity sha512-rvuRbTarPXmMb79SmzEp8aqXNKcK+y0XaB298IXueQ8I2PsrATcPBCSPyK/dDNa2iWOhKlfNnOjdAOTBU/nkFA==\n\ntsconfig-paths@^3.9.0:\n  version "3.9.0"\n  resolved "https://registry.yarnpkg.com/tsconfig-paths/-/tsconfig-paths-3.9.0.tgz#098547a6c4448807e8fcb8eae081064ee9a3c90b"\n  integrity sha512-dRcuzokWhajtZWkQsDVKbWyY+jgcLC5sqJhg2PSgf4ZkH2aHPvaOY8YWGhmjb68b5qqTfasSsDO9k7RUiEmZAw==\n  dependencies:\n    "@types/json5" "^0.0.29"\n    json5 "^1.0.1"\n    minimist "^1.2.0"\n    strip-bom "^3.0.0"\n\ntslib@^1.8.1, tslib@^1.9.0:\n  version "1.13.0"\n  resolved "https://registry.yarnpkg.com/tslib/-/tslib-1.13.0.tgz#c881e13cc7015894ed914862d276436fa9a47043"\n  integrity sha512-i/6DQjL8Xf3be4K/E6Wgpekn5Qasl1usyw++dAA35Ue5orEn65VIxOA+YvNNl9HV3qv70T7CNwjODHZrLwvd1Q==\n\ntsutils@^3.17.1:\n  version "3.17.1"\n  resolved "https://registry.yarnpkg.com/tsutils/-/tsutils-3.17.1.tgz#ed719917f11ca0dee586272b2ac49e015a2dd759"\n  integrity sha512-kzeQ5B8H3w60nFY2g8cJIuH7JDpsALXySGtwGJ0p2LSjLgay3NdIpqq5SoOBe46bKDW2iq25irHCr8wjomUS2g==\n  dependencies:\n    tslib "^1.8.1"\n\ntty-browserify@0.0.0:\n  version "0.0.0"\n  resolved "https://registry.yarnpkg.com/tty-browserify/-/tty-browserify-0.0.0.tgz#a157ba402da24e9bf957f9aa69d524eed42901a6"\n  integrity sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY=\n\ntty-browserify@0.0.1, tty-browserify@~0.0.0:\n  version "0.0.1"\n  resolved "https://registry.yarnpkg.com/tty-browserify/-/tty-browserify-0.0.1.tgz#3f05251ee17904dfd0677546670db9651682b811"\n  integrity sha512-C3TaO7K81YvjCgQH9Q1S3R3P3BtN3RIM8n+OvX4il1K1zgE8ZhI0op7kClgkxtutIE8hQrcrHBXvIheqKUUCxw==\n\ntunnel-agent@~0.4.0:\n  version "0.4.3"\n  resolved "https://registry.yarnpkg.com/tunnel-agent/-/tunnel-agent-0.4.3.tgz#6373db76909fe570e08d73583365ed828a74eeeb"\n  integrity sha1-Y3PbdpCf5XDgjXNYM2Xtgop07us=\n\ntype-check@^0.4.0, type-check@~0.4.0:\n  version "0.4.0"\n  resolved "https://registry.yarnpkg.com/type-check/-/type-check-0.4.0.tgz#07b8203bfa7056c0657050e3ccd2c37730bab8f1"\n  integrity sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==\n  dependencies:\n    prelude-ls "^1.2.1"\n\ntype-check@~0.3.2:\n  version "0.3.2"\n  resolved "https://registry.yarnpkg.com/type-check/-/type-check-0.3.2.tgz#5884cab512cf1d355e3fb784f30804b2b520db72"\n  integrity sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=\n  dependencies:\n    prelude-ls "~1.1.2"\n\ntype-fest@^0.11.0:\n  version "0.11.0"\n  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.11.0.tgz#97abf0872310fed88a5c466b25681576145e33f1"\n  integrity sha512-OdjXJxnCN1AvyLSzeKIgXTXxV+99ZuXl3Hpo9XpJAv9MBcHrrJOQ5kV7ypXOuQie+AmWG25hLbiKdwYTifzcfQ==\n\ntype-fest@^0.13.1:\n  version "0.13.1"\n  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.13.1.tgz#0172cb5bce80b0bd542ea348db50c7e21834d934"\n  integrity sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==\n\ntype-fest@^0.4.1:\n  version "0.4.1"\n  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.4.1.tgz#8bdf77743385d8a4f13ba95f610f5ccd68c728f8"\n  integrity sha512-IwzA/LSfD2vC1/YDYMv/zHP4rDF1usCwllsDpbolT3D4fUepIO7f9K70jjmUewU/LmGUKJcwcVtDCpnKk4BPMw==\n\ntype-fest@^0.6.0:\n  version "0.6.0"\n  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.6.0.tgz#8d2a2370d3df886eb5c90ada1c5bf6188acf838b"\n  integrity sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==\n\ntype-fest@^0.8.0, type-fest@^0.8.1:\n  version "0.8.1"\n  resolved "https://registry.yarnpkg.com/type-fest/-/type-fest-0.8.1.tgz#09e249ebde851d3b1e48d27c105444667f17b83d"\n  integrity sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==\n\ntype-is@^1.6.4, type-is@~1.6.17, type-is@~1.6.18, type-is@~1.6.2:\n  version "1.6.18"\n  resolved "https://registry.yarnpkg.com/type-is/-/type-is-1.6.18.tgz#4e552cd05df09467dcbc4ef739de89f2cf37c131"\n  integrity sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\n  dependencies:\n    media-typer "0.3.0"\n    mime-types "~2.1.24"\n\ntype@^1.0.1:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/type/-/type-1.2.0.tgz#848dd7698dafa3e54a6c479e759c4bc3f18847a0"\n  integrity sha512-+5nt5AAniqsCnu2cEQQdpzCAh33kVx8n0VoFidKpB1dVVLAN/F+bgVOqOJqOnEnrhp222clB5p3vUlD+1QAnfg==\n\ntype@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/type/-/type-2.0.0.tgz#5f16ff6ef2eb44f260494dae271033b29c09a9c3"\n  integrity sha512-KBt58xCHry4Cejnc2ISQAF7QY+ORngsWfxezO68+12hKV6lQY8P/psIkcbjeHWn7MqcgciWJyCCevFMJdIXpow==\n\ntypedarray-to-buffer@^3.1.5:\n  version "3.1.5"\n  resolved "https://registry.yarnpkg.com/typedarray-to-buffer/-/typedarray-to-buffer-3.1.5.tgz#a97ee7a9ff42691b9f783ff1bc5112fe3fca9080"\n  integrity sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==\n  dependencies:\n    is-typedarray "^1.0.0"\n\ntypedarray@^0.0.6, typedarray@~0.0.5:\n  version "0.0.6"\n  resolved "https://registry.yarnpkg.com/typedarray/-/typedarray-0.0.6.tgz#867ac74e3864187b1d3d47d996a78ec5c8830777"\n  integrity sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c=\n\ntypescript@^3.3.1:\n  version "3.9.7"\n  resolved "https://registry.yarnpkg.com/typescript/-/typescript-3.9.7.tgz#98d600a5ebdc38f40cb277522f12dc800e9e25fa"\n  integrity sha512-BLbiRkiBzAwsjut4x/dsibSTB6yWpwT5qWmC2OfuCg3GgVQCSgMs4vEctYPhsaGtd0AeuuHMkjZ2h2WG8MSzRw==\n\nuglify-js@^3.1.4:\n  version "3.10.1"\n  resolved "https://registry.yarnpkg.com/uglify-js/-/uglify-js-3.10.1.tgz#dd14767eb7150de97f2573a5ff210db14fffe4ad"\n  integrity sha512-RjxApKkrPJB6kjJxQS3iZlf///REXWYxYJxO/MpmlQzVkDWVI3PSnCBWezMecmTU/TRkNxrl8bmsfFQCp+LO+Q==\n\nuglify-js@~2.3:\n  version "2.3.6"\n  resolved "https://registry.yarnpkg.com/uglify-js/-/uglify-js-2.3.6.tgz#fa0984770b428b7a9b2a8058f46355d14fef211a"\n  integrity sha1-+gmEdwtCi3qbKoBY9GNV0U/vIRo=\n  dependencies:\n    async "~0.2.6"\n    optimist "~0.3.5"\n    source-map "~0.1.7"\n\nuglifyify@^5.0.0:\n  version "5.0.2"\n  resolved "https://registry.yarnpkg.com/uglifyify/-/uglifyify-5.0.2.tgz#7d0269885e09faa963208a9ec6721afcaf45fc50"\n  integrity sha512-NcSk6pgoC+IgwZZ2tVLVHq+VNKSvLPlLkF5oUiHPVOJI0s/OlSVYEGXG9PCAH0hcyFZLyvt4KBdPAQBRlVDn1Q==\n  dependencies:\n    convert-source-map "~1.1.0"\n    minimatch "^3.0.2"\n    terser "^3.7.5"\n    through "~2.3.4"\n    xtend "^4.0.1"\n\nuid-safe@~2.1.5:\n  version "2.1.5"\n  resolved "https://registry.yarnpkg.com/uid-safe/-/uid-safe-2.1.5.tgz#2b3d5c7240e8fc2e58f8aa269e5ee49c0857bd3a"\n  integrity sha512-KPHm4VL5dDXKz01UuEd88Df+KzynaohSL9fBh096KWAxSKZQDI2uBrVqtvRM4rwrIrRRKsdLNML/lnaaVSRioA==\n  dependencies:\n    random-bytes "~1.0.0"\n\nuid2@0.0.3:\n  version "0.0.3"\n  resolved "https://registry.yarnpkg.com/uid2/-/uid2-0.0.3.tgz#483126e11774df2f71b8b639dcd799c376162b82"\n  integrity sha1-SDEm4Rd03y9xuLY53NeZw3YWK4I=\n\numd@^3.0.0, umd@^3.0.3:\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/umd/-/umd-3.0.3.tgz#aa9fe653c42b9097678489c01000acb69f0b26cf"\n  integrity sha512-4IcGSufhFshvLNcMCV80UnQVlZ5pMOC8mvNPForqwA4+lzYQuetTESLDQkeLmihq8bRcnpbQa48Wb8Lh16/xow==\n\nunassert@^1.3.1:\n  version "1.6.0"\n  resolved "https://registry.yarnpkg.com/unassert/-/unassert-1.6.0.tgz#ceb6d39ce47c6d2bfa9cb3cab407352cbfb60a19"\n  integrity sha512-GoMtWTwGSxSFuRD0NKmbjlx3VJkgvSogzDzMPpJXYmBZv6MIWButsyMqEYhMx3NI4osXACcZA9mXiBteXyJtRw==\n  dependencies:\n    acorn "^7.0.0"\n    call-matcher "^2.0.0"\n    deep-equal "^1.0.0"\n    espurify "^2.0.1"\n    estraverse "^4.1.0"\n    esutils "^2.0.2"\n    object-assign "^4.1.0"\n\nunassertify@^2.1.1:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/unassertify/-/unassertify-2.1.1.tgz#23772d76c136fb3d5df7dad4911c737d952357d3"\n  integrity sha512-YIAaIlc6/KC9Oib8cVZLlpDDhK1UTEuaDyx9BwD97xqxDZC0cJOqwFcs/Y6K3m73B5VzHsRTBLXNO0dxS/GkTw==\n  dependencies:\n    acorn "^5.1.0"\n    convert-source-map "^1.1.1"\n    escodegen "^1.6.1"\n    multi-stage-sourcemap "^0.2.1"\n    through "^2.3.7"\n    unassert "^1.3.1"\n\nunc-path-regex@^0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/unc-path-regex/-/unc-path-regex-0.1.2.tgz#e73dd3d7b0d7c5ed86fbac6b0ae7d8c6a69d50fa"\n  integrity sha1-5z3T17DXxe2G+6xrCufYxqadUPo=\n\nundeclared-identifiers@^1.1.2:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/undeclared-identifiers/-/undeclared-identifiers-1.1.3.tgz#9254c1d37bdac0ac2b52de4b6722792d2a91e30f"\n  integrity sha512-pJOW4nxjlmfwKApE4zvxLScM/njmwj/DiUBv7EabwE4O8kRUy+HIwxQtZLBPll/jx1LJyBcqNfB3/cpv9EZwOw==\n  dependencies:\n    acorn-node "^1.3.0"\n    dash-ast "^1.0.0"\n    get-assigned-identifiers "^1.2.0"\n    simple-concat "^1.0.0"\n    xtend "^4.0.1"\n\nunderscore.string@~2.3.3:\n  version "2.3.3"\n  resolved "https://registry.yarnpkg.com/underscore.string/-/underscore.string-2.3.3.tgz#71c08bf6b428b1133f37e78fa3a21c82f7329b0d"\n  integrity sha1-ccCL9rQosRM/N+ePo6Icgvcymw0=\n\nunherit@^1.0.4:\n  version "1.1.3"\n  resolved "https://registry.yarnpkg.com/unherit/-/unherit-1.1.3.tgz#6c9b503f2b41b262330c80e91c8614abdaa69c22"\n  integrity sha512-Ft16BJcnapDKp0+J/rqFC3Rrk6Y/Ng4nzsC028k2jdDII/rdZ7Wd3pPT/6+vIIxRagwRc9K0IUX0Ra4fKvw+WQ==\n  dependencies:\n    inherits "^2.0.0"\n    xtend "^4.0.0"\n\nunicode-canonical-property-names-ecmascript@^1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz#2619800c4c825800efdd8343af7dd9933cbe2818"\n  integrity sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ==\n\nunicode-match-property-ecmascript@^1.0.4:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz#8ed2a32569961bce9227d09cd3ffbb8fed5f020c"\n  integrity sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==\n  dependencies:\n    unicode-canonical-property-names-ecmascript "^1.0.4"\n    unicode-property-aliases-ecmascript "^1.0.4"\n\nunicode-match-property-value-ecmascript@^1.2.0:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.2.0.tgz#0d91f600eeeb3096aa962b1d6fc88876e64ea531"\n  integrity sha512-wjuQHGQVofmSJv1uVISKLE5zO2rNGzM/KCYZch/QQvez7C1hUhBIuZ701fYXExuufJFMPhv2SyL8CyoIfMLbIQ==\n\nunicode-property-aliases-ecmascript@^1.0.4:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.1.0.tgz#dd57a99f6207bedff4628abefb94c50db941c8f4"\n  integrity sha512-PqSoPh/pWetQ2phoj5RLiaqIk4kCNwoV3CI+LfGmWLKI3rE3kl1h59XpX2BjgDrmbxD9ARtQobPGU1SguCYuQg==\n\nunified-args@^8.0.0:\n  version "8.1.0"\n  resolved "https://registry.yarnpkg.com/unified-args/-/unified-args-8.1.0.tgz#a27dbe996a49fbbf3d9f5c6a98008ab9b0ee6ae5"\n  integrity sha512-t1HPS1cQPsVvt/6EtyWIbQGurza5684WGRigNghZRvzIdHm3LPgMdXPyGx0npORKzdiy5+urkF0rF5SXM8lBuQ==\n  dependencies:\n    camelcase "^5.0.0"\n    chalk "^3.0.0"\n    chokidar "^3.0.0"\n    fault "^1.0.2"\n    json5 "^2.0.0"\n    minimist "^1.2.0"\n    text-table "^0.2.0"\n    unified-engine "^8.0.0"\n\nunified-engine@^8.0.0:\n  version "8.0.0"\n  resolved "https://registry.yarnpkg.com/unified-engine/-/unified-engine-8.0.0.tgz#e3996ff6eaecc6ca3408af92b70e25691192d17d"\n  integrity sha512-vLUezxCnjzz+ya4pYouRQVMT8k82Rk4fIj406UidRnSFJdGXFaQyQklAnalsQHJrLqAlaYPkXPUa1upfVSHGCA==\n  dependencies:\n    concat-stream "^2.0.0"\n    debug "^4.0.0"\n    fault "^1.0.0"\n    figures "^3.0.0"\n    glob "^7.0.3"\n    ignore "^5.0.0"\n    is-buffer "^2.0.0"\n    is-empty "^1.0.0"\n    is-plain-obj "^2.0.0"\n    js-yaml "^3.6.1"\n    load-plugin "^3.0.0"\n    parse-json "^5.0.0"\n    to-vfile "^6.0.0"\n    trough "^1.0.0"\n    unist-util-inspect "^5.0.0"\n    vfile-reporter "^6.0.0"\n    vfile-statistics "^1.1.0"\n\nunified-lint-rule@^1.0.0:\n  version "1.0.6"\n  resolved "https://registry.yarnpkg.com/unified-lint-rule/-/unified-lint-rule-1.0.6.tgz#b4ab801ff93c251faa917a8d1c10241af030de84"\n  integrity sha512-YPK15YBFwnsVorDFG/u0cVVQN5G2a3V8zv5/N6KN3TCG+ajKtaALcy7u14DCSrJI+gZeyYquFL9cioJXOGXSvg==\n  dependencies:\n    wrapped "^1.0.1"\n\nunified-message-control@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/unified-message-control/-/unified-message-control-3.0.1.tgz#7018855daea9af96082cbea35970d48c9c4dbbf2"\n  integrity sha512-K2Kvvp1DBzeuxYLLsumZh/gDWUTl4e2z/P3VReFirC78cfHKtQifbhnfRrSBtKtd1Uc6cvYTW0/SZIUaMAEcTg==\n  dependencies:\n    unist-util-visit "^2.0.0"\n    vfile-location "^3.0.0"\n\nunified@^9.0.0, unified@^9.1.0:\n  version "9.1.0"\n  resolved "https://registry.yarnpkg.com/unified/-/unified-9.1.0.tgz#7ba82e5db4740c47a04e688a9ca8335980547410"\n  integrity sha512-VXOv7Ic6twsKGJDeZQ2wwPqXs2hM0KNu5Hkg9WgAZbSD1pxhZ7p8swqg583nw1Je2fhwHy6U8aEjiI79x1gvag==\n  dependencies:\n    bail "^1.0.0"\n    extend "^3.0.0"\n    is-buffer "^2.0.0"\n    is-plain-obj "^2.0.0"\n    trough "^1.0.0"\n    vfile "^4.0.0"\n\nunion-value@^1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/union-value/-/union-value-1.0.1.tgz#0b6fe7b835aecda61c6ea4d4f02c14221e109847"\n  integrity sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==\n  dependencies:\n    arr-union "^3.1.0"\n    get-value "^2.0.6"\n    is-extendable "^0.1.1"\n    set-value "^2.0.1"\n\nunique-string@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/unique-string/-/unique-string-2.0.0.tgz#39c6451f81afb2749de2b233e3f7c5e8843bd89d"\n  integrity sha512-uNaeirEPvpZWSgzwsPGtU2zVSTrn/8L5q/IexZmH0eH6SA73CmAA5U4GwORTxQAZs95TAXLNqeLoPPNO5gZfWg==\n  dependencies:\n    crypto-random-string "^2.0.0"\n\nunist-builder@^1.0.3:\n  version "1.0.4"\n  resolved "https://registry.yarnpkg.com/unist-builder/-/unist-builder-1.0.4.tgz#e1808aed30bd72adc3607f25afecebef4dd59e17"\n  integrity sha512-v6xbUPP7ILrT15fHGrNyHc1Xda8H3xVhP7/HAIotHOhVPjH5dCXA097C3Rry1Q2O+HbOLCao4hfPB+EYEjHgVg==\n  dependencies:\n    object-assign "^4.1.0"\n\nunist-util-find-after@^2.0.0:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/unist-util-find-after/-/unist-util-find-after-2.0.4.tgz#3fcccf0df3a2e7291fa119224c0f22158357cc10"\n  integrity sha512-zo0ShIr+E/aU9xSK7JC9Kb+WP9seTFCuqVYdo5+HJSjN009XMfhiA1FIExEKzdDP1UsgvKGleGlB/pSdTSqZww==\n  dependencies:\n    unist-util-is "^3.0.0"\n\nunist-util-generated@^1.1.0:\n  version "1.1.5"\n  resolved "https://registry.yarnpkg.com/unist-util-generated/-/unist-util-generated-1.1.5.tgz#1e903e68467931ebfaea386dae9ea253628acd42"\n  integrity sha512-1TC+NxQa4N9pNdayCYA1EGUOCAO0Le3fVp7Jzns6lnua/mYgwHo0tz5WUAfrdpNch1RZLHc61VZ1SDgrtNXLSw==\n\nunist-util-inspect@^5.0.0:\n  version "5.0.1"\n  resolved "https://registry.yarnpkg.com/unist-util-inspect/-/unist-util-inspect-5.0.1.tgz#168c8770a99902318ca268f8c391e294bcf44540"\n  integrity sha512-fPNWewS593JSmg49HbnE86BJKuBi1/nMWhDSccBvbARfxezEuJV85EaARR9/VplveiwCoLm2kWq+DhP8TBaDpw==\n  dependencies:\n    is-empty "^1.0.0"\n\nunist-util-is@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/unist-util-is/-/unist-util-is-3.0.0.tgz#d9e84381c2468e82629e4a5be9d7d05a2dd324cd"\n  integrity sha512-sVZZX3+kspVNmLWBPAB6r+7D9ZgAFPNWm66f7YNb420RlQSbn+n8rG8dGZSkrER7ZIXGQYNm5pqC3v3HopH24A==\n\nunist-util-is@^4.0.0:\n  version "4.0.2"\n  resolved "https://registry.yarnpkg.com/unist-util-is/-/unist-util-is-4.0.2.tgz#c7d1341188aa9ce5b3cff538958de9895f14a5de"\n  integrity sha512-Ofx8uf6haexJwI1gxWMGg6I/dLnF2yE+KibhD3/diOqY2TinLcqHXCV6OI5gFVn3xQqDH+u0M625pfKwIwgBKQ==\n\nunist-util-modify-children@^1.0.0:\n  version "1.1.6"\n  resolved "https://registry.yarnpkg.com/unist-util-modify-children/-/unist-util-modify-children-1.1.6.tgz#1587130ca0ab5c56155fa60837ff524c3fbfbfaa"\n  integrity sha512-TOA6W9QLil+BrHqIZNR4o6IA5QwGOveMbnQxnWYq+7EFORx9vz/CHrtzF36zWrW61E2UKw7sM1KPtIgeceVwXw==\n  dependencies:\n    array-iterate "^1.0.0"\n\nunist-util-position@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/unist-util-position/-/unist-util-position-3.1.0.tgz#1c42ee6301f8d52f47d14f62bbdb796571fa2d47"\n  integrity sha512-w+PkwCbYSFw8vpgWD0v7zRCl1FpY3fjDSQ3/N/wNd9Ffa4gPi8+4keqt99N3XW6F99t/mUzp2xAhNmfKWp95QA==\n\nunist-util-remove-position@^2.0.0:\n  version "2.0.1"\n  resolved "https://registry.yarnpkg.com/unist-util-remove-position/-/unist-util-remove-position-2.0.1.tgz#5d19ca79fdba712301999b2b73553ca8f3b352cc"\n  integrity sha512-fDZsLYIe2uT+oGFnuZmy73K6ZxOPG/Qcm+w7jbEjaFcJgbQ6cqjs/eSPzXhsmGpAsWPkqZM9pYjww5QTn3LHMA==\n  dependencies:\n    unist-util-visit "^2.0.0"\n\nunist-util-stringify-position@^2.0.0:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/unist-util-stringify-position/-/unist-util-stringify-position-2.0.3.tgz#cce3bfa1cdf85ba7375d1d5b17bdc4cada9bd9da"\n  integrity sha512-3faScn5I+hy9VleOq/qNbAd6pAx7iH5jYBMS9I1HgQVijz/4mv5Bvw5iw1sC/90CODiKo81G/ps8AJrISn687g==\n  dependencies:\n    "@types/unist" "^2.0.2"\n\nunist-util-visit-children@^1.0.0:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/unist-util-visit-children/-/unist-util-visit-children-1.1.4.tgz#e8a087e58a33a2815f76ea1901c15dec2cb4b432"\n  integrity sha512-sA/nXwYRCQVRwZU2/tQWUqJ9JSFM1X3x7JIOsIgSzrFHcfVt6NkzDtKzyxg2cZWkCwGF9CO8x4QNZRJRMK8FeQ==\n\nunist-util-visit-parents@^2.0.0:\n  version "2.1.2"\n  resolved "https://registry.yarnpkg.com/unist-util-visit-parents/-/unist-util-visit-parents-2.1.2.tgz#25e43e55312166f3348cae6743588781d112c1e9"\n  integrity sha512-DyN5vD4NE3aSeB+PXYNKxzGsfocxp6asDc2XXE3b0ekO2BaRUpBicbbUygfSvYfUz1IkmjFR1YF7dPklraMZ2g==\n  dependencies:\n    unist-util-is "^3.0.0"\n\nunist-util-visit-parents@^3.0.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/unist-util-visit-parents/-/unist-util-visit-parents-3.1.0.tgz#4dd262fb9dcfe44f297d53e882fc6ff3421173d5"\n  integrity sha512-0g4wbluTF93npyPrp/ymd3tCDTMnP0yo2akFD2FIBAYXq/Sga3lwaU1D8OYKbtpioaI6CkDcQ6fsMnmtzt7htw==\n  dependencies:\n    "@types/unist" "^2.0.0"\n    unist-util-is "^4.0.0"\n\nunist-util-visit@^1.0.0, unist-util-visit@^1.1.0:\n  version "1.4.1"\n  resolved "https://registry.yarnpkg.com/unist-util-visit/-/unist-util-visit-1.4.1.tgz#4724aaa8486e6ee6e26d7ff3c8685960d560b1e3"\n  integrity sha512-AvGNk7Bb//EmJZyhtRUnNMEpId/AZ5Ph/KUpTI09WHQuDZHKovQ1oEv3mfmKpWKtoMzyMC4GLBm1Zy5k12fjIw==\n  dependencies:\n    unist-util-visit-parents "^2.0.0"\n\nunist-util-visit@^2.0.0:\n  version "2.0.3"\n  resolved "https://registry.yarnpkg.com/unist-util-visit/-/unist-util-visit-2.0.3.tgz#c3703893146df47203bb8a9795af47d7b971208c"\n  integrity sha512-iJ4/RczbJMkD0712mGktuGpm/U4By4FfDonL7N/9tATGIF4imikjOuagyMY53tnZq3NP6BcmlrHhEKAfGWjh7Q==\n  dependencies:\n    "@types/unist" "^2.0.0"\n    unist-util-is "^4.0.0"\n    unist-util-visit-parents "^3.0.0"\n\nuniversalify@^0.1.0, universalify@^0.1.2:\n  version "0.1.2"\n  resolved "https://registry.yarnpkg.com/universalify/-/universalify-0.1.2.tgz#b646f69be3942dabcecc9d6639c80dc105efaa66"\n  integrity sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==\n\nuniversalify@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/universalify/-/universalify-1.0.0.tgz#b61a1da173e8435b2fe3c67d29b9adf8594bd16d"\n  integrity sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT/EUduxXYxcrt4r5PJ4fuHW1MHT6p0qug==\n\nunpipe@1.0.0, unpipe@~1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec"\n  integrity sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\n\nunset-value@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/unset-value/-/unset-value-1.0.0.tgz#8376873f7d2335179ffb1e6fc3a8ed0dfc8ab559"\n  integrity sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=\n  dependencies:\n    has-value "^0.3.1"\n    isobject "^3.0.0"\n\nupath@^1.1.1:\n  version "1.2.0"\n  resolved "https://registry.yarnpkg.com/upath/-/upath-1.2.0.tgz#8f66dbcd55a883acdae4408af8b035a5044c1894"\n  integrity sha512-aZwGpamFO61g3OlfT7OQCHqhGnW43ieH9WZeP7QxN/G/jS4jfqUkZxoryvJgVPEcrl5NL/ggHsSmLMHuH64Lhg==\n\nupdate-notifier@^4.1.0:\n  version "4.1.0"\n  resolved "https://registry.yarnpkg.com/update-notifier/-/update-notifier-4.1.0.tgz#4866b98c3bc5b5473c020b1250583628f9a328f3"\n  integrity sha512-w3doE1qtI0/ZmgeoDoARmI5fjDoT93IfKgEGqm26dGUOh8oNpaSTsGNdYRN/SjOuo10jcJGwkEL3mroKzktkew==\n  dependencies:\n    boxen "^4.2.0"\n    chalk "^3.0.0"\n    configstore "^5.0.1"\n    has-yarn "^2.1.0"\n    import-lazy "^2.1.0"\n    is-ci "^2.0.0"\n    is-installed-globally "^0.3.1"\n    is-npm "^4.0.0"\n    is-yarn-global "^0.3.0"\n    latest-version "^5.0.0"\n    pupa "^2.0.1"\n    semver-diff "^3.1.1"\n    xdg-basedir "^4.0.0"\n\nuri-js@^4.2.2:\n  version "4.2.2"\n  resolved "https://registry.yarnpkg.com/uri-js/-/uri-js-4.2.2.tgz#94c540e1ff772956e2299507c010aea6c8838eb0"\n  integrity sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==\n  dependencies:\n    punycode "^2.1.0"\n\nurix@^0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/urix/-/urix-0.1.0.tgz#da937f7a62e21fec1fd18d49b35c2935067a6c72"\n  integrity sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=\n\nurl-parse-lax@^3.0.0:\n  version "3.0.0"\n  resolved "https://registry.yarnpkg.com/url-parse-lax/-/url-parse-lax-3.0.0.tgz#16b5cafc07dbe3676c1b1999177823d6503acb0c"\n  integrity sha1-FrXK/Afb42dsGxmZF3gj1lA6yww=\n  dependencies:\n    prepend-http "^2.0.0"\n\nurl@^0.11.0, url@~0.11.0:\n  version "0.11.0"\n  resolved "https://registry.yarnpkg.com/url/-/url-0.11.0.tgz#3838e97cfc60521eb73c525a8e55bfdd9e2e28f1"\n  integrity sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=\n  dependencies:\n    punycode "1.3.2"\n    querystring "0.2.0"\n\nurlgrey@0.4.4:\n  version "0.4.4"\n  resolved "https://registry.yarnpkg.com/urlgrey/-/urlgrey-0.4.4.tgz#892fe95960805e85519f1cd4389f2cb4cbb7652f"\n  integrity sha1-iS/pWWCAXoVRnxzUOJ8stMu3ZS8=\n\nuse@^3.1.0:\n  version "3.1.1"\n  resolved "https://registry.yarnpkg.com/use/-/use-3.1.1.tgz#d50c8cac79a19fbc20f2911f56eb973f4e10070f"\n  integrity sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==\n\nutil-deprecate@^1.0.1, util-deprecate@~1.0.1:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/util-deprecate/-/util-deprecate-1.0.2.tgz#450d4dc9fa70de732762fbd2d4a28981419a0ccf"\n  integrity sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8=\n\nutil@0.10.3:\n  version "0.10.3"\n  resolved "https://registry.yarnpkg.com/util/-/util-0.10.3.tgz#7afb1afe50805246489e3db7fe0ed379336ac0f9"\n  integrity sha1-evsa/lCAUkZInj23/g7TeTNqwPk=\n  dependencies:\n    inherits "2.0.1"\n\nutil@^0.11.0:\n  version "0.11.1"\n  resolved "https://registry.yarnpkg.com/util/-/util-0.11.1.tgz#3236733720ec64bb27f6e26f421aaa2e1b588d61"\n  integrity sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==\n  dependencies:\n    inherits "2.0.3"\n\nutil@~0.10.1:\n  version "0.10.4"\n  resolved "https://registry.yarnpkg.com/util/-/util-0.10.4.tgz#3aa0125bfe668a4672de58857d3ace27ecb76901"\n  integrity sha512-0Pm9hTQ3se5ll1XihRic3FDIku70C+iHUdT/W926rSgHV5QgXsYbKZN8MSC3tJtSkhuROzvsQjAaFENRXr+19A==\n  dependencies:\n    inherits "2.0.3"\n\nutils-merge@1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/utils-merge/-/utils-merge-1.0.1.tgz#9f95710f50a267947b2ccc124741c1028427e713"\n  integrity sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\n\nuuid@^3.3.2, uuid@^3.3.3:\n  version "3.4.0"\n  resolved "https://registry.yarnpkg.com/uuid/-/uuid-3.4.0.tgz#b23e4358afa8a202fe7a100af1f5f883f02007ee"\n  integrity sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==\n\nv8-compile-cache@^2.0.3:\n  version "2.1.1"\n  resolved "https://registry.yarnpkg.com/v8-compile-cache/-/v8-compile-cache-2.1.1.tgz#54bc3cdd43317bca91e35dcaf305b1a7237de745"\n  integrity sha512-8OQ9CL+VWyt3JStj7HX7/ciTL2V3Rl1Wf5OL+SNTm0yK1KvtReVulksyeRnCANHHuUxHlQig+JJDlUhBt1NQDQ==\n\nvalidate-npm-package-license@^3.0.1:\n  version "3.0.4"\n  resolved "https://registry.yarnpkg.com/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz#fc91f6b9c7ba15c857f4cb2c5defeec39d4f410a"\n  integrity sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==\n  dependencies:\n    spdx-correct "^3.0.0"\n    spdx-expression-parse "^3.0.0"\n\nvargs@~0.1.0:\n  version "0.1.0"\n  resolved "https://registry.yarnpkg.com/vargs/-/vargs-0.1.0.tgz#6b6184da6520cc3204ce1b407cac26d92609ebff"\n  integrity sha1-a2GE2mUgzDIEzhtAfKwm2SYJ6/8=\n\nvary@~1.0.0:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/vary/-/vary-1.0.1.tgz#99e4981566a286118dfb2b817357df7993376d10"\n  integrity sha1-meSYFWaihhGN+yuBc1ffeZM3bRA=\n\nvary@~1.1.2:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/vary/-/vary-1.1.2.tgz#2299f02c6ded30d4a5961b0b9f74524a18f634fc"\n  integrity sha1-IpnwLG3tMNSllhsLn3RSShj2NPw=\n\nvfile-location@^3.0.0:\n  version "3.0.1"\n  resolved "https://registry.yarnpkg.com/vfile-location/-/vfile-location-3.0.1.tgz#d78677c3546de0f7cd977544c367266764d31bb3"\n  integrity sha512-yYBO06eeN/Ki6Kh1QAkgzYpWT1d3Qln+ZCtSbJqFExPl1S3y2qqotJQXoh6qEvl/jDlgpUJolBn3PItVnnZRqQ==\n\nvfile-message@^2.0.0:\n  version "2.0.4"\n  resolved "https://registry.yarnpkg.com/vfile-message/-/vfile-message-2.0.4.tgz#5b43b88171d409eae58477d13f23dd41d52c371a"\n  integrity sha512-DjssxRGkMvifUOJre00juHoP9DPWuzjxKuMDrhNbk2TdaYYBNMStsNhEOt3idrtI12VQYM/1+iM0KOzXi4pxwQ==\n  dependencies:\n    "@types/unist" "^2.0.0"\n    unist-util-stringify-position "^2.0.0"\n\nvfile-reporter@^6.0.0:\n  version "6.0.1"\n  resolved "https://registry.yarnpkg.com/vfile-reporter/-/vfile-reporter-6.0.1.tgz#45d4dc11df2e312196ea2ceb95e42a67fc8ce814"\n  integrity sha512-0OppK9mo8G2XUpv+hIKLVSDsoxJrXnOy73+vIm0jQUOUFYRduqpFHX+QqAQfvRHyX9B0UFiRuNJnBOjQCIsw1g==\n  dependencies:\n    repeat-string "^1.5.0"\n    string-width "^4.0.0"\n    supports-color "^6.0.0"\n    unist-util-stringify-position "^2.0.0"\n    vfile-sort "^2.1.2"\n    vfile-statistics "^1.1.0"\n\nvfile-sort@^2.1.2:\n  version "2.2.2"\n  resolved "https://registry.yarnpkg.com/vfile-sort/-/vfile-sort-2.2.2.tgz#720fe067ce156aba0b411a01bb0dc65596aa1190"\n  integrity sha512-tAyUqD2R1l/7Rn7ixdGkhXLD3zsg+XLAeUDUhXearjfIcpL1Hcsj5hHpCoy/gvfK/Ws61+e972fm0F7up7hfYA==\n\nvfile-statistics@^1.1.0:\n  version "1.1.4"\n  resolved "https://registry.yarnpkg.com/vfile-statistics/-/vfile-statistics-1.1.4.tgz#b99fd15ecf0f44ba088cc973425d666cb7a9f245"\n  integrity sha512-lXhElVO0Rq3frgPvFBwahmed3X03vjPF8OcjKMy8+F1xU/3Q3QU3tKEDp743SFtb74PdF0UWpxPvtOP0GCLheA==\n\nvfile@^4.0.0:\n  version "4.2.0"\n  resolved "https://registry.yarnpkg.com/vfile/-/vfile-4.2.0.tgz#26c78ac92eb70816b01d4565e003b7e65a2a0e01"\n  integrity sha512-a/alcwCvtuc8OX92rqqo7PflxiCgXRFjdyoGVuYV+qbgCb0GgZJRvIgCD4+U/Kl1yhaRsaTwksF88xbPyGsgpw==\n  dependencies:\n    "@types/unist" "^2.0.0"\n    is-buffer "^2.0.0"\n    replace-ext "1.0.0"\n    unist-util-stringify-position "^2.0.0"\n    vfile-message "^2.0.0"\n\nvm-browserify@^1.0.0, vm-browserify@^1.0.1:\n  version "1.1.2"\n  resolved "https://registry.yarnpkg.com/vm-browserify/-/vm-browserify-1.1.2.tgz#78641c488b8e6ca91a75f511e7a3b32a86e5dda0"\n  integrity sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ==\n\nvm-browserify@~0.0.1:\n  version "0.0.4"\n  resolved "https://registry.yarnpkg.com/vm-browserify/-/vm-browserify-0.0.4.tgz#5d7ea45bbef9e4a6ff65f95438e0a87c357d5a73"\n  integrity sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=\n  dependencies:\n    indexof "0.0.1"\n\nwalk@2.2.1:\n  version "2.2.1"\n  resolved "https://registry.yarnpkg.com/walk/-/walk-2.2.1.tgz#5ada1f8e49e47d4b7445d8be7a2e1e631ab43016"\n  integrity sha1-WtofjknkfUt0Rdi+ei4eYxq0MBY=\n  dependencies:\n    forEachAsync "~2.2"\n\nwatchify@3.7.0:\n  version "3.7.0"\n  resolved "https://registry.yarnpkg.com/watchify/-/watchify-3.7.0.tgz#ee2f2c5c8c37312303f998b818b2b3450eefe648"\n  integrity sha1-7i8sXIw3MSMD+Zi4GLKzRQ7v5kg=\n  dependencies:\n    anymatch "^1.3.0"\n    browserify "^13.0.0"\n    chokidar "^1.0.0"\n    defined "^1.0.0"\n    outpipe "^1.1.0"\n    through2 "^2.0.0"\n    xtend "^4.0.0"\n\nwd@0.3.11:\n  version "0.3.11"\n  resolved "https://registry.yarnpkg.com/wd/-/wd-0.3.11.tgz#522716c79a7a10e781acbb2c6cafe588f701fcc0"\n  integrity sha1-UicWx5p6EOeBrLssbK/liPcB/MA=\n  dependencies:\n    archiver "~0.12.0"\n    async "~0.9.0"\n    lodash "~2.4.1"\n    q "~1.0.1"\n    request "~2.46.0"\n    underscore.string "~2.3.3"\n    vargs "~0.1.0"\n\nwhich-module@^2.0.0:\n  version "2.0.0"\n  resolved "https://registry.yarnpkg.com/which-module/-/which-module-2.0.0.tgz#d9ef07dce77b9902b8a3a8fa4b31c3e3f7e6e87a"\n  integrity sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=\n\nwhich-pm-runs@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/which-pm-runs/-/which-pm-runs-1.0.0.tgz#670b3afbc552e0b55df6b7780ca74615f23ad1cb"\n  integrity sha1-Zws6+8VS4LVd9rd4DKdGFfI60cs=\n\nwhich@1.0.x:\n  version "1.0.9"\n  resolved "https://registry.yarnpkg.com/which/-/which-1.0.9.tgz#460c1da0f810103d0321a9b633af9e575e64486f"\n  integrity sha1-RgwdoPgQED0DIam2M6+eV15kSG8=\n\nwhich@^1.1.1:\n  version "1.3.1"\n  resolved "https://registry.yarnpkg.com/which/-/which-1.3.1.tgz#a45043d54f5805316da8d62f9f50918d3da70b0a"\n  integrity sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==\n  dependencies:\n    isexe "^2.0.0"\n\nwhich@^2.0.1:\n  version "2.0.2"\n  resolved "https://registry.yarnpkg.com/which/-/which-2.0.2.tgz#7c6a8dd0a636a0327e10b59c9286eee93f3f51b1"\n  integrity sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\n  dependencies:\n    isexe "^2.0.0"\n\nwidest-line@^3.1.0:\n  version "3.1.0"\n  resolved "https://registry.yarnpkg.com/widest-line/-/widest-line-3.1.0.tgz#8292333bbf66cb45ff0de1603b136b7ae1496eca"\n  integrity sha512-NsmoXalsWVDMGupxZ5R08ka9flZjjiLvHVAWYOKtiKM8ujtZWr9cRffak+uSE48+Ob8ObalXpwyeUiyDD6QFgg==\n  dependencies:\n    string-width "^4.0.0"\n\nword-wrap@^1.2.3, word-wrap@~1.2.3:\n  version "1.2.3"\n  resolved "https://registry.yarnpkg.com/word-wrap/-/word-wrap-1.2.3.tgz#610636f6b1f703891bd34771ccb17fb93b47079c"\n  integrity sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==\n\nwordwrap@0.0.x, wordwrap@~0.0.2:\n  version "0.0.3"\n  resolved "https://registry.yarnpkg.com/wordwrap/-/wordwrap-0.0.3.tgz#a3d5da6cd5c0bc0008d37234bbaf1bed63059107"\n  integrity sha1-o9XabNXAvAAI03I0u68b7WMFkQc=\n\nwordwrap@^1.0.0:\n  version "1.0.0"\n  resolved "https://registry.yarnpkg.com/wordwrap/-/wordwrap-1.0.0.tgz#27584810891456a4171c8d0226441ade90cbcaeb"\n  integrity sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus=\n\nwrap-ansi@^6.2.0:\n  version "6.2.0"\n  resolved "https://registry.yarnpkg.com/wrap-ansi/-/wrap-ansi-6.2.0.tgz#e9393ba07102e6c91a3b221478f0257cd2856e53"\n  integrity sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==\n  dependencies:\n    ansi-styles "^4.0.0"\n    string-width "^4.1.0"\n    strip-ansi "^6.0.0"\n\nwrap-comment@^1.0.0, wrap-comment@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/wrap-comment/-/wrap-comment-1.0.1.tgz#941bb1400b9b590bc007599e79cacc0bb3ea62f3"\n  integrity sha512-APccrMwl/ont0RHFTXNAQfM647duYYEfs6cngrIyTByTI0xbWnDnPSptFZhS68L4WCjt2ZxuhCFwuY6Pe88KZQ==\n\nwrapped@^1.0.1:\n  version "1.0.1"\n  resolved "https://registry.yarnpkg.com/wrapped/-/wrapped-1.0.1.tgz#c783d9d807b273e9b01e851680a938c87c907242"\n  integrity sha1-x4PZ2Aeyc+mwHoUWgKk4yHyQckI=\n  dependencies:\n    co "3.1.0"\n    sliced "^1.0.1"\n\nwrappy@1:\n  version "1.0.2"\n  resolved "https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f"\n  integrity sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=\n\nwrench@~1.5.1:\n  version "1.5.9"\n  resolved "https://registry.yarnpkg.com/wrench/-/wrench-1.5.9.tgz#411691c63a9b2531b1700267279bdeca23b2142a"\n  integrity sha1-QRaRxjqbJTGxcAJnJ5veyiOyFCo=\n\nwrite-file-atomic@^3.0.0:\n  version "3.0.3"\n  resolved "https://registry.yarnpkg.com/write-file-atomic/-/write-file-atomic-3.0.3.tgz#56bd5c5a5c70481cd19c571bd39ab965a5de56e8"\n  integrity sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==\n  dependencies:\n    imurmurhash "^0.1.4"\n    is-typedarray "^1.0.0"\n    signal-exit "^3.0.2"\n    typedarray-to-buffer "^3.1.5"\n\nwrite@1.0.3:\n  version "1.0.3"\n  resolved "https://registry.yarnpkg.com/write/-/write-1.0.3.tgz#0800e14523b923a387e415123c865616aae0f5c3"\n  integrity sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==\n  dependencies:\n    mkdirp "^0.5.1"\n\nxdg-basedir@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/xdg-basedir/-/xdg-basedir-4.0.0.tgz#4bc8d9984403696225ef83a1573cbbcb4e79db13"\n  integrity sha512-PSNhEJDejZYV7h50BohL09Er9VaIefr2LMAf3OEmpCkjOi34eYyQYAXUTjEQtZJTKcF0E2UKTh+osDLsgNim9Q==\n\nxml2js@~0.4.0:\n  version "0.4.23"\n  resolved "https://registry.yarnpkg.com/xml2js/-/xml2js-0.4.23.tgz#a0c69516752421eb2ac758ee4d4ccf58843eac66"\n  integrity sha512-ySPiMjM0+pLDftHgXY4By0uswI3SPKLDw/i3UXbnO8M/p28zqexCUoPmQFrYD+/1BzhGJSs2i1ERWKJAtiLrug==\n  dependencies:\n    sax ">=0.6.0"\n    xmlbuilder "~11.0.0"\n\nxmlbuilder@~11.0.0:\n  version "11.0.1"\n  resolved "https://registry.yarnpkg.com/xmlbuilder/-/xmlbuilder-11.0.1.tgz#be9bae1c8a046e76b31127726347d0ad7002beb3"\n  integrity sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==\n\nxo@0.32.1:\n  version "0.32.1"\n  resolved "https://registry.yarnpkg.com/xo/-/xo-0.32.1.tgz#8fbe08779cf559a0a1e959877644661e40ce175e"\n  integrity sha512-L43ROY2opNW7yp7byEAibBSk0jYvMuC4yUUrphkqegqU76Bxp5Rc+Gcl62lK1f5zuRrlY0IwMypIfY4EPSzMfQ==\n  dependencies:\n    "@typescript-eslint/eslint-plugin" "^3.1.0"\n    "@typescript-eslint/parser" "^3.1.0"\n    arrify "^2.0.1"\n    cosmiconfig "^6.0.0"\n    debug "^4.1.1"\n    eslint "^7.1.0"\n    eslint-config-prettier "^6.11.0"\n    eslint-config-xo "^0.30.0"\n    eslint-config-xo-typescript "^0.31.0"\n    eslint-formatter-pretty "^3.0.1"\n    eslint-import-resolver-webpack "^0.12.1"\n    eslint-plugin-ava "^10.3.0"\n    eslint-plugin-eslint-comments "^3.2.0"\n    eslint-plugin-import "^2.20.2"\n    eslint-plugin-no-use-extend-native "^0.5.0"\n    eslint-plugin-node "^11.1.0"\n    eslint-plugin-prettier "^3.1.3"\n    eslint-plugin-promise "^4.2.1"\n    eslint-plugin-unicorn "^20.1.0"\n    find-cache-dir "^3.3.1"\n    find-up "^4.1.0"\n    fs-extra "^9.0.0"\n    get-stdin "^8.0.0"\n    globby "^9.0.0"\n    has-flag "^4.0.0"\n    imurmurhash "^0.1.4"\n    is-path-inside "^3.0.2"\n    json-stable-stringify-without-jsonify "^1.0.1"\n    json5 "^2.1.3"\n    lodash "^4.17.15"\n    meow "^7.0.1"\n    micromatch "^4.0.2"\n    open-editor "^2.0.1"\n    p-reduce "^2.1.0"\n    path-exists "^4.0.0"\n    prettier "2.0.4"\n    resolve-cwd "^3.0.0"\n    resolve-from "^5.0.0"\n    semver "^7.3.2"\n    slash "^3.0.0"\n    to-absolute-glob "^2.0.2"\n    typescript "^3.3.1"\n    update-notifier "^4.1.0"\n\nxtend@2.1.2:\n  version "2.1.2"\n  resolved "https://registry.yarnpkg.com/xtend/-/xtend-2.1.2.tgz#6efecc2a4dad8e6962c4901b337ce7ba87b5d28b"\n  integrity sha1-bv7MKk2tjmlixJAbM3znuoe10os=\n  dependencies:\n    object-keys "~0.4.0"\n\nxtend@^4.0.0, xtend@^4.0.1, xtend@^4.0.2, xtend@~4.0.1:\n  version "4.0.2"\n  resolved "https://registry.yarnpkg.com/xtend/-/xtend-4.0.2.tgz#bb72779f5fa465186b1f438f674fa347fdb5db54"\n  integrity sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\n\ny18n@^4.0.0:\n  version "4.0.0"\n  resolved "https://registry.yarnpkg.com/y18n/-/y18n-4.0.0.tgz#95ef94f85ecc81d007c264e190a120f0a3c8566b"\n  integrity sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w==\n\nyaml@^1.7.2:\n  version "1.10.0"\n  resolved "https://registry.yarnpkg.com/yaml/-/yaml-1.10.0.tgz#3b593add944876077d4d683fee01081bd9fff31e"\n  integrity sha512-yr2icI4glYaNG+KWONODapy2/jDdMSDnrONSjblABjD9B4Z5LgiircSt8m8sRZFNi08kG9Sm0uSHtEmP3zaEGg==\n\nyamljs@0.2.8:\n  version "0.2.8"\n  resolved "https://registry.yarnpkg.com/yamljs/-/yamljs-0.2.8.tgz#ef23fb006e62f6ae07b406aa2a949561f336ea5c"\n  integrity sha1-7yP7AG5i9q4HtAaqKpSVYfM26lw=\n  dependencies:\n    argparse "^1.0.7"\n    glob "^7.0.5"\n\nyargs-parser@^10.0.0:\n  version "10.1.0"\n  resolved "https://registry.yarnpkg.com/yargs-parser/-/yargs-parser-10.1.0.tgz#7202265b89f7e9e9f2e5765e0fe735a905edbaa8"\n  integrity sha512-VCIyR1wJoEBZUqk5PA+oOBF6ypbwh5aNB3I50guxAL/quggdfs4TtNHQrSazFA3fYZ+tEqfs0zIGlv0c/rgjbQ==\n  dependencies:\n    camelcase "^4.1.0"\n\nyargs-parser@^18.1.2, yargs-parser@^18.1.3:\n  version "18.1.3"\n  resolved "https://registry.yarnpkg.com/yargs-parser/-/yargs-parser-18.1.3.tgz#be68c4975c6b2abf469236b0c870362fab09a7b0"\n  integrity sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==\n  dependencies:\n    camelcase "^5.0.0"\n    decamelize "^1.2.0"\n\nyargs@^15.0.2:\n  version "15.4.1"\n  resolved "https://registry.yarnpkg.com/yargs/-/yargs-15.4.1.tgz#0d87a16de01aee9d8bec2bfbf74f67851730f4f8"\n  integrity sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==\n  dependencies:\n    cliui "^6.0.0"\n    decamelize "^1.2.0"\n    find-up "^4.1.0"\n    get-caller-file "^2.0.1"\n    require-directory "^2.1.1"\n    require-main-filename "^2.0.0"\n    set-blocking "^2.0.0"\n    string-width "^4.2.0"\n    which-module "^2.0.0"\n    y18n "^4.0.0"\n    yargs-parser "^18.1.2"\n\nzip-stream@~0.2.0:\n  version "0.2.3"\n  resolved "https://registry.yarnpkg.com/zip-stream/-/zip-stream-0.2.3.tgz#aef095376cfe138959a81341981d26338b46d8d3"\n  integrity sha1-rvCVN2z+E4lZqBNBmB0mM4tG2NM=\n  dependencies:\n    debug "~0.7.4"\n    lodash.defaults "~2.4.1"\n    readable-stream "~1.0.24"\n\nzip-stream@~0.4.0:\n  version "0.4.1"\n  resolved "https://registry.yarnpkg.com/zip-stream/-/zip-stream-0.4.1.tgz#4ea795a8ce19e9fab49a31d1d0877214159f03a3"\n  integrity sha1-TqeVqM4Z6fq0mjHR0IdyFBWfA6M=\n  dependencies:\n    compress-commons "~0.1.0"\n    lodash "~2.4.1"\n    readable-stream "~1.0.26"\n\nzip-stream@~0.5.0:\n  version "0.5.2"\n  resolved "https://registry.yarnpkg.com/zip-stream/-/zip-stream-0.5.2.tgz#32dcbc506d0dab4d21372625bd7ebaac3c2fff56"\n  integrity sha1-Mty8UG0Nq00hNyYlvX66rDwv/1Y=\n  dependencies:\n    compress-commons "~0.2.0"\n    lodash "~3.2.0"\n    readable-stream "~1.0.26"\n\nzuul-localtunnel@1.1.0:\n  version "1.1.0"\n  resolved "https://registry.yarnpkg.com/zuul-localtunnel/-/zuul-localtunnel-1.1.0.tgz#70ad27fb0a6af968a2151fc5d5e895daa1aed15d"\n  integrity sha1-cK0n+wpq+WiiFR/F1eiV2qGu0V0=\n  dependencies:\n    localtunnel "1.5.0"\n\nzuul@^3.12.0:\n  version "3.12.0"\n  resolved "https://registry.yarnpkg.com/zuul/-/zuul-3.12.0.tgz#2ba48310588e173d74e61a9e51cf01e7cfe53e4d"\n  integrity sha512-ABOM+J+get8DsLXmFmCUjJOwxZILsedXZ0+bJnG9ajmDhVmtLqaUPJ9NEardYzSHxq6Vxi5qXf4mluA7PePq/A==\n  dependencies:\n    JSON2 "0.1.0"\n    batch "0.5.0"\n    browserify "13.0.0"\n    browserify-istanbul "0.1.5"\n    char-split "0.2.0"\n    colors "0.6.2"\n    commander "2.1.0"\n    compression "1.5.0"\n    convert-source-map "1.0.0"\n    debug "2.1.0"\n    express "3.4.8"\n    express-state "1.0.3"\n    find-nearest-file "1.0.0"\n    firefox-profile "0.2.7"\n    globs-to-files "1.0.0"\n    hbs "2.4.0"\n    highlight.js "7.5.0"\n    http-proxy "1.11.2"\n    humanize-duration "2.4.0"\n    istanbul-middleware "0.2.2"\n    load-script "0.0.5"\n    lodash "3.10.1"\n    opener "1.4.0"\n    osenv "0.0.3"\n    shallow-copy "0.0.1"\n    shell-quote "1.4.1"\n    stack-mapper "0.2.2"\n    stacktrace-js "1.3.1"\n    superagent "0.15.7"\n    tap-finished "0.0.1"\n    tap-parser "0.7.0"\n    watchify "3.7.0"\n    wd "0.3.11"\n    xtend "2.1.2"\n    yamljs "0.2.8"\n    zuul-localtunnel "1.1.0"\n'b'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf8">\n    <title>SuperAgent \xe2\x80\x94 elegant API for AJAX in Node and browsers</title>\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocbot/3.0.0/tocbot.css">\n    <link rel="stylesheet" href="docs/style.css">\n  </head>\n  <body>\n    <ul id="menu"></ul>\n    <div id="content">\n'b'\n# SuperAgent\n\nSuperAgent is light-weight progressive ajax API crafted for flexibility, readability, and a low learning curve after being frustrated with many of the existing request APIs. It also works with Node.js!\n\n     request\n       .post(\'/api/pet\')\n       .send({ name: \'Manny\', species: \'cat\' })\n       .set(\'X-API-Key\', \'foobar\')\n       .set(\'Accept\', \'application/json\')\n       .then(res => {\n          alert(\'yay got \' + JSON.stringify(res.body));\n       });\n\n## Test documentation\n\nThe following [test documentation](docs/test.html) was generated with [Mocha\'s](https://mochajs.org/) "doc" reporter, and directly reflects the test suite. This provides an additional source of documentation.\n\n## Request basics\n\nA request can be initiated by invoking the appropriate method on the `request` object, then calling `.then()` (or `.end()` [or `await`](#promise-and-generator-support)) to send the request. For example a simple __GET__ request:\n\n     request\n       .get(\'/search\')\n       .then(res => {\n          // res.body, res.headers, res.status\n       })\n       .catch(err => {\n          // err.message, err.response\n       });\n\nHTTP method may also be passed as a string:\n\n    request(\'GET\', \'/search\').then(success, failure);\n\nOld-style callbacks are also supported, but not recommended. *Instead of* `.then()` you can call `.end()`:\n\n    request(\'GET\', \'/search\').end(function(err, res){\n      if (res.ok) {}\n    });\n\nAbsolute URLs can be used. In web browsers absolute URLs work only if the server implements [CORS](#cors).\n\n     request\n       .get(\'https://example.com/search\')\n       .then(res => {\n\n       });\n\nThe __Node__ client supports making requests to [Unix Domain Sockets](https://en.wikipedia.org/wiki/Unix_domain_socket):\n\n    // pattern: https?+unix://SOCKET_PATH/REQUEST_PATH\n    //          Use `%2F` as `/` in SOCKET_PATH\n    try {\n      const res = await request\n        .get(\'http+unix://%2Fabsolute%2Fpath%2Fto%2Funix.sock/search\');\n      // res.body, res.headers, res.status\n    } catch(err) {\n      // err.message, err.response\n    }\n\n__DELETE__, __HEAD__, __PATCH__, __POST__, and __PUT__ requests can also be used, simply change the method name:\n\n    request\n      .head(\'/favicon.ico\')\n      .then(res => {\n\n      });\n\n__DELETE__ can be also called as `.del()` for compatibility with old IE where `delete` is a reserved word.\n\nThe HTTP method defaults to __GET__, so if you wish, the following is valid:\n\n     request(\'/search\', (err, res) => {\n\n     });\n\n## Setting header fields\n\nSetting header fields is simple, invoke `.set()` with a field name and value:\n\n     request\n       .get(\'/search\')\n       .set(\'API-Key\', \'foobar\')\n       .set(\'Accept\', \'application/json\')\n       .then(callback);\n\nYou may also pass an object to set several fields in a single call:\n\n     request\n       .get(\'/search\')\n       .set({ \'API-Key\': \'foobar\', Accept: \'application/json\' })\n       .then(callback);\n\n## `GET` requests\n\nThe `.query()` method accepts objects, which when used with the __GET__ method will form a query-string. The following will produce the path `/search?query=Manny&range=1..5&order=desc`.\n\n     request\n       .get(\'/search\')\n       .query({ query: \'Manny\' })\n       .query({ range: \'1..5\' })\n       .query({ order: \'desc\' })\n       .then(res => {\n\n       });\n\nOr as a single object:\n\n    request\n      .get(\'/search\')\n      .query({ query: \'Manny\', range: \'1..5\', order: \'desc\' })\n      .then(res => {\n\n      });\n\nThe `.query()` method accepts strings as well:\n\n      request\n        .get(\'/querystring\')\n        .query(\'search=Manny&range=1..5\')\n        .then(res => {\n\n        });\n\nOr joined:\n\n      request\n        .get(\'/querystring\')\n        .query(\'search=Manny\')\n        .query(\'range=1..5\')\n        .then(res => {\n\n        });\n\n## `HEAD` requests\n\nYou can also use the `.query()` method for HEAD requests. The following will produce the path `/users?email=joe@smith.com`.\n\n      request\n        .head(\'/users\')\n        .query({ email: \'joe@smith.com\' })\n        .then(res => {\n\n        });\n\n## `POST` / `PUT` requests\n\nA typical JSON __POST__ request might look a little like the following, where we set the Content-Type header field appropriately, and "write" some data, in this case just a JSON string.\n\n      request.post(\'/user\')\n        .set(\'Content-Type\', \'application/json\')\n        .send(\'{"name":"tj","pet":"tobi"}\')\n        .then(callback)\n        .catch(errorCallback)\n\nSince JSON is undoubtedly the most common, it\'s the _default_! The following example is equivalent to the previous.\n\n      request.post(\'/user\')\n        .send({ name: \'tj\', pet: \'tobi\' })\n        .then(callback, errorCallback)\n\nOr using multiple `.send()` calls:\n\n      request.post(\'/user\')\n        .send({ name: \'tj\' })\n        .send({ pet: \'tobi\' })\n        .then(callback, errorCallback)\n\nBy default sending strings will set the `Content-Type` to `application/x-www-form-urlencoded`,\n  multiple calls will be concatenated with `&`, here resulting in `name=tj&pet=tobi`:\n\n      request.post(\'/user\')\n        .send(\'name=tj\')\n        .send(\'pet=tobi\')\n        .then(callback, errorCallback);\n\nSuperAgent formats are extensible, however by default "json" and "form" are supported. To send the data as `application/x-www-form-urlencoded` simply invoke `.type()` with "form", where the default is "json". This request will __POST__ the body "name=tj&pet=tobi".\n\n      request.post(\'/user\')\n        .type(\'form\')\n        .send({ name: \'tj\' })\n        .send({ pet: \'tobi\' })\n        .then(callback, errorCallback)\n\nSending a [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData) object is also supported. The following example will __POST__ the content of the HTML form identified by id="myForm":\n\n      request.post(\'/user\')\n        .send(new FormData(document.getElementById(\'myForm\')))\n        .then(callback, errorCallback)\n\n## Setting the `Content-Type`\n\nThe obvious solution is to use the `.set()` method:\n\n     request.post(\'/user\')\n       .set(\'Content-Type\', \'application/json\')\n\nAs a short-hand the `.type()` method is also available, accepting\nthe canonicalized MIME type name complete with type/subtype, or\nsimply the extension name such as "xml", "json", "png", etc:\n\n     request.post(\'/user\')\n       .type(\'application/json\')\n\n     request.post(\'/user\')\n       .type(\'json\')\n\n     request.post(\'/user\')\n       .type(\'png\')\n\n## Serializing request body\n\nSuperAgent will automatically serialize JSON and forms.\nYou can setup automatic serialization for other types as well:\n\n```js\nrequest.serialize[\'application/xml\'] = function (obj) {\n    return \'string generated from obj\';\n};\n\n// going forward, all requests with a Content-type of\n// \'application/xml\' will be automatically serialized\n```\nIf you want to send the payload in a custom format, you can replace\nthe built-in serialization with the `.serialize()` method on a per-request basis:\n\n```js\nrequest\n    .post(\'/user\')\n    .send({foo: \'bar\'})\n    .serialize(obj => {\n        return \'string generated from obj\';\n    });\n```\n## Retrying requests\n\nWhen given the `.retry()` method, SuperAgent will automatically retry requests, if they fail in a way that is transient or could be due to a flaky Internet connection.\n\nThis method has two optional arguments: number of retries (default 1) and a callback. It calls `callback(err, res)` before each retry. The callback may return `true`/`false` to control whether the request should be retried (but the maximum number of retries is always applied).\n\n     request\n       .get(\'https://example.com/search\')\n       .retry(2) // or:\n       .retry(2, callback)\n       .then(finished);\n       .catch(failed);\n\nUse `.retry()` only with requests that are *idempotent* (i.e. multiple requests reaching the server won\'t cause undesirable side effects like duplicate purchases).\n\nAll request methods are tried by default (which means if you do not want POST requests to be retried, you will need to pass a custom retry callback).\n\nBy default the following status codes are retried:\n\n* `408`\n* `413`\n* `429`\n* `500`\n* `502`\n* `503`\n* `504`\n* `521`\n* `522`\n* `524`\n\nBy default the following error codes are retried:\n\n* `\'ETIMEDOUT\'`\n* `\'ECONNRESET\'`\n* `\'EADDRINUSE\'`\n* `\'ECONNREFUSED\'`\n* `\'EPIPE\'`\n* `\'ENOTFOUND\'`\n* `\'ENETUNREACH\'`\n* `\'EAI_AGAIN\'`\n\n## Setting Accept\n\nIn a similar fashion to the `.type()` method it is also possible to set the `Accept` header via the short hand method `.accept()`. Which references `request.types` as well allowing you to specify either the full canonicalized MIME type name as `type/subtype`, or the extension suffix form as "xml", "json", "png", etc. for convenience:\n\n     request.get(\'/user\')\n       .accept(\'application/json\')\n\n     request.get(\'/user\')\n       .accept(\'json\')\n\n     request.post(\'/user\')\n       .accept(\'png\')\n\n### Facebook and Accept JSON\n\nIf you are calling Facebook\'s API, be sure to send an `Accept: application/json` header in your request. If you don\'t do this, Facebook will respond with `Content-Type: text/javascript; charset=UTF-8`, which SuperAgent will not parse and thus `res.body` will be undefined. You can do this with either `req.accept(\'json\')` or `req.header(\'Accept\', \'application/json\')`. See [issue 1078](https://github.com/visionmedia/superagent/issues/1078) for details.\n\n## Query strings\n\n  `req.query(obj)` is a method which may be used to build up a query-string. For example populating `?format=json&dest=/login` on a __POST__:\n\n    request\n      .post(\'/\')\n      .query({ format: \'json\' })\n      .query({ dest: \'/login\' })\n      .send({ post: \'data\', here: \'wahoo\' })\n      .then(callback);\n\nBy default the query string is not assembled in any particular order. An asciibetically-sorted query string can be enabled with `req.sortQuery()`. You may also provide a custom sorting comparison function with `req.sortQuery(myComparisonFn)`. The comparison function should take 2 arguments and return a negative/zero/positive integer.\n\n```js\n // default order\n request.get(\'/user\')\n   .query(\'name=Nick\')\n   .query(\'search=Manny\')\n   .sortQuery()\n   .then(callback)\n\n // customized sort function\n request.get(\'/user\')\n   .query(\'name=Nick\')\n   .query(\'search=Manny\')\n   .sortQuery((a, b) => a.length - b.length)\n   .then(callback)\n```\n\n## TLS options\n\nIn Node.js SuperAgent supports methods to configure HTTPS requests:\n\n- `.ca()`: Set the CA certificate(s) to trust\n- `.cert()`: Set the client certificate chain(s)\n- `.key()`: Set the client private key(s)\n- `.pfx()`: Set the client PFX or PKCS12 encoded private key and certificate chain\n- `.disableTLSCerts()`: Does not reject expired or invalid TLS certs. Sets internally `rejectUnauthorized=true`. *Be warned, this method allows MITM attacks.*\n\nFor more information, see Node.js [https.request docs](https://nodejs.org/api/https.html#https_https_request_options_callback).\n\n```js\nvar key = fs.readFileSync(\'key.pem\'),\n    cert = fs.readFileSync(\'cert.pem\');\n\nrequest\n  .post(\'/client-auth\')\n  .key(key)\n  .cert(cert)\n  .then(callback);\n```\n\n```js\nvar ca = fs.readFileSync(\'ca.cert.pem\');\n\nrequest\n  .post(\'https://localhost/private-ca-server\')\n  .ca(ca)\n  .then(res => {});\n```\n\n## Parsing response bodies\n\nSuperAgent will parse known response-body data for you,\ncurrently supporting `application/x-www-form-urlencoded`,\n`application/json`, and `multipart/form-data`. You can setup\nautomatic parsing for other response-body data as well:\n\n```js\n//browser\nrequest.parse[\'application/xml\'] = function (str) {\n    return {\'object\': \'parsed from str\'};\n};\n\n//node\nrequest.parse[\'application/xml\'] = function (res, cb) {\n    //parse response text and set res.body here\n\n    cb(null, res);\n};\n\n//going forward, responses of type \'application/xml\'\n//will be parsed automatically\n```\n\nYou can set a custom parser (that takes precedence over built-in parsers) with the `.buffer(true).parse(fn)` method. If response buffering is not enabled (`.buffer(false)`) then the `response` event will be emitted without waiting for the body parser to finish, so `response.body` won\'t be available.\n\n### JSON / Urlencoded\n\nThe property `res.body` is the parsed object, for example if a request responded with the JSON string \'{"user":{"name":"tobi"}}\', `res.body.user.name` would be "tobi". Likewise the x-www-form-urlencoded value of "user[name]=tobi" would yield the same result. Only one level of nesting is supported. If you need more complex data, send JSON instead.\n\nArrays are sent by repeating the key. `.send({color: [\'red\',\'blue\']})` sends `color=red&color=blue`. If you want the array keys to contain `[]` in their name, you must add it yourself, as SuperAgent doesn\'t add it automatically.\n\n### Multipart\n\nThe Node client supports _multipart/form-data_ via the [Formidable](https://github.com/felixge/node-formidable) module. When parsing multipart responses, the object `res.files` is also available to you. Suppose for example a request responds with the following multipart body:\n\n    --whoop\n    Content-Disposition: attachment; name="image"; filename="tobi.png"\n    Content-Type: image/png\n\n    ... data here ...\n    --whoop\n    Content-Disposition: form-data; name="name"\n    Content-Type: text/plain\n\n    Tobi\n    --whoop--\n\nYou would have the values `res.body.name` provided as "Tobi", and `res.files.image` as a `File` object containing the path on disk, filename, and other properties.\n\n### Binary\n\nIn browsers, you may use `.responseType(\'blob\')` to request handling of binary response bodies. This API is unnecessary when running in node.js. The supported argument values for this method are\n\n- `\'blob\'` passed through to the XmlHTTPRequest `responseType` property\n- `\'arraybuffer\'` passed through to the XmlHTTPRequest `responseType` property\n\n```js\nreq.get(\'/binary.data\')\n  .responseType(\'blob\')\n  .then(res => {\n    // res.body will be a browser native Blob type here\n  });\n```\n\nFor more information, see the Mozilla Developer Network [xhr.responseType docs](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType).\n\n## Response properties\n\nMany helpful flags and properties are set on the `Response` object, ranging from the response text, parsed response body, header fields, status flags and more.\n\n### Response text\n\nThe `res.text` property contains the unparsed response body string. This property is always present for the client API, and only when the mime type matches "text/*", "*/json", or "x-www-form-urlencoded" by default for node. The reasoning is to conserve memory, as buffering text of large bodies such as multipart files or images is extremely inefficient. To force buffering see the "Buffering responses" section.\n\n### Response body\n\nMuch like SuperAgent can auto-serialize request data, it can also automatically parse it. When a parser is defined for the Content-Type, it is parsed, which by default includes "application/json" and "application/x-www-form-urlencoded". The parsed object is then available via `res.body`.\n\n### Response header fields\n\nThe `res.header` contains an object of parsed header fields, lowercasing field names much like node does. For example `res.header[\'content-length\']`.\n\n### Response Content-Type\n\nThe Content-Type response header is special-cased, providing `res.type`, which is void of the charset (if any). For example the Content-Type of "text/html; charset=utf8" will provide "text/html" as `res.type`, and the `res.charset` property would then contain "utf8".\n\n### Response status\n\nThe response status flags help determine if the request was a success, among other useful information, making SuperAgent ideal for interacting with RESTful web services. These flags are currently defined as:\n\n     var type = status / 100 | 0;\n\n     // status / class\n     res.status = status;\n     res.statusType = type;\n\n     // basics\n     res.info = 1 == type;\n     res.ok = 2 == type;\n     res.clientError = 4 == type;\n     res.serverError = 5 == type;\n     res.error = 4 == type || 5 == type;\n\n     // sugar\n     res.accepted = 202 == status;\n     res.noContent = 204 == status || 1223 == status;\n     res.badRequest = 400 == status;\n     res.unauthorized = 401 == status;\n     res.notAcceptable = 406 == status;\n     res.notFound = 404 == status;\n     res.forbidden = 403 == status;\n\n## Aborting requests\n\nTo abort requests simply invoke the `req.abort()` method.\n\n## Timeouts\n\nSometimes networks and servers get "stuck" and never respond after accepting a request. Set timeouts to avoid requests waiting forever.\n\n  * `req.timeout({deadline:ms})` or `req.timeout(ms)` (where `ms` is a number of milliseconds > 0) sets a deadline for the entire request (including all uploads, redirects, server processing time) to complete. If the response isn\'t fully downloaded within that time, the request will be aborted.\n\n  * `req.timeout({response:ms})` sets maximum time to wait for the first byte to arrive from the server, but it does not limit how long the entire download can take. Response timeout should be at least few seconds longer than just the time it takes the server to respond, because it also includes time to make DNS lookup, TCP/IP and TLS connections, and time to upload request data.\n\nYou should use both `deadline` and `response` timeouts. This way you can use a short response timeout to detect unresponsive networks quickly, and a long deadline to give time for downloads on slow, but reliable, networks. Note that both of these timers limit how long *uploads* of attached files are allowed to take. Use long timeouts if you\'re uploading files.\n\n    request\n      .get(\'/big-file?network=slow\')\n      .timeout({\n        response: 5000,  // Wait 5 seconds for the server to start sending,\n        deadline: 60000, // but allow 1 minute for the file to finish loading.\n      })\n      .then(res => {\n          /* responded in time */\n        }, err => {\n          if (err.timeout) { /* timed out! */ } else { /* other error */ }\n      });\n\nTimeout errors have a `.timeout` property.\n\n## Authentication\n\nIn both Node and browsers auth available via the `.auth()` method:\n\n    request\n      .get(\'http://local\')\n      .auth(\'tobi\', \'learnboost\')\n      .then(callback);\n\n\nIn the _Node_ client Basic auth can be in the URL as "user:pass":\n\n    request.get(\'http://tobi:learnboost@local\').then(callback);\n\nBy default only `Basic` auth is used. In browser you can add `{type:\'auto\'}` to enable all methods built-in in the browser (Digest, NTLM, etc.):\n\n    request.auth(\'digest\', \'secret\', {type:\'auto\'})\n\nThe `auth` method also supports a `type` of `bearer`, to specify token-based authentication:\n\n    request.auth(\'my_token\', { type: \'bearer\' })\n\n## Following redirects\n\nBy default up to 5 redirects will be followed, however you may specify this with the `res.redirects(n)` method:\n\n    const response = await request.get(\'/some.png\').redirects(2);\n\nRedirects exceeding the limit are treated as errors. Use `.ok(res => res.status < 400)` to read them as successful responses.\n\n## Agents for global state\n\n### Saving cookies\n\nIn Node SuperAgent does not save cookies by default, but you can use the `.agent()` method to create a copy of SuperAgent that saves cookies. Each copy has a separate cookie jar.\n\n    const agent = request.agent();\n    agent\n      .post(\'/login\')\n      .then(() => {\n        return agent.get(\'/cookied-page\');\n      });\n\nIn browsers cookies are managed automatically by the browser, so the `.agent()` does not isolate cookies.\n\n### Default options for multiple requests\n\nRegular request methods called on the agent will be used as defaults for all requests made by that agent.\n\n    const agent = request.agent()\n      .use(plugin)\n      .auth(shared);\n\n    await agent.get(\'/with-plugin-and-auth\');\n    await agent.get(\'/also-with-plugin-and-auth\');\n\nThe complete list of methods that the agent can use to set defaults is: `use`, `on`, `once`, `set`, `query`, `type`, `accept`, `auth`, `withCredentials`, `sortQuery`, `retry`, `ok`, `redirects`, `timeout`, `buffer`, `serialize`, `parse`, `ca`, `key`, `pfx`, `cert`.\n\n## Piping data\n\nThe Node client allows you to pipe data to and from the request. Please note that `.pipe()` is used **instead of** `.end()`/`.then()` methods.\n\nFor example piping a file\'s contents as the request:\n\n    const request = require(\'superagent\');\n    const fs = require(\'fs\');\n\n    const stream = fs.createReadStream(\'path/to/my.json\');\n    const req = request.post(\'/somewhere\');\n    req.type(\'json\');\n    stream.pipe(req);\n\nNote that when you pipe to a request, superagent sends the piped data with [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding), which isn\'t supported by all servers (for instance, Python WSGI servers).\n\nOr piping the response to a file:\n\n    const stream = fs.createWriteStream(\'path/to/my.json\');\n    const req = request.get(\'/some.json\');\n    req.pipe(stream);\n\n It\'s not possible to mix pipes and callbacks or promises. Note that you should **NOT** attempt to pipe the result of `.end()` or the `Response` object:\n\n    // Don\'t do either of these:\n    const stream = getAWritableStream();\n    const req = request\n      .get(\'/some.json\')\n      // BAD: this pipes garbage to the stream and fails in unexpected ways\n      .end((err, this_does_not_work) => this_does_not_work.pipe(stream))\n    const req = request\n      .get(\'/some.json\')\n      .end()\n      // BAD: this is also unsupported, .pipe calls .end for you.\n      .pipe(nope_its_too_late);\n\nIn a [future version](https://github.com/visionmedia/superagent/issues/1188) of superagent, improper calls to `pipe()` will fail.\n\n## Multipart requests\n\nSuperAgent is also great for _building_ multipart requests for which it provides methods `.attach()` and `.field()`.\n\nWhen you use `.field()` or `.attach()` you can\'t use `.send()` and you *must not* set `Content-Type` (the correct type will be set for you).\n\n### Attaching files\n\nTo send a file use `.attach(name, [file], [options])`. You can attach multiple files by calling `.attach` multiple times. The arguments are:\n\n * `name` \xe2\x80\x94 field name in the form.\n * `file` \xe2\x80\x94 either string with file path or `Blob`/`Buffer` object.\n * `options` \xe2\x80\x94 (optional) either string with custom file name or `{filename: string}` object. In Node also `{contentType: \'mime/type\'}` is supported. In browser create a `Blob` with an appropriate type instead.\n\n<br>\n\n    request\n      .post(\'/upload\')\n      .attach(\'image1\', \'path/to/felix.jpeg\')\n      .attach(\'image2\', imageBuffer, \'luna.jpeg\')\n      .field(\'caption\', \'My cats\')\n      .then(callback);\n\n### Field values\n\nMuch like form fields in HTML, you can set field values with `.field(name, value)` and `.field({name: value})`. Suppose you want to upload a few images with your name and email, your request might look something like this:\n\n     request\n       .post(\'/upload\')\n       .field(\'user[name]\', \'Tobi\')\n       .field(\'user[email]\', \'tobi@learnboost.com\')\n       .field(\'friends[]\', [\'loki\', \'jane\'])\n       .attach(\'image\', \'path/to/tobi.png\')\n       .then(callback);\n\n## Compression\n\nThe node client supports compressed responses, best of all, you don\'t have to do anything! It just works.\n\n## Buffering responses\n\nTo force buffering of response bodies as `res.text` you may invoke `req.buffer()`. To undo the default of buffering for text responses such as "text/plain", "text/html" etc you may invoke `req.buffer(false)`.\n\nWhen buffered the `res.buffered` flag is provided, you may use this to handle both buffered and unbuffered responses in the same callback.\n\n## CORS\n\nFor security reasons, browsers will block cross-origin requests unless the server opts-in using CORS headers. Browsers will also make extra __OPTIONS__ requests to check what HTTP headers and methods are allowed by the server. [Read more about CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS).\n\nThe `.withCredentials()` method enables the ability to send cookies from the origin, however only when `Access-Control-Allow-Origin` is _not_ a wildcard ("*"), and `Access-Control-Allow-Credentials` is "true".\n\n    request\n      .get(\'https://api.example.com:4001/\')\n      .withCredentials()\n      .then(res => {\n        assert.equal(200, res.status);\n        assert.equal(\'tobi\', res.text);\n      })\n\n## Error handling\n\nYour callback function will always be passed two arguments: error and response. If no error occurred, the first argument will be null:\n\n    request\n     .post(\'/upload\')\n     .attach(\'image\', \'path/to/tobi.png\')\n     .then(res => {\n\n     });\n\nAn "error" event is also emitted, with you can listen for:\n\n    request\n      .post(\'/upload\')\n      .attach(\'image\', \'path/to/tobi.png\')\n      .on(\'error\', handle)\n      .then(res => {\n\n      });\n\nNote that **superagent considers 4xx and 5xx responses (as well as unhandled 3xx responses) errors by default**. For example, if you get a `304 Not modified`, `403 Forbidden` or `500 Internal server error` response, this status information will be available via `err.status`. Errors from such responses also contain an `err.response` field with all of the properties mentioned in "[Response properties](#response-properties)". The library behaves in this way to handle the common case of wanting success responses and treating HTTP error status codes as errors while still allowing for custom logic around specific error conditions.\n\nNetwork failures, timeouts, and other errors that produce no response will contain no `err.status` or `err.response` fields.\n\nIf you wish to handle 404 or other HTTP error responses, you can query the `err.status` property. When an HTTP error occurs (4xx or 5xx response) the `res.error` property is an `Error` object, this allows you to perform checks such as:\n\n    if (err && err.status === 404) {\n      alert(\'oh no \' + res.body.message);\n    }\n    else if (err) {\n      // all other error types we handle generically\n    }\n\nAlternatively, you can use the `.ok(callback)` method to decide whether a response is an error or not. The callback to the `ok` function gets a response and returns `true` if the response should be interpreted as success.\n\n    request.get(\'/404\')\n      .ok(res => res.status < 500)\n      .then(response => {\n        // reads 404 page as a successful response\n      })\n\n## Progress tracking\n\nSuperAgent fires `progress` events on upload and download of large files.\n\n    request.post(url)\n      .attach(\'field_name\', file)\n      .on(\'progress\', event => {\n        /* the event is:\n        {\n          direction: "upload" or "download"\n          percent: 0 to 100 // may be missing if file size is unknown\n          total: // total file size, may be missing\n          loaded: // bytes downloaded or uploaded so far\n        } */\n      })\n      .then()\n\n\n## Testing on localhost\n\n### Forcing specific connection IP address\n\nIn Node.js it\'s possible to ignore DNS resolution and direct all requests to a specific IP address using `.connect()` method. For example, this request will go to localhost instead of `example.com`:\n\n    const res = await request.get("http://example.com").connect("127.0.0.1");\n\nBecause the request may be redirected, it\'s possible to specify multiple hostnames and multiple IPs, as well as a special `*` as the fallback (note: other wildcards are not supported). The requests will keep their `Host` header with the original value. `.connect(undefined)` turns off the feature.\n\n    const res = await request.get("http://redir.example.com:555")\n      .connect({\n        "redir.example.com": "127.0.0.1", // redir.example.com:555 will use 127.0.0.1:555\n        "www.example.com": false, // don\'t override this one; use DNS as normal\n        "mapped.example.com": { host: "127.0.0.1", port: 8080}, // mapped.example.com:* will use 127.0.0.1:8080\n        "*": "proxy.example.com", // all other requests will go to this host\n      });\n\n### Ignoring broken/insecure HTTPS on localhost\n\nIn Node.js, when HTTPS is misconfigured and insecure (e.g. using self-signed certificate *without* specifying own `.ca()`), it\'s still possible to permit requests to `localhost` by calling `.trustLocalhost()`:\n\n    const res = await request.get("https://localhost").trustLocalhost()\n\nTogether with `.connect("127.0.0.1")` this may be used to force HTTPS requests to any domain to be re-routed to `localhost` instead.\n\nIt\'s generally safe to ignore broken HTTPS on `localhost`, because the loopback interface is not exposed to untrusted networks. Trusting `localhost` may become the default in the future. Use `.trustLocalhost(false)` to force check of `127.0.0.1`\'s authenticity.\n\nWe intentionally don\'t support disabling of HTTPS security when making requests to any other IP, because such options end up abused as a quick "fix" for HTTPS problems. You can get free HTTPS certificates from [Let\'s Encrypt](https://certbot.eff.org) or set your own CA (`.ca(ca_public_pem)`) to make your self-signed certificates trusted.\n\n## Promise and Generator support\n\nSuperAgent\'s request is a "thenable" object that\'s compatible with JavaScript promises and the `async`/`await` syntax.\n\n    const res = await request.get(url);\n\nIf you\'re using promises, **do not** call `.end()` or `.pipe()`. Any use of `.then()` or `await` disables all other ways of using the request.\n\nLibraries like [co](https://github.com/tj/co) or a web framework like [koa](https://github.com/koajs/koa) can `yield` on any SuperAgent method:\n\n    const req = request\n      .get(\'http://local\')\n      .auth(\'tobi\', \'learnboost\');\n    const res = yield req;\n\nNote that SuperAgent expects the global `Promise` object to be present. You\'ll need a polyfill to use promises in Internet Explorer or Node.js 0.10.\n\n## Browser and node versions\n\nSuperAgent has two implementations: one for web browsers (using XHR) and one for Node.JS (using core http module). By default Browserify and WebPack will pick the browser version.\n\nIf want to use WebPack to compile code for Node.JS, you *must* specify [node target](https://webpack.github.io/docs/configuration.html#target) in its configuration.\n\n### Using browser version in electron\n\n[Electron](https://electron.atom.io/) developers report if you would prefer to use the browser version of SuperAgent instead of the Node version, you can `require(\'superagent/superagent\')`. Your requests will now show up in the Chrome developer tools Network tab. Note this environment is not covered by automated test suite and not officially supported.\n'b'body {\n  padding: 40px 80px;\n  font: 14px/1.5 "Helvetica Neue", Helvetica, sans-serif;\n  background: #181818 url(images/bg.png);\n  text-align: center;\n}\n\n#content {\n  margin: 0 auto;\n  padding: 10px 40px;\n  text-align: left;\n  background: white;\n  width: 50%;\n  -webkit-border-radius: 2px;\n  -moz-border-radius: 2px;\n  border-radius: 2px;\n  -webkit-box-shadow: 0 2px 5px 0 black;\n}\n\n#menu {\n  font-size: 13px;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  position: fixed;\n  top: 15px;\n  left: 15px;\n}\n\n#menu ul {\n  margin: 0;\n  padding: 0;\n}\n\n#menu li {\n  list-style: none;\n}\n\n#menu a {\n  color: rgba(255,255,255,.5);\n  text-decoration: none;\n}\n\n#menu a:hover {\n  color: white;\n}\n\n#menu .active a {\n  color: white;\n}\n\npre {\n  padding: 10px;\n}\n\ncode {\n  font-family: monaco, monospace, sans-serif;\n  font-size: 0.85em;\n}\n\np code {\n  border: 1px solid #ECEA75;\n  padding: 1px 3px;\n  -webkit-border-radius: 2px;\n  -moz-border-radius: 2px;\n  border-radius: 2px;\n  background: #FDFCD1;\n}\n\npre {\n  padding: 20px 25px;\n  border: 1px solid #ddd;\n  -webkit-box-shadow: inset 0 0 5px #eee;\n  -moz-box-shadow: inset 0 0 5px #eee;\n  box-shadow: inset 0 0 5px #eee;\n}\n\ncode .comment { color: #ddd }\ncode .init { color: #2F6FAD }\ncode .string { color: #5890AD }\ncode .keyword { color: #8A6343 }\ncode .number { color: #2F6FAD }\n\n/* override tocbot style to avoid vertical white line in table of content */\n.toc-link::before {\n  content: initial;\n}\n'b'    </div>\n    <a href="http://github.com/visionmedia/superagent"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png" alt="Fork me on GitHub"></a>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js"></script>\n    <script>\n      $(\'code\').each(function(){\n        $(this).html(highlight($(this).text()));\n      });\n\n      function highlight(js) {\n        return js\n          .replace(/</g, \'&lt;\')\n          .replace(/>/g, \'&gt;\')\n          .replace(/(\'.*?\')/gm, \'<span class="string">$1</span>\')\n          .replace(/(\\d+\\.\\d+)/gm, \'<span class="number">$1</span>\')\n          .replace(/(\\d+)/gm, \'<span class="number">$1</span>\')\n          .replace(/\\bnew *(\\w+)/gm, \'<span class="keyword">new</span> <span class="init">$1</span>\')\n          .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, \'<span class="keyword">$1</span>\')\n      }\n    </script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/3.0.0/tocbot.js"></script>\n    <script>\n      // Only use tocbot for main docs, not test docs\n      if (document.querySelector(\'#superagent\')) {\n        tocbot.init({\n          // Where to render the table of contents.\n          tocSelector: \'#menu\',\n          // Where to grab the headings to build the table of contents.\n          contentSelector: \'#content\',\n          // Which headings to grab inside of the contentSelector element.\n          headingSelector: \'h2\',\n          smoothScroll: false\n        });\n      }\n    </script>\n  </body>\n</html>\n'b'<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset="utf8">\n    <title>SuperAgent \xe2\x80\x94 elegant API for AJAX in Node and browsers</title>\n    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tocbot/3.0.0/tocbot.css">\n    <link rel="stylesheet" href="docs/style.css">\n  </head>\n  <body>\n    <ul id="menu"></ul>\n    <div id="content">\n    <section class="suite">\n      <h1>Agent</h1>\n      <dl>\n        <dt>should remember defaults</dt>\n        <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return;\n}\nlet called = 0;\nlet event_called = 0;\nconst agent = request\n  .agent()\n  .accept(&#x27;json&#x27;)\n  .use(() =&#x3E; {\n    called++;\n  })\n  .once(&#x27;request&#x27;, () =&#x3E; {\n    event_called++;\n  })\n  .query({ hello: &#x27;world&#x27; })\n  .set(&#x27;X-test&#x27;, &#x27;testing&#x27;);\nassert.equal(0, called);\nassert.equal(0, event_called);\nreturn agent\n  .get(&#x60;${base}/echo&#x60;)\n  .then((res) =&#x3E; {\n    assert.equal(1, called);\n    assert.equal(1, event_called);\n    assert.equal(&#x27;application/json&#x27;, res.headers.accept);\n    assert.equal(&#x27;testing&#x27;, res.headers[&#x27;x-test&#x27;]);\n    return agent.get(&#x60;${base}/querystring&#x60;);\n  })\n  .then((res) =&#x3E; {\n    assert.equal(2, called);\n    assert.equal(2, event_called);\n    assert.deepEqual({ hello: &#x27;world&#x27; }, res.body);\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <section class="suite">\n          <h1>res.statusCode</h1>\n          <dl>\n            <dt>should set statusCode</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;, (err, res) =&#x3E; {\n  try {\n    assert.strictEqual(res.statusCode, 200);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>should allow the send shorthand</h1>\n          <dl>\n            <dt>with callback in the method call</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;, (err, res) =&#x3E; {\n  assert.equal(res.status, 200);\n  done();\n});</code></pre></dd>\n            <dt>with data in the method call</dt>\n            <dd><pre><code>request.post(&#x60;${uri}/echo&#x60;, { foo: &#x27;bar&#x27; }).end((err, res) =&#x3E; {\n  assert.equal(&#x27;{&#x22;foo&#x22;:&#x22;bar&#x22;}&#x27;, res.text);\n  done();\n});</code></pre></dd>\n            <dt>with callback and data in the method call</dt>\n            <dd><pre><code>request.post(&#x60;${uri}/echo&#x60;, { foo: &#x27;bar&#x27; }, (err, res) =&#x3E; {\n  assert.equal(&#x27;{&#x22;foo&#x22;:&#x22;bar&#x22;}&#x27;, res.text);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with a callback</h1>\n          <dl>\n            <dt>should invoke .end()</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;, (err, res) =&#x3E; {\n  try {\n    assert.equal(res.status, 200);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.end()</h1>\n          <dl>\n            <dt>should issue a request</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(res.status, 200);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n            <dt>is optional with a promise</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return;\n}\nreturn request\n  .get(&#x60;${uri}/login&#x60;)\n  .then((res) =&#x3E; res.status)\n  .then()\n  .then((status) =&#x3E; {\n    assert.equal(200, status, &#x27;Real promises pass results through&#x27;);\n  });</code></pre></dd>\n            <dt>called only once with a promise</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return;\n}\nconst req = request.get(&#x60;${uri}/unique&#x60;);\nreturn Promise.all([req, req, req]).then((results) =&#x3E; {\n  results.forEach((item) =&#x3E; {\n    assert.equal(\n      item.body,\n      results[0].body,\n      &#x27;It should keep returning the same result after being called once&#x27;\n    );\n  });\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.error</h1>\n          <dl>\n            <dt>ok</dt>\n            <dd><pre><code>let calledErrorEvent = false;\nlet calledOKHandler = false;\nrequest\n  .get(&#x60;${uri}/error&#x60;)\n  .ok((res) =&#x3E; {\n    assert.strictEqual(500, res.status);\n    calledOKHandler = true;\n    return true;\n  })\n  .on(&#x27;error&#x27;, (err) =&#x3E; {\n    calledErrorEvent = true;\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert.strictEqual(res.status, 500);\n      assert(!calledErrorEvent);\n      assert(calledOKHandler);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should be an Error object</dt>\n            <dd><pre><code>let calledErrorEvent = false;\nrequest\n  .get(&#x60;${uri}/error&#x60;)\n  .on(&#x27;error&#x27;, (err) =&#x3E; {\n    assert.strictEqual(err.status, 500);\n    calledErrorEvent = true;\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      if (NODE) {\n        res.error.message.should.equal(&#x27;cannot GET /error (500)&#x27;);\n      } else {\n        res.error.message.should.equal(&#x60;cannot GET ${uri}/error (500)&#x60;);\n      }\n      assert.strictEqual(res.error.status, 500);\n      assert(err, &#x27;should have an error for 500&#x27;);\n      assert.equal(err.message, &#x27;Internal Server Error&#x27;);\n      assert(calledErrorEvent);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>with .then() promise</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return;\n}\nreturn request.get(&#x60;${uri}/error&#x60;).then(\n  () =&#x3E; {\n    assert.fail();\n  },\n  (err) =&#x3E; {\n    assert.equal(err.message, &#x27;Internal Server Error&#x27;);\n  }\n);</code></pre></dd>\n            <dt>with .ok() returning false</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return;\n}\nreturn request\n  .get(&#x60;${uri}/echo&#x60;)\n  .ok(() =&#x3E; false)\n  .then(\n    () =&#x3E; {\n      assert.fail();\n    },\n    (err) =&#x3E; {\n      assert.equal(200, err.response.status);\n      assert.equal(err.message, &#x27;OK&#x27;);\n    }\n  );</code></pre></dd>\n            <dt>with .ok() throwing an Error</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return;\n}\nreturn request\n  .get(&#x60;${uri}/echo&#x60;)\n  .ok(() =&#x3E; {\n    throw new Error(&#x27;boom&#x27;);\n  })\n  .then(\n    () =&#x3E; {\n      assert.fail();\n    },\n    (err) =&#x3E; {\n      assert.equal(200, err.response.status);\n      assert.equal(err.message, &#x27;boom&#x27;);\n    }\n  );</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.header</h1>\n          <dl>\n            <dt>should be an object</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;Express&#x27;, res.header[&#x27;x-powered-by&#x27;]);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>set headers</h1>\n          <dl>\n            <dt>should only set headers for ownProperties of header</dt>\n            <dd><pre><code>try {\n  request\n    .get(&#x60;${uri}/echo-headers&#x60;)\n    .set(&#x27;valid&#x27;, &#x27;ok&#x27;)\n    .end((err, res) =&#x3E; {\n      if (\n        !err &#x26;&#x26;\n        res.body &#x26;&#x26;\n        res.body.valid &#x26;&#x26;\n        !res.body.hasOwnProperty(&#x27;invalid&#x27;)\n      ) {\n        return done();\n      }\n      done(err || new Error(&#x27;fail&#x27;));\n    });\n} catch (err) {\n  done(err);\n}</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.charset</h1>\n          <dl>\n            <dt>should be set when present</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;).end((err, res) =&#x3E; {\n  try {\n    res.charset.should.equal(&#x27;utf-8&#x27;);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.statusType</h1>\n          <dl>\n            <dt>should provide the first digit</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(!err, &#x27;should not have an error for success responses&#x27;);\n    assert.equal(200, res.status);\n    assert.equal(2, res.statusType);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.type</h1>\n          <dl>\n            <dt>should provide the mime-type void of params</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/login&#x60;).end((err, res) =&#x3E; {\n  try {\n    res.type.should.equal(&#x27;text/html&#x27;);\n    res.charset.should.equal(&#x27;utf-8&#x27;);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.set(field, val)</h1>\n          <dl>\n            <dt>should set the header field</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set(&#x27;X-Foo&#x27;, &#x27;bar&#x27;)\n  .set(&#x27;X-Bar&#x27;, &#x27;baz&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;bar&#x27;, res.header[&#x27;x-foo&#x27;]);\n      assert.equal(&#x27;baz&#x27;, res.header[&#x27;x-bar&#x27;]);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.set(obj)</h1>\n          <dl>\n            <dt>should set the header fields</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set({ &#x27;X-Foo&#x27;: &#x27;bar&#x27;, &#x27;X-Bar&#x27;: &#x27;baz&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;bar&#x27;, res.header[&#x27;x-foo&#x27;]);\n      assert.equal(&#x27;baz&#x27;, res.header[&#x27;x-bar&#x27;]);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.type(str)</h1>\n          <dl>\n            <dt>should set the Content-Type</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;text/x-foo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.header[&#x27;content-type&#x27;].should.equal(&#x27;text/x-foo&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should map &#x22;json&#x22;</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;json&#x27;)\n  .send(&#x27;{&#x22;a&#x22;: 1}&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.should.be.json();\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should map &#x22;html&#x22;</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;html&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.header[&#x27;content-type&#x27;].should.equal(&#x27;text/html&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.accept(str)</h1>\n          <dl>\n            <dt>should set Accept</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/echo&#x60;)\n  .accept(&#x27;text/x-foo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.header.accept.should.equal(&#x27;text/x-foo&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should map &#x22;json&#x22;</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/echo&#x60;)\n  .accept(&#x27;json&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.header.accept.should.equal(&#x27;application/json&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should map &#x22;xml&#x22;</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/echo&#x60;)\n  .accept(&#x27;xml&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      // Mime module keeps changing this :(\n      assert(\n        res.header.accept == &#x27;application/xml&#x27; ||\n          res.header.accept == &#x27;text/xml&#x27;\n      );\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should map &#x22;html&#x22;</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/echo&#x60;)\n  .accept(&#x27;html&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.header.accept.should.equal(&#x27;text/html&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.send(str)</h1>\n          <dl>\n            <dt>should write the string</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;json&#x27;)\n  .send(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.send(Object)</h1>\n          <dl>\n            <dt>should default to json</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      res.should.be.json();\n      res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <section class="suite">\n              <h1>when called several times</h1>\n              <dl>\n                <dt>should merge the objects</dt>\n                <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .send({ age: 1 })\n  .end((err, res) =&#x3E; {\n    try {\n      res.should.be.json();\n      if (NODE) {\n        res.buffered.should.be.true();\n      }\n      res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;,&#x22;age&#x22;:1}&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n              </dl>\n            </section>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.end(fn)</h1>\n          <dl>\n            <dt>should check arity</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should emit request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${uri}/echo&#x60;);\nreq.on(&#x27;request&#x27;, (request) =&#x3E; {\n  assert.equal(req, request);\n  done();\n});\nreq.end();</code></pre></dd>\n            <dt>should emit response</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .on(&#x27;response&#x27;, (res) =&#x3E; {\n    res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n    done();\n  })\n  .end();</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.then(fulfill, reject)</h1>\n          <dl>\n            <dt>should support successful fulfills with .then(fulfill)</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return done();\n}\nrequest\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .then((res) =&#x3E; {\n    res.type.should.equal(&#x27;application/json&#x27;);\n    res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should reject an error with .then(null, reject)</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return done();\n}\nrequest.get(&#x60;${uri}/error&#x60;).then(null, (err) =&#x3E; {\n  assert.equal(err.status, 500);\n  assert.equal(err.response.text, &#x27;boom&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.catch(reject)</h1>\n          <dl>\n            <dt>should reject an error with .catch(reject)</dt>\n            <dd><pre><code>if (typeof Promise === &#x27;undefined&#x27;) {\n  return done();\n}\nrequest.get(&#x60;${uri}/error&#x60;).catch((err) =&#x3E; {\n  assert.equal(err.status, 500);\n  assert.equal(err.response.text, &#x27;boom&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.abort()</h1>\n          <dl>\n            <dt>should abort the request</dt>\n            <dd><pre><code>const req = request.get(&#x60;${uri}/delay/3000&#x60;);\nreq.end((err, res) =&#x3E; {\n  try {\n    assert(false, &#x27;should not complete the request&#x27;);\n  } catch (err_) {\n    done(err_);\n  }\n});\nreq.on(&#x27;error&#x27;, (error) =&#x3E; {\n  done(error);\n});\nreq.on(&#x27;abort&#x27;, done);\nsetTimeout(() =&#x3E; {\n  req.abort();\n}, 500);</code></pre></dd>\n            <dt>should abort the promise</dt>\n            <dd><pre><code>const req = request.get(&#x60;${uri}/delay/3000&#x60;);\nsetTimeout(() =&#x3E; {\n  req.abort();\n}, 10);\nreturn req.then(\n  () =&#x3E; {\n    assert.fail(&#x27;should not complete the request&#x27;);\n  },\n  (err) =&#x3E; {\n    assert.equal(&#x27;ABORTED&#x27;, err.code);\n  }\n);</code></pre></dd>\n            <dt>should allow chaining .abort() several times</dt>\n            <dd><pre><code>const req = request.get(&#x60;${uri}/delay/3000&#x60;);\nreq.end((err, res) =&#x3E; {\n  try {\n    assert(false, &#x27;should not complete the request&#x27;);\n  } catch (err_) {\n    done(err_);\n  }\n});\n// This also verifies only a single &#x27;done&#x27; event is emitted\nreq.on(&#x27;abort&#x27;, done);\nsetTimeout(() =&#x3E; {\n  req.abort().abort().abort();\n}, 1000);</code></pre></dd>\n            <dt>should not allow abort then end</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/delay/3000&#x60;)\n  .abort()\n  .end((err, res) =&#x3E; {\n    done(err ? undefined : new Error(&#x27;Expected abort error&#x27;));\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.toJSON()</h1>\n          <dl>\n            <dt>should describe the request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${uri}/echo&#x60;).send({ foo: &#x27;baz&#x27; });\nreq.end((err, res) =&#x3E; {\n  try {\n    const json = req.toJSON();\n    assert.equal(&#x27;POST&#x27;, json.method);\n    assert(/\\/echo$/.test(json.url));\n    assert.equal(&#x27;baz&#x27;, json.data.foo);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.options()</h1>\n          <dl>\n            <dt>should allow request body</dt>\n            <dd><pre><code>request\n  .options(&#x60;${uri}/options/echo/body&#x60;)\n  .send({ foo: &#x27;baz&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(err, null);\n      assert.strictEqual(res.body.foo, &#x27;baz&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.sortQuery()</h1>\n          <dl>\n            <dt>nop with no querystring</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/url&#x60;)\n  .sortQuery()\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(res.text, &#x27;/url&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should sort the request querystring</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/url&#x60;)\n  .query(&#x27;search=Manny&#x27;)\n  .query(&#x27;order=desc&#x27;)\n  .sortQuery()\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(res.text, &#x27;/url?order=desc&#x26;search=Manny&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should allow disabling sorting</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/url&#x60;)\n  .query(&#x27;search=Manny&#x27;)\n  .query(&#x27;order=desc&#x27;)\n  .sortQuery() // take default of true\n  .sortQuery(false) // override it in later call\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(res.text, &#x27;/url?search=Manny&#x26;order=desc&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should sort the request querystring using customized function</dt>\n            <dd><pre><code>request\n  .get(&#x60;${uri}/url&#x60;)\n  .query(&#x27;name=Nick&#x27;)\n  .query(&#x27;search=Manny&#x27;)\n  .query(&#x27;order=desc&#x27;)\n  .sortQuery((a, b) =&#x3E; a.length - b.length)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(res.text, &#x27;/url?name=Nick&#x26;order=desc&#x26;search=Manny&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.set(&#x22;Content-Type&#x22;, contentType)</h1>\n      <dl>\n        <dt>should work with just the contentType component</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;)\n  .send({ name: &#x27;tobi&#x27; })\n  .end((err, res) =&#x3E; {\n    assert(!err);\n    done();\n  });</code></pre></dd>\n        <dt>should work with the charset component</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;application/json; charset=utf-8&#x27;)\n  .send({ name: &#x27;tobi&#x27; })\n  .end((err, res) =&#x3E; {\n    assert(!err);\n    done();\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.send(Object) as &#x22;form&#x22;</h1>\n      <dl>\n        <section class="suite">\n          <h1>with req.type() set to form</h1>\n          <dl>\n            <dt>should send x-www-form-urlencoded data</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .type(&#x27;form&#x27;)\n  .send({ name: &#x27;tobi&#x27; })\n  .end((err, res) =&#x3E; {\n    res.header[&#x27;content-type&#x27;].should.equal(\n      &#x27;application/x-www-form-urlencoded&#x27;\n    );\n    res.text.should.equal(&#x27;name=tobi&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>when called several times</h1>\n          <dl>\n            <dt>should merge the objects</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .type(&#x27;form&#x27;)\n  .send({ name: { first: &#x27;tobi&#x27;, last: &#x27;holowaychuk&#x27; } })\n  .send({ age: &#x27;1&#x27; })\n  .end((err, res) =&#x3E; {\n    res.header[&#x27;content-type&#x27;].should.equal(\n      &#x27;application/x-www-form-urlencoded&#x27;\n    );\n    res.text.should.equal(\n      &#x27;name%5Bfirst%5D=tobi&#x26;name%5Blast%5D=holowaychuk&#x26;age=1&#x27;\n    );\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.attach</h1>\n      <dl>\n        <dt>ignores null file</dt>\n        <dd><pre><code>request\n  .post(&#x27;/echo&#x27;)\n  .attach(&#x27;image&#x27;, null)\n  .end((err, res) =&#x3E; {\n    done();\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.field</h1>\n      <dl>\n        <dt>allow bools</dt>\n        <dd><pre><code>if (!formDataSupported) {\n  return done();\n}\nrequest\n  .post(&#x60;${base}/formecho&#x60;)\n  .field(&#x27;bools&#x27;, true)\n  .field(&#x27;strings&#x27;, &#x27;true&#x27;)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.deepStrictEqual(res.body, { bools: &#x27;true&#x27;, strings: &#x27;true&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>allow objects</dt>\n        <dd><pre><code>if (!formDataSupported) {\n  return done();\n}\nrequest\n  .post(&#x60;${base}/formecho&#x60;)\n  .field({ bools: true, strings: &#x27;true&#x27; })\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.deepStrictEqual(res.body, { bools: &#x27;true&#x27;, strings: &#x27;true&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>works with arrays in objects</dt>\n        <dd><pre><code>if (!formDataSupported) {\n  return done();\n}\nrequest\n  .post(&#x60;${base}/formecho&#x60;)\n  .field({ numbers: [1, 2, 3] })\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.deepStrictEqual(res.body, { numbers: [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;] });\n    done();\n  });</code></pre></dd>\n        <dt>works with arrays</dt>\n        <dd><pre><code>if (!formDataSupported) {\n  return done();\n}\nrequest\n  .post(&#x60;${base}/formecho&#x60;)\n  .field(&#x27;letters&#x27;, [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.deepStrictEqual(res.body, { letters: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;] });\n    done();\n  });</code></pre></dd>\n        <dt>throw when empty</dt>\n        <dd><pre><code>should.throws(() =&#x3E; {\n  request.post(&#x60;${base}/echo&#x60;).field();\n}, /name/);\nshould.throws(() =&#x3E; {\n  request.post(&#x60;${base}/echo&#x60;).field(&#x27;name&#x27;);\n}, /val/);</code></pre></dd>\n        <dt>cannot be mixed with send()</dt>\n        <dd><pre><code>assert.throws(() =&#x3E; {\n  request.post(&#x27;/echo&#x27;).field(&#x27;form&#x27;, &#x27;data&#x27;).send(&#x27;hi&#x27;);\n});\nassert.throws(() =&#x3E; {\n  request.post(&#x27;/echo&#x27;).send(&#x27;hi&#x27;).field(&#x27;form&#x27;, &#x27;data&#x27;);\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.send(Object) as &#x22;json&#x22;</h1>\n      <dl>\n        <dt>should default to json</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n    done();\n  });</code></pre></dd>\n        <dt>should work with arrays</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send([1, 2, 3])\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    res.text.should.equal(&#x27;[1,2,3]&#x27;);\n    done();\n  });</code></pre></dd>\n        <dt>should work with value null</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;json&#x27;)\n  .send(&#x27;null&#x27;)\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    assert.strictEqual(res.body, null);\n    done();\n  });</code></pre></dd>\n        <dt>should work with value false</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;json&#x27;)\n  .send(&#x27;false&#x27;)\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    res.body.should.equal(false);\n    done();\n  });</code></pre></dd>\n        <dt>should work with value 0</dt>\n        <dd><pre><code>// fails in IE9\nrequest\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;json&#x27;)\n  .send(&#x27;0&#x27;)\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    res.body.should.equal(0);\n    done();\n  });</code></pre></dd>\n        <dt>should work with empty string value</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .type(&#x27;json&#x27;)\n  .send(&#x27;&#x22;&#x22;&#x27;)\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    res.body.should.equal(&#x27;&#x27;);\n    done();\n  });</code></pre></dd>\n        <dt>should work with GET</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/echo&#x60;)\n  .send({ tobi: &#x27;ferret&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      res.should.be.json();\n      res.text.should.equal(&#x27;{&#x22;tobi&#x22;:&#x22;ferret&#x22;}&#x27;);\n      ({ tobi: &#x27;ferret&#x27; }.should.eql(res.body));\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should work with vendor MIME type</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;application/vnd.example+json&#x27;)\n  .send({ name: &#x27;vendor&#x27; })\n  .end((err, res) =&#x3E; {\n    res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;vendor&#x22;}&#x27;);\n    ({ name: &#x27;vendor&#x27; }.should.eql(res.body));\n    done();\n  });</code></pre></dd>\n        <section class="suite">\n          <h1>when called several times</h1>\n          <dl>\n            <dt>should merge the objects</dt>\n            <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send({ name: &#x27;tobi&#x27; })\n  .send({ age: 1 })\n  .end((err, res) =&#x3E; {\n    res.should.be.json();\n    res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;,&#x22;age&#x22;:1}&#x27;);\n    ({ name: &#x27;tobi&#x27;, age: 1 }.should.eql(res.body));\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>res.body</h1>\n      <dl>\n        <section class="suite">\n          <h1>application/json</h1>\n          <dl>\n            <dt>should parse the body</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/json&#x60;).end((err, res) =&#x3E; {\n  res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;manny&#x22;}&#x27;);\n  res.body.should.eql({ name: &#x27;manny&#x27; });\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>HEAD requests</h1>\n          <dl>\n            <dt>should not throw a parse error</dt>\n            <dd><pre><code>request.head(&#x60;${uri}/json&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.strictEqual(err, null);\n    assert.strictEqual(res.text, undefined);\n    assert.strictEqual(Object.keys(res.body).length, 0);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>Invalid JSON response</h1>\n          <dl>\n            <dt>should return the raw response</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/invalid-json&#x60;).end((err, res) =&#x3E; {\n  assert.deepEqual(\n    err.rawResponse,\n    &#x22;)]}&#x27;, {&#x27;header&#x27;:{&#x27;code&#x27;:200,&#x27;text&#x27;:&#x27;OK&#x27;,&#x27;version&#x27;:&#x27;1.0&#x27;},&#x27;data&#x27;:&#x27;some data&#x27;}&#x22;\n  );\n  done();\n});</code></pre></dd>\n            <dt>should return the http status code</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/invalid-json-forbidden&#x60;).end((err, res) =&#x3E; {\n  assert.equal(err.statusCode, 403);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>No content</h1>\n          <dl>\n            <dt>should not throw a parse error</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/no-content&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.strictEqual(err, null);\n    assert.strictEqual(res.text, &#x27;&#x27;);\n    assert.strictEqual(Object.keys(res.body).length, 0);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>application/json+hal</h1>\n          <dl>\n            <dt>should parse the body</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/json-hal&#x60;).end((err, res) =&#x3E; {\n  if (err) return done(err);\n  res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;hal 5000&#x22;}&#x27;);\n  res.body.should.eql({ name: &#x27;hal 5000&#x27; });\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>vnd.collection+json</h1>\n          <dl>\n            <dt>should parse the body</dt>\n            <dd><pre><code>request.get(&#x60;${uri}/collection-json&#x60;).end((err, res) =&#x3E; {\n  res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;chewbacca&#x22;}&#x27;);\n  res.body.should.eql({ name: &#x27;chewbacca&#x27; });\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <section class="suite">\n          <h1>on redirect</h1>\n          <dl>\n            <dt>should retain header fields</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/header&#x60;)\n  .set(&#x27;X-Foo&#x27;, &#x27;bar&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(res.body);\n      res.body.should.have.property(&#x27;x-foo&#x27;, &#x27;bar&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should preserve timeout across redirects</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/movies/random&#x60;)\n  .timeout(250)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err instanceof Error, &#x27;expected an error&#x27;);\n      err.should.have.property(&#x27;timeout&#x27;, 250);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should successfully redirect after retry on error</dt>\n            <dd><pre><code>const id = Math.random() * 1000000 * Date.now();\nrequest\n  .get(&#x60;${base}/error/redirect/${id}&#x60;)\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    assert(res.ok, &#x27;response should be ok&#x27;);\n    assert(res.text, &#x27;first movie page&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should preserve retries across redirects</dt>\n            <dd><pre><code>const id = Math.random() * 1000000 * Date.now();\nrequest\n  .get(&#x60;${base}/error/redirect-error${id}&#x60;)\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(2, err.retries, &#x27;expected an error with .retries&#x27;);\n    assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 303</h1>\n          <dl>\n            <dt>should redirect with same method</dt>\n            <dd><pre><code>request\n  .put(&#x60;${base}/redirect-303&#x60;)\n  .send({ msg: &#x27;hello&#x27; })\n  .redirects(1)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    res.headers.location.should.equal(&#x27;/reply-method&#x27;);\n  })\n  .end((err, res) =&#x3E; {\n    if (err) {\n      done(err);\n      return;\n    }\n    res.text.should.equal(&#x27;method=get&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 307</h1>\n          <dl>\n            <dt>should redirect with same method</dt>\n            <dd><pre><code>if (isMSIE) return done(); // IE9 broken\nrequest\n  .put(&#x60;${base}/redirect-307&#x60;)\n  .send({ msg: &#x27;hello&#x27; })\n  .redirects(1)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    res.headers.location.should.equal(&#x27;/reply-method&#x27;);\n  })\n  .end((err, res) =&#x3E; {\n    if (err) {\n      done(err);\n      return;\n    }\n    res.text.should.equal(&#x27;method=put&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 308</h1>\n          <dl>\n            <dt>should redirect with same method</dt>\n            <dd><pre><code>if (isMSIE) return done(); // IE9 broken\nrequest\n  .put(&#x60;${base}/redirect-308&#x60;)\n  .send({ msg: &#x27;hello&#x27; })\n  .redirects(1)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    res.headers.location.should.equal(&#x27;/reply-method&#x27;);\n  })\n  .end((err, res) =&#x3E; {\n    if (err) {\n      done(err);\n      return;\n    }\n    res.text.should.equal(&#x27;method=put&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <dt>Request inheritance</dt>\n        <dd><pre><code>assert(request.get(&#x60;${uri}/&#x60;) instanceof request.Request);</code></pre></dd>\n        <dt>request() simple GET without callback</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x27;test/test.request.js&#x27;).end();\nnext();</code></pre></dd>\n        <dt>request() simple GET</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/ok&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(res instanceof request.Response, &#x27;respond with Response&#x27;);\n    assert(res.ok, &#x27;response should be ok&#x27;);\n    assert(res.text, &#x27;res.text&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() simple HEAD</dt>\n        <dd><pre><code>request.head(&#x60;${uri}/ok&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(res instanceof request.Response, &#x27;respond with Response&#x27;);\n    assert(res.ok, &#x27;response should be ok&#x27;);\n    assert(!res.text, &#x27;res.text&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 5xx</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/error&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert.equal(err.message, &#x27;Internal Server Error&#x27;);\n    assert(!res.ok, &#x27;response should not be ok&#x27;);\n    assert(res.error, &#x27;response should be an error&#x27;);\n    assert(!res.clientError, &#x27;response should not be a client error&#x27;);\n    assert(res.serverError, &#x27;response should be a server error&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 4xx</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/notfound&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert.equal(err.message, &#x27;Not Found&#x27;);\n    assert(!res.ok, &#x27;response should not be ok&#x27;);\n    assert(res.error, &#x27;response should be an error&#x27;);\n    assert(res.clientError, &#x27;response should be a client error&#x27;);\n    assert(!res.serverError, &#x27;response should not be a server error&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 404 Not Found</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/notfound&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert(res.notFound, &#x27;response should be .notFound&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 400 Bad Request</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/bad-request&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert(res.badRequest, &#x27;response should be .badRequest&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 401 Bad Request</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/unauthorized&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert(res.unauthorized, &#x27;response should be .unauthorized&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 406 Not Acceptable</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/not-acceptable&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert(res.notAcceptable, &#x27;response should be .notAcceptable&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() GET 204 No Content</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/no-content&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.ifError(err);\n    assert(res.noContent, &#x27;response should be .noContent&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() DELETE 204 No Content</dt>\n        <dd><pre><code>request(&#x27;DELETE&#x27;, &#x60;${uri}/no-content&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.ifError(err);\n    assert(res.noContent, &#x27;response should be .noContent&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() header parsing</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/notfound&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert.equal(&#x27;text/html; charset=utf-8&#x27;, res.header[&#x27;content-type&#x27;]);\n    assert.equal(&#x27;Express&#x27;, res.header[&#x27;x-powered-by&#x27;]);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request() .status</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/notfound&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert.equal(404, res.status, &#x27;response .status&#x27;);\n    assert.equal(4, res.statusType, &#x27;response .statusType&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>get()</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/notfound&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert(err);\n    assert.equal(404, res.status, &#x27;response .status&#x27;);\n    assert.equal(4, res.statusType, &#x27;response .statusType&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>put()</dt>\n        <dd><pre><code>request.put(&#x60;${uri}/user/12&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;updated&#x27;, res.text, &#x27;response text&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>put().send()</dt>\n        <dd><pre><code>request\n  .put(&#x60;${uri}/user/13/body&#x60;)\n  .send({ user: &#x27;new&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;received new&#x27;, res.text, &#x27;response text&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>post()</dt>\n        <dd><pre><code>request.post(&#x60;${uri}/user&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;created&#x27;, res.text, &#x27;response text&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>del()</dt>\n        <dd><pre><code>request.del(&#x60;${uri}/user/12&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;deleted&#x27;, res.text, &#x27;response text&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>delete()</dt>\n        <dd><pre><code>request.delete(&#x60;${uri}/user/12&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;deleted&#x27;, res.text, &#x27;response text&#x27;);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>post() data</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/todo/item&#x60;)\n  .type(&#x27;application/octet-stream&#x27;)\n  .send(&#x27;tobi&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added &#x22;tobi&#x22;&#x27;, res.text, &#x27;response text&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .type()</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/user/12/pet&#x60;)\n  .type(&#x27;urlencoded&#x27;)\n  .send(&#x27;pet=tobi&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added pet &#x22;tobi&#x22;&#x27;, res.text, &#x27;response text&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .type() with alias</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/user/12/pet&#x60;)\n  .type(&#x27;application/x-www-form-urlencoded&#x27;)\n  .send(&#x27;pet=tobi&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added pet &#x22;tobi&#x22;&#x27;, res.text, &#x27;response text&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .get() with no data or callback</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/echo-header/content-type&#x60;);\nnext();</code></pre></dd>\n        <dt>request .send() with no data only</dt>\n        <dd><pre><code>request.post(&#x60;${uri}/user/5/pet&#x60;).type(&#x27;urlencoded&#x27;).send(&#x27;pet=tobi&#x27;);\nnext();</code></pre></dd>\n        <dt>request .send() with callback only</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/echo-header/accept&#x60;)\n  .set(&#x27;Accept&#x27;, &#x27;foo/bar&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;foo/bar&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .accept() with json</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/echo-header/accept&#x60;)\n  .accept(&#x27;json&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;application/json&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .accept() with application/json</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/echo-header/accept&#x60;)\n  .accept(&#x27;application/json&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;application/json&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .accept() with xml</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/echo-header/accept&#x60;)\n  .accept(&#x27;xml&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      // We can&#x27;t depend on mime module to be consistent with this\n      assert(res.text == &#x27;application/xml&#x27; || res.text == &#x27;text/xml&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .accept() with application/xml</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/echo-header/accept&#x60;)\n  .accept(&#x27;application/xml&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;application/xml&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .end()</dt>\n        <dd><pre><code>request\n  .put(&#x60;${uri}/echo-header/content-type&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;text/plain&#x27;)\n  .send(&#x27;wahoo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;text/plain&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .send()</dt>\n        <dd><pre><code>request\n  .put(&#x60;${uri}/echo-header/content-type&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;text/plain&#x27;)\n  .send(&#x27;wahoo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;text/plain&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .set()</dt>\n        <dd><pre><code>request\n  .put(&#x60;${uri}/echo-header/content-type&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;text/plain&#x27;)\n  .send(&#x27;wahoo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;text/plain&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>request .set(object)</dt>\n        <dd><pre><code>request\n  .put(&#x60;${uri}/echo-header/content-type&#x60;)\n  .set({ &#x27;Content-Type&#x27;: &#x27;text/plain&#x27; })\n  .send(&#x27;wahoo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;text/plain&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST urlencoded</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/pet&#x60;)\n  .type(&#x27;urlencoded&#x27;)\n  .send({ name: &#x27;Manny&#x27;, species: &#x27;cat&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added Manny the cat&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST json</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/pet&#x60;)\n  .type(&#x27;json&#x27;)\n  .send({ name: &#x27;Manny&#x27;, species: &#x27;cat&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added Manny the cat&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST json array</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send([1, 2, 3])\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(\n        &#x27;application/json&#x27;,\n        res.header[&#x27;content-type&#x27;].split(&#x27;;&#x27;)[0]\n      );\n      assert.equal(&#x27;[1,2,3]&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST json default</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/pet&#x60;)\n  .send({ name: &#x27;Manny&#x27;, species: &#x27;cat&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added Manny the cat&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST json contentType charset</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;application/json; charset=UTF-8&#x27;)\n  .send({ data: [&#x27;data1&#x27;, &#x27;data2&#x27;] })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;{&#x22;data&#x22;:[&#x22;data1&#x22;,&#x22;data2&#x22;]}&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST json contentType vendor</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;application/vnd.example+json&#x27;)\n  .send({ data: [&#x27;data1&#x27;, &#x27;data2&#x27;] })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;{&#x22;data&#x22;:[&#x22;data1&#x22;,&#x22;data2&#x22;]}&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST multiple .send() calls</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/pet&#x60;)\n  .send({ name: &#x27;Manny&#x27; })\n  .send({ species: &#x27;cat&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;added Manny the cat&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST multiple .send() strings</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/echo&#x60;)\n  .send(&#x27;user[name]=tj&#x27;)\n  .send(&#x27;user[email]=tj@vision-media.ca&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(\n        &#x27;application/x-www-form-urlencoded&#x27;,\n        res.header[&#x27;content-type&#x27;].split(&#x27;;&#x27;)[0]\n      );\n      assert.equal(\n        res.text,\n        &#x27;user[name]=tj&#x26;user[email]=tj@vision-media.ca&#x27;\n      );\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>POST with no data</dt>\n        <dd><pre><code>request\n  .post(&#x60;${uri}/empty-body&#x60;)\n  .send()\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(res.noContent, &#x27;response should be .noContent&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET .type</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/pets&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;application/json&#x27;, res.type);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>GET Content-Type params</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/text&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;utf-8&#x27;, res.charset);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>GET json</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/pets&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.deepEqual(res.body, [&#x27;tobi&#x27;, &#x27;loki&#x27;, &#x27;jane&#x27;]);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>GET json-seq</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/json-seq&#x60;)\n  .buffer()\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert.deepEqual(res.text, &#x27;\\u001E{&#x22;id&#x22;:1}\\n\\u001E{&#x22;id&#x22;:2}\\n&#x27;);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET x-www-form-urlencoded</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/foo&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.deepEqual(res.body, { foo: &#x27;bar&#x27; });\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>GET shorthand</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/foo&#x60;, (err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;foo=bar&#x27;, res.text);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>POST shorthand</dt>\n        <dd><pre><code>request.post(&#x60;${uri}/user/0/pet&#x60;, { pet: &#x27;tobi&#x27; }, (err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;added pet &#x22;tobi&#x22;&#x27;, res.text);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>POST shorthand without callback</dt>\n        <dd><pre><code>request.post(&#x60;${uri}/user/0/pet&#x60;, { pet: &#x27;tobi&#x27; }).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;added pet &#x22;tobi&#x22;&#x27;, res.text);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>GET querystring object with array</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query({ val: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;] })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, { val: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;] });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring object with array and primitives</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query({ array: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], string: &#x27;foo&#x27;, number: 10 })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, {\n        array: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;],\n        string: &#x27;foo&#x27;,\n        number: 10\n      });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring object with two arrays</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query({ array1: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;], array2: [1, 2, 3] })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, {\n        array1: [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;],\n        array2: [1, 2, 3]\n      });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring object</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query({ search: &#x27;Manny&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, { search: &#x27;Manny&#x27; });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring append original</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring?search=Manny&#x60;)\n  .query({ range: &#x27;1..5&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, { search: &#x27;Manny&#x27;, range: &#x27;1..5&#x27; });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring multiple objects</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query({ search: &#x27;Manny&#x27; })\n  .query({ range: &#x27;1..5&#x27; })\n  .query({ order: &#x27;desc&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, {\n        search: &#x27;Manny&#x27;,\n        range: &#x27;1..5&#x27;,\n        order: &#x27;desc&#x27;\n      });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring with strings</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query(&#x27;search=Manny&#x27;)\n  .query(&#x27;range=1..5&#x27;)\n  .query(&#x27;order=desc&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, {\n        search: &#x27;Manny&#x27;,\n        range: &#x27;1..5&#x27;,\n        order: &#x27;desc&#x27;\n      });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET querystring with strings and objects</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/querystring&#x60;)\n  .query(&#x27;search=Manny&#x27;)\n  .query({ order: &#x27;desc&#x27;, range: &#x27;1..5&#x27; })\n  .end((err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, {\n        search: &#x27;Manny&#x27;,\n        range: &#x27;1..5&#x27;,\n        order: &#x27;desc&#x27;\n      });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <dt>GET shorthand payload goes to querystring</dt>\n        <dd><pre><code>request.get(\n  &#x60;${uri}/querystring&#x60;,\n  { foo: &#x27;FOO&#x27;, bar: &#x27;BAR&#x27; },\n  (err, res) =&#x3E; {\n    try {\n      assert.deepEqual(res.body, { foo: &#x27;FOO&#x27;, bar: &#x27;BAR&#x27; });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  }\n);</code></pre></dd>\n        <dt>HEAD shorthand payload goes to querystring</dt>\n        <dd><pre><code>request.head(\n  &#x60;${uri}/querystring-in-header&#x60;,\n  { foo: &#x27;FOO&#x27;, bar: &#x27;BAR&#x27; },\n  (err, res) =&#x3E; {\n    try {\n      assert.deepEqual(JSON.parse(res.headers.query), {\n        foo: &#x27;FOO&#x27;,\n        bar: &#x27;BAR&#x27;\n      });\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  }\n);</code></pre></dd>\n        <dt>request(method, url)</dt>\n        <dd><pre><code>request(&#x27;GET&#x27;, &#x60;${uri}/foo&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;bar&#x27;, res.body.foo);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request(url)</dt>\n        <dd><pre><code>request(&#x60;${uri}/foo&#x60;).end((err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;bar&#x27;, res.body.foo);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request(url, fn)</dt>\n        <dd><pre><code>request(&#x60;${uri}/foo&#x60;, (err, res) =&#x3E; {\n  try {\n    assert.equal(&#x27;bar&#x27;, res.body.foo);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>req.timeout(ms)</dt>\n        <dd><pre><code>const req = request.get(&#x60;${uri}/delay/3000&#x60;).timeout(1000);\nreq.end((err, res) =&#x3E; {\n  try {\n    assert(err, &#x27;error missing&#x27;);\n    assert.equal(1000, err.timeout, &#x27;err.timeout missing&#x27;);\n    assert.equal(\n      &#x27;Timeout of 1000ms exceeded&#x27;,\n      err.message,\n      &#x27;err.message incorrect&#x27;\n    );\n    assert.equal(null, res);\n    assert(req.timedout, true);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>req.timeout(ms) with redirect</dt>\n        <dd><pre><code>const req = request.get(&#x60;${uri}/delay/const&#x60;).timeout(1000);\nreq.end((err, res) =&#x3E; {\n  try {\n    assert(err, &#x27;error missing&#x27;);\n    assert.equal(1000, err.timeout, &#x27;err.timeout missing&#x27;);\n    assert.equal(\n      &#x27;Timeout of 1000ms exceeded&#x27;,\n      err.message,\n      &#x27;err.message incorrect&#x27;\n    );\n    assert.equal(null, res);\n    assert(req.timedout, true);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>request event</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/foo&#x60;)\n  .on(&#x27;request&#x27;, (req) =&#x3E; {\n    try {\n      assert.equal(&#x60;${uri}/foo&#x60;, req.url);\n      next();\n    } catch (err) {\n      next(err);\n    }\n  })\n  .end();</code></pre></dd>\n        <dt>response event</dt>\n        <dd><pre><code>request\n  .get(&#x60;${uri}/foo&#x60;)\n  .on(&#x27;response&#x27;, (res) =&#x3E; {\n    try {\n      assert.equal(&#x27;bar&#x27;, res.body.foo);\n      next();\n    } catch (err) {\n      next(err);\n    }\n  })\n  .end();</code></pre></dd>\n        <dt>response should set statusCode</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/ok&#x60;, (err, res) =&#x3E; {\n  try {\n    assert.strictEqual(res.statusCode, 200);\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n        <dt>req.toJSON()</dt>\n        <dd><pre><code>request.get(&#x60;${uri}/ok&#x60;).end((err, res) =&#x3E; {\n  try {\n    const j = (res.request || res.req).toJSON();\n    [&#x27;url&#x27;, &#x27;method&#x27;, &#x27;data&#x27;, &#x27;headers&#x27;].forEach((prop) =&#x3E; {\n      assert(j.hasOwnProperty(prop));\n    });\n    next();\n  } catch (err_) {\n    next(err_);\n  }\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>.retry(count)</h1>\n      <dl>\n        <dt>should not retry if passed &#x22;0&#x22;</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error&#x60;)\n  .retry(0)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(\n        undefined,\n        err.retries,\n        &#x27;expected an error without .retries&#x27;\n      );\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should not retry if passed an invalid number</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error&#x60;)\n  .retry(-2)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(\n        undefined,\n        err.retries,\n        &#x27;expected an error without .retries&#x27;\n      );\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should not retry if passed undefined</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error&#x60;)\n  .retry(undefined)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(\n        undefined,\n        err.retries,\n        &#x27;expected an error without .retries&#x27;\n      );\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should handle server error after repeat attempt</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error&#x60;)\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(2, err.retries, &#x27;expected an error with .retries&#x27;);\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should retry if passed nothing</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error&#x60;)\n  .retry()\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(1, err.retries, &#x27;expected an error with .retries&#x27;);\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should retry if passed &#x22;true&#x22;</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error&#x60;)\n  .retry(true)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(1, err.retries, &#x27;expected an error with .retries&#x27;);\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should handle successful request after repeat attempt from server error</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error/ok/${uniqid()}&#x60;)\n  .query({ qs: &#x27;present&#x27; })\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(res.ok, &#x27;response should be ok&#x27;);\n      assert(res.text, &#x27;res.text&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should handle server timeout error after repeat attempt</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/delay/400&#x60;)\n  .timeout(200)\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(2, err.retries, &#x27;expected an error with .retries&#x27;);\n      assert.equal(\n        &#x27;number&#x27;,\n        typeof err.timeout,\n        &#x27;expected an error with .timeout&#x27;\n      );\n      assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should handle successful request after repeat attempt from server timeout</dt>\n        <dd><pre><code>const url = &#x60;/delay/1200/ok/${uniqid()}?built=in&#x60;;\nrequest\n  .get(base + url)\n  .query(&#x27;string=ified&#x27;)\n  .query({ json: &#x27;ed&#x27; })\n  .timeout(600)\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(res.ok, &#x27;response should be ok&#x27;);\n      assert.equal(res.text, &#x60;ok = ${url}&#x26;string=ified&#x26;json=ed&#x60;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should handle successful request after repeat attempt from server timeout when using .then(fulfill, reject)</dt>\n        <dd><pre><code>const url = &#x60;/delay/1200/ok/${uniqid()}?built=in&#x60;;\nrequest\n  .get(base + url)\n  .query(&#x27;string=ified&#x27;)\n  .query({ json: &#x27;ed&#x27; })\n  .timeout(600)\n  .retry(1)\n  .then((res, err) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(res.ok, &#x27;response should be ok&#x27;);\n      assert.equal(res.text, &#x60;ok = ${url}&#x26;string=ified&#x26;json=ed&#x60;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should correctly abort a retry attempt</dt>\n        <dd><pre><code>let aborted = false;\nconst req = request.get(&#x60;${base}/delay/400&#x60;).timeout(200).retry(2);\nreq.end((err, res) =&#x3E; {\n  try {\n    assert(false, &#x27;should not complete the request&#x27;);\n  } catch (err_) {\n    done(err_);\n  }\n});\nreq.on(&#x27;abort&#x27;, () =&#x3E; {\n  aborted = true;\n});\nsetTimeout(() =&#x3E; {\n  req.abort();\n  setTimeout(() =&#x3E; {\n    try {\n      assert(aborted, &#x27;should be aborted&#x27;);\n      done();\n    } catch (err) {\n      done(err);\n    }\n  }, 150);\n}, 150);</code></pre></dd>\n        <dt>should correctly retain header fields</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/error/ok/${uniqid()}&#x60;)\n  .query({ qs: &#x27;present&#x27; })\n  .retry(2)\n  .set(&#x27;X-Foo&#x27;, &#x27;bar&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(res.body);\n      res.body.should.have.property(&#x27;x-foo&#x27;, &#x27;bar&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should not retry on 4xx responses</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/bad-request&#x60;)\n  .retry(2)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(0, err.retries, &#x27;expected an error with 0 .retries&#x27;);\n      assert.equal(400, err.status, &#x27;expected an error status of 400&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should execute callback on retry if passed</dt>\n        <dd><pre><code>let callbackCallCount = 0;\nfunction retryCallback(request) {\n  callbackCallCount++;\n}\nrequest\n  .get(&#x60;${base}/error&#x60;)\n  .retry(2, retryCallback)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(err, &#x27;expected an error&#x27;);\n      assert.equal(2, err.retries, &#x27;expected an error with .retries&#x27;);\n      assert.equal(500, err.status, &#x27;expected an error status of 500&#x27;);\n      assert.equal(\n        2,\n        callbackCallCount,\n        &#x27;expected the callback to be called on each retry&#x27;\n      );\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>.timeout(ms)</h1>\n      <dl>\n        <section class="suite">\n          <h1>when timeout is exceeded</h1>\n          <dl>\n            <dt>should error</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/500&#x60;)\n  .timeout(150)\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(\n      &#x27;number&#x27;,\n      typeof err.timeout,\n      &#x27;expected an error with .timeout&#x27;\n    );\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should error in promise interface </dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/500&#x60;)\n  .timeout(150)\n  .catch((err) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(\n      &#x27;number&#x27;,\n      typeof err.timeout,\n      &#x27;expected an error with .timeout&#x27;\n    );\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should handle gzip timeout</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/zip&#x60;)\n  .timeout(150)\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(\n      &#x27;number&#x27;,\n      typeof err.timeout,\n      &#x27;expected an error with .timeout&#x27;\n    );\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should handle buffer timeout</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/json&#x60;)\n  .buffer(true)\n  .timeout(150)\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(\n      &#x27;number&#x27;,\n      typeof err.timeout,\n      &#x27;expected an error with .timeout&#x27;\n    );\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should error on deadline</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/500&#x60;)\n  .timeout({ deadline: 150 })\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(\n      &#x27;number&#x27;,\n      typeof err.timeout,\n      &#x27;expected an error with .timeout&#x27;\n    );\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should support setting individual options</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/500&#x60;)\n  .timeout({ deadline: 10 })\n  .timeout({ response: 99999 })\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    assert.equal(&#x27;ETIME&#x27;, err.errno);\n    done();\n  });</code></pre></dd>\n            <dt>should error on response</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/500&#x60;)\n  .timeout({ response: 150 })\n  .end((err, res) =&#x3E; {\n    assert(err, &#x27;expected an error&#x27;);\n    assert.equal(\n      &#x27;number&#x27;,\n      typeof err.timeout,\n      &#x27;expected an error with .timeout&#x27;\n    );\n    assert.equal(&#x27;ECONNABORTED&#x27;, err.code, &#x27;expected abort error code&#x27;);\n    assert.equal(&#x27;ETIMEDOUT&#x27;, err.errno);\n    done();\n  });</code></pre></dd>\n            <dt>should accept slow body with fast response</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/delay/slowbody&#x60;)\n  .timeout({ response: 1000 })\n  .on(&#x27;progress&#x27;, () =&#x3E; {\n    // This only makes the test faster without relying on arbitrary timeouts\n    request.get(&#x60;${base}/delay/slowbody/finish&#x60;).end();\n  })\n  .end(done);</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <section class="suite">\n          <h1>use</h1>\n          <dl>\n            <dt>should use plugin success</dt>\n            <dd><pre><code>const now = &#x60;${Date.now()}&#x60;;\nfunction uuid(req) {\n  req.set(&#x27;X-UUID&#x27;, now);\n  return req;\n}\nfunction prefix(req) {\n  req.url = uri + req.url;\n  return req;\n}\nrequest\n  .get(&#x27;/echo&#x27;)\n  .use(uuid)\n  .use(prefix)\n  .end((err, res) =&#x3E; {\n    assert.strictEqual(res.statusCode, 200);\n    assert.equal(res.get(&#x27;X-UUID&#x27;), now);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>subclass</h1>\n      <dl>\n        <dt>should be an instance of Request</dt>\n        <dd><pre><code>const req = request.get(&#x27;/&#x27;);\nassert(req instanceof request.Request);</code></pre></dd>\n        <dt>should use patched subclass</dt>\n        <dd><pre><code>assert(OriginalRequest);\nlet constructorCalled;\nlet sendCalled;\nfunction NewRequest(...args) {\n  constructorCalled = true;\n  OriginalRequest.apply(this, args);\n}\nNewRequest.prototype = Object.create(OriginalRequest.prototype);\nNewRequest.prototype.send = function () {\n  sendCalled = true;\n  return this;\n};\nrequest.Request = NewRequest;\nconst req = request.get(&#x27;/&#x27;).send();\nassert(constructorCalled);\nassert(sendCalled);\nassert(req instanceof NewRequest);\nassert(req instanceof OriginalRequest);</code></pre></dd>\n        <dt>should use patched subclass in agent too</dt>\n        <dd><pre><code>if (!request.agent) return; // Node-only\nfunction NewRequest(...args) {\n  OriginalRequest.apply(this, args);\n}\nNewRequest.prototype = Object.create(OriginalRequest.prototype);\nrequest.Request = NewRequest;\nconst req = request.agent().del(&#x27;/&#x27;);\nassert(req instanceof NewRequest);\nassert(req instanceof OriginalRequest);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <section class="suite">\n          <h1>persistent agent</h1>\n          <dl>\n            <dt>should gain a session on POST</dt>\n            <dd><pre><code>agent3.post(&#x60;${base}/signin&#x60;).then((res) =&#x3E; {\n        res.should.have.status(200);\n        should.not.exist(res.headers[&#x27;set-cookie&#x27;]);\n        res.text.should.containEql(&#x27;dashboard&#x27;);\n      })</code></pre></dd>\n            <dt>should start with empty session (set cookies)</dt>\n            <dd><pre><code>agent1.get(&#x60;${base}/dashboard&#x60;).end((err, res) =&#x3E; {\n  should.exist(err);\n  res.should.have.status(401);\n  should.exist(res.headers[&#x27;set-cookie&#x27;]);\n  done();\n});</code></pre></dd>\n            <dt>should gain a session (cookies already set)</dt>\n            <dd><pre><code>agent1.post(&#x60;${base}/signin&#x60;).then((res) =&#x3E; {\n        res.should.have.status(200);\n        should.not.exist(res.headers[&#x27;set-cookie&#x27;]);\n        res.text.should.containEql(&#x27;dashboard&#x27;);\n      })</code></pre></dd>\n            <dt>should persist cookies across requests</dt>\n            <dd><pre><code>agent1.get(&#x60;${base}/dashboard&#x60;).then((res) =&#x3E; {\n        res.should.have.status(200);\n      })</code></pre></dd>\n            <dt>should have the cookie set in the end callback</dt>\n            <dd><pre><code>agent4\n        .post(&#x60;${base}/setcookie&#x60;)\n        .then(() =&#x3E; agent4.get(&#x60;${base}/getcookie&#x60;))\n        .then((res) =&#x3E; {\n          res.should.have.status(200);\n          assert.strictEqual(res.text, &#x27;jar&#x27;);\n        })</code></pre></dd>\n            <dt>should not share cookies</dt>\n            <dd><pre><code>agent2.get(&#x60;${base}/dashboard&#x60;).end((err, res) =&#x3E; {\n  should.exist(err);\n  res.should.have.status(401);\n  done();\n});</code></pre></dd>\n            <dt>should not lose cookies between agents</dt>\n            <dd><pre><code>agent1.get(&#x60;${base}/dashboard&#x60;).then((res) =&#x3E; {\n        res.should.have.status(200);\n      })</code></pre></dd>\n            <dt>should be able to follow redirects</dt>\n            <dd><pre><code>agent1.get(base).then((res) =&#x3E; {\n        res.should.have.status(200);\n        res.text.should.containEql(&#x27;dashboard&#x27;);\n      })</code></pre></dd>\n            <dt>should be able to post redirects</dt>\n            <dd><pre><code>agent1\n        .post(&#x60;${base}/redirect&#x60;)\n        .send({ foo: &#x27;bar&#x27;, baz: &#x27;blaaah&#x27; })\n        .then((res) =&#x3E; {\n          res.should.have.status(200);\n          res.text.should.containEql(&#x27;simple&#x27;);\n          res.redirects.should.eql([&#x60;${base}/simple&#x60;]);\n        })</code></pre></dd>\n            <dt>should be able to limit redirects</dt>\n            <dd><pre><code>agent1\n  .get(base)\n  .redirects(0)\n  .end((err, res) =&#x3E; {\n    should.exist(err);\n    res.should.have.status(302);\n    res.redirects.should.eql([]);\n    res.header.location.should.equal(&#x27;/dashboard&#x27;);\n    done();\n  });</code></pre></dd>\n            <dt>should be able to create a new session (clear cookie)</dt>\n            <dd><pre><code>agent1.post(&#x60;${base}/signout&#x60;).then((res) =&#x3E; {\n        res.should.have.status(200);\n        should.exist(res.headers[&#x27;set-cookie&#x27;]);\n      })</code></pre></dd>\n            <dt>should regenerate with an empty session</dt>\n            <dd><pre><code>agent1.get(&#x60;${base}/dashboard&#x60;).end((err, res) =&#x3E; {\n  should.exist(err);\n  res.should.have.status(401);\n  should.not.exist(res.headers[&#x27;set-cookie&#x27;]);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>Basic auth</h1>\n      <dl>\n        <section class="suite">\n          <h1>when credentials are present in url</h1>\n          <dl>\n            <dt>should set Authorization</dt>\n            <dd><pre><code>const new_url = URL.parse(base);\nnew_url.auth = &#x27;tobi:learnboost&#x27;;\nnew_url.pathname = &#x27;/basic-auth&#x27;;\nrequest.get(URL.format(new_url)).end((err, res) =&#x3E; {\n  res.status.should.equal(200);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.auth(user, pass)</h1>\n          <dl>\n            <dt>should set Authorization</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/basic-auth&#x60;)\n  .auth(&#x27;tobi&#x27;, &#x27;learnboost&#x27;)\n  .end((err, res) =&#x3E; {\n    res.status.should.equal(200);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.auth(user + &#x22;:&#x22; + pass)</h1>\n          <dl>\n            <dt>should set authorization</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/basic-auth/again&#x60;)\n  .auth(&#x27;tobi&#x27;)\n  .end((err, res) =&#x3E; {\n    res.status.should.eql(200);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>[node] request</h1>\n      <dl>\n        <dt>should send body with .get().send()</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/echo&#x60;)\n  .set(&#x27;Content-Type&#x27;, &#x27;text/plain&#x27;)\n  .send(&#x27;wahoo&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;wahoo&#x27;, res.text);\n      next();\n    } catch (err_) {\n      next(err_);\n    }\n  });</code></pre></dd>\n        <section class="suite">\n          <h1>with an url</h1>\n          <dl>\n            <dt>should preserve the encoding of the url</dt>\n            <dd><pre><code>request.get(&#x60;${base}/url?a=(b%29&#x60;).end((err, res) =&#x3E; {\n  assert.equal(&#x27;/url?a=(b%29&#x27;, res.text);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with an object</h1>\n          <dl>\n            <dt>should format the url</dt>\n            <dd><pre><code>request.get(url.parse(&#x60;${base}/login&#x60;)).then((res) =&#x3E; {\n        assert(res.ok);\n      })</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>without a schema</h1>\n          <dl>\n            <dt>should default to http</dt>\n            <dd><pre><code>request.get(&#x27;localhost:5000/login&#x27;).then((res) =&#x3E; {\n        assert.equal(res.status, 200);\n      })</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.toJSON()</h1>\n          <dl>\n            <dt>should describe the response</dt>\n            <dd><pre><code>request\n        .post(&#x60;${base}/echo&#x60;)\n        .send({ foo: &#x27;baz&#x27; })\n        .then((res) =&#x3E; {\n          const obj = res.toJSON();\n          assert.equal(&#x27;object&#x27;, typeof obj.header);\n          assert.equal(&#x27;object&#x27;, typeof obj.req);\n          assert.equal(200, obj.status);\n          assert.equal(&#x27;{&#x22;foo&#x22;:&#x22;baz&#x22;}&#x27;, obj.text);\n        })</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>res.links</h1>\n          <dl>\n            <dt>should default to an empty object</dt>\n            <dd><pre><code>request.get(&#x60;${base}/login&#x60;).then((res) =&#x3E; {\n        res.links.should.eql({});\n      })</code></pre></dd>\n            <dt>should parse the Link header field</dt>\n            <dd><pre><code>request.get(&#x60;${base}/links&#x60;).end((err, res) =&#x3E; {\n  res.links.next.should.equal(\n    &#x27;https://api.github.com/repos/visionmedia/mocha/issues?page=2&#x27;\n  );\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.unset(field)</h1>\n          <dl>\n            <dt>should remove the header field</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .unset(&#x27;User-Agent&#x27;)\n  .end((err, res) =&#x3E; {\n    assert.equal(void 0, res.header[&#x27;user-agent&#x27;]);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>case-insensitive</h1>\n          <dl>\n            <dt>should set/get header fields case-insensitively</dt>\n            <dd><pre><code>const r = request.post(&#x60;${base}/echo&#x60;);\nr.set(&#x27;MiXeD&#x27;, &#x27;helloes&#x27;);\nassert.strictEqual(r.get(&#x27;mixed&#x27;), &#x27;helloes&#x27;);</code></pre></dd>\n            <dt>should unset header fields case-insensitively</dt>\n            <dd><pre><code>const r = request.post(&#x60;${base}/echo&#x60;);\nr.set(&#x27;MiXeD&#x27;, &#x27;helloes&#x27;);\nr.unset(&#x27;MIXED&#x27;);\nassert.strictEqual(r.get(&#x27;mixed&#x27;), undefined);</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.write(str)</h1>\n          <dl>\n            <dt>should write the given data</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/echo&#x60;);\nreq.set(&#x27;Content-Type&#x27;, &#x27;application/json&#x27;);\nassert.equal(&#x27;boolean&#x27;, typeof req.write(&#x27;{&#x22;name&#x22;&#x27;));\nassert.equal(&#x27;boolean&#x27;, typeof req.write(&#x27;:&#x22;tobi&#x22;}&#x27;));\nreq.end((err, res) =&#x3E; {\n  res.text.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.pipe(stream)</h1>\n          <dl>\n            <dt>should pipe the response to the given stream</dt>\n            <dd><pre><code>const stream = new EventEmitter();\nstream.buf = &#x27;&#x27;;\nstream.writable = true;\nstream.write = function (chunk) {\n  this.buf += chunk;\n};\nstream.end = function () {\n  this.buf.should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n  done();\n};\nrequest.post(&#x60;${base}/echo&#x60;).send(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;).pipe(stream);</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.buffer()</h1>\n          <dl>\n            <dt>should enable buffering</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/custom&#x60;)\n  .buffer()\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.equal(&#x27;custom stuff&#x27;, res.text);\n    assert(res.buffered);\n    done();\n  });</code></pre></dd>\n            <dt>should take precedence over request.buffer[&#x27;someMimeType&#x27;] = false</dt>\n            <dd><pre><code>const type = &#x27;application/barbaz&#x27;;\nconst send = &#x27;some text&#x27;;\nrequest.buffer[type] = false;\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .buffer()\n  .end((err, res) =&#x3E; {\n    delete request.buffer[type];\n    assert.ifError(err);\n    assert.equal(res.type, type);\n    assert.equal(send, res.text);\n    assert(res.buffered);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.buffer(false)</h1>\n          <dl>\n            <dt>should disable buffering</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .type(&#x27;application/x-dog&#x27;)\n  .send(&#x27;hello this is dog&#x27;)\n  .buffer(false)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.equal(null, res.text);\n    res.body.should.eql({});\n    let buf = &#x27;&#x27;;\n    res.setEncoding(&#x27;utf8&#x27;);\n    res.on(&#x27;data&#x27;, (chunk) =&#x3E; {\n      buf += chunk;\n    });\n    res.on(&#x27;end&#x27;, () =&#x3E; {\n      buf.should.equal(&#x27;hello this is dog&#x27;);\n      done();\n    });\n  });</code></pre></dd>\n            <dt>should take precedence over request.buffer[&#x27;someMimeType&#x27;] = true</dt>\n            <dd><pre><code>const type = &#x27;application/foobar&#x27;;\nconst send = &#x27;hello this is a dog&#x27;;\nrequest.buffer[type] = true;\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .buffer(false)\n  .end((err, res) =&#x3E; {\n    delete request.buffer[type];\n    assert.ifError(err);\n    assert.equal(null, res.text);\n    assert.equal(res.type, type);\n    assert(!res.buffered);\n    res.body.should.eql({});\n    let buf = &#x27;&#x27;;\n    res.setEncoding(&#x27;utf8&#x27;);\n    res.on(&#x27;data&#x27;, (chunk) =&#x3E; {\n      buf += chunk;\n    });\n    res.on(&#x27;end&#x27;, () =&#x3E; {\n      buf.should.equal(send);\n      done();\n    });\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.withCredentials()</h1>\n          <dl>\n            <dt>should not throw an error when using the client-side &#x22;withCredentials&#x22; method</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/custom&#x60;)\n  .withCredentials()\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.agent()</h1>\n          <dl>\n            <dt>should return the defaut agent</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/echo&#x60;);\nreq.agent().should.equal(false);\ndone();</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.agent(undefined)</h1>\n          <dl>\n            <dt>should set an agent to undefined and ensure it is chainable</dt>\n            <dd><pre><code>const req = request.get(&#x60;${base}/echo&#x60;);\nconst ret = req.agent(undefined);\nret.should.equal(req);\nassert.strictEqual(req.agent(), undefined);\ndone();</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>.agent(new http.Agent())</h1>\n          <dl>\n            <dt>should set passed agent</dt>\n            <dd><pre><code>const http = require(&#x27;http&#x27;);\nconst req = request.get(&#x60;${base}/echo&#x60;);\nconst agent = new http.Agent();\nconst ret = req.agent(agent);\nret.should.equal(req);\nreq.agent().should.equal(agent);\ndone();</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with a content type other than application/json or text/*</h1>\n          <dl>\n            <dt>should still use buffering</dt>\n            <dd><pre><code>return request\n  .post(&#x60;${base}/echo&#x60;)\n  .type(&#x27;application/x-dog&#x27;)\n  .send(&#x27;hello this is dog&#x27;)\n  .then((res) =&#x3E; {\n    assert.equal(null, res.text);\n    assert.equal(res.body.toString(), &#x27;hello this is dog&#x27;);\n    res.buffered.should.be.true;\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>content-length</h1>\n          <dl>\n            <dt>should be set to the byte length of a non-buffer object</dt>\n            <dd><pre><code>const decoder = new StringDecoder(&#x27;utf8&#x27;);\nlet img = fs.readFileSync(&#x60;${__dirname}/fixtures/test.png&#x60;);\nimg = decoder.write(img);\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .type(&#x27;application/x-image&#x27;)\n  .send(img)\n  .buffer(false)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert(!res.buffered);\n    assert.equal(res.header[&#x27;content-length&#x27;], Buffer.byteLength(img));\n    done();\n  });</code></pre></dd>\n            <dt>should be set to the length of a buffer object</dt>\n            <dd><pre><code>const img = fs.readFileSync(&#x60;${__dirname}/fixtures/test.png&#x60;);\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .type(&#x27;application/x-image&#x27;)\n  .send(img)\n  .buffer(true)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert(res.buffered);\n    assert.equal(res.header[&#x27;content-length&#x27;], img.length);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.buffer[&#x27;someMimeType&#x27;]</h1>\n      <dl>\n        <dt>should respect that agent.buffer(true) takes precedent</dt>\n        <dd><pre><code>const agent = request.agent();\nagent.buffer(true);\nconst type = &#x27;application/somerandomtype&#x27;;\nconst send = &#x27;somerandomtext&#x27;;\nrequest.buffer[type] = false;\nagent\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .end((err, res) =&#x3E; {\n    delete request.buffer[type];\n    assert.ifError(err);\n    assert.equal(res.type, type);\n    assert.equal(send, res.text);\n    assert(res.buffered);\n    done();\n  });</code></pre></dd>\n        <dt>should respect that agent.buffer(false) takes precedent</dt>\n        <dd><pre><code>const agent = request.agent();\nagent.buffer(false);\nconst type = &#x27;application/barrr&#x27;;\nconst send = &#x27;some random text2&#x27;;\nrequest.buffer[type] = true;\nagent\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .end((err, res) =&#x3E; {\n    delete request.buffer[type];\n    assert.ifError(err);\n    assert.equal(null, res.text);\n    assert.equal(res.type, type);\n    assert(!res.buffered);\n    res.body.should.eql({});\n    let buf = &#x27;&#x27;;\n    res.setEncoding(&#x27;utf8&#x27;);\n    res.on(&#x27;data&#x27;, (chunk) =&#x3E; {\n      buf += chunk;\n    });\n    res.on(&#x27;end&#x27;, () =&#x3E; {\n      buf.should.equal(send);\n      done();\n    });\n  });</code></pre></dd>\n        <dt>should disable buffering for that mimetype when false</dt>\n        <dd><pre><code>const type = &#x27;application/bar&#x27;;\nconst send = &#x27;some random text&#x27;;\nrequest.buffer[type] = false;\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .end((err, res) =&#x3E; {\n    delete request.buffer[type];\n    assert.ifError(err);\n    assert.equal(null, res.text);\n    assert.equal(res.type, type);\n    assert(!res.buffered);\n    res.body.should.eql({});\n    let buf = &#x27;&#x27;;\n    res.setEncoding(&#x27;utf8&#x27;);\n    res.on(&#x27;data&#x27;, (chunk) =&#x3E; {\n      buf += chunk;\n    });\n    res.on(&#x27;end&#x27;, () =&#x3E; {\n      buf.should.equal(send);\n      done();\n    });\n  });</code></pre></dd>\n        <dt>should enable buffering for that mimetype when true</dt>\n        <dd><pre><code>const type = &#x27;application/baz&#x27;;\nconst send = &#x27;woooo&#x27;;\nrequest.buffer[type] = true;\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .end((err, res) =&#x3E; {\n    delete request.buffer[type];\n    assert.ifError(err);\n    assert.equal(res.type, type);\n    assert.equal(send, res.text);\n    assert(res.buffered);\n    done();\n  });</code></pre></dd>\n        <dt>should fallback to default handling for that mimetype when undefined</dt>\n        <dd><pre><code>const type = &#x27;application/bazzz&#x27;;\nconst send = &#x27;woooooo&#x27;;\nreturn request\n  .post(&#x60;${base}/echo&#x60;)\n  .type(type)\n  .send(send)\n  .then((res) =&#x3E; {\n    assert.equal(res.type, type);\n    assert.equal(send, res.body.toString());\n    assert(res.buffered);\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>exports</h1>\n      <dl>\n        <dt>should expose .protocols</dt>\n        <dd><pre><code>Object.keys(request.protocols).should.eql([&#x27;http:&#x27;, &#x27;https:&#x27;, &#x27;http2:&#x27;]);</code></pre></dd>\n        <dt>should expose .serialize</dt>\n        <dd><pre><code>Object.keys(request.serialize).should.eql([\n  &#x27;application/x-www-form-urlencoded&#x27;,\n  &#x27;application/json&#x27;\n]);</code></pre></dd>\n        <dt>should expose .parse</dt>\n        <dd><pre><code>Object.keys(request.parse).should.eql([\n  &#x27;application/x-www-form-urlencoded&#x27;,\n  &#x27;application/json&#x27;,\n  &#x27;text&#x27;,\n  &#x27;application/octet-stream&#x27;,\n  &#x27;application/pdf&#x27;,\n  &#x27;image&#x27;\n]);</code></pre></dd>\n        <dt>should export .buffer</dt>\n        <dd><pre><code>Object.keys(request.buffer).should.eql([]);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>flags</h1>\n      <dl>\n        <section class="suite">\n          <h1>with 4xx response</h1>\n          <dl>\n            <dt>should set res.error and res.clientError</dt>\n            <dd><pre><code>request.get(&#x60;${base}/notfound&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(!res.ok, &#x27;response should not be ok&#x27;);\n  assert(res.error, &#x27;response should be an error&#x27;);\n  assert(res.clientError, &#x27;response should be a client error&#x27;);\n  assert(!res.serverError, &#x27;response should not be a server error&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 5xx response</h1>\n          <dl>\n            <dt>should set res.error and res.serverError</dt>\n            <dd><pre><code>request.get(&#x60;${base}/error&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(!res.ok, &#x27;response should not be ok&#x27;);\n  assert(!res.notFound, &#x27;response should not be notFound&#x27;);\n  assert(res.error, &#x27;response should be an error&#x27;);\n  assert(!res.clientError, &#x27;response should not be a client error&#x27;);\n  assert(res.serverError, &#x27;response should be a server error&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 404 Not Found</h1>\n          <dl>\n            <dt>should res.notFound</dt>\n            <dd><pre><code>request.get(&#x60;${base}/notfound&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(res.notFound, &#x27;response should be .notFound&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 400 Bad Request</h1>\n          <dl>\n            <dt>should set req.badRequest</dt>\n            <dd><pre><code>request.get(&#x60;${base}/bad-request&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(res.badRequest, &#x27;response should be .badRequest&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 401 Bad Request</h1>\n          <dl>\n            <dt>should set res.unauthorized</dt>\n            <dd><pre><code>request.get(&#x60;${base}/unauthorized&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(res.unauthorized, &#x27;response should be .unauthorized&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 406 Not Acceptable</h1>\n          <dl>\n            <dt>should set res.notAcceptable</dt>\n            <dd><pre><code>request.get(&#x60;${base}/not-acceptable&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(res.notAcceptable, &#x27;response should be .notAcceptable&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 204 No Content</h1>\n          <dl>\n            <dt>should set res.noContent</dt>\n            <dd><pre><code>request.get(&#x60;${base}/no-content&#x60;).end((err, res) =&#x3E; {\n  assert(!err);\n  assert(res.noContent, &#x27;response should be .noContent&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 201 Created</h1>\n          <dl>\n            <dt>should set res.created</dt>\n            <dd><pre><code>request.post(&#x60;${base}/created&#x60;).end((err, res) =&#x3E; {\n  assert(!err);\n  assert(res.created, &#x27;response should be .created&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>with 422 Unprocessable Entity</h1>\n          <dl>\n            <dt>should set res.unprocessableEntity</dt>\n            <dd><pre><code>request.post(&#x60;${base}/unprocessable-entity&#x60;).end((err, res) =&#x3E; {\n  assert(err);\n  assert(\n    res.unprocessableEntity,\n    &#x27;response should be .unprocessableEntity&#x27;\n  );\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>Merging objects</h1>\n      <dl>\n        <dt>Don&#x27;t mix Buffer and JSON</dt>\n        <dd><pre><code>assert.throws(() =&#x3E; {\n  request\n    .post(&#x27;/echo&#x27;)\n    .send(Buffer.from(&#x27;some buffer&#x27;))\n    .send({ allowed: false });\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.send(String)</h1>\n      <dl>\n        <dt>should default to &#x22;form&#x22;</dt>\n        <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .send(&#x27;user[name]=tj&#x27;)\n  .send(&#x27;user[email]=tj@vision-media.ca&#x27;)\n  .end((err, res) =&#x3E; {\n    res.header[&#x27;content-type&#x27;].should.equal(\n      &#x27;application/x-www-form-urlencoded&#x27;\n    );\n    res.body.should.eql({\n      user: { name: &#x27;tj&#x27;, email: &#x27;tj@vision-media.ca&#x27; }\n    });\n    done();\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>res.body</h1>\n      <dl>\n        <section class="suite">\n          <h1>application/x-www-form-urlencoded</h1>\n          <dl>\n            <dt>should parse the body</dt>\n            <dd><pre><code>request.get(&#x60;${base}/form-data&#x60;).end((err, res) =&#x3E; {\n  res.text.should.equal(&#x27;pet[name]=manny&#x27;);\n  res.body.should.eql({ pet: { name: &#x27;manny&#x27; } });\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>https</h1>\n      <dl>\n        <section class="suite">\n          <h1>certificate authority</h1>\n          <dl>\n            <section class="suite">\n              <h1>request</h1>\n              <dl>\n                <dt>should give a good response</dt>\n                <dd><pre><code>request\n  .get(testEndpoint)\n  .ca(ca)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert(res.ok);\n    assert.strictEqual(&#x27;Safe and secure!&#x27;, res.text);\n    done();\n  });</code></pre></dd>\n                <dt>should reject unauthorized response</dt>\n                <dd><pre><code>return request\n  .get(testEndpoint)\n  .trustLocalhost(false)\n  .then(\n    () =&#x3E; {\n      throw new Error(&#x27;Allows MITM&#x27;);\n    },\n    () =&#x3E; {}\n  );</code></pre></dd>\n                <dt>should not reject unauthorized response</dt>\n                <dd><pre><code>return request\n  .get(testEndpoint)\n  .disableTLSCerts()\n  .then(({ status }) =&#x3E; {\n    assert.strictEqual(status, 200);\n  });</code></pre></dd>\n                <dt>should trust localhost unauthorized response</dt>\n                <dd><pre><code>return request.get(testEndpoint).trustLocalhost(true);</code></pre></dd>\n                <dt>should trust overriden localhost unauthorized response</dt>\n                <dd><pre><code>return request\n  .get(&#x60;https://example.com:${server.address().port}&#x60;)\n  .connect(&#x27;127.0.0.1&#x27;)\n  .trustLocalhost();</code></pre></dd>\n              </dl>\n            </section>\n            <section class="suite">\n              <h1>.agent</h1>\n              <dl>\n                <dt>should be able to make multiple requests without redefining the certificate</dt>\n                <dd><pre><code>const agent = request.agent({ ca });\nagent.get(testEndpoint).end((err, res) =&#x3E; {\n  assert.ifError(err);\n  assert(res.ok);\n  assert.strictEqual(&#x27;Safe and secure!&#x27;, res.text);\n  agent.get(url.parse(testEndpoint)).end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert(res.ok);\n    assert.strictEqual(&#x27;Safe and secure!&#x27;, res.text);\n    done();\n  });\n});</code></pre></dd>\n              </dl>\n            </section>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>client certificates</h1>\n          <dl>\n            <section class="suite">\n              <h1>request</h1>\n              <dl>\n              </dl>\n            </section>\n            <section class="suite">\n              <h1>.agent</h1>\n              <dl>\n              </dl>\n            </section>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>res.body</h1>\n      <dl>\n        <section class="suite">\n          <h1>image/png</h1>\n          <dl>\n            <dt>should parse the body</dt>\n            <dd><pre><code>request.get(&#x60;${base}/image&#x60;).end((err, res) =&#x3E; {\n  res.type.should.equal(&#x27;image/png&#x27;);\n  Buffer.isBuffer(res.body).should.be.true();\n  (res.body.length - img.length).should.equal(0);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>application/octet-stream</h1>\n          <dl>\n            <dt>should parse the body</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/image-as-octets&#x60;)\n  .buffer(true) // that&#x27;s tech debt :(\n  .end((err, res) =&#x3E; {\n    res.type.should.equal(&#x27;application/octet-stream&#x27;);\n    Buffer.isBuffer(res.body).should.be.true();\n    (res.body.length - img.length).should.equal(0);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>application/octet-stream</h1>\n          <dl>\n            <dt>should parse the body (using responseType)</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/image-as-octets&#x60;)\n  .responseType(&#x27;blob&#x27;)\n  .end((err, res) =&#x3E; {\n    res.type.should.equal(&#x27;application/octet-stream&#x27;);\n    Buffer.isBuffer(res.body).should.be.true();\n    (res.body.length - img.length).should.equal(0);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>zlib</h1>\n      <dl>\n        <dt>should deflate the content</dt>\n        <dd><pre><code>request.get(base).end((err, res) =&#x3E; {\n  res.should.have.status(200);\n  res.text.should.equal(subject);\n  res.headers[&#x27;content-length&#x27;].should.be.below(subject.length);\n  done();\n});</code></pre></dd>\n        <dt>should protect from zip bombs</dt>\n        <dd><pre><code>request\n  .get(base)\n  .buffer(true)\n  .maxResponseSize(1)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.equal(&#x27;Maximum response size reached&#x27;, err &#x26;&#x26; err.message);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n        <dt>should ignore trailing junk</dt>\n        <dd><pre><code>request.get(&#x60;${base}/junk&#x60;).end((err, res) =&#x3E; {\n  res.should.have.status(200);\n  res.text.should.equal(subject);\n  done();\n});</code></pre></dd>\n        <dt>should ignore missing data</dt>\n        <dd><pre><code>request.get(&#x60;${base}/chopped&#x60;).end((err, res) =&#x3E; {\n  assert.equal(undefined, err);\n  res.should.have.status(200);\n  res.text.should.startWith(subject);\n  done();\n});</code></pre></dd>\n        <dt>should handle corrupted responses</dt>\n        <dd><pre><code>request.get(&#x60;${base}/corrupt&#x60;).end((err, res) =&#x3E; {\n  assert(err, &#x27;missing error&#x27;);\n  assert(!res, &#x27;response should not be defined&#x27;);\n  done();\n});</code></pre></dd>\n        <dt>should handle no content with gzip header</dt>\n        <dd><pre><code>request.get(&#x60;${base}/nocontent&#x60;).end((err, res) =&#x3E; {\n  assert.ifError(err);\n  assert(res);\n  res.should.have.status(204);\n  res.text.should.equal(&#x27;&#x27;);\n  res.headers.should.not.have.property(&#x27;content-length&#x27;);\n  done();\n});</code></pre></dd>\n        <section class="suite">\n          <h1>without encoding set</h1>\n          <dl>\n            <dt>should buffer if asked</dt>\n            <dd><pre><code>return request\n  .get(&#x60;${base}/binary&#x60;)\n  .buffer(true)\n  .then((res) =&#x3E; {\n    res.should.have.status(200);\n    assert(res.headers[&#x27;content-length&#x27;]);\n    assert(res.body.byteLength);\n    assert.equal(subject, res.body.toString());\n  });</code></pre></dd>\n            <dt>should emit buffers</dt>\n            <dd><pre><code>request.get(&#x60;${base}/binary&#x60;).end((err, res) =&#x3E; {\n  res.should.have.status(200);\n  res.headers[&#x27;content-length&#x27;].should.be.below(subject.length);\n  res.on(&#x27;data&#x27;, (chunk) =&#x3E; {\n    chunk.should.have.length(subject.length);\n  });\n  res.on(&#x27;end&#x27;, done);\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>Multipart</h1>\n      <dl>\n        <section class="suite">\n          <h1>#field(name, value)</h1>\n          <dl>\n            <dt>should set a multipart field value</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/echo&#x60;);\nreq.field(&#x27;user[name]&#x27;, &#x27;tobi&#x27;);\nreq.field(&#x27;user[age]&#x27;, &#x27;2&#x27;);\nreq.field(&#x27;user[species]&#x27;, &#x27;ferret&#x27;);\nreturn req.then((res) =&#x3E; {\n  res.body[&#x27;user[name]&#x27;].should.equal(&#x27;tobi&#x27;);\n  res.body[&#x27;user[age]&#x27;].should.equal(&#x27;2&#x27;);\n  res.body[&#x27;user[species]&#x27;].should.equal(&#x27;ferret&#x27;);\n});</code></pre></dd>\n            <dt>should work with file attachments</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/echo&#x60;);\nreq.field(&#x27;name&#x27;, &#x27;Tobi&#x27;);\nreq.attach(&#x27;document&#x27;, &#x27;test/node/fixtures/user.html&#x27;);\nreq.field(&#x27;species&#x27;, &#x27;ferret&#x27;);\nreturn req.then((res) =&#x3E; {\n  res.body.name.should.equal(&#x27;Tobi&#x27;);\n  res.body.species.should.equal(&#x27;ferret&#x27;);\n  const html = res.files.document;\n  html.name.should.equal(&#x27;user.html&#x27;);\n  html.type.should.equal(&#x27;text/html&#x27;);\n  read(html.path).should.equal(&#x27;&#x3C;h1&#x3E;name&#x3C;/h1&#x3E;&#x27;);\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>#attach(name, path)</h1>\n          <dl>\n            <dt>should attach a file</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/echo&#x60;);\nreq.attach(&#x27;one&#x27;, &#x27;test/node/fixtures/user.html&#x27;);\nreq.attach(&#x27;two&#x27;, &#x27;test/node/fixtures/user.json&#x27;);\nreq.attach(&#x27;three&#x27;, &#x27;test/node/fixtures/user.txt&#x27;);\nreturn req.then((res) =&#x3E; {\n  const html = res.files.one;\n  const json = res.files.two;\n  const text = res.files.three;\n  html.name.should.equal(&#x27;user.html&#x27;);\n  html.type.should.equal(&#x27;text/html&#x27;);\n  read(html.path).should.equal(&#x27;&#x3C;h1&#x3E;name&#x3C;/h1&#x3E;&#x27;);\n  json.name.should.equal(&#x27;user.json&#x27;);\n  json.type.should.equal(&#x27;application/json&#x27;);\n  read(json.path).should.equal(&#x27;{&#x22;name&#x22;:&#x22;tobi&#x22;}&#x27;);\n  text.name.should.equal(&#x27;user.txt&#x27;);\n  text.type.should.equal(&#x27;text/plain&#x27;);\n  read(text.path).should.equal(&#x27;Tobi&#x27;);\n});</code></pre></dd>\n            <section class="suite">\n              <h1>when a file does not exist</h1>\n              <dl>\n                <dt>should fail the request with an error</dt>\n                <dd><pre><code>const req = request.post(&#x60;${base}/echo&#x60;);\nreq.attach(&#x27;name&#x27;, &#x27;foo&#x27;);\nreq.attach(&#x27;name2&#x27;, &#x27;bar&#x27;);\nreq.attach(&#x27;name3&#x27;, &#x27;baz&#x27;);\nreq.end((err, res) =&#x3E; {\n  assert.ok(Boolean(err), &#x27;Request should have failed.&#x27;);\n  err.code.should.equal(&#x27;ENOENT&#x27;);\n  err.message.should.containEql(&#x27;ENOENT&#x27;);\n  err.path.should.equal(&#x27;foo&#x27;);\n  done();\n});</code></pre></dd>\n                <dt>promise should fail</dt>\n                <dd><pre><code>return request\n  .post(&#x60;${base}/echo&#x60;)\n  .field({ a: 1, b: 2 })\n  .attach(&#x27;c&#x27;, &#x27;does-not-exist.txt&#x27;)\n  .then(\n    (res) =&#x3E; assert.fail(&#x27;It should not allow this&#x27;),\n    (err) =&#x3E; {\n      err.code.should.equal(&#x27;ENOENT&#x27;);\n      err.path.should.equal(&#x27;does-not-exist.txt&#x27;);\n    }\n  );</code></pre></dd>\n                <dt>should report ECONNREFUSED via the callback</dt>\n                <dd><pre><code>request\n  .post(&#x27;http://127.0.0.1:1&#x27;) // nobody is listening there\n  .attach(&#x27;name&#x27;, &#x27;file-does-not-exist&#x27;)\n  .end((err, res) =&#x3E; {\n    assert.ok(Boolean(err), &#x27;Request should have failed&#x27;);\n    err.code.should.equal(&#x27;ECONNREFUSED&#x27;);\n    done();\n  });</code></pre></dd>\n                <dt>should report ECONNREFUSED via Promise</dt>\n                <dd><pre><code>return request\n  .post(&#x27;http://127.0.0.1:1&#x27;) // nobody is listening there\n  .attach(&#x27;name&#x27;, &#x27;file-does-not-exist&#x27;)\n  .then(\n    (res) =&#x3E; assert.fail(&#x27;Request should have failed&#x27;),\n    (err) =&#x3E; err.code.should.equal(&#x27;ECONNREFUSED&#x27;)\n  );</code></pre></dd>\n              </dl>\n            </section>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>#attach(name, path, filename)</h1>\n          <dl>\n            <dt>should use the custom filename</dt>\n            <dd><pre><code>request\n        .post(&#x60;${base}/echo&#x60;)\n        .attach(&#x27;document&#x27;, &#x27;test/node/fixtures/user.html&#x27;, &#x27;doc.html&#x27;)\n        .then((res) =&#x3E; {\n          const html = res.files.document;\n          html.name.should.equal(&#x27;doc.html&#x27;);\n          html.type.should.equal(&#x27;text/html&#x27;);\n          read(html.path).should.equal(&#x27;&#x3C;h1&#x3E;name&#x3C;/h1&#x3E;&#x27;);\n        })</code></pre></dd>\n            <dt>should fire progress event</dt>\n            <dd><pre><code>let loaded = 0;\nlet total = 0;\nlet uploadEventWasFired = false;\nrequest\n  .post(&#x60;${base}/echo&#x60;)\n  .attach(&#x27;document&#x27;, &#x27;test/node/fixtures/user.html&#x27;)\n  .on(&#x27;progress&#x27;, (event) =&#x3E; {\n    total = event.total;\n    loaded = event.loaded;\n    if (event.direction === &#x27;upload&#x27;) {\n      uploadEventWasFired = true;\n    }\n  })\n  .end((err, res) =&#x3E; {\n    if (err) return done(err);\n    const html = res.files.document;\n    html.name.should.equal(&#x27;user.html&#x27;);\n    html.type.should.equal(&#x27;text/html&#x27;);\n    read(html.path).should.equal(&#x27;&#x3C;h1&#x3E;name&#x3C;/h1&#x3E;&#x27;);\n    total.should.equal(223);\n    loaded.should.equal(223);\n    uploadEventWasFired.should.equal(true);\n    done();\n  });</code></pre></dd>\n            <dt>filesystem errors should be caught</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .attach(&#x27;filedata&#x27;, &#x27;test/node/fixtures/non-existent-file.ext&#x27;)\n  .end((err, res) =&#x3E; {\n    assert.ok(Boolean(err), &#x27;Request should have failed.&#x27;);\n    err.code.should.equal(&#x27;ENOENT&#x27;);\n    err.path.should.equal(&#x27;test/node/fixtures/non-existent-file.ext&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>#field(name, val)</h1>\n          <dl>\n            <dt>should set a multipart field value</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .field(&#x27;first-name&#x27;, &#x27;foo&#x27;)\n  .field(&#x27;last-name&#x27;, &#x27;bar&#x27;)\n  .end((err, res) =&#x3E; {\n    if (err) done(err);\n    res.should.be.ok();\n    res.body[&#x27;first-name&#x27;].should.equal(&#x27;foo&#x27;);\n    res.body[&#x27;last-name&#x27;].should.equal(&#x27;bar&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>#field(object)</h1>\n          <dl>\n            <dt>should set multiple multipart fields</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .field({ &#x27;first-name&#x27;: &#x27;foo&#x27;, &#x27;last-name&#x27;: &#x27;bar&#x27; })\n  .end((err, res) =&#x3E; {\n    if (err) done(err);\n    res.should.be.ok();\n    res.body[&#x27;first-name&#x27;].should.equal(&#x27;foo&#x27;);\n    res.body[&#x27;last-name&#x27;].should.equal(&#x27;bar&#x27;);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>with network error</h1>\n      <dl>\n        <dt>should error</dt>\n        <dd><pre><code>request.get(&#x60;http://localhost:${this.port}/&#x60;).end((err, res) =&#x3E; {\n  assert(err, &#x27;expected an error&#x27;);\n  done();\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <section class="suite">\n          <h1>not modified</h1>\n          <dl>\n            <dt>should start with 200</dt>\n            <dd><pre><code>request.get(&#x60;${base}/if-mod&#x60;).end((err, res) =&#x3E; {\n  res.should.have.status(200);\n  res.text.should.match(/^\\d+$/);\n  ts = Number(res.text);\n  done();\n});</code></pre></dd>\n            <dt>should then be 304</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/if-mod&#x60;)\n  .set(&#x27;If-Modified-Since&#x27;, new Date(ts).toUTCString())\n  .end((err, res) =&#x3E; {\n    res.should.have.status(304);\n    // res.text.should.be.empty\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.parse(fn)</h1>\n      <dl>\n        <dt>should take precedence over default parsers</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/manny&#x60;)\n  .parse(request.parse[&#x27;application/json&#x27;])\n  .end((err, res) =&#x3E; {\n    assert(res.ok);\n    assert.equal(&#x27;{&#x22;name&#x22;:&#x22;manny&#x22;}&#x27;, res.text);\n    assert.equal(&#x27;manny&#x27;, res.body.name);\n    done();\n  });</code></pre></dd>\n        <dt>should be the only parser</dt>\n        <dd><pre><code>request\n      .get(&#x60;${base}/image&#x60;)\n      .buffer(false)\n      .parse((res, fn) =&#x3E; {\n        res.on(&#x27;data&#x27;, () =&#x3E; {});\n      })\n      .then((res) =&#x3E; {\n        assert(res.ok);\n        assert.strictEqual(res.text, undefined);\n        res.body.should.eql({});\n      })</code></pre></dd>\n        <dt>should emit error if parser throws</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/manny&#x60;)\n  .parse(() =&#x3E; {\n    throw new Error(&#x27;I am broken&#x27;);\n  })\n  .on(&#x27;error&#x27;, (err) =&#x3E; {\n    err.message.should.equal(&#x27;I am broken&#x27;);\n    done();\n  })\n  .end();</code></pre></dd>\n        <dt>should emit error if parser returns an error</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/manny&#x60;)\n  .parse((res, fn) =&#x3E; {\n    fn(new Error(&#x27;I am broken&#x27;));\n  })\n  .on(&#x27;error&#x27;, (err) =&#x3E; {\n    err.message.should.equal(&#x27;I am broken&#x27;);\n    done();\n  })\n  .end();</code></pre></dd>\n        <dt>should not emit error on chunked json</dt>\n        <dd><pre><code>request.get(&#x60;${base}/chunked-json&#x60;).end((err) =&#x3E; {\n  assert.ifError(err);\n  done();\n});</code></pre></dd>\n        <dt>should not emit error on aborted chunked json</dt>\n        <dd><pre><code>const req = request.get(&#x60;${base}/chunked-json&#x60;);\nreq.end((err) =&#x3E; {\n  assert.ifError(err);\n  done();\n});\nsetTimeout(() =&#x3E; {\n  req.abort();\n}, 50);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>pipe on redirect</h1>\n      <dl>\n        <dt>should follow Location</dt>\n        <dd><pre><code>const stream = fs.createWriteStream(destPath);\nconst redirects = [];\nconst req = request\n  .get(base)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .connect({\n    inapplicable: &#x27;should be ignored&#x27;\n  });\nstream.on(&#x27;finish&#x27;, () =&#x3E; {\n  redirects.should.eql([&#x27;/movies&#x27;, &#x27;/movies/all&#x27;, &#x27;/movies/all/0&#x27;]);\n  fs.readFileSync(destPath, &#x27;utf8&#x27;).should.eql(&#x27;first movie page&#x27;);\n  done();\n});\nreq.pipe(stream);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request pipe</h1>\n      <dl>\n        <dt>should act as a writable stream</dt>\n        <dd><pre><code>const req = request.post(base);\nconst stream = fs.createReadStream(&#x27;test/node/fixtures/user.json&#x27;);\nreq.type(&#x27;json&#x27;);\nreq.on(&#x27;response&#x27;, (res) =&#x3E; {\n  res.body.should.eql({ name: &#x27;tobi&#x27; });\n  done();\n});\nstream.pipe(req);</code></pre></dd>\n        <dt>end() stops piping</dt>\n        <dd><pre><code>const stream = fs.createWriteStream(destPath);\nrequest.get(base).end((err, res) =&#x3E; {\n  try {\n    res.pipe(stream);\n    return done(new Error(&#x27;Did not prevent nonsense pipe&#x27;));\n  } catch {\n    /* expected error */\n  }\n  done();\n});</code></pre></dd>\n        <dt>should act as a readable stream</dt>\n        <dd><pre><code>const stream = fs.createWriteStream(destPath);\nlet responseCalled = false;\nconst req = request.get(base);\nreq.type(&#x27;json&#x27;);\nreq.on(&#x27;response&#x27;, (res) =&#x3E; {\n  res.status.should.eql(200);\n  responseCalled = true;\n});\nstream.on(&#x27;finish&#x27;, () =&#x3E; {\n  JSON.parse(fs.readFileSync(destPath, &#x27;utf8&#x27;)).should.eql({\n    name: &#x27;tobi&#x27;\n  });\n  responseCalled.should.be.true();\n  done();\n});\nreq.pipe(stream);</code></pre></dd>\n        <dt>should follow redirects</dt>\n        <dd><pre><code>const stream = fs.createWriteStream(destPath);\nlet responseCalled = false;\nconst req = request.get(base + &#x27;/redirect&#x27;);\nreq.type(&#x27;json&#x27;);\nreq.on(&#x27;response&#x27;, (res) =&#x3E; {\n  res.status.should.eql(200);\n  responseCalled = true;\n});\nstream.on(&#x27;finish&#x27;, () =&#x3E; {\n  JSON.parse(fs.readFileSync(destPath, &#x27;utf8&#x27;)).should.eql({\n    name: &#x27;tobi&#x27;\n  });\n  responseCalled.should.be.true();\n  done();\n});\nreq.pipe(stream);</code></pre></dd>\n        <dt>should not throw on bad redirects</dt>\n        <dd><pre><code>const stream = fs.createWriteStream(destPath);\nlet responseCalled = false;\nlet errorCalled = false;\nconst req = request.get(base + &#x27;/badRedirectNoLocation&#x27;);\nreq.type(&#x27;json&#x27;);\nreq.on(&#x27;response&#x27;, (res) =&#x3E; {\n  responseCalled = true;\n});\nreq.on(&#x27;error&#x27;, (err) =&#x3E; {\n  err.message.should.eql(&#x27;No location header for redirect&#x27;);\n  errorCalled = true;\n  stream.end();\n});\nstream.on(&#x27;finish&#x27;, () =&#x3E; {\n  responseCalled.should.be.false();\n  errorCalled.should.be.true();\n  done();\n});\nreq.pipe(stream);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.query(String)</h1>\n      <dl>\n        <dt>should support passing in a string</dt>\n        <dd><pre><code>request\n  .del(base)\n  .query(&#x27;name=t%F6bi&#x27;)\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;t%F6bi&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>should work with url query-string and string for query</dt>\n        <dd><pre><code>request\n  .del(&#x60;${base}/?name=tobi&#x60;)\n  .query(&#x27;age=2%20&#x27;)\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;tobi&#x27;, age: &#x27;2 &#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>should support compound elements in a string</dt>\n        <dd><pre><code>request\n  .del(base)\n  .query(&#x27;name=t%F6bi&#x26;age=2&#x27;)\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;t%F6bi&#x27;, age: &#x27;2&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>should work when called multiple times with a string</dt>\n        <dd><pre><code>request\n  .del(base)\n  .query(&#x27;name=t%F6bi&#x27;)\n  .query(&#x27;age=2%F6&#x27;)\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;t%F6bi&#x27;, age: &#x27;2%F6&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>should work with normal &#x60;query&#x60; object and query string</dt>\n        <dd><pre><code>request\n  .del(base)\n  .query(&#x27;name=t%F6bi&#x27;)\n  .query({ age: &#x27;2&#x27; })\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;t%F6bi&#x27;, age: &#x27;2&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>should not encode raw backticks, but leave encoded ones as is</dt>\n        <dd><pre><code>return Promise.all([\n  request\n    .get(&#x60;${base}/raw-query&#x60;)\n    .query(&#x27;name=&#x60;t%60bi&#x60;&#x26;age&#x60;=2&#x27;)\n    .then((res) =&#x3E; {\n      res.text.should.eql(&#x27;name=&#x60;t%60bi&#x60;&#x26;age&#x60;=2&#x27;);\n    }),\n  request.get(base + &#x27;/raw-query?&#x60;age%60&#x60;=2%60&#x60;&#x27;).then((res) =&#x3E; {\n    res.text.should.eql(&#x27;&#x60;age%60&#x60;=2%60&#x60;&#x27;);\n  }),\n  request\n    .get(&#x60;${base}/raw-query&#x60;)\n    .query(&#x27;name=&#x60;t%60bi&#x60;&#x27;)\n    .query(&#x27;age&#x60;=2&#x27;)\n    .then((res) =&#x3E; {\n      res.text.should.eql(&#x27;name=&#x60;t%60bi&#x60;&#x26;age&#x60;=2&#x27;);\n    })\n]);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.query(Object)</h1>\n      <dl>\n        <dt>should construct the query-string</dt>\n        <dd><pre><code>request\n  .del(base)\n  .query({ name: &#x27;tobi&#x27; })\n  .query({ order: &#x27;asc&#x27; })\n  .query({ limit: [&#x27;1&#x27;, &#x27;2&#x27;] })\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;tobi&#x27;, order: &#x27;asc&#x27;, limit: [&#x27;1&#x27;, &#x27;2&#x27;] });\n    done();\n  });</code></pre></dd>\n        <dt>should encode raw backticks</dt>\n        <dd><pre><code>request\n  .get(&#x60;${base}/raw-query&#x60;)\n  .query({ name: &#x27;&#x60;tobi&#x60;&#x27; })\n  .query({ &#x27;orde%60r&#x27;: null })\n  .query({ &#x27;&#x60;limit&#x60;&#x27;: [&#x27;%602&#x60;&#x27;] })\n  .end((err, res) =&#x3E; {\n    res.text.should.eql(&#x27;name=%60tobi%60&#x26;orde%2560r&#x26;%60limit%60=%25602%60&#x27;);\n    done();\n  });</code></pre></dd>\n        <dt>should not error on dates</dt>\n        <dd><pre><code>const date = new Date(0);\nrequest\n  .del(base)\n  .query({ at: date })\n  .end((err, res) =&#x3E; {\n    assert.equal(date.toISOString(), res.body.at);\n    done();\n  });</code></pre></dd>\n        <dt>should work after setting header fields</dt>\n        <dd><pre><code>request\n  .del(base)\n  .set(&#x27;Foo&#x27;, &#x27;bar&#x27;)\n  .set(&#x27;Bar&#x27;, &#x27;baz&#x27;)\n  .query({ name: &#x27;tobi&#x27; })\n  .query({ order: &#x27;asc&#x27; })\n  .query({ limit: [&#x27;1&#x27;, &#x27;2&#x27;] })\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;tobi&#x27;, order: &#x27;asc&#x27;, limit: [&#x27;1&#x27;, &#x27;2&#x27;] });\n    done();\n  });</code></pre></dd>\n        <dt>should append to the original query-string</dt>\n        <dd><pre><code>request\n  .del(&#x60;${base}/?name=tobi&#x60;)\n  .query({ order: &#x27;asc&#x27; })\n  .end((err, res) =&#x3E; {\n    res.body.should.eql({ name: &#x27;tobi&#x27;, order: &#x27;asc&#x27; });\n    done();\n  });</code></pre></dd>\n        <dt>should retain the original query-string</dt>\n        <dd><pre><code>request.del(&#x60;${base}/?name=tobi&#x60;).end((err, res) =&#x3E; {\n  res.body.should.eql({ name: &#x27;tobi&#x27; });\n  done();\n});</code></pre></dd>\n        <dt>should keep only keys with null querystring values</dt>\n        <dd><pre><code>request\n  .del(&#x60;${base}/url&#x60;)\n  .query({ nil: null })\n  .end((err, res) =&#x3E; {\n    res.text.should.equal(&#x27;/url?nil&#x27;);\n    done();\n  });</code></pre></dd>\n        <dt>query-string should be sent on pipe</dt>\n        <dd><pre><code>const req = request.put(&#x60;${base}/?name=tobi&#x60;);\nconst stream = fs.createReadStream(&#x27;test/node/fixtures/user.json&#x27;);\nreq.on(&#x27;response&#x27;, (res) =&#x3E; {\n  res.body.should.eql({ name: &#x27;tobi&#x27; });\n  done();\n});\nstream.pipe(req);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request.get</h1>\n      <dl>\n        <section class="suite">\n          <h1>on 301 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.get(&#x60;${base}/test-301&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 302 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.get(&#x60;${base}/test-302&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 303 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.get(&#x60;${base}/test-303&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 307 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.get(&#x60;${base}/test-307&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 308 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.get(&#x60;${base}/test-308&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request.post</h1>\n      <dl>\n        <section class="suite">\n          <h1>on 301 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/test-301&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 302 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/test-302&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 303 redirect</h1>\n          <dl>\n            <dt>should follow Location with a GET request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/test-303&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;GET&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 307 redirect</h1>\n          <dl>\n            <dt>should follow Location with a POST request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/test-307&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;POST&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on 308 redirect</h1>\n          <dl>\n            <dt>should follow Location with a POST request</dt>\n            <dd><pre><code>const req = request.post(&#x60;${base}/test-308&#x60;).redirects(1);\nreq.end((err, res) =&#x3E; {\n  const headers = req.req.getHeaders\n    ? req.req.getHeaders()\n    : req.req._headers;\n  headers.host.should.eql(&#x60;localhost:${server2.address().port}&#x60;);\n  res.status.should.eql(200);\n  res.text.should.eql(&#x27;POST&#x27;);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request</h1>\n      <dl>\n        <section class="suite">\n          <h1>on redirect</h1>\n          <dl>\n            <dt>should merge cookies if agent is used</dt>\n            <dd><pre><code>request\n  .agent()\n  .get(&#x60;${base}/cookie-redirect&#x60;)\n  .set(&#x27;Cookie&#x27;, &#x27;orig=1; replaced=not&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(/orig=1/.test(res.text), &#x27;orig=1/.test&#x27;);\n      assert(/replaced=yes/.test(res.text), &#x27;replaced=yes/.test&#x27;);\n      assert(/from-redir=1/.test(res.text), &#x27;from-redir=1&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should not merge cookies if agent is not used</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/cookie-redirect&#x60;)\n  .set(&#x27;Cookie&#x27;, &#x27;orig=1; replaced=not&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert.ifError(err);\n      assert(/orig=1/.test(res.text), &#x27;/orig=1&#x27;);\n      assert(/replaced=not/.test(res.text), &#x27;/replaced=not&#x27;);\n      assert(!/replaced=yes/.test(res.text), &#x27;!/replaced=yes&#x27;);\n      assert(!/from-redir/.test(res.text), &#x27;!/from-redir&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should have previously set cookie for subsquent requests when agent is used</dt>\n            <dd><pre><code>const agent = request.agent();\nagent.get(&#x60;${base}/set-cookie&#x60;).end((err) =&#x3E; {\n  assert.ifError(err);\n  agent\n    .get(&#x60;${base}/show-cookies&#x60;)\n    .set({ Cookie: &#x27;orig=1&#x27; })\n    .end((err, res) =&#x3E; {\n      try {\n        assert.ifError(err);\n        assert(/orig=1/.test(res.text), &#x27;orig=1/.test&#x27;);\n        assert(/persist=123/.test(res.text), &#x27;persist=123&#x27;);\n        done();\n      } catch (err_) {\n        done(err_);\n      }\n    });\n});</code></pre></dd>\n            <dt>should follow Location</dt>\n            <dd><pre><code>const redirects = [];\nrequest\n  .get(base)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      const arr = [&#x27;/movies&#x27;, &#x27;/movies/all&#x27;, &#x27;/movies/all/0&#x27;];\n      redirects.should.eql(arr);\n      res.text.should.equal(&#x27;first movie page&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should follow Location with IP override</dt>\n            <dd><pre><code>const redirects = [];\nconst url = URL.parse(base);\nreturn request\n  .get(&#x60;http://redir.example.com:${url.port || &#x27;80&#x27;}${url.pathname}&#x60;)\n  .connect({\n    &#x27;*&#x27;: url.hostname\n  })\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .then((res) =&#x3E; {\n    const arr = [&#x27;/movies&#x27;, &#x27;/movies/all&#x27;, &#x27;/movies/all/0&#x27;];\n    redirects.should.eql(arr);\n    res.text.should.equal(&#x27;first movie page&#x27;);\n  });</code></pre></dd>\n            <dt>should follow Location with IP:port override</dt>\n            <dd><pre><code>const redirects = [];\nconst url = URL.parse(base);\nreturn request\n  .get(&#x60;http://redir.example.com:9999${url.pathname}&#x60;)\n  .connect({\n    &#x27;*&#x27;: { host: url.hostname, port: url.port || 80 }\n  })\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .then((res) =&#x3E; {\n    const arr = [&#x27;/movies&#x27;, &#x27;/movies/all&#x27;, &#x27;/movies/all/0&#x27;];\n    redirects.should.eql(arr);\n    res.text.should.equal(&#x27;first movie page&#x27;);\n  });</code></pre></dd>\n            <dt>should not follow on HEAD by default</dt>\n            <dd><pre><code>const redirects = [];\nreturn request\n  .head(base)\n  .ok(() =&#x3E; true)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .then((res) =&#x3E; {\n    redirects.should.eql([]);\n    res.status.should.equal(302);\n  });</code></pre></dd>\n            <dt>should follow on HEAD when redirects are set</dt>\n            <dd><pre><code>const redirects = [];\nrequest\n  .head(base)\n  .redirects(10)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      const arr = [];\n      arr.push(&#x27;/movies&#x27;);\n      arr.push(&#x27;/movies/all&#x27;);\n      arr.push(&#x27;/movies/all/0&#x27;);\n      redirects.should.eql(arr);\n      assert(!res.text);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should remove Content-* fields</dt>\n            <dd><pre><code>request\n  .post(&#x60;${base}/header&#x60;)\n  .type(&#x27;txt&#x27;)\n  .set(&#x27;X-Foo&#x27;, &#x27;bar&#x27;)\n  .set(&#x27;X-Bar&#x27;, &#x27;baz&#x27;)\n  .send(&#x27;hey&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(res.body);\n      res.body.should.have.property(&#x27;x-foo&#x27;, &#x27;bar&#x27;);\n      res.body.should.have.property(&#x27;x-bar&#x27;, &#x27;baz&#x27;);\n      res.body.should.not.have.property(&#x27;content-type&#x27;);\n      res.body.should.not.have.property(&#x27;content-length&#x27;);\n      res.body.should.not.have.property(&#x27;transfer-encoding&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should retain cookies</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/header&#x60;)\n  .set(&#x27;Cookie&#x27;, &#x27;foo=bar;&#x27;)\n  .end((err, res) =&#x3E; {\n    try {\n      assert(res.body);\n      res.body.should.have.property(&#x27;cookie&#x27;, &#x27;foo=bar;&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should not resend query parameters</dt>\n            <dd><pre><code>const redirects = [];\nconst query = [];\nrequest\n  .get(&#x60;${base}/?foo=bar&#x60;)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    query.push(res.headers.query);\n    redirects.push(res.headers.location);\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      const arr = [];\n      arr.push(&#x27;/movies&#x27;);\n      arr.push(&#x27;/movies/all&#x27;);\n      arr.push(&#x27;/movies/all/0&#x27;);\n      redirects.should.eql(arr);\n      res.text.should.equal(&#x27;first movie page&#x27;);\n      query.should.eql([&#x27;{&#x22;foo&#x22;:&#x22;bar&#x22;}&#x27;, &#x27;{}&#x27;, &#x27;{}&#x27;]);\n      res.headers.query.should.eql(&#x27;{}&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n            <dt>should handle no location header</dt>\n            <dd><pre><code>request.get(&#x60;${base}/bad-redirect&#x60;).end((err, res) =&#x3E; {\n  try {\n    err.message.should.equal(&#x27;No location header for redirect&#x27;);\n    done();\n  } catch (err_) {\n    done(err_);\n  }\n});</code></pre></dd>\n            <section class="suite">\n              <h1>when relative</h1>\n              <dl>\n                <dt>should redirect to a sibling path</dt>\n                <dd><pre><code>const redirects = [];\nrequest\n  .get(&#x60;${base}/relative&#x60;)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      redirects.should.eql([&#x27;tobi&#x27;]);\n      res.text.should.equal(&#x27;tobi&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n                <dt>should redirect to a parent path</dt>\n                <dd><pre><code>const redirects = [];\nrequest\n  .get(&#x60;${base}/relative/sub&#x60;)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      redirects.should.eql([&#x27;../tobi&#x27;]);\n      res.text.should.equal(&#x27;tobi&#x27;);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n              </dl>\n            </section>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>req.redirects(n)</h1>\n          <dl>\n            <dt>should alter the default number of redirects to follow</dt>\n            <dd><pre><code>const redirects = [];\nrequest\n  .get(base)\n  .redirects(2)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .end((err, res) =&#x3E; {\n    try {\n      const arr = [];\n      assert(res.redirect, &#x27;res.redirect&#x27;);\n      arr.push(&#x27;/movies&#x27;);\n      arr.push(&#x27;/movies/all&#x27;);\n      redirects.should.eql(arr);\n      res.text.should.match(/Moved Temporarily|Found/);\n      done();\n    } catch (err_) {\n      done(err_);\n    }\n  });</code></pre></dd>\n          </dl>\n        </section>\n        <section class="suite">\n          <h1>on POST</h1>\n          <dl>\n            <dt>should redirect as GET</dt>\n            <dd><pre><code>const redirects = [];\nreturn request\n  .post(&#x60;${base}/movie&#x60;)\n  .send({ name: &#x27;Tobi&#x27; })\n  .redirects(2)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .then((res) =&#x3E; {\n    redirects.should.eql([&#x27;/movies/all/0&#x27;]);\n    res.text.should.equal(&#x27;first movie page&#x27;);\n  });</code></pre></dd>\n            <dt>using multipart/form-data should redirect as GET</dt>\n            <dd><pre><code>const redirects = [];\nrequest\n  .post(&#x60;${base}/movie&#x60;)\n  .type(&#x27;form&#x27;)\n  .field(&#x27;name&#x27;, &#x27;Tobi&#x27;)\n  .redirects(2)\n  .on(&#x27;redirect&#x27;, (res) =&#x3E; {\n    redirects.push(res.headers.location);\n  })\n  .then((res) =&#x3E; {\n    redirects.should.eql([&#x27;/movies/all/0&#x27;]);\n    res.text.should.equal(&#x27;first movie page&#x27;);\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>response</h1>\n      <dl>\n        <dt>should act as a readable stream</dt>\n        <dd><pre><code>const req = request.get(base).buffer(false);\nreq.end((err, res) =&#x3E; {\n  if (err) return done(err);\n  let trackEndEvent = 0;\n  let trackCloseEvent = 0;\n  res.on(&#x27;end&#x27;, () =&#x3E; {\n    trackEndEvent++;\n    trackEndEvent.should.equal(1);\n    if (!process.env.HTTP2_TEST) {\n      trackCloseEvent.should.equal(0); // close should not have been called\n    }\n    done();\n  });\n  res.on(&#x27;close&#x27;, () =&#x3E; {\n    trackCloseEvent++;\n  });\n  (() =&#x3E; {\n    res.pause();\n  }).should.not.throw();\n  (() =&#x3E; {\n    res.resume();\n  }).should.not.throw();\n  (() =&#x3E; {\n    res.destroy();\n  }).should.not.throw();\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.serialize(fn)</h1>\n      <dl>\n        <dt>should take precedence over default parsers</dt>\n        <dd><pre><code>request\n  .post(&#x60;${base}/echo&#x60;)\n  .send({ foo: 123 })\n  .serialize((data) =&#x3E; &#x27;{&#x22;bar&#x22;:456}&#x27;)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert.equal(&#x27;{&#x22;bar&#x22;:456}&#x27;, res.text);\n    assert.equal(456, res.body.bar);\n    done();\n  });</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>request.get().set()</h1>\n      <dl>\n        <dt>should set host header after get()</dt>\n        <dd><pre><code>app.get(&#x27;/&#x27;, (req, res) =&#x3E; {\n  assert.equal(req.hostname, &#x27;example.com&#x27;);\n  res.end();\n});\nserver = http.createServer(app);\nserver.listen(0, function listening() {\n  request\n    .get(&#x60;http://localhost:${server.address().port}&#x60;)\n    .set(&#x27;host&#x27;, &#x27;example.com&#x27;)\n    .then(() =&#x3E; {\n      return request\n        .get(&#x60;http://example.com:${server.address().port}&#x60;)\n        .connect({\n          &#x27;example.com&#x27;: &#x27;localhost&#x27;,\n          &#x27;*&#x27;: &#x27;fail&#x27;\n        });\n    })\n    .then(() =&#x3E; done(), done);\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>res.toError()</h1>\n      <dl>\n        <dt>should return an Error</dt>\n        <dd><pre><code>request.get(base).end((err, res) =&#x3E; {\n  var err = res.toError();\n  assert.equal(err.status, 400);\n  assert.equal(err.method, &#x27;GET&#x27;);\n  assert.equal(err.path, &#x27;/&#x27;);\n  assert.equal(err.message, &#x27;cannot GET / (400)&#x27;);\n  assert.equal(err.text, &#x27;invalid json&#x27;);\n  done();\n});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>[unix-sockets] http</h1>\n      <dl>\n        <section class="suite">\n          <h1>request</h1>\n          <dl>\n            <dt>path: / (root)</dt>\n            <dd><pre><code>request.get(&#x60;${base}/&#x60;).end((err, res) =&#x3E; {\n  assert(res.ok);\n  assert.strictEqual(&#x27;root ok!&#x27;, res.text);\n  done();\n});</code></pre></dd>\n            <dt>path: /request/path</dt>\n            <dd><pre><code>request.get(&#x60;${base}/request/path&#x60;).end((err, res) =&#x3E; {\n  assert(res.ok);\n  assert.strictEqual(&#x27;request path ok!&#x27;, res.text);\n  done();\n});</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>[unix-sockets] https</h1>\n      <dl>\n        <section class="suite">\n          <h1>request</h1>\n          <dl>\n            <dt>path: / (root)</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/&#x60;)\n  .ca(cacert)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert(res.ok);\n    assert.strictEqual(&#x27;root ok!&#x27;, res.text);\n    done();\n  });</code></pre></dd>\n            <dt>path: /request/path</dt>\n            <dd><pre><code>request\n  .get(&#x60;${base}/request/path&#x60;)\n  .ca(cacert)\n  .end((err, res) =&#x3E; {\n    assert.ifError(err);\n    assert(res.ok);\n    assert.strictEqual(&#x27;request path ok!&#x27;, res.text);\n    done();\n  });</code></pre></dd>\n          </dl>\n        </section>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>req.get()</h1>\n      <dl>\n        <dt>should not set a default user-agent</dt>\n        <dd><pre><code>request.get(&#x60;${base}/ua&#x60;).then((res) =&#x3E; {\n      assert(res.headers);\n      assert(!res.headers[&#x27;user-agent&#x27;]);\n    })</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>utils.type(str)</h1>\n      <dl>\n        <dt>should return the mime type</dt>\n        <dd><pre><code>utils\n  .type(&#x27;application/json; charset=utf-8&#x27;)\n  .should.equal(&#x27;application/json&#x27;);\nutils.type(&#x27;application/json&#x27;).should.equal(&#x27;application/json&#x27;);</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>utils.params(str)</h1>\n      <dl>\n        <dt>should return the field parameters</dt>\n        <dd><pre><code>const obj = utils.params(&#x27;application/json; charset=utf-8; foo  = bar&#x27;);\nobj.charset.should.equal(&#x27;utf-8&#x27;);\nobj.foo.should.equal(&#x27;bar&#x27;);\nutils.params(&#x27;application/json&#x27;).should.eql({});</code></pre></dd>\n      </dl>\n    </section>\n    <section class="suite">\n      <h1>utils.parseLinks(str)</h1>\n      <dl>\n        <dt>should parse links</dt>\n        <dd><pre><code>const str =\n  &#x27;&#x3C;https://api.github.com/repos/visionmedia/mocha/issues?page=2&#x3E;; rel=&#x22;next&#x22;, &#x3C;https://api.github.com/repos/visionmedia/mocha/issues?page=5&#x3E;; rel=&#x22;last&#x22;&#x27;;\nconst ret = utils.parseLinks(str);\nret.next.should.equal(\n  &#x27;https://api.github.com/repos/visionmedia/mocha/issues?page=2&#x27;\n);\nret.last.should.equal(\n  &#x27;https://api.github.com/repos/visionmedia/mocha/issues?page=5&#x27;\n);</code></pre></dd>\n      </dl>\n    </section>\n    </div>\n    <a href="http://github.com/visionmedia/superagent"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png" alt="Fork me on GitHub"></a>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.0/jquery.min.js"></script>\n    <script>\n      $(\'code\').each(function(){\n        $(this).html(highlight($(this).text()));\n      });\n\n      function highlight(js) {\n        return js\n          .replace(/</g, \'&lt;\')\n          .replace(/>/g, \'&gt;\')\n          .replace(/(\'.*?\')/gm, \'<span class="string">$1</span>\')\n          .replace(/(\\d+\\.\\d+)/gm, \'<span class="number">$1</span>\')\n          .replace(/(\\d+)/gm, \'<span class="number">$1</span>\')\n          .replace(/\\bnew *(\\w+)/gm, \'<span class="keyword">new</span> <span class="init">$1</span>\')\n          .replace(/\\b(function|new|throw|return|var|if|else)\\b/gm, \'<span class="keyword">$1</span>\')\n      }\n    </script>\n    <script src="https://cdnjs.cloudflare.com/ajax/libs/tocbot/3.0.0/tocbot.js"></script>\n    <script>\n      // Only use tocbot for main docs, not test docs\n      if (document.querySelector(\'#superagent\')) {\n        tocbot.init({\n          // Where to render the table of contents.\n          tocSelector: \'#menu\',\n          // Where to grab the headings to build the table of contents.\n          contentSelector: \'#content\',\n          // Which headings to grab inside of the contentSelector element.\n          headingSelector: \'h2\',\n          smoothScroll: false\n        });\n      }\n    </script>\n  </body>\n</html>\n'b"/**\n * Module dependencies.\n */\n\nconst request = require('..');\n\nconst url =\n  'https://gist.githubusercontent.com/reinaldo13/cdbb4d663ba23410a77b/raw/0345267767d50790051951ddc460e2699649de2b/it-works.txt';\n\nrequest.get(url, (err, res) => {\n  if (err) throw err;\n  console.log(res.text);\n});\n"b"function Agent() {\n  this._defaults = [];\n}\n\n[\n  'use',\n  'on',\n  'once',\n  'set',\n  'query',\n  'type',\n  'accept',\n  'auth',\n  'withCredentials',\n  'sortQuery',\n  'retry',\n  'ok',\n  'redirects',\n  'timeout',\n  'buffer',\n  'serialize',\n  'parse',\n  'ca',\n  'key',\n  'pfx',\n  'cert',\n  'disableTLSCerts'\n].forEach((fn) => {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function (...args) {\n    this._defaults.push({ fn, args });\n    return this;\n  };\n});\n\nAgent.prototype._setDefaults = function (req) {\n  this._defaults.forEach((def) => {\n    req[def.fn](...def.args);\n  });\n};\n\nmodule.exports = Agent;\n"b'/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== \'undefined\') {\n  // Browser window\n  root = window;\n} else if (typeof self === \'undefined\') {\n  // Other environments\n  console.warn(\n    \'Using browser-only version of superagent in non-browser environment\'\n  );\n  root = this;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require(\'component-emitter\');\nconst safeStringify = require(\'fast-safe-stringify\');\nconst RequestBase = require(\'./request-base\');\nconst isObject = require(\'./is-object\');\nconst ResponseBase = require(\'./response-base\');\nconst Agent = require(\'./agent-base\');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === \'function\') {\n    return new exports.Request(\'GET\', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request(\'GET\', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\n\nconst request = exports;\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (\n    root.XMLHttpRequest &&\n    (!root.location ||\n      root.location.protocol !== \'file:\' ||\n      !root.ActiveXObject)\n  ) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject(\'Microsoft.XMLHTTP\');\n  } catch {}\n\n  try {\n    return new ActiveXObject(\'Msxml2.XMLHTTP.6.0\');\n  } catch {}\n\n  try {\n    return new ActiveXObject(\'Msxml2.XMLHTTP.3.0\');\n  } catch {}\n\n  try {\n    return new ActiveXObject(\'Msxml2.XMLHTTP\');\n  } catch {}\n\n  throw new Error(\'Browser-only version of superagent could not find XHR\');\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = \'\'.trim ? (s) => s.trim() : (s) => s.replace(/(^\\s*|\\s*$)/g, \'\');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key))\n      pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join(\'&\');\n}\n\n/**\n * Helps \'serialize\' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val === undefined) return;\n  if (val === null) {\n    pairs.push(encodeURI(key));\n    return;\n  }\n\n  if (Array.isArray(val)) {\n    val.forEach((v) => {\n      pushEncodedKeyValuePair(pairs, key, v);\n    });\n  } else if (isObject(val)) {\n    for (const subkey in val) {\n      if (Object.prototype.hasOwnProperty.call(val, subkey))\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n    }\n  } else {\n    pairs.push(encodeURI(key) + \'=\' + encodeURIComponent(val));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split(\'&\');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf(\'=\');\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = \'\';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(\n        pair.slice(pos + 1)\n      );\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = \'application/xml\';\n *\n */\n\nrequest.types = {\n  html: \'text/html\',\n  json: \'application/json\',\n  xml: \'text/xml\',\n  urlencoded: \'application/x-www-form-urlencoded\',\n  form: \'application/x-www-form-urlencoded\',\n  \'form-data\': \'application/x-www-form-urlencoded\'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize[\'application/xml\'] = function(obj){\n *       return \'generated xml here\';\n *     };\n *\n */\n\nrequest.serialize = {\n  \'application/x-www-form-urlencoded\': serialize,\n  \'application/json\': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse[\'application/xml\'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  \'application/x-www-form-urlencoded\': parseString,\n  \'application/json\': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(\':\');\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get(\'/\').end(function(res){});\n *      request.get(\'/\', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post(\'/user\')\n *        .send({ name: \'tj\' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post(\'/user\')\n *        .send({ name: \'tj\' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post(\'/user\', { name: \'tj\' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post(\'/user\', { name: \'tj\' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is \'\' or \'text\' and on older browsers\n  this.text =\n    (this.req.method !== \'HEAD\' &&\n      (this.xhr.responseType === \'\' || this.xhr.responseType === \'text\')) ||\n    typeof this.xhr.responseType === \'undefined\'\n      ? this.xhr.responseText\n      : null;\n  this.statusText = this.req.xhr.statusText;\n  let { status } = this.xhr;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers;\n  // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header[\'content-type\'] = this.xhr.getResponseHeader(\'content-type\');\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body =\n      this.req.method === \'HEAD\'\n        ? null\n        : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n}\n\n// eslint-disable-next-line new-cap\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse[\'application/json\'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { url } = req;\n\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on(\'end\', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err_) {\n      err = new Error(\'Parser is unable to parse the response\');\n      err.parse = true;\n      err.original = err_;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn\'t have \'response\' property\n        err.rawResponse =\n          typeof self.xhr.responseType === \'undefined\'\n            ? self.xhr.responseText\n            : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit(\'response\', res);\n\n    let new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(\n          res.statusText || res.text || \'Unsuccessful HTTP response\'\n        );\n      }\n    } catch (err_) {\n      new_err = err_; // ok() callback can throw\n    }\n\n    // #1000 don\'t catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\n// eslint-disable-next-line new-cap\nEmitter(Request.prototype);\n// eslint-disable-next-line new-cap\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = \'application/xml\';\n *\n *      request.post(\'/\')\n *        .type(\'xml\')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post(\'/\')\n *        .type(\'application/xml\')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set(\'Content-Type\', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = \'application/json\';\n *\n *      request.get(\'/agent\')\n *        .accept(\'json\')\n *        .end(callback);\n *\n *      request.get(\'/agent\')\n *        .accept(\'application/json\')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  this.set(\'Accept\', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using \'bearer\' as type\n * @param {Object} options with \'type\' property \'auto\', \'basic\' or \'bearer\' (default \'basic\')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = \'\';\n  if (typeof pass === \'object\' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = \'\';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === \'function\' ? \'basic\' : \'auto\'\n    };\n  }\n\n  const encoder = (string) => {\n    if (typeof btoa === \'function\') {\n      return btoa(string);\n    }\n\n    throw new Error(\'Cannot use basic auth, btoa is not a function\');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get(\'/shoes\')\n *     .query(\'size=10\')\n *     .query({ color: \'blue\' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== \'string\') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post(\'/upload\')\n *   .attach(\'content\', new Blob([\'<a id="a"><b id="b">hey!</b></a>\'], { type: "text/html"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error("superagent can\'t mix .send() and .attach()");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit(\'error\', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function () {\n  const err = new Error(\n    \'Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.\'\n  );\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.agent = function () {\n  console.warn(\'This is not supported in browser version of superagent\');\n  return this;\n};\n\nRequest.prototype.ca = Request.prototype.agent;\nRequest.prototype.buffer = Request.prototype.ca;\n\n// This throws, because it can\'t send/receive data as expected\nRequest.prototype.write = () => {\n  throw new Error(\n    \'Streaming is not supported in browser version of superagent\'\n  );\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n\n/**\n * Check if `obj` is a host object,\n * we don\'t want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return (\n    obj &&\n    typeof obj === \'object\' &&\n    !Array.isArray(obj) &&\n    Object.prototype.toString.call(obj) !== \'[object Object]\'\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn(\n      \'Warning: .end() was called twice. This is not supported in superagent\'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this;\n\n  // upload timeout it\'s wokrs only if deadline timeout is off\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        \'Upload timeout of \',\n        self._uploadTimeout,\n        \'ETIMEDOUT\'\n      );\n    }, this._uploadTimeout);\n  }\n};\n\n// eslint-disable-next-line complexity\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error(\'The request has been aborted even before .end() was called\')\n    );\n\n  const self = this;\n  this.xhr = request.getXHR();\n  const { xhr } = this;\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = () => {\n    const { readyState } = xhr;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error "Could not complete the operation due to error c00c023f"\n    let status;\n    try {\n      status = xhr.status;\n    } catch {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit(\'end\');\n  };\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = (e.loaded / e.total) * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit(\'progress\', e);\n  };\n\n  if (this.hasListeners(\'progress\')) {\n    try {\n      xhr.addEventListener(\'progress\', handleProgress.bind(null, \'download\'));\n      if (xhr.upload) {\n        xhr.upload.addEventListener(\n          \'progress\',\n          handleProgress.bind(null, \'upload\')\n        );\n      }\n    } catch {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn\'t exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (\n    !this._formData &&\n    this.method !== \'GET\' &&\n    this.method !== \'HEAD\' &&\n    typeof data !== \'string\' &&\n    !this._isHost(data)\n  ) {\n    // serialize stuff\n    const contentType = this._header[\'content-type\'];\n    let serialize =\n      this._serializer ||\n      request.serialize[contentType ? contentType.split(\';\')[0] : \'\'];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize[\'application/json\'];\n    }\n\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n\n    if (Object.prototype.hasOwnProperty.call(this.header, field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit(\'request\', this);\n\n  // IE11 xhr.send(undefined) sends \'undefined\' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data === \'undefined\' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\n[\'GET\', \'POST\', \'OPTIONS\', \'PATCH\', \'PUT\', \'DELETE\'].forEach((method) => {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype.delete;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request(\'GET\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const req = request(\'HEAD\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const req = request(\'OPTIONS\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const req = request(\'DELETE\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request(\'PATCH\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const req = request(\'POST\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const req = request(\'PUT\', url);\n  if (typeof data === \'function\') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n'b"/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nmodule.exports = isObject;\n"b'/**\n * Module of mixed-in functions shared between node and client code\n */\nconst isObject = require(\'./is-object\');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(object) {\n  if (object) return mixin(object);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(object) {\n  for (const key in RequestBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key))\n      object[key] = RequestBase.prototype[key];\n  }\n\n  return object;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are \'blob\' and \'arraybuffer\',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get(\'/\')\n *        .responseType(\'blob\')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function (value) {\n  this._responseType = value;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || typeof options !== \'object\') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      switch (option) {\n        case \'deadline\':\n          this._timeout = options.deadline;\n          break;\n        case \'response\':\n          this._responseTimeout = options.response;\n          break;\n        case \'upload\':\n          this._uploadTimeout = options.upload;\n          break;\n        default:\n          console.warn(\'Unknown timeout option\', option);\n      }\n    }\n  }\n\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried \'count\' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\n//\n// NOTE: we do not include ESOCKETTIMEDOUT because that is from `request` package\n//       <https://github.com/sindresorhus/got/pull/537>\n//\n// NOTE: we do not include EADDRINFO because it was removed from libuv in 2014\n//       <https://github.com/libuv/libuv/commit/02e1ebd40b807be5af46343ea873331b2ee4e9c1>\n//       <https://github.com/request/request/search?q=ESOCKETTIMEDOUT&unscoped_q=ESOCKETTIMEDOUT>\n//\n//\n// TODO: expose these as configurable defaults\n//\nconst ERROR_CODES = new Set([\n  \'ETIMEDOUT\',\n  \'ECONNRESET\',\n  \'EADDRINUSE\',\n  \'ECONNREFUSED\',\n  \'EPIPE\',\n  \'ENOTFOUND\',\n  \'ENETUNREACH\',\n  \'EAI_AGAIN\'\n]);\n\nconst STATUS_CODES = new Set([\n  408,\n  413,\n  429,\n  500,\n  502,\n  503,\n  504,\n  521,\n  522,\n  524\n]);\n\n// TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n// const METHODS = new Set([\'GET\', \'PUT\', \'HEAD\', \'DELETE\', \'OPTIONS\', \'TRACE\']);\n\n/**\n * Determine if a request should be retried.\n * (Inspired by https://github.com/sindresorhus/got#retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\nRequestBase.prototype._shouldRetry = function (err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch (err_) {\n      console.error(err_);\n    }\n  }\n\n  // TODO: we would need to make this easily configurable before adding it in (e.g. some might want to add POST)\n  /*\n  if (\n    this.req &&\n    this.req.method &&\n    !METHODS.has(this.req.method.toUpperCase())\n  )\n    return false;\n  */\n  if (res && res.status && STATUS_CODES.has(res.status)) return true;\n  if (err) {\n    if (err.code && ERROR_CODES.has(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code === \'ECONNABORTED\') return true;\n    if (err.crossDomain) return true;\n  }\n\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  this.timedoutError = null;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function (resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\n        \'Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\'\n      );\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on(\'abort\', () => {\n        if (this._maxRetries && this._maxRetries > this._retries) {\n          return;\n        }\n\n        if (this.timedout && this.timedoutError) {\n          reject(this.timedoutError);\n          return;\n        }\n\n        const err = new Error(\'Aborted\');\n        err.code = \'ABORTED\';\n        err.status = this.status;\n        err.method = this.method;\n        err.url = this.url;\n        reject(err);\n      });\n      self.end((err, res) => {\n        if (err) reject(err);\n        else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (cb) {\n  if (typeof cb !== \'function\') throw new Error(\'Callback required\');\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get(\'/\')\n *        .set(\'Accept\', \'application/json\')\n *        .set(\'X-API-Key\', \'foobar\')\n *        .end(callback);\n *\n *      req.get(\'/\')\n *        .set({ Accept: \'application/json\', \'X-API-Key\': \'foobar\' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, value) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (Object.prototype.hasOwnProperty.call(field, key))\n        this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = value;\n  this.header[field] = value;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get(\'/\')\n *        .unset(\'User-Agent\')\n *        .end(callback);\n *\n * @param {String} field field name\n */\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for "multipart/form-data" request bodies.\n *\n * ``` js\n * request.post(\'/upload\')\n *   .field(\'foo\', \'bar\')\n *   .end(callback);\n *\n * request.post(\'/upload\')\n *   .field({ foo: \'bar\', baz: \'qux\' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function (name, value) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error(\'.field(name, val) name can not be empty\');\n  }\n\n  if (this._data) {\n    throw new Error(\n      ".field() can\'t be used if .send() is used. Please use only .send() or only .field() & .attach()"\n    );\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key))\n        this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(value)) {\n    for (const i in value) {\n      if (Object.prototype.hasOwnProperty.call(value, i))\n        this.field(name, value[i]);\n    }\n\n    return this;\n  }\n\n  // val should be defined now\n  if (value === null || undefined === value) {\n    throw new Error(\'.field(name, val) val can not be empty\');\n  }\n\n  if (typeof value === \'boolean\') {\n    value = String(value);\n  }\n\n  this._getFormData().append(name, value);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n  if (this.req) this.req.abort(); // node\n  this.clearTimeout();\n  this.emit(\'abort\');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case \'basic\':\n      this.set(\'Authorization\', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case \'auto\':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case \'bearer\': // usage would be .auth(accessToken, { type: \'bearer\' })\n      this.set(\'Authorization\', `Bearer ${user}`);\n      break;\n    default:\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using "Access-Control-Allow-Origin" with a wildcard,\n * and also must set "Access-Control-Allow-Credentials"\n * to "true".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== \'number\') {\n    throw new TypeError(\'Invalid argument\');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to "json" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post(\'/user\')\n *         .type(\'json\')\n *         .send(\'{"name":"tj"}\')\n *         .end(callback)\n *\n *       // auto json\n *       request.post(\'/user\')\n *         .send({ name: \'tj\' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post(\'/user\')\n *         .type(\'form\')\n *         .send(\'name=tj\')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post(\'/user\')\n *         .type(\'form\')\n *         .send({ name: \'tj\' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post(\'/user\')\n *        .send(\'name=tobi\')\n *        .send(\'species=ferret\')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\n// eslint-disable-next-line complexity\nRequestBase.prototype.send = function (data) {\n  const isObject_ = isObject(data);\n  let type = this._header[\'content-type\'];\n\n  if (this._formData) {\n    throw new Error(\n      ".send() can\'t be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()"\n    );\n  }\n\n  if (isObject_ && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error("Can\'t merge these send calls");\n  }\n\n  // merge\n  if (isObject_ && isObject(this._data)) {\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key))\n        this._data[key] = data[key];\n    }\n  } else if (typeof data === \'string\') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type(\'form\');\n    type = this._header[\'content-type\'];\n    if (type) type = type.toLowerCase().trim();\n    if (type === \'application/x-www-form-urlencoded\') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || \'\') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObject_ || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type(\'json\');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get(\'/user\')\n *         .query(\'name=Nick\')\n *         .query(\'search=Manny\')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get(\'/user\')\n *         .query(\'name=Nick\')\n *         .query(\'search=Manny\')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === \'undefined\' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function () {\n  const query = this._query.join(\'&\');\n  if (query) {\n    this.url += (this.url.includes(\'?\') ? \'&\' : \'?\') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf(\'?\');\n    if (index >= 0) {\n      const queryArray = this.url.slice(index + 1).split(\'&\');\n      if (typeof this._sort === \'function\') {\n        queryArray.sort(this._sort);\n      } else {\n        queryArray.sort();\n      }\n\n      this.url = this.url.slice(0, index) + \'?\' + queryArray.join(\'&\');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {\n  console.warn(\'Unsupported\');\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const err = new Error(`${reason + timeout}ms exceeded`);\n  err.timeout = timeout;\n  err.code = \'ECONNABORTED\';\n  err.errno = errno;\n  this.timedout = true;\n  this.timedoutError = err;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError(\'Timeout of \', self._timeout, \'ETIME\');\n    }, this._timeout);\n  }\n\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError(\n        \'Response timeout of \',\n        self._responseTimeout,\n        \'ETIMEDOUT\'\n      );\n    }, this._responseTimeout);\n  }\n};\n'b'/**\n * Module dependencies.\n */\n\nconst utils = require(\'./utils\');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (const key in ResponseBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key))\n      obj[key] = ResponseBase.prototype[key];\n  }\n\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of "Content-Type: text/plain; charset=utf-8"\n * will provide you with a `.type` of "text/plain".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n\n  // content-type\n  const ct = header[\'content-type\'] || \'\';\n  this.type = utils.type(ct);\n\n  // params\n  const params = utils.params(ct);\n  for (const key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key))\n      this[key] = params[key];\n  }\n\n  this.links = {};\n\n  // links\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch {\n    // ignore\n  }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * "sugar" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  const type = (status / 100) | 0;\n\n  // status / class\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type;\n\n  // basics\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false;\n\n  // sugar\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};\n'b"/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = (str) => str.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = (val) => {\n  const obj = {};\n  for (const str of val.split(/ *; */)) {\n    const parts = str.split(/ *= */);\n    const key = parts.shift();\n    const val = parts.shift();\n\n    if (key && val) obj[key] = val;\n  }\n\n  return obj;\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = (val) => {\n  const obj = {};\n  for (const str of val.split(/ *, */)) {\n    const parts = str.split(/ *; */);\n    const url = parts[0].slice(1, -1);\n    const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n  }\n\n  return obj;\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host;\n  // secuirty\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};\n"b"const setup = require('./support/setup');\n\nconst base = setup.uri;\nconst assert = require('assert');\nconst request = require('./support/client');\n\ndescribe('Agent', () => {\n  it('should remember defaults', () => {\n    if (typeof Promise === 'undefined') {\n      return;\n    }\n\n    let called = 0;\n    let event_called = 0;\n    const agent = request\n      .agent()\n      .accept('json')\n      .use(() => {\n        called++;\n      })\n      .once('request', () => {\n        event_called++;\n      })\n      .query({ hello: 'world' })\n      .set('X-test', 'testing');\n    assert.equal(0, called);\n    assert.equal(0, event_called);\n\n    return agent\n      .get(`${base}/echo`)\n      .then((res) => {\n        assert.equal(1, called);\n        assert.equal(1, event_called);\n        assert.equal('application/json', res.headers.accept);\n        assert.equal('testing', res.headers['x-test']);\n\n        return agent.get(`${base}/querystring`);\n      })\n      .then((res) => {\n        assert.equal(2, called);\n        assert.equal(2, event_called);\n        assert.deepEqual({ hello: 'world' }, res.body);\n      });\n  });\n});\n"b'const setup = require(\'./support/setup\');\n\nconst { NODE } = setup;\nconst { uri } = setup;\n\nconst assert = require(\'assert\');\nconst request = require(\'./support/client\');\n\ndescribe(\'request\', function () {\n  this.timeout(20000);\n\n  describe(\'res.statusCode\', () => {\n    it(\'should set statusCode\', (done) => {\n      request.get(`${uri}/login`, (err, res) => {\n        try {\n          assert.strictEqual(res.statusCode, 200);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'should allow the send shorthand\', () => {\n    it(\'with callback in the method call\', (done) => {\n      request.get(`${uri}/login`, (err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });\n\n    it(\'with data in the method call\', (done) => {\n      request.post(`${uri}/echo`, { foo: \'bar\' }).end((err, res) => {\n        assert.equal(\'{"foo":"bar"}\', res.text);\n        done();\n      });\n    });\n\n    it(\'with callback and data in the method call\', (done) => {\n      request.post(`${uri}/echo`, { foo: \'bar\' }, (err, res) => {\n        assert.equal(\'{"foo":"bar"}\', res.text);\n        done();\n      });\n    });\n  });\n\n  describe(\'with a callback\', () => {\n    it(\'should invoke .end()\', (done) => {\n      request.get(`${uri}/login`, (err, res) => {\n        try {\n          assert.equal(res.status, 200);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'.end()\', () => {\n    it(\'should issue a request\', (done) => {\n      request.get(`${uri}/login`).end((err, res) => {\n        try {\n          assert.equal(res.status, 200);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n\n    it(\'is optional with a promise\', () => {\n      if (typeof Promise === \'undefined\') {\n        return;\n      }\n\n      return request\n        .get(`${uri}/login`)\n        .then((res) => res.status)\n        .then()\n        .then((status) => {\n          assert.equal(200, status, \'Real promises pass results through\');\n        });\n    });\n\n    it(\'called only once with a promise\', () => {\n      if (typeof Promise === \'undefined\') {\n        return;\n      }\n\n      const req = request.get(`${uri}/unique`);\n\n      return Promise.all([req, req, req]).then((results) => {\n        results.forEach((item) => {\n          assert.equal(\n            item.body,\n            results[0].body,\n            \'It should keep returning the same result after being called once\'\n          );\n        });\n      });\n    });\n  });\n\n  describe(\'res.error\', () => {\n    it(\'ok\', (done) => {\n      let calledErrorEvent = false;\n      let calledOKHandler = false;\n      request\n        .get(`${uri}/error`)\n        .ok((res) => {\n          assert.strictEqual(500, res.status);\n          calledOKHandler = true;\n          return true;\n        })\n        .on(\'error\', (err) => {\n          calledErrorEvent = true;\n        })\n        .end((err, res) => {\n          try {\n            assert.ifError(err);\n            assert.strictEqual(res.status, 500);\n            assert(!calledErrorEvent);\n            assert(calledOKHandler);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should be an Error object\', (done) => {\n      let calledErrorEvent = false;\n      request\n        .get(`${uri}/error`)\n        .on(\'error\', (err) => {\n          assert.strictEqual(err.status, 500);\n          calledErrorEvent = true;\n        })\n        .end((err, res) => {\n          try {\n            if (NODE) {\n              res.error.message.should.equal(\'cannot GET /error (500)\');\n            } else {\n              res.error.message.should.equal(`cannot GET ${uri}/error (500)`);\n            }\n\n            assert.strictEqual(res.error.status, 500);\n            assert(err, \'should have an error for 500\');\n            assert.equal(err.message, \'Internal Server Error\');\n            assert(calledErrorEvent);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'with .then() promise\', () => {\n      if (typeof Promise === \'undefined\') {\n        return;\n      }\n\n      return request.get(`${uri}/error`).then(\n        () => {\n          assert.fail();\n        },\n        (err) => {\n          assert.equal(err.message, \'Internal Server Error\');\n        }\n      );\n    });\n\n    it(\'with .ok() returning false\', () => {\n      if (typeof Promise === \'undefined\') {\n        return;\n      }\n\n      return request\n        .get(`${uri}/echo`)\n        .ok(() => false)\n        .then(\n          () => {\n            assert.fail();\n          },\n          (err) => {\n            assert.equal(200, err.response.status);\n            assert.equal(err.message, \'OK\');\n          }\n        );\n    });\n\n    it(\'with .ok() throwing an Error\', () => {\n      if (typeof Promise === \'undefined\') {\n        return;\n      }\n\n      return request\n        .get(`${uri}/echo`)\n        .ok(() => {\n          throw new Error(\'boom\');\n        })\n        .then(\n          () => {\n            assert.fail();\n          },\n          (err) => {\n            assert.equal(200, err.response.status);\n            assert.equal(err.message, \'boom\');\n          }\n        );\n    });\n  });\n\n  describe(\'res.header\', () => {\n    it(\'should be an object\', (done) => {\n      request.get(`${uri}/login`).end((err, res) => {\n        try {\n          assert.equal(\'Express\', res.header[\'x-powered-by\']);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'set headers\', () => {\n    before(() => {\n      Object.prototype.invalid = \'invalid\';\n    });\n\n    after(() => {\n      delete Object.prototype.invalid;\n    });\n\n    it(\'should only set headers for ownProperties of header\', (done) => {\n      try {\n        request\n          .get(`${uri}/echo-headers`)\n          .set(\'valid\', \'ok\')\n          .end((err, res) => {\n            if (\n              !err &&\n              res.body &&\n              res.body.valid &&\n              !res.body.hasOwnProperty(\'invalid\')\n            ) {\n              return done();\n            }\n\n            done(err || new Error(\'fail\'));\n          });\n      } catch (err) {\n        done(err);\n      }\n    });\n  });\n\n  describe(\'res.charset\', () => {\n    it(\'should be set when present\', (done) => {\n      request.get(`${uri}/login`).end((err, res) => {\n        try {\n          res.charset.should.equal(\'utf-8\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'res.statusType\', () => {\n    it(\'should provide the first digit\', (done) => {\n      request.get(`${uri}/login`).end((err, res) => {\n        try {\n          assert(!err, \'should not have an error for success responses\');\n          assert.equal(200, res.status);\n          assert.equal(2, res.statusType);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'res.type\', () => {\n    it(\'should provide the mime-type void of params\', (done) => {\n      request.get(`${uri}/login`).end((err, res) => {\n        try {\n          res.type.should.equal(\'text/html\');\n          res.charset.should.equal(\'utf-8\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'req.set(field, val)\', () => {\n    it(\'should set the header field\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .set(\'X-Foo\', \'bar\')\n        .set(\'X-Bar\', \'baz\')\n        .end((err, res) => {\n          try {\n            assert.equal(\'bar\', res.header[\'x-foo\']);\n            assert.equal(\'baz\', res.header[\'x-bar\']);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'req.set(obj)\', () => {\n    it(\'should set the header fields\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .set({ \'X-Foo\': \'bar\', \'X-Bar\': \'baz\' })\n        .end((err, res) => {\n          try {\n            assert.equal(\'bar\', res.header[\'x-foo\']);\n            assert.equal(\'baz\', res.header[\'x-bar\']);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'req.type(str)\', () => {\n    it(\'should set the Content-Type\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .type(\'text/x-foo\')\n        .end((err, res) => {\n          try {\n            res.header[\'content-type\'].should.equal(\'text/x-foo\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should map "json"\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .type(\'json\')\n        .send(\'{"a": 1}\')\n        .end((err, res) => {\n          try {\n            res.should.be.json();\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should map "html"\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .type(\'html\')\n        .end((err, res) => {\n          try {\n            res.header[\'content-type\'].should.equal(\'text/html\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'req.accept(str)\', () => {\n    it(\'should set Accept\', (done) => {\n      request\n        .get(`${uri}/echo`)\n        .accept(\'text/x-foo\')\n        .end((err, res) => {\n          try {\n            res.header.accept.should.equal(\'text/x-foo\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should map "json"\', (done) => {\n      request\n        .get(`${uri}/echo`)\n        .accept(\'json\')\n        .end((err, res) => {\n          try {\n            res.header.accept.should.equal(\'application/json\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should map "xml"\', (done) => {\n      request\n        .get(`${uri}/echo`)\n        .accept(\'xml\')\n        .end((err, res) => {\n          try {\n            // Mime module keeps changing this :(\n            assert(\n              res.header.accept == \'application/xml\' ||\n                res.header.accept == \'text/xml\'\n            );\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should map "html"\', (done) => {\n      request\n        .get(`${uri}/echo`)\n        .accept(\'html\')\n        .end((err, res) => {\n          try {\n            res.header.accept.should.equal(\'text/html\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'req.send(str)\', () => {\n    it(\'should write the string\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .type(\'json\')\n        .send(\'{"name":"tobi"}\')\n        .end((err, res) => {\n          try {\n            res.text.should.equal(\'{"name":"tobi"}\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'req.send(Object)\', () => {\n    it(\'should default to json\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .send({ name: \'tobi\' })\n        .end((err, res) => {\n          try {\n            res.should.be.json();\n            res.text.should.equal(\'{"name":"tobi"}\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    describe(\'when called several times\', () => {\n      it(\'should merge the objects\', (done) => {\n        request\n          .post(`${uri}/echo`)\n          .send({ name: \'tobi\' })\n          .send({ age: 1 })\n          .end((err, res) => {\n            try {\n              res.should.be.json();\n              if (NODE) {\n                res.buffered.should.be.true();\n              }\n\n              res.text.should.equal(\'{"name":"tobi","age":1}\');\n              done();\n            } catch (err_) {\n              done(err_);\n            }\n          });\n      });\n    });\n  });\n\n  describe(\'.end(fn)\', () => {\n    it(\'should check arity\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .send({ name: \'tobi\' })\n        .end((err, res) => {\n          try {\n            assert.ifError(err);\n            res.text.should.equal(\'{"name":"tobi"}\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should emit request\', (done) => {\n      const req = request.post(`${uri}/echo`);\n      req.on(\'request\', (request) => {\n        assert.equal(req, request);\n        done();\n      });\n      req.end();\n    });\n\n    it(\'should emit response\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .send({ name: \'tobi\' })\n        .on(\'response\', (res) => {\n          res.text.should.equal(\'{"name":"tobi"}\');\n          done();\n        })\n        .end();\n    });\n  });\n\n  describe(\'.then(fulfill, reject)\', () => {\n    it(\'should support successful fulfills with .then(fulfill)\', (done) => {\n      if (typeof Promise === \'undefined\') {\n        return done();\n      }\n\n      request\n        .post(`${uri}/echo`)\n        .send({ name: \'tobi\' })\n        .then((res) => {\n          res.type.should.equal(\'application/json\');\n          res.text.should.equal(\'{"name":"tobi"}\');\n          done();\n        });\n    });\n\n    it(\'should reject an error with .then(null, reject)\', (done) => {\n      if (typeof Promise === \'undefined\') {\n        return done();\n      }\n\n      request.get(`${uri}/error`).then(null, (err) => {\n        assert.equal(err.status, 500);\n        assert.equal(err.response.text, \'boom\');\n        done();\n      });\n    });\n  });\n\n  describe(\'.catch(reject)\', () => {\n    it(\'should reject an error with .catch(reject)\', (done) => {\n      if (typeof Promise === \'undefined\') {\n        return done();\n      }\n\n      request.get(`${uri}/error`).catch((err) => {\n        assert.equal(err.status, 500);\n        assert.equal(err.response.text, \'boom\');\n        done();\n      });\n    });\n  });\n\n  describe(\'.abort()\', () => {\n    it(\'should abort the request\', (done) => {\n      const req = request.get(`${uri}/delay/3000`);\n      req.end((err, res) => {\n        try {\n          assert(false, \'should not complete the request\');\n        } catch (err_) {\n          done(err_);\n        }\n      });\n\n      req.on(\'error\', (error) => {\n        done(error);\n      });\n      req.on(\'abort\', done);\n\n      setTimeout(() => {\n        req.abort();\n      }, 500);\n    });\n    it(\'should abort the promise\', () => {\n      const req = request.get(`${uri}/delay/3000`);\n      setTimeout(() => {\n        req.abort();\n      }, 10);\n      return req.then(\n        () => {\n          assert.fail(\'should not complete the request\');\n        },\n        (err) => {\n          assert.equal(\'ABORTED\', err.code);\n        }\n      );\n    });\n\n    it(\'should allow chaining .abort() several times\', (done) => {\n      const req = request.get(`${uri}/delay/3000`);\n      req.end((err, res) => {\n        try {\n          assert(false, \'should not complete the request\');\n        } catch (err_) {\n          done(err_);\n        }\n      });\n\n      // This also verifies only a single \'done\' event is emitted\n      req.on(\'abort\', done);\n\n      setTimeout(() => {\n        req.abort().abort().abort();\n      }, 1000);\n    });\n\n    it(\'should not allow abort then end\', (done) => {\n      request\n        .get(`${uri}/delay/3000`)\n        .abort()\n        .end((err, res) => {\n          done(err ? undefined : new Error(\'Expected abort error\'));\n        });\n    });\n  });\n\n  describe(\'req.toJSON()\', () => {\n    it(\'should describe the request\', (done) => {\n      const req = request.post(`${uri}/echo`).send({ foo: \'baz\' });\n      req.end((err, res) => {\n        try {\n          const json = req.toJSON();\n          assert.equal(\'POST\', json.method);\n          assert(/\\/echo$/.test(json.url));\n          assert.equal(\'baz\', json.data.foo);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n  });\n\n  describe(\'req.options()\', () => {\n    it(\'should allow request body\', (done) => {\n      request\n        .options(`${uri}/options/echo/body`)\n        .send({ foo: \'baz\' })\n        .end((err, res) => {\n          try {\n            assert.equal(err, null);\n            assert.strictEqual(res.body.foo, \'baz\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'req.sortQuery()\', () => {\n    it(\'nop with no querystring\', (done) => {\n      request\n        .get(`${uri}/url`)\n        .sortQuery()\n        .end((err, res) => {\n          try {\n            assert.equal(res.text, \'/url\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should sort the request querystring\', (done) => {\n      request\n        .get(`${uri}/url`)\n        .query(\'search=Manny\')\n        .query(\'order=desc\')\n        .sortQuery()\n        .end((err, res) => {\n          try {\n            assert.equal(res.text, \'/url?order=desc&search=Manny\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should allow disabling sorting\', (done) => {\n      request\n        .get(`${uri}/url`)\n        .query(\'search=Manny\')\n        .query(\'order=desc\')\n        .sortQuery() // take default of true\n        .sortQuery(false) // override it in later call\n        .end((err, res) => {\n          try {\n            assert.equal(res.text, \'/url?search=Manny&order=desc\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should sort the request querystring using customized function\', (done) => {\n      request\n        .get(`${uri}/url`)\n        .query(\'name=Nick\')\n        .query(\'search=Manny\')\n        .query(\'order=desc\')\n        .sortQuery((a, b) => a.length - b.length)\n        .end((err, res) => {\n          try {\n            assert.equal(res.text, \'/url?name=Nick&order=desc&search=Manny\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n});\n'b'const setup = require(\'./support/setup\');\n\nconst { uri } = setup;\n\nconst assert = require(\'assert\');\nconst request = require(\'./support/client\');\n\ndescribe(\'req.set("Content-Type", contentType)\', function () {\n  this.timeout(20000);\n\n  it(\'should work with just the contentType component\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .set(\'Content-Type\', \'application/json\')\n      .send({ name: \'tobi\' })\n      .end((err, res) => {\n        assert(!err);\n        done();\n      });\n  });\n\n  it(\'should work with the charset component\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .set(\'Content-Type\', \'application/json; charset=utf-8\')\n      .send({ name: \'tobi\' })\n      .end((err, res) => {\n        assert(!err);\n        done();\n      });\n  });\n});\n'b'const setup = require(\'./support/setup\');\n\nconst base = setup.uri;\nconst should = require(\'should\');\nconst request = require(\'./support/client\');\n\nconst assert = require(\'assert\');\n\nif (!assert.deepStrictEqual) assert.deepStrictEqual = assert.deepEqual;\n\nconst formDataSupported = setup.NODE || FormData !== \'undefined\';\n\ndescribe(\'req.send(Object) as "form"\', () => {\n  describe(\'with req.type() set to form\', () => {\n    it(\'should send x-www-form-urlencoded data\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .type(\'form\')\n        .send({ name: \'tobi\' })\n        .end((err, res) => {\n          res.header[\'content-type\'].should.equal(\n            \'application/x-www-form-urlencoded\'\n          );\n          res.text.should.equal(\'name=tobi\');\n          done();\n        });\n    });\n  });\n\n  describe(\'when called several times\', () => {\n    it(\'should merge the objects\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .type(\'form\')\n        .send({ name: { first: \'tobi\', last: \'holowaychuk\' } })\n        .send({ age: \'1\' })\n        .end((err, res) => {\n          res.header[\'content-type\'].should.equal(\n            \'application/x-www-form-urlencoded\'\n          );\n          res.text.should.equal(\n            \'name%5Bfirst%5D=tobi&name%5Blast%5D=holowaychuk&age=1\'\n          );\n          done();\n        });\n    });\n  });\n});\n\ndescribe(\'req.attach\', () => {\n  it(\'ignores null file\', (done) => {\n    request\n      .post(\'/echo\')\n      .attach(\'image\', null)\n      .end((err, res) => {\n        done();\n      });\n  });\n});\n\ndescribe(\'req.field\', function () {\n  this.timeout(5000);\n  it(\'allow bools\', (done) => {\n    if (!formDataSupported) {\n      return done();\n    }\n\n    request\n      .post(`${base}/formecho`)\n      .field(\'bools\', true)\n      .field(\'strings\', \'true\')\n      .end((err, res) => {\n        assert.ifError(err);\n        assert.deepStrictEqual(res.body, { bools: \'true\', strings: \'true\' });\n        done();\n      });\n  });\n\n  it(\'allow objects\', (done) => {\n    if (!formDataSupported) {\n      return done();\n    }\n\n    request\n      .post(`${base}/formecho`)\n      .field({ bools: true, strings: \'true\' })\n      .end((err, res) => {\n        assert.ifError(err);\n        assert.deepStrictEqual(res.body, { bools: \'true\', strings: \'true\' });\n        done();\n      });\n  });\n\n  it(\'works with arrays in objects\', (done) => {\n    if (!formDataSupported) {\n      return done();\n    }\n\n    request\n      .post(`${base}/formecho`)\n      .field({ numbers: [1, 2, 3] })\n      .end((err, res) => {\n        assert.ifError(err);\n        assert.deepStrictEqual(res.body, { numbers: [\'1\', \'2\', \'3\'] });\n        done();\n      });\n  });\n\n  it(\'works with arrays\', (done) => {\n    if (!formDataSupported) {\n      return done();\n    }\n\n    request\n      .post(`${base}/formecho`)\n      .field(\'letters\', [\'a\', \'b\', \'c\'])\n      .end((err, res) => {\n        assert.ifError(err);\n        assert.deepStrictEqual(res.body, { letters: [\'a\', \'b\', \'c\'] });\n        done();\n      });\n  });\n\n  it(\'throw when empty\', () => {\n    should.throws(() => {\n      request.post(`${base}/echo`).field();\n    }, /name/);\n\n    should.throws(() => {\n      request.post(`${base}/echo`).field(\'name\');\n    }, /val/);\n  });\n\n  it(\'cannot be mixed with send()\', () => {\n    assert.throws(() => {\n      request.post(\'/echo\').field(\'form\', \'data\').send(\'hi\');\n    });\n\n    assert.throws(() => {\n      request.post(\'/echo\').send(\'hi\').field(\'form\', \'data\');\n    });\n  });\n});\n'b'const setup = require(\'./support/setup\');\n\nconst { uri } = setup;\nconst doesntWorkInBrowserYet = setup.NODE;\nconst doesntWorkInHttp2 = !process.env.HTTP2_TEST;\n\nconst assert = require(\'assert\');\nconst request = require(\'./support/client\');\n\ndescribe(\'req.send(Object) as "json"\', function () {\n  this.timeout(20000);\n\n  it(\'should default to json\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .send({ name: \'tobi\' })\n      .end((err, res) => {\n        res.should.be.json();\n        res.text.should.equal(\'{"name":"tobi"}\');\n        done();\n      });\n  });\n\n  it(\'should work with arrays\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .send([1, 2, 3])\n      .end((err, res) => {\n        res.should.be.json();\n        res.text.should.equal(\'[1,2,3]\');\n        done();\n      });\n  });\n\n  it(\'should work with value null\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .type(\'json\')\n      .send(\'null\')\n      .end((err, res) => {\n        res.should.be.json();\n        assert.strictEqual(res.body, null);\n        done();\n      });\n  });\n\n  it(\'should work with value false\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .type(\'json\')\n      .send(\'false\')\n      .end((err, res) => {\n        res.should.be.json();\n        res.body.should.equal(false);\n        done();\n      });\n  });\n\n  if (doesntWorkInBrowserYet)\n    it(\'should work with value 0\', (done) => {\n      // fails in IE9\n      request\n        .post(`${uri}/echo`)\n        .type(\'json\')\n        .send(\'0\')\n        .end((err, res) => {\n          res.should.be.json();\n          res.body.should.equal(0);\n          done();\n        });\n    });\n\n  it(\'should work with empty string value\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .type(\'json\')\n      .send(\'""\')\n      .end((err, res) => {\n        res.should.be.json();\n        res.body.should.equal(\'\');\n        done();\n      });\n  });\n\n  if (doesntWorkInBrowserYet && doesntWorkInHttp2)\n    it(\'should work with GET\', (done) => {\n      request\n        .get(`${uri}/echo`)\n        .send({ tobi: \'ferret\' })\n        .end((err, res) => {\n          try {\n            res.should.be.json();\n            res.text.should.equal(\'{"tobi":"ferret"}\');\n            ({ tobi: \'ferret\' }.should.eql(res.body));\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n  it(\'should work with vendor MIME type\', (done) => {\n    request\n      .post(`${uri}/echo`)\n      .set(\'Content-Type\', \'application/vnd.example+json\')\n      .send({ name: \'vendor\' })\n      .end((err, res) => {\n        res.text.should.equal(\'{"name":"vendor"}\');\n        ({ name: \'vendor\' }.should.eql(res.body));\n        done();\n      });\n  });\n\n  describe(\'when called several times\', () => {\n    it(\'should merge the objects\', (done) => {\n      request\n        .post(`${uri}/echo`)\n        .send({ name: \'tobi\' })\n        .send({ age: 1 })\n        .end((err, res) => {\n          res.should.be.json();\n          res.text.should.equal(\'{"name":"tobi","age":1}\');\n          ({ name: \'tobi\', age: 1 }.should.eql(res.body));\n          done();\n        });\n    });\n  });\n});\n\ndescribe(\'res.body\', function () {\n  this.timeout(20000);\n\n  describe(\'application/json\', () => {\n    it(\'should parse the body\', (done) => {\n      request.get(`${uri}/json`).end((err, res) => {\n        res.text.should.equal(\'{"name":"manny"}\');\n        res.body.should.eql({ name: \'manny\' });\n        done();\n      });\n    });\n  });\n\n  if (doesntWorkInBrowserYet)\n    describe(\'HEAD requests\', () => {\n      it(\'should not throw a parse error\', (done) => {\n        request.head(`${uri}/json`).end((err, res) => {\n          try {\n            assert.strictEqual(err, null);\n            assert.strictEqual(res.text, undefined);\n            assert.strictEqual(Object.keys(res.body).length, 0);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n      });\n    });\n\n  describe(\'Invalid JSON response\', () => {\n    it(\'should return the raw response\', (done) => {\n      request.get(`${uri}/invalid-json`).end((err, res) => {\n        assert.deepEqual(\n          err.rawResponse,\n          ")]}\', {\'header\':{\'code\':200,\'text\':\'OK\',\'version\':\'1.0\'},\'data\':\'some data\'}"\n        );\n        done();\n      });\n    });\n\n    it(\'should return the http status code\', (done) => {\n      request.get(`${uri}/invalid-json-forbidden`).end((err, res) => {\n        assert.equal(err.statusCode, 403);\n        done();\n      });\n    });\n  });\n\n  if (doesntWorkInBrowserYet)\n    describe(\'No content\', () => {\n      it(\'should not throw a parse error\', (done) => {\n        request.get(`${uri}/no-content`).end((err, res) => {\n          try {\n            assert.strictEqual(err, null);\n            assert.strictEqual(res.text, \'\');\n            assert.strictEqual(Object.keys(res.body).length, 0);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n      });\n    });\n\n  if (doesntWorkInBrowserYet)\n    describe(\'application/json+hal\', () => {\n      it(\'should parse the body\', (done) => {\n        request.get(`${uri}/json-hal`).end((err, res) => {\n          if (err) return done(err);\n          res.text.should.equal(\'{"name":"hal 5000"}\');\n          res.body.should.eql({ name: \'hal 5000\' });\n          done();\n        });\n      });\n    });\n\n  if (doesntWorkInBrowserYet)\n    describe(\'vnd.collection+json\', () => {\n      it(\'should parse the body\', (done) => {\n        request.get(`${uri}/collection-json`).end((err, res) => {\n          res.text.should.equal(\'{"name":"chewbacca"}\');\n          res.body.should.eql({ name: \'chewbacca\' });\n          done();\n        });\n      });\n    });\n});\n'b"const setup = require('./support/setup');\n\nconst base = setup.uri;\nconst isMSIE = !setup.NODE && /Trident\\//.test(navigator.userAgent);\n\nconst assert = require('assert');\nconst request = require('./support/client');\n\ndescribe('request', function () {\n  this.timeout(20000);\n  describe('on redirect', () => {\n    it('should retain header fields', (done) => {\n      request\n        .get(`${base}/header`)\n        .set('X-Foo', 'bar')\n        .end((err, res) => {\n          try {\n            assert(res.body);\n            res.body.should.have.property('x-foo', 'bar');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it('should preserve timeout across redirects', (done) => {\n      request\n        .get(`${base}/movies/random`)\n        .timeout(250)\n        .end((err, res) => {\n          try {\n            assert(err instanceof Error, 'expected an error');\n            err.should.have.property('timeout', 250);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it('should successfully redirect after retry on error', (done) => {\n      const id = Math.random() * 1000000 * Date.now();\n      request\n        .get(`${base}/error/redirect/${id}`)\n        .retry(2)\n        .end((err, res) => {\n          assert(res.ok, 'response should be ok');\n          assert(res.text, 'first movie page');\n          done();\n        });\n    });\n\n    it('should preserve retries across redirects', (done) => {\n      const id = Math.random() * 1000000 * Date.now();\n      request\n        .get(`${base}/error/redirect-error${id}`)\n        .retry(2)\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal(2, err.retries, 'expected an error with .retries');\n          assert.equal(500, err.status, 'expected an error status of 500');\n          done();\n        });\n    });\n  });\n\n  describe('on 303', () => {\n    it('should redirect with same method', (done) => {\n      request\n        .put(`${base}/redirect-303`)\n        .send({ msg: 'hello' })\n        .redirects(1)\n        .on('redirect', (res) => {\n          res.headers.location.should.equal('/reply-method');\n        })\n        .end((err, res) => {\n          if (err) {\n            done(err);\n            return;\n          }\n\n          res.text.should.equal('method=get');\n          done();\n        });\n    });\n  });\n\n  describe('on 307', () => {\n    it('should redirect with same method', (done) => {\n      if (isMSIE) return done(); // IE9 broken\n\n      request\n        .put(`${base}/redirect-307`)\n        .send({ msg: 'hello' })\n        .redirects(1)\n        .on('redirect', (res) => {\n          res.headers.location.should.equal('/reply-method');\n        })\n        .end((err, res) => {\n          if (err) {\n            done(err);\n            return;\n          }\n\n          res.text.should.equal('method=put');\n          done();\n        });\n    });\n  });\n\n  describe('on 308', () => {\n    it('should redirect with same method', (done) => {\n      if (isMSIE) return done(); // IE9 broken\n\n      request\n        .put(`${base}/redirect-308`)\n        .send({ msg: 'hello' })\n        .redirects(1)\n        .on('redirect', (res) => {\n          res.headers.location.should.equal('/reply-method');\n        })\n        .end((err, res) => {\n          if (err) {\n            done(err);\n            return;\n          }\n\n          res.text.should.equal('method=put');\n          done();\n        });\n    });\n  });\n});\n"b'const setup = require(\'./support/setup\');\n\nconst { uri } = setup;\nconst assert = require(\'assert\');\nconst request = require(\'./support/client\');\n\ndescribe(\'request\', function () {\n  this.timeout(20000);\n\n  it(\'Request inheritance\', () => {\n    assert(request.get(`${uri}/`) instanceof request.Request);\n  });\n\n  it(\'request() simple GET without callback\', (next) => {\n    request(\'GET\', \'test/test.request.js\').end();\n    next();\n  });\n\n  it(\'request() simple GET\', (next) => {\n    request(\'GET\', `${uri}/ok`).end((err, res) => {\n      try {\n        assert(res instanceof request.Response, \'respond with Response\');\n        assert(res.ok, \'response should be ok\');\n        assert(res.text, \'res.text\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() simple HEAD\', (next) => {\n    request.head(`${uri}/ok`).end((err, res) => {\n      try {\n        assert(res instanceof request.Response, \'respond with Response\');\n        assert(res.ok, \'response should be ok\');\n        assert(!res.text, \'res.text\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 5xx\', (next) => {\n    request(\'GET\', `${uri}/error`).end((err, res) => {\n      try {\n        assert(err);\n        assert.equal(err.message, \'Internal Server Error\');\n        assert(!res.ok, \'response should not be ok\');\n        assert(res.error, \'response should be an error\');\n        assert(!res.clientError, \'response should not be a client error\');\n        assert(res.serverError, \'response should be a server error\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 4xx\', (next) => {\n    request(\'GET\', `${uri}/notfound`).end((err, res) => {\n      try {\n        assert(err);\n        assert.equal(err.message, \'Not Found\');\n        assert(!res.ok, \'response should not be ok\');\n        assert(res.error, \'response should be an error\');\n        assert(res.clientError, \'response should be a client error\');\n        assert(!res.serverError, \'response should not be a server error\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 404 Not Found\', (next) => {\n    request(\'GET\', `${uri}/notfound`).end((err, res) => {\n      try {\n        assert(err);\n        assert(res.notFound, \'response should be .notFound\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 400 Bad Request\', (next) => {\n    request(\'GET\', `${uri}/bad-request`).end((err, res) => {\n      try {\n        assert(err);\n        assert(res.badRequest, \'response should be .badRequest\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 401 Bad Request\', (next) => {\n    request(\'GET\', `${uri}/unauthorized`).end((err, res) => {\n      try {\n        assert(err);\n        assert(res.unauthorized, \'response should be .unauthorized\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 406 Not Acceptable\', (next) => {\n    request(\'GET\', `${uri}/not-acceptable`).end((err, res) => {\n      try {\n        assert(err);\n        assert(res.notAcceptable, \'response should be .notAcceptable\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() GET 204 No Content\', (next) => {\n    request(\'GET\', `${uri}/no-content`).end((err, res) => {\n      try {\n        assert.ifError(err);\n        assert(res.noContent, \'response should be .noContent\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() DELETE 204 No Content\', (next) => {\n    request(\'DELETE\', `${uri}/no-content`).end((err, res) => {\n      try {\n        assert.ifError(err);\n        assert(res.noContent, \'response should be .noContent\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() header parsing\', (next) => {\n    request(\'GET\', `${uri}/notfound`).end((err, res) => {\n      try {\n        assert(err);\n        assert.equal(\'text/html; charset=utf-8\', res.header[\'content-type\']);\n        assert.equal(\'Express\', res.header[\'x-powered-by\']);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request() .status\', (next) => {\n    request(\'GET\', `${uri}/notfound`).end((err, res) => {\n      try {\n        assert(err);\n        assert.equal(404, res.status, \'response .status\');\n        assert.equal(4, res.statusType, \'response .statusType\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'get()\', (next) => {\n    request.get(`${uri}/notfound`).end((err, res) => {\n      try {\n        assert(err);\n        assert.equal(404, res.status, \'response .status\');\n        assert.equal(4, res.statusType, \'response .statusType\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'put()\', (next) => {\n    request.put(`${uri}/user/12`).end((err, res) => {\n      try {\n        assert.equal(\'updated\', res.text, \'response text\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'put().send()\', (next) => {\n    request\n      .put(`${uri}/user/13/body`)\n      .send({ user: \'new\' })\n      .end((err, res) => {\n        try {\n          assert.equal(\'received new\', res.text, \'response text\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'post()\', (next) => {\n    request.post(`${uri}/user`).end((err, res) => {\n      try {\n        assert.equal(\'created\', res.text, \'response text\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'del()\', (next) => {\n    request.del(`${uri}/user/12`).end((err, res) => {\n      try {\n        assert.equal(\'deleted\', res.text, \'response text\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'delete()\', (next) => {\n    request.delete(`${uri}/user/12`).end((err, res) => {\n      try {\n        assert.equal(\'deleted\', res.text, \'response text\');\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'post() data\', (next) => {\n    request\n      .post(`${uri}/todo/item`)\n      .type(\'application/octet-stream\')\n      .send(\'tobi\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'added "tobi"\', res.text, \'response text\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .type()\', (next) => {\n    request\n      .post(`${uri}/user/12/pet`)\n      .type(\'urlencoded\')\n      .send(\'pet=tobi\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'added pet "tobi"\', res.text, \'response text\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .type() with alias\', (next) => {\n    request\n      .post(`${uri}/user/12/pet`)\n      .type(\'application/x-www-form-urlencoded\')\n      .send(\'pet=tobi\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'added pet "tobi"\', res.text, \'response text\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .get() with no data or callback\', (next) => {\n    request.get(`${uri}/echo-header/content-type`);\n    next();\n  });\n\n  it(\'request .send() with no data only\', (next) => {\n    request.post(`${uri}/user/5/pet`).type(\'urlencoded\').send(\'pet=tobi\');\n    next();\n  });\n\n  it(\'request .send() with callback only\', (next) => {\n    request\n      .get(`${uri}/echo-header/accept`)\n      .set(\'Accept\', \'foo/bar\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'foo/bar\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .accept() with json\', (next) => {\n    request\n      .get(`${uri}/echo-header/accept`)\n      .accept(\'json\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'application/json\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .accept() with application/json\', (next) => {\n    request\n      .get(`${uri}/echo-header/accept`)\n      .accept(\'application/json\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'application/json\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .accept() with xml\', (next) => {\n    request\n      .get(`${uri}/echo-header/accept`)\n      .accept(\'xml\')\n      .end((err, res) => {\n        try {\n          // We can\'t depend on mime module to be consistent with this\n          assert(res.text == \'application/xml\' || res.text == \'text/xml\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .accept() with application/xml\', (next) => {\n    request\n      .get(`${uri}/echo-header/accept`)\n      .accept(\'application/xml\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'application/xml\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  // FIXME: ie6 will POST rather than GET here due to data(),\n  //        but I\'m not 100% sure why.  Newer IEs are OK.\n  it(\'request .end()\', (next) => {\n    request\n      .put(`${uri}/echo-header/content-type`)\n      .set(\'Content-Type\', \'text/plain\')\n      .send(\'wahoo\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'text/plain\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .send()\', (next) => {\n    request\n      .put(`${uri}/echo-header/content-type`)\n      .set(\'Content-Type\', \'text/plain\')\n      .send(\'wahoo\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'text/plain\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .set()\', (next) => {\n    request\n      .put(`${uri}/echo-header/content-type`)\n      .set(\'Content-Type\', \'text/plain\')\n      .send(\'wahoo\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'text/plain\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'request .set(object)\', (next) => {\n    request\n      .put(`${uri}/echo-header/content-type`)\n      .set({ \'Content-Type\': \'text/plain\' })\n      .send(\'wahoo\')\n      .end((err, res) => {\n        try {\n          assert.equal(\'text/plain\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST urlencoded\', (next) => {\n    request\n      .post(`${uri}/pet`)\n      .type(\'urlencoded\')\n      .send({ name: \'Manny\', species: \'cat\' })\n      .end((err, res) => {\n        try {\n          assert.equal(\'added Manny the cat\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST json\', (next) => {\n    request\n      .post(`${uri}/pet`)\n      .type(\'json\')\n      .send({ name: \'Manny\', species: \'cat\' })\n      .end((err, res) => {\n        try {\n          assert.equal(\'added Manny the cat\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST json array\', (next) => {\n    request\n      .post(`${uri}/echo`)\n      .send([1, 2, 3])\n      .end((err, res) => {\n        try {\n          assert.equal(\n            \'application/json\',\n            res.header[\'content-type\'].split(\';\')[0]\n          );\n          assert.equal(\'[1,2,3]\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST json default\', (next) => {\n    request\n      .post(`${uri}/pet`)\n      .send({ name: \'Manny\', species: \'cat\' })\n      .end((err, res) => {\n        try {\n          assert.equal(\'added Manny the cat\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST json contentType charset\', (next) => {\n    request\n      .post(`${uri}/echo`)\n      .set(\'Content-Type\', \'application/json; charset=UTF-8\')\n      .send({ data: [\'data1\', \'data2\'] })\n      .end((err, res) => {\n        try {\n          assert.equal(\'{"data":["data1","data2"]}\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST json contentType vendor\', (next) => {\n    request\n      .post(`${uri}/echo`)\n      .set(\'Content-Type\', \'application/vnd.example+json\')\n      .send({ data: [\'data1\', \'data2\'] })\n      .end((err, res) => {\n        try {\n          assert.equal(\'{"data":["data1","data2"]}\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST multiple .send() calls\', (next) => {\n    request\n      .post(`${uri}/pet`)\n      .send({ name: \'Manny\' })\n      .send({ species: \'cat\' })\n      .end((err, res) => {\n        try {\n          assert.equal(\'added Manny the cat\', res.text);\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST multiple .send() strings\', (next) => {\n    request\n      .post(`${uri}/echo`)\n      .send(\'user[name]=tj\')\n      .send(\'user[email]=tj@vision-media.ca\')\n      .end((err, res) => {\n        try {\n          assert.equal(\n            \'application/x-www-form-urlencoded\',\n            res.header[\'content-type\'].split(\';\')[0]\n          );\n          assert.equal(\n            res.text,\n            \'user[name]=tj&user[email]=tj@vision-media.ca\'\n          );\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'POST with no data\', (next) => {\n    request\n      .post(`${uri}/empty-body`)\n      .send()\n      .end((err, res) => {\n        try {\n          assert.ifError(err);\n          assert(res.noContent, \'response should be .noContent\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET .type\', (next) => {\n    request.get(`${uri}/pets`).end((err, res) => {\n      try {\n        assert.equal(\'application/json\', res.type);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'GET Content-Type params\', (next) => {\n    request.get(`${uri}/text`).end((err, res) => {\n      try {\n        assert.equal(\'utf-8\', res.charset);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'GET json\', (next) => {\n    request.get(`${uri}/pets`).end((err, res) => {\n      try {\n        assert.deepEqual(res.body, [\'tobi\', \'loki\', \'jane\']);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'GET json-seq\', (next) => {\n    request\n      .get(`${uri}/json-seq`)\n      .buffer()\n      .end((err, res) => {\n        try {\n          assert.ifError(err);\n          assert.deepEqual(res.text, \'\\u001E{"id":1}\\n\\u001E{"id":2}\\n\');\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET x-www-form-urlencoded\', (next) => {\n    request.get(`${uri}/foo`).end((err, res) => {\n      try {\n        assert.deepEqual(res.body, { foo: \'bar\' });\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'GET shorthand\', (next) => {\n    request.get(`${uri}/foo`, (err, res) => {\n      try {\n        assert.equal(\'foo=bar\', res.text);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'POST shorthand\', (next) => {\n    request.post(`${uri}/user/0/pet`, { pet: \'tobi\' }, (err, res) => {\n      try {\n        assert.equal(\'added pet "tobi"\', res.text);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'POST shorthand without callback\', (next) => {\n    request.post(`${uri}/user/0/pet`, { pet: \'tobi\' }).end((err, res) => {\n      try {\n        assert.equal(\'added pet "tobi"\', res.text);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'GET querystring object with array\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query({ val: [\'a\', \'b\', \'c\'] })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, { val: [\'a\', \'b\', \'c\'] });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring object with array and primitives\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query({ array: [\'a\', \'b\', \'c\'], string: \'foo\', number: 10 })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, {\n            array: [\'a\', \'b\', \'c\'],\n            string: \'foo\',\n            number: 10\n          });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring object with two arrays\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query({ array1: [\'a\', \'b\', \'c\'], array2: [1, 2, 3] })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, {\n            array1: [\'a\', \'b\', \'c\'],\n            array2: [1, 2, 3]\n          });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring object\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query({ search: \'Manny\' })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, { search: \'Manny\' });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring append original\', (next) => {\n    request\n      .get(`${uri}/querystring?search=Manny`)\n      .query({ range: \'1..5\' })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, { search: \'Manny\', range: \'1..5\' });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring multiple objects\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query({ search: \'Manny\' })\n      .query({ range: \'1..5\' })\n      .query({ order: \'desc\' })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, {\n            search: \'Manny\',\n            range: \'1..5\',\n            order: \'desc\'\n          });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring with strings\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query(\'search=Manny\')\n      .query(\'range=1..5\')\n      .query(\'order=desc\')\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, {\n            search: \'Manny\',\n            range: \'1..5\',\n            order: \'desc\'\n          });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET querystring with strings and objects\', (next) => {\n    request\n      .get(`${uri}/querystring`)\n      .query(\'search=Manny\')\n      .query({ order: \'desc\', range: \'1..5\' })\n      .end((err, res) => {\n        try {\n          assert.deepEqual(res.body, {\n            search: \'Manny\',\n            range: \'1..5\',\n            order: \'desc\'\n          });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      });\n  });\n\n  it(\'GET shorthand payload goes to querystring\', (next) => {\n    request.get(\n      `${uri}/querystring`,\n      { foo: \'FOO\', bar: \'BAR\' },\n      (err, res) => {\n        try {\n          assert.deepEqual(res.body, { foo: \'FOO\', bar: \'BAR\' });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      }\n    );\n  });\n\n  it(\'HEAD shorthand payload goes to querystring\', (next) => {\n    request.head(\n      `${uri}/querystring-in-header`,\n      { foo: \'FOO\', bar: \'BAR\' },\n      (err, res) => {\n        try {\n          assert.deepEqual(JSON.parse(res.headers.query), {\n            foo: \'FOO\',\n            bar: \'BAR\'\n          });\n          next();\n        } catch (err_) {\n          next(err_);\n        }\n      }\n    );\n  });\n\n  it(\'request(method, url)\', (next) => {\n    request(\'GET\', `${uri}/foo`).end((err, res) => {\n      try {\n        assert.equal(\'bar\', res.body.foo);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request(url)\', (next) => {\n    request(`${uri}/foo`).end((err, res) => {\n      try {\n        assert.equal(\'bar\', res.body.foo);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request(url, fn)\', (next) => {\n    request(`${uri}/foo`, (err, res) => {\n      try {\n        assert.equal(\'bar\', res.body.foo);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'req.timeout(ms)\', (next) => {\n    const req = request.get(`${uri}/delay/3000`).timeout(1000);\n    req.end((err, res) => {\n      try {\n        assert(err, \'error missing\');\n        assert.equal(1000, err.timeout, \'err.timeout missing\');\n        assert.equal(\n          \'Timeout of 1000ms exceeded\',\n          err.message,\n          \'err.message incorrect\'\n        );\n        assert.equal(null, res);\n        assert(req.timedout, true);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'req.timeout(ms) with redirect\', (next) => {\n    const req = request.get(`${uri}/delay/const`).timeout(1000);\n    req.end((err, res) => {\n      try {\n        assert(err, \'error missing\');\n        assert.equal(1000, err.timeout, \'err.timeout missing\');\n        assert.equal(\n          \'Timeout of 1000ms exceeded\',\n          err.message,\n          \'err.message incorrect\'\n        );\n        assert.equal(null, res);\n        assert(req.timedout, true);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'request event\', (next) => {\n    request\n      .get(`${uri}/foo`)\n      .on(\'request\', (req) => {\n        try {\n          assert.equal(`${uri}/foo`, req.url);\n          next();\n        } catch (err) {\n          next(err);\n        }\n      })\n      .end();\n  });\n\n  it(\'response event\', (next) => {\n    request\n      .get(`${uri}/foo`)\n      .on(\'response\', (res) => {\n        try {\n          assert.equal(\'bar\', res.body.foo);\n          next();\n        } catch (err) {\n          next(err);\n        }\n      })\n      .end();\n  });\n\n  it(\'response should set statusCode\', (next) => {\n    request.get(`${uri}/ok`, (err, res) => {\n      try {\n        assert.strictEqual(res.statusCode, 200);\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n\n  it(\'req.toJSON()\', (next) => {\n    request.get(`${uri}/ok`).end((err, res) => {\n      try {\n        const j = (res.request || res.req).toJSON();\n        [\'url\', \'method\', \'data\', \'headers\'].forEach((prop) => {\n          assert(j.hasOwnProperty(prop));\n        });\n        next();\n      } catch (err_) {\n        next(err_);\n      }\n    });\n  });\n});\n'b'const setup = require(\'./support/setup\');\n\nconst base = setup.uri;\nconst assert = require(\'assert\');\nconst request = require(\'./support/client\');\n\nfunction uniqid() {\n  return Math.random() * 10000000;\n}\n\ndescribe(\'.retry(count)\', function () {\n  this.timeout(15000);\n\n  it(\'should not retry if passed "0"\', (done) => {\n    request\n      .get(`${base}/error`)\n      .retry(0)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(\n            undefined,\n            err.retries,\n            \'expected an error without .retries\'\n          );\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should not retry if passed an invalid number\', (done) => {\n    request\n      .get(`${base}/error`)\n      .retry(-2)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(\n            undefined,\n            err.retries,\n            \'expected an error without .retries\'\n          );\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should not retry if passed undefined\', (done) => {\n    request\n      .get(`${base}/error`)\n      .retry(undefined)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(\n            undefined,\n            err.retries,\n            \'expected an error without .retries\'\n          );\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should handle server error after repeat attempt\', (done) => {\n    request\n      .get(`${base}/error`)\n      .retry(2)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(2, err.retries, \'expected an error with .retries\');\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should retry if passed nothing\', (done) => {\n    request\n      .get(`${base}/error`)\n      .retry()\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(1, err.retries, \'expected an error with .retries\');\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should retry if passed "true"\', (done) => {\n    request\n      .get(`${base}/error`)\n      .retry(true)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(1, err.retries, \'expected an error with .retries\');\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should handle successful request after repeat attempt from server error\', (done) => {\n    request\n      .get(`${base}/error/ok/${uniqid()}`)\n      .query({ qs: \'present\' })\n      .retry(2)\n      .end((err, res) => {\n        try {\n          assert.ifError(err);\n          assert(res.ok, \'response should be ok\');\n          assert(res.text, \'res.text\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should handle server timeout error after repeat attempt\', (done) => {\n    request\n      .get(`${base}/delay/400`)\n      .timeout(200)\n      .retry(2)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(2, err.retries, \'expected an error with .retries\');\n          assert.equal(\n            \'number\',\n            typeof err.timeout,\n            \'expected an error with .timeout\'\n          );\n          assert.equal(\'ECONNABORTED\', err.code, \'expected abort error code\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should handle successful request after repeat attempt from server timeout\', (done) => {\n    const url = `/delay/1200/ok/${uniqid()}?built=in`;\n    request\n      .get(base + url)\n      .query(\'string=ified\')\n      .query({ json: \'ed\' })\n      .timeout(600)\n      .retry(2)\n      .end((err, res) => {\n        try {\n          assert.ifError(err);\n          assert(res.ok, \'response should be ok\');\n          assert.equal(res.text, `ok = ${url}&string=ified&json=ed`);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should handle successful request after repeat attempt from server timeout when using .then(fulfill, reject)\', (done) => {\n    const url = `/delay/1200/ok/${uniqid()}?built=in`;\n    request\n      .get(base + url)\n      .query(\'string=ified\')\n      .query({ json: \'ed\' })\n      .timeout(600)\n      .retry(1)\n      .then((res, err) => {\n        try {\n          assert.ifError(err);\n          assert(res.ok, \'response should be ok\');\n          assert.equal(res.text, `ok = ${url}&string=ified&json=ed`);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should correctly abort a retry attempt\', (done) => {\n    let aborted = false;\n    const req = request.get(`${base}/delay/400`).timeout(200).retry(2);\n    req.end((err, res) => {\n      try {\n        assert(false, \'should not complete the request\');\n      } catch (err_) {\n        done(err_);\n      }\n    });\n\n    req.on(\'abort\', () => {\n      aborted = true;\n    });\n\n    setTimeout(() => {\n      req.abort();\n      setTimeout(() => {\n        try {\n          assert(aborted, \'should be aborted\');\n          done();\n        } catch (err) {\n          done(err);\n        }\n      }, 150);\n    }, 150);\n  });\n\n  it(\'should correctly retain header fields\', (done) => {\n    request\n      .get(`${base}/error/ok/${uniqid()}`)\n      .query({ qs: \'present\' })\n      .retry(2)\n      .set(\'X-Foo\', \'bar\')\n      .end((err, res) => {\n        try {\n          assert.ifError(err);\n          assert(res.body);\n          res.body.should.have.property(\'x-foo\', \'bar\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should not retry on 4xx responses\', (done) => {\n    request\n      .get(`${base}/bad-request`)\n      .retry(2)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(0, err.retries, \'expected an error with 0 .retries\');\n          assert.equal(400, err.status, \'expected an error status of 400\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it(\'should execute callback on retry if passed\', (done) => {\n    let callbackCallCount = 0;\n    function retryCallback(request) {\n      callbackCallCount++;\n    }\n\n    request\n      .get(`${base}/error`)\n      .retry(2, retryCallback)\n      .end((err, res) => {\n        try {\n          assert(err, \'expected an error\');\n          assert.equal(2, err.retries, \'expected an error with .retries\');\n          assert.equal(500, err.status, \'expected an error status of 500\');\n          assert.equal(\n            2,\n            callbackCallCount,\n            \'expected the callback to be called on each retry\'\n          );\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n});\n'b"const setup = require('./support/setup');\n\nconst base = setup.uri;\nconst assert = require('assert');\nconst request = require('./support/client');\n\ndescribe('.timeout(ms)', function () {\n  this.timeout(15000);\n\n  describe('when timeout is exceeded', () => {\n    it('should error', (done) => {\n      request\n        .get(`${base}/delay/500`)\n        .timeout(150)\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal(\n            'number',\n            typeof err.timeout,\n            'expected an error with .timeout'\n          );\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          done();\n        });\n    });\n\n    it('should error in promise interface ', (done) => {\n      request\n        .get(`${base}/delay/500`)\n        .timeout(150)\n        .catch((err) => {\n          assert(err, 'expected an error');\n          assert.equal(\n            'number',\n            typeof err.timeout,\n            'expected an error with .timeout'\n          );\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          done();\n        });\n    });\n\n    it('should handle gzip timeout', (done) => {\n      request\n        .get(`${base}/delay/zip`)\n        .timeout(150)\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal(\n            'number',\n            typeof err.timeout,\n            'expected an error with .timeout'\n          );\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          done();\n        });\n    });\n\n    it('should handle buffer timeout', (done) => {\n      request\n        .get(`${base}/delay/json`)\n        .buffer(true)\n        .timeout(150)\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal(\n            'number',\n            typeof err.timeout,\n            'expected an error with .timeout'\n          );\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          done();\n        });\n    });\n\n    it('should error on deadline', (done) => {\n      request\n        .get(`${base}/delay/500`)\n        .timeout({ deadline: 150 })\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal(\n            'number',\n            typeof err.timeout,\n            'expected an error with .timeout'\n          );\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          done();\n        });\n    });\n\n    it('should support setting individual options', (done) => {\n      request\n        .get(`${base}/delay/500`)\n        .timeout({ deadline: 10 })\n        .timeout({ response: 99999 })\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          assert.equal('ETIME', err.errno);\n          done();\n        });\n    });\n\n    it('should error on response', (done) => {\n      request\n        .get(`${base}/delay/500`)\n        .timeout({ response: 150 })\n        .end((err, res) => {\n          assert(err, 'expected an error');\n          assert.equal(\n            'number',\n            typeof err.timeout,\n            'expected an error with .timeout'\n          );\n          assert.equal('ECONNABORTED', err.code, 'expected abort error code');\n          assert.equal('ETIMEDOUT', err.errno);\n          done();\n        });\n    });\n\n    it('should accept slow body with fast response', (done) => {\n      request\n        .get(`${base}/delay/slowbody`)\n        .timeout({ response: 1000 })\n        .on('progress', () => {\n          // This only makes the test faster without relying on arbitrary timeouts\n          request.get(`${base}/delay/slowbody/finish`).end();\n        })\n        .end(done);\n    });\n  });\n});\n"b"const setup = require('./support/setup');\n\nconst { uri } = setup;\n\nconst assert = require('assert');\nconst request = require('./support/client');\n\ndescribe('request', function () {\n  this.timeout(20000);\n  describe('use', () => {\n    it('should use plugin success', (done) => {\n      const now = `${Date.now()}`;\n      function uuid(req) {\n        req.set('X-UUID', now);\n        return req;\n      }\n\n      function prefix(req) {\n        req.url = uri + req.url;\n        return req;\n      }\n\n      request\n        .get('/echo')\n        .use(uuid)\n        .use(prefix)\n        .end((err, res) => {\n          assert.strictEqual(res.statusCode, 200);\n          assert.equal(res.get('X-UUID'), now);\n          done();\n        });\n    });\n  });\n});\n\ndescribe('subclass', () => {\n  let OriginalRequest;\n  beforeEach(() => {\n    OriginalRequest = request.Request;\n  });\n  afterEach(() => {\n    request.Request = OriginalRequest;\n  });\n\n  it('should be an instance of Request', () => {\n    const req = request.get('/');\n    assert(req instanceof request.Request);\n  });\n\n  it('should use patched subclass', () => {\n    assert(OriginalRequest);\n\n    let constructorCalled;\n    let sendCalled;\n    function NewRequest(...args) {\n      constructorCalled = true;\n      OriginalRequest.apply(this, args);\n    }\n\n    NewRequest.prototype = Object.create(OriginalRequest.prototype);\n    NewRequest.prototype.send = function () {\n      sendCalled = true;\n      return this;\n    };\n\n    request.Request = NewRequest;\n\n    const req = request.get('/').send();\n    assert(constructorCalled);\n    assert(sendCalled);\n    assert(req instanceof NewRequest);\n    assert(req instanceof OriginalRequest);\n  });\n\n  it('should use patched subclass in agent too', () => {\n    if (!request.agent) return; // Node-only\n\n    function NewRequest(...args) {\n      OriginalRequest.apply(this, args);\n    }\n\n    NewRequest.prototype = Object.create(OriginalRequest.prototype);\n    request.Request = NewRequest;\n\n    const req = request.agent().del('/');\n    assert(req instanceof NewRequest);\n    assert(req instanceof OriginalRequest);\n  });\n});\n"b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00f\x00\x00\x00f\x08\x03\x00\x00\x00\x0e\x01\x14P\x00\x00\x01zPLTE#%%:;;!##9::*+-668,--556#$%355 !#%%\'455/00:<<%\'(566(*+666+--689)+,446+,-88://08::445-//::<##%89:,-/688--/!#$/11\'(*()+++-*,,$%%\'()+,,)*,022133*,----)*+,,-456002014)++()*/01-/0699135++,///*++3569;;**,::;001145(**345/0224656866999:335466889"#%"#$899.01&(*024011+-.*+,013!"#)**)+--.0$%\'144//1146244&()99;%&(9:;$%&134+-/ !"012(()555%%%\'\'(000888""#!!"<<<:::999))*##$;;;222))+,,,:;<569k|\xb6\xa4\x00\x00 \xd9IDATx\xda4z\x8bw\x9a\xea\xb6/>\x00\r \x08U^\x1f\x16\xbeD%\x8a\x85"\x16Q\\\x06\xd0&\xa2$Mw<j\xbb\xdat\'\xbb\xebt\xad\xbd\xce\xe3\xde{\x1e\xfb\x9e{\xce\xff~g\xd6\xbdgttd\xb4\x8d#L\xe6\x9c\xbf\xf9{\x94 J\xe5J\x95\xa4\xe8Z\xfd\x8cfX\xae\xc1\x0b\x84\xd0\x14\xa5W\xad\xb6,\x9e)\xaa\xc6\xeb\x8cVS\x90\xd1ymZ5\x1d\x0b\x04I\xd4\xcf\xad\x0bR\xaet\xeb=\xab\xaf\x9dkf\x9dQ\xec\x06\xd1 \xb4K\x01\x0b|{`\r\xdb=\xddQ.\xc9\xd1\x1b\x97t\x0cY\xe3hbD{o\xfd1\xd5\x94hlb7\x98\xbc3\x02\x17\x8f\xa900\x86\x0e\x9a\xa2\x08\xcd\xb0l\xbb\xfe<\x10\xe2\xb9\x1d\xa9\xee\xc2X\xbcE\xf2OK|\xc5E\xc9\x14\xbbT\x9a\xad\x92\xb5\xbcV\xdf\xdb\x91\x1f\x05d\x96\xa8\xd7\xa8\xa9\x92v\xc2\xdd\x8c6\x94\xce\xe5h\xee\x87\x04C\x9atFv\xb6\x97\xfa\xe5\xce/\xf1\xed\xee\xec\\\x94\xea\xa6\xe24\xdc\x82\xbb5\xd9\xea\x96\xb0\x82| \x9a\xbaSO\xf4;\xc3a\x19\x9a"\t\xd1\xdc\xd6\x0c\x8e\xe6\x85\x0f4!\xf4g2\xed\xa4\xcc\x0ek\xe6\xbdi Z"k\xef\xdd\xf7q\xd1b\x9dFW\xc4\xdb\xaeE\xa8S\xff\xa3t\x8d\x05\x7f\xac\x86\xc18\xd3\xd4y\xfc\'\xef&\xd6\xb2\xa9\x1a&\x0f\xb8\xd8\x87\x9c\xcbM0\x8b\xfe\xce\x9b$\xf3\x83\x18L\xd5\xb5\xff\xe0\xe9\xc1r\xefrGN\x08\xc6(\xc1SODG\xb4BS<\xc5\x11\xd7\\X\\4<\xee\xa7\x0b\x12\x99\xbei\x1f\xed-\xd1\x13\xf6BO\x90\xb4\x8e\xc5\xd5\t\xba%\x10\xbad\xf0m>\xaf\xdd\xab\xf9\x07\xfa<m\nX\xe7\xf52)[\xaa\xd0"\t\x92W(\xfa\x94\xf2\x02#\x0e\r\xfe\xd6\xa4k\x8dO\x15B\'\xb6\x1d#{\xdf\xa3;\xa2\xad\xd4n?k\xb5v,H\x06\xd3`t\xa4un\t\x9a\xe0\x96\xd4\x8a2\xe2%\xe5,\xae}K\xfd\x99\x8b\x90\x8b\xe9\x85\x836\xc1\x12\xd1h\xda\x0f\x83\x87\x8b\x12N\xb2\xcd\xbb\xc2O\x87M,C\'ioM-\xa9po\xa9\x13{C\xb9*\xcd\xc9\xc8\xc4!\xa7\xbd\x9b\x7fZbZr\x83\x84;\xa0\xdc\x9f\xc4+{M\xe98$\x90\xc5\xb3\x0e]K\x837\x1fR\xc6\xe2\xf3\xe1mH\xd7\xc8/\x8dX\x90\xeb\xbc\xd5\xd2\xbc]X\xbf\x13{\xf4\xd0\x92\xea<I4\xb8\xd44x\xf1n\xcb\xe9\x83\xf6\xb9b*\x89E|\xad\xde\x86m\xff\xeb\x9d\xe8\ne\xe1\xbcN\x90\x0c\xe9\xa7\xe1\x1b7\xbd$\x03\xb1l\xb8\xec\x9dE\xc4n\xb6}\xbc\xb6\x1d\xec\xc4\xf7\xd9\xc3\xc5\xe6b\x8a\xc6h\xf2\xee\x1b\x9a\xa0?g\xeba\x8e\xc6x\xb7\x88\x82p\xbfB3d\x06cu\x99\x14\xb6\x89B4\xb5_a\x93Z\xaa\xe1c\x1a\xcc\xd5U\xff\x89\xd2\xfa\xf3\xe0&\xb0\xa0\xa7G\x9c\xec\xdb\xd0\xd3\x07\xec \xc1;&\xdf`\xd2x\xad\xf7\x8c\xc8Sc\x90V\x15O3\x05\xb3\xce\xeb\x9c\xf1\x97-C\x9e4\xa4UsB\xe7S\xbf\xd4"\x07\xa5\xce\xcc\xb7\x08\xcb\xad\x87F\x1f\xbev4\xc2\xc0\xf7\xbc\xe0\xd4/w\x89p\xaa\x87B\x99\xbc\xc8\xcd\xd7e\x05\x89\xc4\xee\x94\x9f\xd8\x98\x96\x8c\xb2.\x93\xb07j\x1b\x1f.\x96\xea\x06\xe9q\xbe8^l\x82\xfah>\x8a\xd0\x1cj\x9a\xc6r\xbc\x19\n\xa3#\xfci\xad*}3>\xfaS\xcf\xf0\xaf\xd5\xdc6\xd5|\x0f\xdd\xc4n\xa6\r\xc7\xdc\xc1\x7fK\xbd^L\xa8\xf5b\xb7p)\xd763\r\x1fFf\xf6\xb0W\xfc\x95m\xdaS\xa2[!\x94\x84>\xab\xd7\xbe3;\x1b\xf6\x80\xa7%\xe5]\xea\x8a|\xca\xb4\x83\xf4\xae\xde\xb5\x06$\xf4\x8f\xae\xd1\x84\x96\t\'\xad\x937\xc5E\xea\xb0\x03\xfa\xcc\xc0\x8dV~n\xf1\xa2gH\xdaI\xbfk\xab\xbb\xbbv\x8d\xf4s\x89m\xbe\x1a\xe8j~WT5\xb3\xe4\xefZ%\xc2\x8f\xb8\xe9\xe3\xd4\xa3U7X\xa9?{\x96\n\xd3\xb1\x7f\xc0d`r\x93\x83\x99\t\xc8\x95W\x87\t`D\xe2\x9b\x81\x8bh\xea\xdb\xc5\n\xa6\xa8\x8d\xd7\xfe\x14:\xb1\xb3\xe7\xd4\xcdb\xba\xd0\x1e\xd7~\xd7[\x06\xe3@F\x0f\xeaWu\xe9M\xa8c\xa0\xe0\xd5\xde\xf1n\x1ei\xc2U\xfc\xd4\xbd\xffe&\xb7)\xbaY\n\xafz\xa4}\xc5\xd0\x8c\x12Zq\x9d\xb9\x1a\x94\xce\x15\x7f\xdb\x9a\x11\xc5\x99h\xa7r\x89\xb1\x08\x8db\xb1%\x93\xcd\xf7\x99\xe2\x08\xbd\xc6\x89\xa5\xf2\xb2\xc2+\x1f\x1a\x0b\x92\xa93,%\xd4,\xde:\xfd\xfd\xa1\xde\xd4\t\x83(\xa9\xf99=\x10\x08\xc9\xf5\xa2l\x86\xae\xed\xf1~9j\x8c\x12*\xcaLJ\xf3\xdf\xee\xbfQ\xf3,M\xa6\xd2\x1a\x1d.h\xce\xe1&\xea[\x8f\x0c\nn\x83#O\xf0\xe6\xaa\x89\x0e\x01\x8d\xa7\xaa\xb9p9\xe1"\xc2\xf3w\x87!\x8d\xab\xf8&i\xe3\x8d=^\xac<\x01\xad\xa8#\xb5\xe4\n\xb4"\xfa)\xf4\xc3\x90*\x17\xf9\x0b6\xb7\x14\xcf\xea\xa4\x97\xf9@\xa1\xb65\x8d)\xf1\xe4\xe2M\x87%\xc8\xcfz\x9f4YWsD\xcaj\tM\xc1\xd5\xa4Y\x8b}A\rJ\xaf\xa5\xbc\xce\xe7\xb6\xd6#kt\x99>7\x9a\x02\xafc\xbd\x9cKV(.\xc8K\x92\x7f\xcd\xd0\xc4b\xb9\xa7\x01\x87\xe0\xe9\xa8\x02\xcb\xea\x9c\x83>\xd9\xa1\xf7\x83s\x83\xdbQd\xaf\x92\xc8V\xb8\x07;:8\x94\xc8\xb9#\xf9\x10-v\\\x17%\xc8\xf1v\x99\x13Lp\xe1+\xc9A\n/>&\xdb\xc3T\xbdV\xe9\xe9f8\xcf\xbea-\x0b\xb9)Z?Z\x14\xbc\x07\xa2[w\x05\x9e\xf4\xeb\xf0F\xd3\xcf[lH\xc6\x1d\x19\xe6^\xe3K\x11Z\xeen\x01\xf8\xfb\xab\xe6h*\xfd\x855\r)\xe5v5\x96i\\\x8a\x01\xd9\xa93\xe9i\xbb\x9f\x11Z\xcd\xb8\xd3\xe2\xd7\xaep\xde\xe0\x95@\x91\xf2&\xa9\x92\'\xb6G\x9e\x0b\xaa\xc2\xd0\xa6\xc1X\x88&(\xe3\xd3\x86\xda\xd8\x93X\xb4\x1f\xb29\x17\xf9\x82\r\x7f\xf6\xdfb\xc3\x8b\xd4\xa5\xea\xa2\xbat\x80m\xff\x88\x05\xd8\xffo\xe8\x86\xda\xaa\xc7\xbe\xe3O\xd1W\x7f\xf98Ue?\xe5\xae\xf1\xd8\x8e8\x03m\xbc\xb1j\xa8\x074\xcd\xae\x87\x16\xb5\x19m\xd4y\xd6X\x84\xc303\x89\x90\x86[h\xb8\xaf\x88W\x83]l\x84\r3\xef\x18\xbf}uE\x99=\x91>-\x89\x84x.L\x85r\xe3\xe9u\xc8\xee\x85K\x85\xa8\x10\x16E\x96\xb5\xd6W\x19\xde\x01\x01\x95|\xb0\xb0\xd8k\xb7\xeae!&O\xe49lW\xd9x\x12\x06:\'|\x99=5\x1c2\xb8\x1aX\x04\xf7\xa0\x8e\xfdy&\xc6\x11\xb7\t\xa6\xbe\x81\x0f\xc92\x0e%m\xf8m?\x85z,@\xde\r\x15r\xa5}b\x1f\xb0\x8b4\x04s\x83V\x895\xfc\x81\xa7(Q\xc9`\x8a\xae\x87\xc5\xe8\xfbo\x9b\x91\x03S\x1a\x05\xa67\xf7\xd9\xd1\x8d\xf7-(\xfa\x96\xbdF\xc9^\xe6X\x82\xa0\xed\x94\xd1d\xf1\xae\x84_\xf3\x8d\x13\\CU\x0f\xb5& \x9dd1J\xcd2\xadXp47\x1d\x18\xc3R5\xed\x89Ou\xae\xcd\xb0\x0c\xdc|\xa4\xc8\x06\xa3Ku)\x85\xfe\x92L\xa1*\xc4\xb6\xac\xf4I\xe6\x9e\x10?\x97(\xfdR?\x89\xa1\x8e\xd2V\x05f\x18\xb9x\xe9\x19\xb6\xbb\xdf,nF\xa9\xda\\\xc0t\xa0F\xe2\xbe\x8b\x82\xe9P9$\xa3B\xfdFY\xd44\x8e\xd0\xd4+\xf9\x80j\xa35R\xa8\xe9\xbb\x897F\xf7\xef\xc6\xfe\xd8O\x12\xd2+\xec\r\xdcNcT\x8c\xe6\x17m\xeeg\xb8b\x1f\xfb\x15?\x8fC\xee\xdb\xe8*\x9e\x12\xf1\xbdK\xba\xf4e\x8a\xf5A\xfd\xa9`n\x17\x05!6\x15^\xf0\xe9/:C~\x99Q\xda\xe0\xf9W\x85\xc9\x17\x1ac\x98\x8aKs\xd69\xb0\x1d\x93\xa4\x14b\xc7\xb0f{\xa1\x99"\xaf\xb4\xea\xfd\xd7\xcc\xd7\x93p\x0e(m\x02\n\xc6\xb9\xd3\xe0-\x89\xa4\xea\x83\xf7g[\x99%\xfc0f\xb3\x97.D\xb1\x95L\xbd%5\x7f\x84Y\xc3+\xbc\x89\x05\xdbU\xd7\x8b\x95\x9a\xe3\xb94\xf5\x8e\xb65\xbaN\\\xee&{F\xcb\xe1\x86[\xaa\x02J\xb8&\x95P\x02\x0e\xd1$[R\xbb\xec`\'\xc3\xef\xe8\xedc\xe49\x0b\xc5?&\x91\xb7\xf2EnC\xad\t\x86\xee\x18\x83"0\xa0\x06\xc0\x03n;\xa8\x7f\xa6\x07,g\x95\xe9\xaeP\xd5)\xb1\xf6:\x14\\\xfa]i\xa0\xf1\xf7\xb0?Z\xad4\xa0\x99\x1dG\xb6X\xb9\x04_K\x9d\xf7&\xdcN\xd5\xea\xdd\xba\xa5\x8e`\x8bw\xc2\x1d0\xa5\xb2\xee\x08\xd2\x18\x93\x0c[\xb3\x06\xe2\x90%.\xd8 \xc2K\xe4>\xee\xb8\x15\xb5\xf4\\\x9b\xe4\x8eq\xd2\x8fFV\x7f\xacN\xf05U\x04\x13\x7fJM.n\xbdB\x8d\xd4\xf5\'\x92Z\x0f\x93,\xe1\xc8d<\xaaJ.\x122w\x1f\xf5Wv\xa1\xbaj\xc4\x91\x8b\r\xdep\xc9A\xbc0\xed\xf1\xd0\xe1\x04u\xcc\xc1\x9d\x82j<\xe3\xaf\xbf\xfb\xe9?\x88j\xfa\x8fb\xfc\xfa\xaf\xbf\xff\x13\xfd\xd7\xdf\xe3\x7f\xfe\x1f\xf4B\x8c\xdb\x8c\xf8\x0f\x8a*\xfa\xf4\xff\xfc_\x7f\xfd\x17\xfc\xaf\xf1\xbf\xfc\xdb\xbf\xfe\xfb\xdf\x16"\xd3\xee\xe7\xf1\xef\xc1\xdf\x18=\xfe[\xa7\xfd\xbf\x95\x7f\xd3\xff\xe3\x9f\xffC\t\xfeV\x13k\xe2\xff\x11\xff\x9d\xf6\xf3\x7f\xdf\xfd\x93\xe8\xff\xfe\x8f$\xf3\xbb\xf7\xaf\x7f\xa5;\xbf\x13{\x07\xaaI\x91\x1b@\x17\xa8\xd4\xaf\xc2>?\xc4l?\xfam\x1a\x17\xea\x16O\xa9C\xf0\xe0\x03.\x8d&\xd4X%\xd5\xe6\xa7\x88\n\xedb\xea,\xa2~1\xa2\xa1\x1a3\xa8\x8e\xf2\xfeJr\x16\xaeJr\xd1"\xc7\r\xee\x10\xbb#sh@5\xe6b\xcc\t\xc9\x84\xf0I\xbe\xe0wN\x8a\x15\xb8\xfd\x95\xae\xa6\x92D\x9b7\x80\xc1\xc0\xed\xbf\xb3.-\xcfr\xd9^Z\xb6\xfcW5\xed\xd2\xe05\x0c\xb7\x9f\xd0\xcbb\xcc\xf6D\x98*%V\x06\xe2\xa5~\x9e\'\xc59\xed\xa6\xe5\xb4\xdc\x96\xc8\x96H\x91\xbc\x15\xe6Om\xe0\xd4\x8d\x8ea\xee\x88\x8b5\x07<\x8a\xba\xcen\xa6m\xfb\x1b\xb5\xe2\xa6\x8b\xfb \xf4\x9f\xa8q\x00Lr\xd1\x85;\xb8\xa5\x8e\x8f\x13<\xdf\xb3\xde<p\xe1\xda>g\x07\xea\xa1\x1f]\x90\xd4\xca\x1f#7\xd3\x91\xa9NG\xe1pw\xb1VC\xd5\x18F\xd4:;\xa8\xf5\xfd\x140\xf1\xc1\x16Q\x84\xc7D\x8b\xbc\x9b\xd5D\xa4\xf0[\xb3\xd2{\x0eh>g\xbe\x13\x8d\xbe~\xb2Z\xf5\xc1\xad\xdax\xd2\xdd\xd2\xb9\x90\x88\x9f\xd9\xe6\x1b\x86\xe4\x84Aq*1W\xd4\x8e\x11\x88\xba)\xf4\x1bO\xd6\xe5\xec\xc9\xc8\x942\xdd*L-\xa8\xb83BTY\xben\xd6Om\x9f.[wZO\xc1\x80iB\xe0\xc2]\x99z\xdb\x188\t\xd5D\x02\xd7\xe5\\{:$\xa9\x8f\xfe\x91\xfa\x98\xe9{\xf7\xa2\xe0\xa2\x98\xf4\xa3\xc7y\x90\xa8t\xd2\x1cF\xdc\xe4\x9d\x10O\xd0\x06\x8fG\x82\xbf\t&\xa0\x1e,<\t\xa2\x11\xb9\x8f\xf0\xc6\x87\xadQs\xff\xad\x7fm\xbf\xf2A\'\xc4sB\x12:4\x12[\xef\x19\xf1\x12fJ\xa6\xcf`Cp\xa5u\x1fV\xeeJHdv\x0e\xe9\xd4\x83\x06\xb3k5\xeev#\xa5\xb9kZ\xe16+\xd5\x84;\xf8\\F\x9e^\xf6\x83\x85\xfd\x00f9\xa0\xed\x82)~\xa1\xa5:\xb33\xebw\x05\xba\xe5\xf3\x81\xd0\xa5\x13\xb1U\'\xec\xb1T\xec\x9f\x1e\xe9\xccI"_~\x14|91\x033\xb9\x02~\xe2\x8cL\x1fx\x96\xff\x91\x8a\xfa\x15\xae\x1bD\xfe\x812\xec\xf9\xf0#v\xd5\x1d\xe7\xc4\xe6!J\xb4\xe0G\xb2D&\x02\x8eI]\xa3\r\xb7\xe1\xa2 G\x96\xea\xc2\xbbY\xa2\xc6~\xe9\x81*\x02`\xeaj\xd2}\x95f\xac\xcf\x82*\xb8\xa0\x0b>\xd7}\xda\x11\x88\xdd\x9d\x81w<\xd9\xb9\xef\x91\x12]N\x9b\x80\xc8X?\x91\xae\xd5\x138\x92\xc8\xf9-#\x1e\x8c\x17]\xd01\xb0b\xd2w\x8d3`\xdb\x84RS\x86\x86\xbc\x0b\xe9\xce\xedp\xebT:\xfaI\x08\xfe\xd0\x05\x04\xb5\xf4\x7f\x86\xbd\x99\xf4\xe5\xec#\x95R\xf3\xf8\x81\x8a\xa0/S\xc9\xf4#,\xc0M\x99p\xae\xaa\xabSt\xe4\xae\x91\x95\xb8\xf0\x1d\x07\xaa\x04\x93\x08\x1a\xc1\x9eQo\x17\x80\x86\xd9+\xbb\xc8\\\xea\x98\x91TD\xad\xd4\x994\xf7\xae\xed9\xd2\xbd)\xb5JL\x8aV\'\x04\x95\x9f\x97`o\xeaC\xe5R\xe15\x93\x1ciw;\xa2\xf4\x0b\x9b\xb1\x1d\x8d\xd9\xba\x15J\xef5:\xe9@\xc0\x1a\xa8J\xbdKgB\xcb`\xea&\xc9\x91\xe6\x8e\xa9\xd7\x94\xfe\xf6\xb3\xc2\xe7\x0e\x8b\x84&;ht\x1b\xdd\x1d\xa1\xb5\x8c\xcc\x92`\xee\xdc\xadg}\xd0\xcaBG \x86\xd7\x8b\xdb\xe4\x81;\x02\xbb\xa9\xc3\xfc\xbfE\xc0\xa6\xfd9\xb7\xcc\xae\xb3b?\x0f`\xd6\x86\x95\xd8\x94~@\x7f,u\x9c\x99\xfd\xa5T\xcf\xa6\xc3%6\xed\xad*\xabklr\xb4?\xbf0c7n\x83\x9e{H\xac\xec\x86\x8b<\xd7+~r)\x07X\x9d@\x01\x93#x\xb1\xac\xf7X?\xef\x88_\x9e\t\xcb\x17\x9c\x86\xa3uf\tY\xa6\x07F\xcbH\x8a\xcfBK\xebj\x9cQ\xa6\xcfh\xf9\xbb7\xeb\xdd\x9e)\xae\xa8\n\xe1s\x93\xfc\xfc\x9f\xb6\xf8\xd9\xa8\x89\xbc\x96\x19\x1f\xc4\x9e\xce\x97p\x89\x17Zb`\x11\x80\x1b\xcc-\x02Nz\x0e\xbc5c\t\x8e\xa5\xcc\xfe5\xd7\xe4J\x94\x8b\xa6TW-q\xcb\xd1\x1a\xae\x8f\xa6\x16\xfe\x06\x9b\xaa\x02\xbb\x0e\n\xfa7\x0bG\xd0\x1f\xc07\xb5\xeb7\xe3\x15\'\xa0&^e.\xaad.\x96\xb3M`\xf9\x87\xd1\x1a\x03\xa2\x0c\x9d8\xa2\xe8\xfd\x06\xdf`\xd0\x11I\x04\n!$B\xcd\x15\xd4\xfa\xafVX\x91K\xdc\xb6V\xea\xed\xf8\nG\x86\xf7\xbcB\xd0\xd3Fh\x9d\x1b\xbc\xae\x92\x9d\x94\xb7\xcc\xfb$\xaf\x91-\xb8(#1dy\xa3ly\x06\xa8J\x985\x89=\x17\xbb$\xc1\x0e\xc9\x16\xf9\xb9B\xa5\x1d\xa1\x95\xb6\xaeb\xbd#\x9aJX\x92^\x9fRBm\xaa\x93\xc3\x11&\x1dt0\n}A\r\x87\xe6\xde}\'\xca\xe3\x8b\x04\x99\xb6\x82\x1f0h\xe5,\xf5Mu\x89\x7f,\x14t\x00\xee\x96,`\xe6\x90\xb9\x08=\x118\xe5\x8fL~\xd7@+\xfc\x8d\xbbQ\xe7\xea\xdc\xceA7\xac\x81\x0f\xbc},\xc1\xd7\xdc\x0e\xf7[\xc2\x9c\xed\xb7\xbc\xe5\x90w\x02z\xdd"kb7_(U\xba[o5<\xab6\x93\xc8\x93\xf5\xa8\xb5r\x02x\xb1\xad\xf1\xa9\xdb\xe6\xb7\x14|\xff\xe0\xf5\x07\xc0\nsk\xbe\xe8\x97\xed\xaf$a1d\x90\xb6\x84\x81\x80\x8c\xb2@l\xb1rq\x0b\xb8\x06\xac\\\xddv\xa1*\xe2S\x84L\xcfP\xc3\xe9\x12\xf4M%~\xa2n\xe2\xd5\x8b~\x8cA?\x8ev\xb03\xc7\x17\xfdHM\xe2y"\xbf\xfc=x\x02\xeb\xcc\xd8W\xb9\x07\xce\xccR\xf4\x16.\x92\x8c^\xff\xe1\t\xfc\xac\xb6\x01\xa1\xaf9r\xf8\x00\x9e@\x84\x04\xff\x87=\xb1\'\xaa\xe5W\t\x9b\x0cK\xfc\xb3c\r\x95\xae\xee\xb4?\xff\xa7$\xf6\n\x936E\x8ef\xf2\x935(\x12\xa5|\xdf\xa4\xf9\xabw\xcf\xfc\xbd\xfc\xdd\xd1|\xda\xdcu\xf3\xf0\x19\x81\x9730\x082yf\n\x99&H\xaa\xd1\xcb\xf9\xef\x8e\xe1\x94\\\xab\xd5H\xde\x0f\xea=\xe0\xa8\x88\xae)r\x01*u\xb4\xb4K\xf0^\xe7\x8b\x1bU\x03\xae%S\xcd\x05\xb9H\x82\x1c\xdej\xc3n\xee\x1f\xe0\xf9,\xf5!\xd8H\xe6P\xb0\xabY\xd4orb\xe0\xe0\x88r\xa4\x19\xaa\xda\x89\xe7\x0e\xeb^\xb8?\x0c\x0fH\x81Y\x84\x1a\x10\xe0\x19\xe7\x04\xc2p\x93\x1d\xf7\xd7q{4Ws\x82\x11\\\xd8\x0c\xa4\xb5\xbe\x9f\xe8_\xe9\xe0\xfb\xa5\xd5S\xce\x94\x8c\x0e\x850\xed\x91\\\xe3\x8e\xae\xa65\x1a\x03\xef\xac\t=\x1d_\xc1^\xd0\xae\xe5\x1b\xb0\x17\xca\xa0t`\xcb\xb0\x17.\x8b\x817\xdf)\x9d\x06*u_\xcb\x8a\xca\x12\x16O\xca\x8dD;\x17\xcf\xe8/;\xd5"\x10-\x1d\xf1\x11\xb8M\xfd\xb1\xf0~,\x96X\xe0\x1e\xd0\x81s\x11\xcbMc\x98&nG\xfd\xf0\x8f\x0b3\xa0\x7f\xda\xa09LSE\x9d\x0fs\xa8Z\xe7"\xee-T\xfd\x9e\xdb\xc8k\xa8\x1apO}\x98*/uK\xa6M\x07Q?\x84O\xb1/u\xdb\xd7\x84{k\x92\xbe\xf1\xa1\xd1\xb5xct\x0f>\x13\xd92\xa8YY#\x1a\xe5\x1d\x07sT\x86;\x82\x159\x074\x16\xb8\xab\x96&\xd3U\xf2\x91\xad\x89\x03\xf2L\xf7o\xe5\xfa\xe7\xf4$P\xd6\x99v\xb7e\xde`\x9a\xa7A\xdf\xdd\x87\x02\xc3\xf2\xe2\xa2\xe2X5\xba\xb3\xf3\xc5*x6/\xf7|\x8e\xee\xfb\xd7\xb6\tx\\,\x80;\x83\x83\x91\x8e\x96\xfb\xcd\xfe-\x95?\xfe\x9d\xff\xcdsF\x1a\xb5\n\nP\xa2:r\xf6\xee"Yl\xd5\x83\x17M\x97\\\x03\x9e\x16P{!\xa0\x03\xa0\xc1\xf5b\xaa\xfeP\xff[\x8b&C\x11\xaf\xe2&\xde\x0c\r\xe23\xe8b\x93t\xb5A}a\x95\xb5\x13x}\xd4\xf6\xae\x04^_\xc5\x17\xc0]\xb3:\xba\xdavn\t\xd2|\x93\x81\xd3\xe7j-\xd1\xbf:Y\xbc"\x83R\xa8\xce\xc0?\xd0\x03\xa1\x03h\xc0\x8b{\x05\xfaAf\x15\x9cv5\xb3\x1d[w\xca/bs\xe6\xd5\x9b\xcf\x1f\xea\xc4\xdbIV\x8c\xe0\xa7g\xae\xbf\xc4;t@\tu\xe4X\xdf\x05\xc6i\xfa/NSDM=\r-\xdf\x1d\xa9H\xd5\xa8\xf1\xe8\x98\xb9\xdc,\x9e\xe3\xf5\x1e\xae\xa2\x1fR\xc9\x08\x9c\xa7\x91\x8b\x1f\x80\x9d)\xde\x91zJ\x84$\xda_\xa3\xa8O\x02>O\xb3\x88bQH\xa8\xec\xf9n@;_9\xbac\xdd\x91\x8c\xe5+\x8c%\xed0\xbd7\x1c\xb2\x0c\xfe\xd9\xa3&\x15\xa1x\xaeK\xa4\xa3\x9c\x89\xe5-j\xf0\xcfX\xbcld\xca]}\x00U\x05\xa4I\xf2%\x82U\xb7\xcd\x12Q\'\xc6\xe0\xe5X\x04\xe9\x91\'\xa8\xdb\xbd\x07\xef\xb4\x18\xd4/\r\x02o\x16,\xde\xe0D\x8d(\x12O\xfb\xcb\xc0\xdc\xb38\x01~R \x1a\xb4\xf0\xca\x1b\xfb\xb4\x0cL&q\xe2|\x0f\xff\xae>\xe0\x19\xe5d/\xbcZ\xd9O\xfc%\xf0\xea\xddO\xc0\xcc$\'x\xe1?Qb\\\xb8C\x17\xfd\xc8\xe8Q\x94\xcc\xed\x83J/@\x07\x12\xb2\xc8\xbfii\x9cR\x13>4d#\xd0N\x80\xc0&\xed}\xe7\xd9;A\xd6\xd5\xc6\x00x\x89\xcb.\xda\xce3\xb13\xc9\x85\xc1\x03\xa3\xe3u\x19~3JO\xf0\xae$a\xf0\n\xb0/\xad\xbd\xefh\xbd\x1c\x91\xdd\xd7\'Z-us\xbc\xab\xce|a\xb0\xe5\x15\\QS")qG\xe0\x03\xdd\x91\x05?u\xceA_F\x1f)3Yap\x96\xf6f\xfcm\xcf&\xb9\xfa\x10?\xa0[u\t\x93\xf7\xd6c\xa1\x87\xeb\xfe\n8N\x04\x17\xf4\x80\xe0\xce\xd8\xa6\xef\x0c\x85xc\x1fl\xd6\x9e\xaa?\x03\xce\xcd\xfc\xa6\x07*\xc1+\xf6\x85\xba\x81\xde\x84\x86)b\xb2\xfa\xc7\xacc\xbay\xef\x00\x07\x95\xda\x84\xe8\xd0\xeevO\xd6\xee\xcf\xf3\x8e\xb2\xb8\xad\x91e\x16\xf6\x86\xc6t\x99tv\xdc\xd7.;\xa83z\xc6J\n\xf0\xed\xdb~\xbd\xa3\xe3We%\x9e\xf5\xac\x1e\x1d\x94:\x9a\xa4\xf1Z\xf0\xde\xb1\x06\xbakQ\xdb^\x9d@\x87\xc3\x12\x8d\x87\rn\xb90a\xfb\xdb\x94\xe3\x998DJP\x00\x13vl\x03\xbd\r"\xea\xa0\x82\xf6\xea\x03k\xa1h.\xa7\x9aT3\x11\xd45*\xb8\x1b,\xf8\xee\xf0O\xbe)i\xa3\x97\xfd9\x826u\xd0*N\xa9\xa7\xc5q\x11\xc5\x02wP\xaf\x1f\x1d\xb5D\xf4v\xa0\x1e-\xfe\xb6\xa3Q\xa0\xdb\x00\xad\xd9\x80\xc4p9/\x0bP\xa3\xd6@h\xd2\x94NX\xe7\xa2Ic\xa3l|\xb1\xca\x95\xa4A\x08=\xcd5|\xf0\x9d\x1c\xe0\xa0\xd07\x96\x07?\x03\xe55@\x01\xfc|i\x11\xf9_fX4\x8d\xdel\xa0\xd9u\xe2~\xa0\x10\xc0\xc6dj\'}\x04\x87o\xc3i\xe02\xe5\xd8\x954\xcaD\x0ee\xe2<;\x06O0K_/\x1eT7I\xa0\x86\x9f\x83\x1f\xe0\xc4\xcc\x90\x8b\x8exB\xb5\xb9\xeap\xb2xB\xe0J\xe3M\x12f$~Q~\xb7p\x99@\xe5QZ2\xa1"\xe0\x9c\x96d\x12\x94\x05\xd3\xdf\xee\t\x18n\xf9\x07\x8b\x7f\xe6\x14>\x95\xd3\x0f\xe0\xbb\x00[\xac\xf7^e: \x92p\xa6q\x95\x9e\xc8\x14f\x1a\x18\xd5\xf6e\xc14|\xc1%;\xc5\x17\xa3\x7fk\x82\xc7\xd6y\xb6\xb5SE\x12O\xf4\xa9\xc4o]\xf8tH\x9e\x8a^\x9e\x08\xe1\x96\x81\xba\x08\xef\x1b*\xb2\xa3=\xf67\xc9-7\x8f\x8f(\n\x94}\x82W\x1cl\xb1\xefPG4\xc1\x160\xff*:\xa2\xb6\xbf\xc2\t0m\xfd"z\x9c\xbcs\xed\xc2\x8f\xf6\x91j\x06\x9at\x94\xder\xf9\xa7J6\xc6c\xac\xfb\xab\xa1\xe9\x99j\xe1\xfdi4\xc5\x0fq\n\x1do\x12\xe7\x95\xc1,T\x00\xb7X\xe0\xc54\x02O\x0cf\xc7\xf2r~\xc6C7Tk\xa0\xdd\xd5k\x1aRzzH_\xb2\xbee\xb2\xfcU\xd9P\r\xc28\t\xbc\xe0\xdd\x02Kk\xdc\x95\xa8\xdcTz[\xbe\x12\xdcKV\xa7\x9e\x91\xa0/H\x99\x0e\xea\xc4\x95\xa9\xb5\x1a\x8f\x1a\xa1*\xc8M\xa6\xf6j\xa1\xe0)\x17I?\xd0\xfd"\x92L\x14q\xb7ps\x805z3{:\x8d\x0e\xd7\x99\x06\xee\x14\xcc\xa0\xad\xe1e\x10B_\xb6\x18x\xb5\xb4\xc2\xf7\x17\xc7\xfd|\x9f\xfb\xb7\xef"\xe0\xcc\x16\x15\x05K\xceDib\xfa\xc7\xd1q\x7f\xfb\xe2\xe0\xfa?\x88j\xfb\xbcn\xe7\x84\xe5X\x92\xc5\xcd>\xb7\xbb\x05\x03\xc2\xe1\x03t\xe8\xc9B\xac{%_\x99\x8d\xa1\x00>.\xed\xd0\xc3+G\x84<FG\xf5\xf2\xecC\xe9\x12\xb4D\xa8t\x84\xbf\x18S\xe0\xde/\xde\xe2\xe2\x96\xb9e,\x80}r\xb0e\x14\xbf\xf2\x05\xdc\xc5\xd6W\x9b\xad\x91\x048\xfcS{\r\xf3\x1fyo\x93\xe9>\xcf\xe6\x08\x12\x98\xbe\x96\x80\xe7JM\xe4+\x7f\xe3\xdf@\x15;pC\x9b\xe0y(~4z\xca".\rV\x9c\x0c\xfd|\xd1h\xd7\xc9\x0f\xcez\x94\xf1:3msX\xf8.\x16\xc1\xfb\x8d\xb2\xd5\xc8@\xdfFkxW\n\xe1\x08\x9eUM\x89\x9cH\xf7\xc6\x80\xee\\\x95\xf3~\xbd\xb6\x83g\xbb\x1a\x91N~\xda\xf6vX \xd8\xd3}M\xc4\x96\xabW+_\x0c5m\x89\xa7\xdcLc\xb6\xac\x9f\xedj\x82\xf7\xcc(M\xda\xa9\xa3\xc6\x87\xdc\xcd3\x98@\xf3\xd5@\xf8t%[X\x81\xd5\x10 \xd7\x12\x88\xd1\x04\xcb\x9f\x14u\x85\xd7\xd4\xcaVP!\x01\xc7\xb2\xdbpk@\x9b\xc5\xd6E\x04\xd59\xaa\x15\xdf$\xab\x8b\x84R\x86\x1b?\x07\xfd&\xe25\xfa8\x0c\x17:\xf7\x00\xd3\xd6\xcdHn\x1c\xccA\xaf\xfdg\xb2\xe9_\xe3m0\x8dMn\x9a\xc1wMM\xc05\x1a\xc3\xde\xd4O_e\xd1\xa5\xed\x1d/\xca\x85i!\xd2m|.\x9d\xdfcM\x12\xba\xef\xab\xf4~w\xaeU\x1b\xe6\x0e\xc1\x15\xe9\xa5|N\t\x8c\x865\'\xf5+|zW\x10\x16\xfe\xfbs\xe0@\xb5J\x00\x8eH\xf7M\xebk\x0b\xb2\x823\xb87\xe0\xf0l\x19\x01\xba\xaeT\xef\x07"\xe1O\xfd:\x15\xa1\xe5\x01\xeey\xf00]\xf9k\\\n\xd6\xd2:~J\xea\x14\xa8Pu\xe2i\xc3)l\xd2\x922\xf0\x06]{\x7f\xfa-E\x1b\x15\xa6\t\xb6\x1c\x94%%?\x92\xa0\xd7L\xb4\x04\x96y\xf4&\xbe\x01\xd9\x15`\x84\xda\xe66j\x04\x9f\xbaW!\xeb!>\x0b\x97V\xcb\xf0\xa17f\nZ\xb8\xf4\x92T\xdc\xb5\xa1\x1f%\x93\xac\x92\xfdm\x13\xfaT\xab\xf7\xb5\x9a\x00\xfe\xd8{\xee\x9eI\xc3\xef\x8e\x10Co\xca\xf5\xb2\xfe\x93^\x13\x18\x83QT\x1a\\\x84F\x87\xccrI\x94\xc8\xdf\xac\xaexV\x92^\x8dn%\x8d\x11\x9dv \x10\xea\x16X\xe2Gy\xa5n_\xf6\xc66\x11\xec\x87l\xa2\x9f9\xe5\xff\xef\x8d%\xc1=\x8f\xa7\xc1=\x17\x01v\xafao\xc6\xb07\x0f\x14\xec\x19z\x18\xce\xf1\xeb\xd1\x038\x82\x1b_\xf9\xe9g\xef\x9a\x9aQ\xd1\xf4\xbf\xf7\xe6a?\xd9+8\x81\xbd1\t\xc68W$\xc5-\x11;\xf7\xab\xc7\xca\xc2\xc0jj\x9c\xc8\xef\x9a\x15\x0c\x89 0M\xb2V\xc7\xdb\xf3+\x02\xf6bHB\x1eu\xcf\xdc\xaa9\xaf\xe1\xf6\xddkjWn\xff\x85\xe5\xad\xac\xcd+\x1d\x92og\xa2#TE{|y\xd5!\x19Az}&VwR\tir\x85\xc0?\xb8\xf5\x1e\x9e\tp\xf8\x06G\x9f\xee?mF\xd3LV\x05\xbc\x06\x14s\xfd\nr\xd59\x9ebM\x1d\xa3(\xd9\xa0\x94\x9bx\xf3\x91yQ\xe0\x90[\x02\x16\xe4\t\xf8\xb8\x1c\xe0\x1c^\x02\xc2\xbfp\xe8\x8d\r\x19\x9d7\r\x1c\xb5\x88g\xfet8\xf7\xc7X#\x9c\xe7\xccb\xe8&-kj\xfe\xc2\x9f\xcf+/|\x0bx\xf5m\x0c\xae`\x97\xbe\xd3\x92-\xe0\x1cK\x08\x01\r\xbe \xa8\x1a\xae>\xd8\xf1mHC5yW\xd3~\xd18\xcb\xa9\xb8:\xf1g\xcap\xe9\x81\x08\xe8\xf7&L\t\x85R$\xc08\\\xf8\x9a+^\xe6D<\xc1!\xd2\xfb\xc7\xdf\x1e\xe2\xa9\xff\x95\x03\x05\xe0w\x87bf&\x89\x0f\\\xc7/\xd4\xa7\xc7\xa5\x9f\x83\x82.\x82\xb7\xb2\x85\xa6\xd0\x91\xc8\xab\xfb.W\x80;]\xc7p/\xb3\xb9dy\xe0\x81\xc0;\xd9\xa15\x02_\x1eP\xad\x99\x1c\x12\xa5\x9f`H\x84a\x1b?\x12\x98fD\x02\xd24du!\xc9`v\xbeU\x16\x81\x0b\xa71x\xfb\xe7\xf7\xe7\r\xff\x8fKy\xb9\xc5\xb7\x9fg!\xe0\xf4\x02.\xe5\x17\xba\x9b\x0fE\x1e\xd4\x03\x91cH\xaa\xcc\xb4\xf7\n\x01\x92_j\x03\xb8\x94a;\x14}\xd8(\xc8\xe8\xae\x92\xb4g\x10/\xfa-\x89\x90\x98m\x00\xc5\x96XW\xa3\xe1\x18OG\xf7\t\xdc<p\xa1\xc0\xaf\\8\xb8HfT\xe1\xcb\xbe+}\x97\x9d\xd8\x85Z\n)\x02_\xb4\x18\n\\\xc1\xfdW\xbf)\x89p[7\xf611 \x13\xb8\xc9H\xd4\xf4\xc11\x04\xb4\x18s\xd1\xfe[\xbf\x88\x81\xd1\x12=\x1a\\\x89?\xab)\x93\xdem[ZV\xaf\xb5\x19\x83\xbf\xe7\x14\xc0/q\xc0J3S\x18\x88\x0c\xbd\xd8\xd6n\x07;&\xf7D\xd72\x05\xa6\xe0\xb4S\xd1\x12\x89\x9c\xb3\x06,s\xc5lc\xe0\xac!\xf0\xcc\xb7\xe2\xaf\x85+r\x8d.\xd9\xac\x03Z\xb2\xaeb\x925\x03\x97\x08\xf5\x19w\xe3\x8dzPS\xbcZ\x14#\xf0\x98\xb2\xa6\xbfF\x1bJ\x8b#\x1f\xd8(\x12\x16\xa1\x0f\x93\x9fX\xde\xea\xa7\x95\x9f \x16\x9b0}&2\x92\x8d\xb7\xc9VX\xc72\x86\xc4i\xb8\xf5\x9a\xb1\x83Y|\xa3>Qk\xd5\xdaG\x01\xe4\xbb\x17\xa9\x9a\x0c\xa1\x9bD\xa87-\x8a\x95\xb7\x04\xa8\xaf\xbdB\xa4\xbd<\xdc}"\x19\xbdS\xb8,G\x9eRH\x9dE\x043g\x92\xe5\x8a\xc4\x86tH:W\xb8\xe1\xb0e\xda\x14l\xe3\x03<s\xf8\xbc\x10 \xcfeeHB@\x1d\x91\x89U\xb6\x08\x83\xb9\x7f\x14\xeeJ|\x85o\xc4/)<\xfcL\x19\xc3L\xa1\xeb\xc5\r\xe4\xad\xb7h\xaa\xce\xd15\xd2}\x93\x03\x87`$~\xfaa/G\x0e\x12\x87\x0fx\x82\xc7\xa8\x9e\x15\x7f8\x04\x027A\t\xe7\x82\x1e\xfa\x7f\x9a\xee=\x05[\xaf\x9a\x99\x99\xc9?\xe5H\xc3sn\xa5~\xb3\xafP\x15\xb2\xd0\xe8%\xf1\xb0\xa8:C\x0e\x9e\xcf5Np\xb7r\xe5\x12\xf4\xa5\xbc\xfb\xd0>}\xed\xd7a\x93\x85P\xf1\xb5\xbb\x97\xa9I)\x83/\r,\xe6\xcd\x85\xd1m\xf4\x00\xd7\xa8\xfb2d%\x0c\xfdH\xf6`\xcf\x06)\x12\x89-\xa1\xf8FU\xf9\x8b8\x00v\xd1\xba\x02mmPZ\xaf\xcd\xa4D\xff\x86s\x1es\x0f\xeeK \x07\xe0\xd2\\\xdc@\x8eS\x89\xe7\x90\xad_\x8ft\xbf\x8b\x97pot{\x93M\x00\xa9\x04\x14\xc2\xde\xc8{Z\x95\xd1\xa6?U\x05\xf4\'\xc8K?.\xde\x04\xd5\xcc\x1d\x86X\x0c\xdcGgd!\xe8\x0b\x97\'\x1a\xbe\x01\xe4^s\xf4>$\xb8YW\xa8i_\x04\x04\xcf\x0e\xdb\x7f\x9b\xfd\xb9G\xf6\xbe\x9a\xb7\xaaXf\xcbB\x08\x1990a\xd0\x9fH\x01f\xa9\xb7h\xfbu\xef\r0\xe3\x14\x97^\xd2f\xde@\xb7\'\xda}\xf5\xc5\xa0*\'H\xb1;\xf0\x8b\xb1>\x08\xe0n\x03\xa2w\x15N\x04F4\x1bl\t\xc8\xc8Id\xfe\xa1\xe5\xd9\xe0\x87\x9d\xc3\xff\x0e\xb0\x925h\xf9\xcd(\xb5\xff\xebEoq\x96\xfd\xe2\xe6\xacG\x10\xa4\xaaS\xd0\xd7[\xb5I\xad\xa1\x1e\xf0|\xd1d\x047\x15r\xce9\xec\xd3\xf3\xe2\x10\x1c\xb2\x8a]\xb5M\xee\xa8\x8a\xc97\x98\xd0\x842\xb8h\xb8!N\xdf!\x19Lq\xce\x08\xcc\xbdy\xbf\xf8Nh\xbcqW\xf7-\xfe\xcf\xe7t\x98\xda\x15\xf7=#t\xdfp,\xdcD\xc80\xb1\xd6\xbae\x84;\xd2W\x1c\r\xb2\xd9"\x01\x94\x83\xe9,a\xb6\xaa\xf3l\x08\x89H\xaf\xe0uI`*D\xa9\xb6\xc3\xa0e\x7f\xb5>\xcc$\x81\xc0\x9a\xdf\x1cnb\xf0\x9eFk\x1f\xdcV\x89\xcc\x96\x89\xfbhrW\xfe\x04\xaf\xb9\xc2\'q\x13\xfd\xddp\xaa\x92\xfe\xc3\xf0\x81J\x16\xc2\xe2\x06\x01\xeaR\x95\xe1\x13zX\x8cG\x15\xd5\xd9?$?s\x15P\x9f\x11\xa4\x08U\x7f\t\x99\xfc\xfb \x8a\x1fp\x12\x90\xe0\xe6\x86\xf8-\xf1\x0bk\xde_\xd0\x83\xfa \x05\\3Z\x1a\x0f^M\\o\x91\xb2Q&U\xb86OV\x93]\xe4\x9f\xafz\x8djiD7\xbf\xf2\x90\xeb`\xc3\xbdg,Y\xf7\xc4^),\xfd\x91b\x8b/)6\xcc&`\x02x\x82\x90\xb2U_y\xf53\xd0\xd8n\x89\xb2j\x15\xa2\xbf\xf2\xa2\xc5\x12\x15\xf6\x18\xff\xa0\\\xfc\xec\x8f\x87/9\xdb=8\xe9k\xe0\xfem\x94\'2\xe4l\x964\xe9\xbf\xdd/AK\x7f\xa4\xae\xe3\x08Y\xc0\xdf@\x7f\x8e\xda\xe8H]\xbf\x9b\xf8)Z}ZB\xceVx\x0e\xa0\x871|I\xda\x96#m\x1f\x82\x17Rx3\x82H)\x8b\x819\x1fhh\x06\x0el;\x9cqdG1\xadj\x0e{ t\xb6\x9d\xad:#\xe83\x12\x98W\xa3\\?g\x1d\x813\xf8\xca/i\xd9\xa0X\xc7\x82\x0bEB6"\xf2t\x95E%\xc8\x13\x9f\x11=\xb0Nmy;\xba\xe2\x0b\xf7\xea\xec\xff\x96h\xee\xcb\x89"q\x14\xc6\x0b"e\x90\x16Knb\x06\xdaD\x89\x97\x81\x80;`\x84J\x00\x13K#q\xac\x8d\xab\xceL\xe2\xd6\xee\xfc\xb1y\x87\x9dw\xdf\x93\xec\x1b44\xf4\xef;\xe7\xeb\xd4K\xcfe\x91c24\xe1h\x8a\x9d\x8f\xbb%\xb20\xff\xe2Se\xc8e\xd7\xc2\x08\x93C\x8d\xe6\xc3\xa0\x12\xd0v\x9c\xbbA\x06B\xee\xcf\\\xd3\x08\xc7%\xea\xef@\xd0\xee\xda5\xb3\x05nLH\x02L\xaf\xb6\xcf\xf8\x8b\xfd\xd8\x19\x12\xfca\xa0\xce1\'\xec\xc1u!\x12\x85\xc3\x0c\xdb\x8d\xb4\xb8\xfe\xc9F:hq\xf5\xc6k\x16\xee\xc7HG\x9f\xa23o\xde\xbd\x14h\xa7\xca9l\xd7\xb2\xads\x12\xe8\x1b\xceS\x03\x16\xc6\x9cD\x92H\xfe"e+{\xed\x91\x9f\x8f-\x92\x150YJ\x03}\xb0n\xad\x8aw\x94\xf4\xb8"\xd9\xd4#\xe4\x01\xf0\x9d\xceL\xf6\x11\x8b\x1c\x8c7\x19\xab`\x16\x7f8\x8d\xd9\xca/7\x89\x17\x13YP\\\xf3\xcbL\xd35\xc7\x1d\xedn\'\xa9p\xef\xed\xdd%\xa6\xe3\x0f;\xa9\xf8}\xf5"\xf4fv>,\xa1O,\xf7\x97T\xcd\xa6 \x8a\x15Z\xdf\xbd6M\x08\xeev8;\xbfb\x19\x8a\xb1g\xc4U\xcfo=j~\x8dU\xd2V\x9d"\x99\xbc\x94\x02\x02\xe1\xcd\x89V\x83\xc4\xf0\x05\xa0}\xfd\xda\xdfp\xa2\xdem\xd3\xfa\xa6S\xde^\x11c[Sk\x9dQnl7\xd2U\xa9\xc6%\xbc\x02\x1f-\xe6\x02\xdfz\x14\xcf<Y\x81)-\xb2\xfd\xb5\x98\x0e\xd4\x97-E\x03\x95g\xa0\x91a\xe8\xdd\xb8\xe1i\xaf\xdd\x82F\x16\xff\xd3\x08\xfa\xf2k\x0f\x999\x19if4\x1d\xab\xfd\x83az\xf7\x11\x9b$}\xe7t\x1b\xadO\xd3\xd8\xa9L\xa9\xa5M\rt\xeb\xb4`\xe7\xe3\xc0\x93\x91eC\xd7\xb4If\xc6\x7f`\x7f\xd3\xc9*\xcac\x931S\xb3\x9e\xc0\x0b\x1csE\x1f\x82\xc5D\xa9v\x17\xf3N\x89\x81e\xf6HM\x1et\xae\xf4\t9\xb2\xad\xbaby\x7f\x8bg\xddNW\xb6\xf5\x8dn\x82\xa9\x91\xe5\x88\xf8a?i\xbe\xc9E\xc9\x80\x9b\xc3I\x8d\x16\xbekU\t\xb5.\xf9\x06\xdb\xb4\x0c\xab\xdaa\xde\xdf\x1f\x9a~\xab\xe9$8\xa1&\xeb\xe6\xdc\xfe\'Y\x08k\x01\xb3\x0f\x16\xfaU\x83\xaf\xbdhhl4\xd7|\x17\x8d\xbfv\xf8h\xd9\xb9]H\xa7\xb0!\xaa\x1bj\xbf\xe3\x99\xb7\xf8\xba\x02:\xc7]\x15\xc7\x98\x85\x1cuN\xcb,\xf4\xf2\xdd=\xf2]\x12\xb1L\x8d\x87w\x81\xd7c\x88\xfd>]\x08\xdcE\xa7Y?\xa6\xf04\xbc\x92\xbe\xe9\xc5\x7fm\x02\xcf.\x89\xa9\xd1\x16\xd9\xafz+\x17Xt\xea\xf2\x06\xfdA\x8d\xbb\x94\xabl\x82\x1d\xe8~\xea\xc9;|i\xa6>.t\xa5\xef\xf5\x97\x94\xf2=\xeeh\x1doh>xO\xb3\x02\xf2\x7fd\xc5\r\xd0\xb2bXp\x04+-\xbf\x90\xb5\x1f\tV\xef\x15\xa8\x19?Wf\xde*V>V\xaf"\xcf,\xb0\xfa\x87\xfe\\0\xb1#[8\x02x\x02\n6\xc2\xda\x93\xdd\x9a\x06\xa0l\x1e^\x00\'\tv7\x88\xdf\xbd\xb4\xa4\x04LF\x8ak\xf4\x9c[\xef\xd3\xdb\x83I\xc4\x1b\x8f\x1f\xb0\xe2C\xd0\x8e\x08\xe5[\xe8=\xc2\xcfU\x10\x9b\xc8\xdaO\r\xe9|U\xbbK\x88\xc2\x8b\xe0LWn\x9cm\xb8\x80\x1bZ\x0e/\xb2\xd5\x82\xd0\xc1\x9f&\xc1\xb8\xa9\xe5\xf5e;y4\x9f@\x04\xaf\xf1\x13n\xdb\xbcV9&\xfasR\x88F\xfb_\xfd\xdf20K\xe4\x0f\x0fv\x01\xbe\xfcY\xdb{\x16\xc5\x14Lf\x11\xf7\xad\\\t\xe2\xb0B\xb2\xe7>8YS\xe9A\x98\xd2\xcb\xf8\xf3xi\xf8\xc84l\x14j\xa1\x87\xce\xd0=\xa0\xc1Z\x19h\xdf\xb2\x05m\xef\xc2\xd3\x1c\xa7K\xdd]\xda\xd3\xff\x00\x9a\tKK\x15\x17\xa8\xb0\x00\x00\x00\x00IEND\xaeB`\x82'b"/**\n * Module dependencies.\n */\n\n// eslint-disable-next-line node/no-deprecated-api\nconst { parse } = require('url');\nconst { CookieJar } = require('cookiejar');\nconst { CookieAccessInfo } = require('cookiejar');\nconst methods = require('methods');\nconst request = require('../..');\nconst AgentBase = require('../agent-base');\n\n/**\n * Expose `Agent`.\n */\n\nmodule.exports = Agent;\n\n/**\n * Initialize a new `Agent`.\n *\n * @api public\n */\n\nfunction Agent(options) {\n  if (!(this instanceof Agent)) {\n    return new Agent(options);\n  }\n\n  AgentBase.call(this);\n  this.jar = new CookieJar();\n\n  if (options) {\n    if (options.ca) {\n      this.ca(options.ca);\n    }\n\n    if (options.key) {\n      this.key(options.key);\n    }\n\n    if (options.pfx) {\n      this.pfx(options.pfx);\n    }\n\n    if (options.cert) {\n      this.cert(options.cert);\n    }\n\n    if (options.rejectUnauthorized === false) {\n      this.disableTLSCerts();\n    }\n  }\n}\n\nAgent.prototype = Object.create(AgentBase.prototype);\n\n/**\n * Save the cookies in the given `res` to\n * the agent's cookie jar for persistence.\n *\n * @param {Response} res\n * @api private\n */\n\nAgent.prototype._saveCookies = function (res) {\n  const cookies = res.headers['set-cookie'];\n  if (cookies) this.jar.setCookies(cookies);\n};\n\n/**\n * Attach cookies when available to the given `req`.\n *\n * @param {Request} req\n * @api private\n */\n\nAgent.prototype._attachCookies = function (req) {\n  const url = parse(req.url);\n  const access = new CookieAccessInfo(\n    url.hostname,\n    url.pathname,\n    url.protocol === 'https:'\n  );\n  const cookies = this.jar.getCookies(access).toValueString();\n  req.cookies = cookies;\n};\n\nmethods.forEach((name) => {\n  const method = name.toUpperCase();\n  Agent.prototype[name] = function (url, fn) {\n    const req = new request.Request(method, url);\n\n    req.on('response', this._saveCookies.bind(this));\n    req.on('redirect', this._saveCookies.bind(this));\n    req.on('redirect', this._attachCookies.bind(this, req));\n    this._setDefaults(req);\n    this._attachCookies(req);\n\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype.delete;\n"b"const Stream = require('stream');\nconst util = require('util');\nconst net = require('net');\nconst tls = require('tls');\n// eslint-disable-next-line node/no-deprecated-api\nconst { parse } = require('url');\nconst semver = require('semver');\n\nlet http2;\n// eslint-disable-next-line node/no-unsupported-features/node-builtins\nif (semver.gte(process.version, 'v10.10.0')) http2 = require('http2');\nelse\n  throw new Error('superagent: this version of Node.js does not support http2');\n\nconst {\n  HTTP2_HEADER_PATH,\n  HTTP2_HEADER_STATUS,\n  HTTP2_HEADER_METHOD,\n  HTTP2_HEADER_AUTHORITY,\n  HTTP2_HEADER_HOST,\n  HTTP2_HEADER_SET_COOKIE,\n  NGHTTP2_CANCEL\n} = http2.constants;\n\nfunction setProtocol(protocol) {\n  return {\n    request(options) {\n      return new Request(protocol, options);\n    }\n  };\n}\n\nfunction Request(protocol, options) {\n  Stream.call(this);\n  const defaultPort = protocol === 'https:' ? 443 : 80;\n  const defaultHost = 'localhost';\n  const port = options.port || defaultPort;\n  const host = options.host || defaultHost;\n\n  delete options.port;\n  delete options.host;\n\n  this.method = options.method;\n  this.path = options.path;\n  this.protocol = protocol;\n  this.host = host;\n\n  delete options.method;\n  delete options.path;\n\n  const sessionOptions = { ...options };\n  if (options.socketPath) {\n    sessionOptions.socketPath = options.socketPath;\n    sessionOptions.createConnection = this.createUnixConnection.bind(this);\n  }\n\n  this._headers = {};\n\n  const session = http2.connect(`${protocol}//${host}:${port}`, sessionOptions);\n  this.setHeader('host', `${host}:${port}`);\n\n  session.on('error', (err) => this.emit('error', err));\n\n  this.session = session;\n}\n\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n */\nutil.inherits(Request, Stream);\n\nRequest.prototype.createUnixConnection = function (authority, options) {\n  switch (this.protocol) {\n    case 'http:':\n      return net.connect(options.socketPath);\n    case 'https:':\n      options.ALPNProtocols = ['h2'];\n      options.servername = this.host;\n      options.allowHalfOpen = true;\n      return tls.connect(options.socketPath, options);\n    default:\n      throw new Error('Unsupported protocol', this.protocol);\n  }\n};\n\n// eslint-disable-next-line no-unused-vars\nRequest.prototype.setNoDelay = function (bool) {\n  // We can not use setNoDelay with HTTP/2.\n  // Node 10 limits http2session.socket methods to ones safe to use with HTTP/2.\n  // See also https://nodejs.org/api/http2.html#http2_http2session_socket\n};\n\nRequest.prototype.getFrame = function () {\n  if (this.frame) {\n    return this.frame;\n  }\n\n  const method = {\n    [HTTP2_HEADER_PATH]: this.path,\n    [HTTP2_HEADER_METHOD]: this.method\n  };\n\n  let headers = this.mapToHttp2Header(this._headers);\n\n  headers = Object.assign(headers, method);\n\n  const frame = this.session.request(headers);\n  // eslint-disable-next-line no-unused-vars\n  frame.once('response', (headers, flags) => {\n    headers = this.mapToHttpHeader(headers);\n    frame.headers = headers;\n    frame.statusCode = headers[HTTP2_HEADER_STATUS];\n    frame.status = frame.statusCode;\n    this.emit('response', frame);\n  });\n\n  this._headerSent = true;\n\n  frame.once('drain', () => this.emit('drain'));\n  frame.on('error', (err) => this.emit('error', err));\n  frame.on('close', () => this.session.close());\n\n  this.frame = frame;\n  return frame;\n};\n\nRequest.prototype.mapToHttpHeader = function (headers) {\n  const keys = Object.keys(headers);\n  const http2Headers = {};\n  for (let key of keys) {\n    let value = headers[key];\n    key = key.toLowerCase();\n    switch (key) {\n      case HTTP2_HEADER_SET_COOKIE:\n        value = Array.isArray(value) ? value : [value];\n        break;\n      default:\n        break;\n    }\n\n    http2Headers[key] = value;\n  }\n\n  return http2Headers;\n};\n\nRequest.prototype.mapToHttp2Header = function (headers) {\n  const keys = Object.keys(headers);\n  const http2Headers = {};\n  for (let key of keys) {\n    let value = headers[key];\n    key = key.toLowerCase();\n    switch (key) {\n      case HTTP2_HEADER_HOST:\n        key = HTTP2_HEADER_AUTHORITY;\n        value = /^http:\\/\\/|^https:\\/\\//.test(value)\n          ? parse(value).host\n          : value;\n        break;\n      default:\n        break;\n    }\n\n    http2Headers[key] = value;\n  }\n\n  return http2Headers;\n};\n\nRequest.prototype.setHeader = function (name, value) {\n  this._headers[name.toLowerCase()] = value;\n};\n\nRequest.prototype.getHeader = function (name) {\n  return this._headers[name.toLowerCase()];\n};\n\nRequest.prototype.write = function (data, encoding) {\n  const frame = this.getFrame();\n  return frame.write(data, encoding);\n};\n\nRequest.prototype.pipe = function (stream, options) {\n  const frame = this.getFrame();\n  return frame.pipe(stream, options);\n};\n\nRequest.prototype.end = function (data) {\n  const frame = this.getFrame();\n  frame.end(data);\n};\n\n// eslint-disable-next-line no-unused-vars\nRequest.prototype.abort = function (data) {\n  const frame = this.getFrame();\n  frame.close(NGHTTP2_CANCEL);\n  this.session.destroy();\n};\n\nexports.setProtocol = setProtocol;\n"b'/**\n * Module dependencies.\n */\n\n// eslint-disable-next-line node/no-deprecated-api\nconst { parse, format, resolve } = require(\'url\');\nconst Stream = require(\'stream\');\nconst https = require(\'https\');\nconst http = require(\'http\');\nconst fs = require(\'fs\');\nconst zlib = require(\'zlib\');\nconst util = require(\'util\');\nconst qs = require(\'qs\');\nconst mime = require(\'mime\');\nlet methods = require(\'methods\');\nconst FormData = require(\'form-data\');\nconst formidable = require(\'formidable\');\nconst debug = require(\'debug\')(\'superagent\');\nconst CookieJar = require(\'cookiejar\');\nconst semver = require(\'semver\');\nconst safeStringify = require(\'fast-safe-stringify\');\n\nconst utils = require(\'../utils\');\nconst RequestBase = require(\'../request-base\');\nconst { unzip } = require(\'./unzip\');\nconst Response = require(\'./response\');\n\nlet http2;\n\nif (semver.gte(process.version, \'v10.10.0\')) http2 = require(\'./http2wrapper\');\n\nfunction request(method, url) {\n  // callback\n  if (typeof url === \'function\') {\n    return new exports.Request(\'GET\', method).end(url);\n  }\n\n  // url first\n  if (arguments.length === 1) {\n    return new exports.Request(\'GET\', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nmodule.exports = request;\nexports = module.exports;\n\n/**\n * Expose `Request`.\n */\n\nexports.Request = Request;\n\n/**\n * Expose the agent function\n */\n\nexports.agent = require(\'./agent\');\n\n/**\n * Noop.\n */\n\nfunction noop() {}\n\n/**\n * Expose `Response`.\n */\n\nexports.Response = Response;\n\n/**\n * Define "form" mime type.\n */\n\nmime.define(\n  {\n    \'application/x-www-form-urlencoded\': [\'form\', \'urlencoded\', \'form-data\']\n  },\n  true\n);\n\n/**\n * Protocol map.\n */\n\nexports.protocols = {\n  \'http:\': http,\n  \'https:\': https,\n  \'http2:\': http2\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize[\'application/xml\'] = function(obj){\n *       return \'generated xml here\';\n *     };\n *\n */\n\nexports.serialize = {\n  \'application/x-www-form-urlencoded\': qs.stringify,\n  \'application/json\': safeStringify\n};\n\n/**\n * Default parsers.\n *\n *     superagent.parse[\'application/xml\'] = function(res, fn){\n *       fn(null, res);\n *     };\n *\n */\n\nexports.parse = require(\'./parsers\');\n\n/**\n * Default buffering map. Can be used to set certain\n * response types to buffer/not buffer.\n *\n *     superagent.buffer[\'application/xml\'] = true;\n */\nexports.buffer = {};\n\n/**\n * Initialize internal header tracking properties on a request instance.\n *\n * @param {Object} req the instance\n * @api private\n */\nfunction _initHeaders(req) {\n  req._header = {\n    // coerces header names to lowercase\n  };\n  req.header = {\n    // preserves header name case\n  };\n}\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String|Object} url\n * @api public\n */\n\nfunction Request(method, url) {\n  Stream.call(this);\n  if (typeof url !== \'string\') url = format(url);\n  this._enableHttp2 = Boolean(process.env.HTTP2_TEST); // internal only\n  this._agent = false;\n  this._formData = null;\n  this.method = method;\n  this.url = url;\n  _initHeaders(this);\n  this.writable = true;\n  this._redirects = 0;\n  this.redirects(method === \'HEAD\' ? 0 : 5);\n  this.cookies = \'\';\n  this.qs = {};\n  this._query = [];\n  this.qsRaw = this._query; // Unused, for backwards compatibility only\n  this._redirectList = [];\n  this._streamRequest = false;\n  this.once(\'end\', this.clearTimeout.bind(this));\n}\n\n/**\n * Inherit from `Stream` (which inherits from `EventEmitter`).\n * Mixin `RequestBase`.\n */\nutil.inherits(Request, Stream);\n// eslint-disable-next-line new-cap\nRequestBase(Request.prototype);\n\n/**\n * Enable or Disable http2.\n *\n * Enable http2.\n *\n * ``` js\n * request.get(\'http://localhost/\')\n *   .http2()\n *   .end(callback);\n *\n * request.get(\'http://localhost/\')\n *   .http2(true)\n *   .end(callback);\n * ```\n *\n * Disable http2.\n *\n * ``` js\n * request = request.http2();\n * request.get(\'http://localhost/\')\n *   .http2(false)\n *   .end(callback);\n * ```\n *\n * @param {Boolean} enable\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.http2 = function (bool) {\n  if (exports.protocols[\'http2:\'] === undefined) {\n    throw new Error(\n      \'superagent: this version of Node.js does not support http2\'\n    );\n  }\n\n  this._enableHttp2 = bool === undefined ? true : bool;\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post(\'http://localhost/upload\')\n *   .attach(\'field\', Buffer.from(\'<b>Hello world</b>\'), \'hello.html\')\n *   .end(callback);\n * ```\n *\n * A filename may also be used:\n *\n * ``` js\n * request.post(\'http://localhost/upload\')\n *   .attach(\'files\', \'image.jpg\')\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {String|fs.ReadStream|Buffer} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error("superagent can\'t mix .send() and .attach()");\n    }\n\n    let o = options || {};\n    if (typeof options === \'string\') {\n      o = { filename: options };\n    }\n\n    if (typeof file === \'string\') {\n      if (!o.filename) o.filename = file;\n      debug(\'creating `fs.ReadStream` instance for file: %s\', file);\n      file = fs.createReadStream(file);\n    } else if (!o.filename && file.path) {\n      o.filename = file.path;\n    }\n\n    this._getFormData().append(field, file, o);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new FormData();\n    this._formData.on(\'error\', (err) => {\n      debug(\'FormData error\', err);\n      if (this.called) {\n        // The request has already finished and the callback was called.\n        // Silently ignore the error.\n        return;\n      }\n\n      this.callback(err);\n      this.abort();\n    });\n  }\n\n  return this._formData;\n};\n\n/**\n * Gets/sets the `Agent` to use for this HTTP request. The default (if this\n * function is not called) is to opt out of connection pooling (`agent: false`).\n *\n * @param {http.Agent} agent\n * @return {http.Agent}\n * @api public\n */\n\nRequest.prototype.agent = function (agent) {\n  if (arguments.length === 0) return this._agent;\n  this._agent = agent;\n  return this;\n};\n\n/**\n * Set _Content-Type_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      request.post(\'/\')\n *        .type(\'xml\')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post(\'/\')\n *        .type(\'json\')\n *        .send(jsonstring)\n *        .end(callback);\n *\n *      request.post(\'/\')\n *        .type(\'application/json\')\n *        .send(jsonstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  return this.set(\n    \'Content-Type\',\n    type.includes(\'/\') ? type : mime.getType(type)\n  );\n};\n\n/**\n * Set _Accept_ response header passed through `mime.getType()`.\n *\n * Examples:\n *\n *      superagent.types.json = \'application/json\';\n *\n *      request.get(\'/agent\')\n *        .accept(\'json\')\n *        .end(callback);\n *\n *      request.get(\'/agent\')\n *        .accept(\'application/json\')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function (type) {\n  return this.set(\'Accept\', type.includes(\'/\') ? type : mime.getType(type));\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get(\'/shoes\')\n *     .query(\'size=10\')\n *     .query({ color: \'blue\' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function (val) {\n  if (typeof val === \'string\') {\n    this._query.push(val);\n  } else {\n    Object.assign(this.qs, val);\n  }\n\n  return this;\n};\n\n/**\n * Write raw `data` / `encoding` to the socket.\n *\n * @param {Buffer|String} data\n * @param {String} encoding\n * @return {Boolean}\n * @api public\n */\n\nRequest.prototype.write = function (data, encoding) {\n  const req = this.request();\n  if (!this._streamRequest) {\n    this._streamRequest = true;\n  }\n\n  return req.write(data, encoding);\n};\n\n/**\n * Pipe the request body to `stream`.\n *\n * @param {Stream} stream\n * @param {Object} options\n * @return {Stream}\n * @api public\n */\n\nRequest.prototype.pipe = function (stream, options) {\n  this.piped = true; // HACK...\n  this.buffer(false);\n  this.end();\n  return this._pipeContinue(stream, options);\n};\n\nRequest.prototype._pipeContinue = function (stream, options) {\n  this.req.once(\'response\', (res) => {\n    // redirect\n    if (\n      isRedirect(res.statusCode) &&\n      this._redirects++ !== this._maxRedirects\n    ) {\n      return this._redirect(res) === this\n        ? this._pipeContinue(stream, options)\n        : undefined;\n    }\n\n    this.res = res;\n    this._emitResponse();\n    if (this._aborted) return;\n\n    if (this._shouldUnzip(res)) {\n      const unzipObj = zlib.createUnzip();\n      unzipObj.on(\'error\', (err) => {\n        if (err && err.code === \'Z_BUF_ERROR\') {\n          // unexpected end of file is ignored by browsers and curl\n          stream.emit(\'end\');\n          return;\n        }\n\n        stream.emit(\'error\', err);\n      });\n      res.pipe(unzipObj).pipe(stream, options);\n    } else {\n      res.pipe(stream, options);\n    }\n\n    res.once(\'end\', () => {\n      this.emit(\'end\');\n    });\n  });\n  return stream;\n};\n\n/**\n * Enable / disable buffering.\n *\n * @return {Boolean} [val]\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.buffer = function (val) {\n  this._buffer = val !== false;\n  return this;\n};\n\n/**\n * Redirect to `url\n *\n * @param {IncomingMessage} res\n * @return {Request} for chaining\n * @api private\n */\n\nRequest.prototype._redirect = function (res) {\n  let url = res.headers.location;\n  if (!url) {\n    return this.callback(new Error(\'No location header for redirect\'), res);\n  }\n\n  debug(\'redirect %s -> %s\', this.url, url);\n\n  // location\n  url = resolve(this.url, url);\n\n  // ensure the response is being consumed\n  // this is required for Node v0.10+\n  res.resume();\n\n  let headers = this.req.getHeaders ? this.req.getHeaders() : this.req._headers;\n\n  const changesOrigin = parse(url).host !== parse(this.url).host;\n\n  // implementation of 302 following defacto standard\n  if (res.statusCode === 301 || res.statusCode === 302) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force GET\n    this.method = this.method === \'HEAD\' ? \'HEAD\' : \'GET\';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 303 is always GET\n  if (res.statusCode === 303) {\n    // strip Content-* related fields\n    // in case of POST etc\n    headers = utils.cleanHeader(headers, changesOrigin);\n\n    // force method\n    this.method = \'GET\';\n\n    // clear data\n    this._data = null;\n  }\n\n  // 307 preserves method\n  // 308 preserves method\n  delete headers.host;\n\n  delete this.req;\n  delete this._formData;\n\n  // remove all add header except User-Agent\n  _initHeaders(this);\n\n  // redirect\n  this._endCalled = false;\n  this.url = url;\n  this.qs = {};\n  this._query.length = 0;\n  this.set(headers);\n  this.emit(\'redirect\', res);\n  this._redirectList.push(this.url);\n  this.end(this._callback);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * Examples:\n *\n *   .auth(\'tobi\', \'learnboost\')\n *   .auth(\'tobi:learnboost\')\n *   .auth(\'tobi\')\n *   .auth(accessToken, { type: \'bearer\' })\n *\n * @param {String} user\n * @param {String} [pass]\n * @param {Object} [options] options with authorization type \'basic\' or \'bearer\' (\'basic\' is default)\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = \'\';\n  if (typeof pass === \'object\' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = \'\';\n  }\n\n  if (!options) {\n    options = { type: \'basic\' };\n  }\n\n  const encoder = (string) => Buffer.from(string).toString(\'base64\');\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Set the certificate authority option for https request.\n *\n * @param {Buffer | Array} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.ca = function (cert) {\n  this._ca = cert;\n  return this;\n};\n\n/**\n * Set the client certificate key option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.key = function (cert) {\n  this._key = cert;\n  return this;\n};\n\n/**\n * Set the key, certificate, and CA certs of the client in PFX or PKCS12 format.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.pfx = function (cert) {\n  if (typeof cert === \'object\' && !Buffer.isBuffer(cert)) {\n    this._pfx = cert.pfx;\n    this._passphrase = cert.passphrase;\n  } else {\n    this._pfx = cert;\n  }\n\n  return this;\n};\n\n/**\n * Set the client certificate option for https request.\n *\n * @param {Buffer | String} cert\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.cert = function (cert) {\n  this._cert = cert;\n  return this;\n};\n\n/**\n * Do not reject expired or invalid TLS certs.\n * sets `rejectUnauthorized=true`. Be warned that this allows MITM attacks.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.disableTLSCerts = function () {\n  this._disableTLSCerts = true;\n  return this;\n};\n\n/**\n * Return an http[s] request.\n *\n * @return {OutgoingMessage}\n * @api private\n */\n\n// eslint-disable-next-line complexity\nRequest.prototype.request = function () {\n  if (this.req) return this.req;\n\n  const options = {};\n\n  try {\n    const query = qs.stringify(this.qs, {\n      indices: false,\n      strictNullHandling: true\n    });\n    if (query) {\n      this.qs = {};\n      this._query.push(query);\n    }\n\n    this._finalizeQueryString();\n  } catch (err) {\n    return this.emit(\'error\', err);\n  }\n\n  let { url } = this;\n  const retries = this._retries;\n\n  // Capture backticks as-is from the final query string built above.\n  // Note: this\'ll only find backticks entered in req.query(String)\n  // calls, because qs.stringify unconditionally encodes backticks.\n  let queryStringBackticks;\n  if (url.includes(\'`\')) {\n    const queryStartIndex = url.indexOf(\'?\');\n\n    if (queryStartIndex !== -1) {\n      const queryString = url.slice(queryStartIndex + 1);\n      queryStringBackticks = queryString.match(/`|%60/g);\n    }\n  }\n\n  // default to http://\n  if (url.indexOf(\'http\') !== 0) url = `http://${url}`;\n  url = parse(url);\n\n  // See https://github.com/visionmedia/superagent/issues/1367\n  if (queryStringBackticks) {\n    let i = 0;\n    url.query = url.query.replace(/%60/g, () => queryStringBackticks[i++]);\n    url.search = `?${url.query}`;\n    url.path = url.pathname + url.search;\n  }\n\n  // support unix sockets\n  if (/^https?\\+unix:/.test(url.protocol) === true) {\n    // get the protocol\n    url.protocol = `${url.protocol.split(\'+\')[0]}:`;\n\n    // get the socket, path\n    const unixParts = url.path.match(/^([^/]+)(.+)$/);\n    options.socketPath = unixParts[1].replace(/%2F/g, \'/\');\n    url.path = unixParts[2];\n  }\n\n  // Override IP address of a hostname\n  if (this._connectOverride) {\n    const { hostname } = url;\n    const match =\n      hostname in this._connectOverride\n        ? this._connectOverride[hostname]\n        : this._connectOverride[\'*\'];\n    if (match) {\n      // backup the real host\n      if (!this._header.host) {\n        this.set(\'host\', url.host);\n      }\n\n      let newHost;\n      let newPort;\n\n      if (typeof match === \'object\') {\n        newHost = match.host;\n        newPort = match.port;\n      } else {\n        newHost = match;\n        newPort = url.port;\n      }\n\n      // wrap [ipv6]\n      url.host = /:/.test(newHost) ? `[${newHost}]` : newHost;\n      if (newPort) {\n        url.host += `:${newPort}`;\n        url.port = newPort;\n      }\n\n      url.hostname = newHost;\n    }\n  }\n\n  // options\n  options.method = this.method;\n  options.port = url.port;\n  options.path = url.path;\n  options.host = url.hostname;\n  options.ca = this._ca;\n  options.key = this._key;\n  options.pfx = this._pfx;\n  options.cert = this._cert;\n  options.passphrase = this._passphrase;\n  options.agent = this._agent;\n  options.rejectUnauthorized =\n    typeof this._disableTLSCerts === \'boolean\'\n      ? !this._disableTLSCerts\n      : process.env.NODE_TLS_REJECT_UNAUTHORIZED !== \'0\';\n\n  // Allows request.get(\'https://1.2.3.4/\').set(\'Host\', \'example.com\')\n  if (this._header.host) {\n    options.servername = this._header.host.replace(/:\\d+$/, \'\');\n  }\n\n  if (\n    this._trustLocalhost &&\n    /^(?:localhost|127\\.0\\.0\\.\\d+|(0*:)+:0*1)$/.test(url.hostname)\n  ) {\n    options.rejectUnauthorized = false;\n  }\n\n  // initiate request\n  const mod = this._enableHttp2\n    ? exports.protocols[\'http2:\'].setProtocol(url.protocol)\n    : exports.protocols[url.protocol];\n\n  // request\n  this.req = mod.request(options);\n  const { req } = this;\n\n  // set tcp no delay\n  req.setNoDelay(true);\n\n  if (options.method !== \'HEAD\') {\n    req.setHeader(\'Accept-Encoding\', \'gzip, deflate\');\n  }\n\n  this.protocol = url.protocol;\n  this.host = url.host;\n\n  // expose events\n  req.once(\'drain\', () => {\n    this.emit(\'drain\');\n  });\n\n  req.on(\'error\', (err) => {\n    // flag abortion here for out timeouts\n    // because node will emit a faux-error "socket hang up"\n    // when request is aborted before a connection is made\n    if (this._aborted) return;\n    // if not the same, we are in the **old** (cancelled) request,\n    // so need to continue (same as for above)\n    if (this._retries !== retries) return;\n    // if we\'ve received a response then we don\'t want to let\n    // an error in the request blow up the response\n    if (this.response) return;\n    this.callback(err);\n  });\n\n  // auth\n  if (url.auth) {\n    const auth = url.auth.split(\':\');\n    this.auth(auth[0], auth[1]);\n  }\n\n  if (this.username && this.password) {\n    this.auth(this.username, this.password);\n  }\n\n  for (const key in this.header) {\n    if (Object.prototype.hasOwnProperty.call(this.header, key))\n      req.setHeader(key, this.header[key]);\n  }\n\n  // add cookies\n  if (this.cookies) {\n    if (Object.prototype.hasOwnProperty.call(this._header, \'cookie\')) {\n      // merge\n      const tmpJar = new CookieJar.CookieJar();\n      tmpJar.setCookies(this._header.cookie.split(\';\'));\n      tmpJar.setCookies(this.cookies.split(\';\'));\n      req.setHeader(\n        \'Cookie\',\n        tmpJar.getCookies(CookieJar.CookieAccessInfo.All).toValueString()\n      );\n    } else {\n      req.setHeader(\'Cookie\', this.cookies);\n    }\n  }\n\n  return req;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  // Avoid the error which is emitted from \'socket hang up\' to cause the fn undefined error on JS runtime.\n  const fn = this._callback || noop;\n  this.clearTimeout();\n  if (this.called) return console.warn(\'superagent: double callback bug\');\n  this.called = true;\n\n  if (!err) {\n    try {\n      if (!this._isResponseOK(res)) {\n        let msg = \'Unsuccessful HTTP response\';\n        if (res) {\n          msg = http.STATUS_CODES[res.status] || msg;\n        }\n\n        err = new Error(msg);\n        err.status = res ? res.status : undefined;\n      }\n    } catch (err_) {\n      err = err_;\n    }\n  }\n\n  // It\'s important that the callback is called outside try/catch\n  // to avoid double callback\n  if (!err) {\n    return fn(null, res);\n  }\n\n  err.response = res;\n  if (this._maxRetries) err.retries = this._retries - 1;\n\n  // only emit error event if there is a listener\n  // otherwise we assume the callback to `.end()` will get the error\n  if (err && this.listeners(\'error\').length > 0) {\n    this.emit(\'error\', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Check if `obj` is a host object,\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\nRequest.prototype._isHost = function (obj) {\n  return (\n    Buffer.isBuffer(obj) || obj instanceof Stream || obj instanceof FormData\n  );\n};\n\n/**\n * Initiate request, invoking callback `fn(err, res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype._emitResponse = function (body, files) {\n  const response = new Response(this);\n  this.response = response;\n  response.redirects = this._redirectList;\n  if (undefined !== body) {\n    response.body = body;\n  }\n\n  response.files = files;\n  if (this._endCalled) {\n    response.pipe = function () {\n      throw new Error(\n        "end() has already been called, so it\'s too late to start piping"\n      );\n    };\n  }\n\n  this.emit(\'response\', response);\n  return response;\n};\n\nRequest.prototype.end = function (fn) {\n  this.request();\n  debug(\'%s %s\', this.method, this.url);\n\n  if (this._endCalled) {\n    throw new Error(\n      \'.end() was called twice. This is not supported in superagent\'\n    );\n  }\n\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  this._end();\n};\n\nRequest.prototype._end = function () {\n  if (this._aborted)\n    return this.callback(\n      new Error(\'The request has been aborted even before .end() was called\')\n    );\n\n  let data = this._data;\n  const { req } = this;\n  const { method } = this;\n\n  this._setTimeouts();\n\n  // body\n  if (method !== \'HEAD\' && !req._headerSent) {\n    // serialize stuff\n    if (typeof data !== \'string\') {\n      let contentType = req.getHeader(\'Content-Type\');\n      // Parse out just the content type from the header (ignore the charset)\n      if (contentType) contentType = contentType.split(\';\')[0];\n      let serialize = this._serializer || exports.serialize[contentType];\n      if (!serialize && isJSON(contentType)) {\n        serialize = exports.serialize[\'application/json\'];\n      }\n\n      if (serialize) data = serialize(data);\n    }\n\n    // content-length\n    if (data && !req.getHeader(\'Content-Length\')) {\n      req.setHeader(\n        \'Content-Length\',\n        Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)\n      );\n    }\n  }\n\n  // response\n  // eslint-disable-next-line complexity\n  req.once(\'response\', (res) => {\n    debug(\'%s %s -> %s\', this.method, this.url, res.statusCode);\n\n    if (this._responseTimeoutTimer) {\n      clearTimeout(this._responseTimeoutTimer);\n    }\n\n    if (this.piped) {\n      return;\n    }\n\n    const max = this._maxRedirects;\n    const mime = utils.type(res.headers[\'content-type\'] || \'\') || \'text/plain\';\n    let type = mime.split(\'/\')[0];\n    if (type) type = type.toLowerCase().trim();\n    const multipart = type === \'multipart\';\n    const redirect = isRedirect(res.statusCode);\n    const responseType = this._responseType;\n\n    this.res = res;\n\n    // redirect\n    if (redirect && this._redirects++ !== max) {\n      return this._redirect(res);\n    }\n\n    if (this.method === \'HEAD\') {\n      this.emit(\'end\');\n      this.callback(null, this._emitResponse());\n      return;\n    }\n\n    // zlib support\n    if (this._shouldUnzip(res)) {\n      unzip(req, res);\n    }\n\n    let buffer = this._buffer;\n    if (buffer === undefined && mime in exports.buffer) {\n      buffer = Boolean(exports.buffer[mime]);\n    }\n\n    let parser = this._parser;\n    if (undefined === buffer) {\n      if (parser) {\n        console.warn(\n          "A custom superagent parser has been set, but buffering strategy for the parser hasn\'t been configured. Call `req.buffer(true or false)` or set `superagent.buffer[mime] = true or false`"\n        );\n        buffer = true;\n      }\n    }\n\n    if (!parser) {\n      if (responseType) {\n        parser = exports.parse.image; // It\'s actually a generic Buffer\n        buffer = true;\n      } else if (multipart) {\n        const form = new formidable.IncomingForm();\n        parser = form.parse.bind(form);\n        buffer = true;\n      } else if (isImageOrVideo(mime)) {\n        parser = exports.parse.image;\n        buffer = true; // For backwards-compatibility buffering default is ad-hoc MIME-dependent\n      } else if (exports.parse[mime]) {\n        parser = exports.parse[mime];\n      } else if (type === \'text\') {\n        parser = exports.parse.text;\n        buffer = buffer !== false;\n\n        // everyone wants their own white-labeled json\n      } else if (isJSON(mime)) {\n        parser = exports.parse[\'application/json\'];\n        buffer = buffer !== false;\n      } else if (buffer) {\n        parser = exports.parse.text;\n      } else if (undefined === buffer) {\n        parser = exports.parse.image; // It\'s actually a generic Buffer\n        buffer = true;\n      }\n    }\n\n    // by default only buffer text/*, json and messed up thing from hell\n    if ((undefined === buffer && isText(mime)) || isJSON(mime)) {\n      buffer = true;\n    }\n\n    this._resBuffered = buffer;\n    let parserHandlesEnd = false;\n    if (buffer) {\n      // Protectiona against zip bombs and other nuisance\n      let responseBytesLeft = this._maxResponseSize || 200000000;\n      res.on(\'data\', (buf) => {\n        responseBytesLeft -= buf.byteLength || buf.length;\n        if (responseBytesLeft < 0) {\n          // This will propagate through error event\n          const err = new Error(\'Maximum response size reached\');\n          err.code = \'ETOOLARGE\';\n          // Parsers aren\'t required to observe error event,\n          // so would incorrectly report success\n          parserHandlesEnd = false;\n          // Will emit error event\n          res.destroy(err);\n        }\n      });\n    }\n\n    if (parser) {\n      try {\n        // Unbuffered parsers are supposed to emit response early,\n        // which is weird BTW, because response.body won\'t be there.\n        parserHandlesEnd = buffer;\n\n        parser(res, (err, obj, files) => {\n          if (this.timedout) {\n            // Timeout has already handled all callbacks\n            return;\n          }\n\n          // Intentional (non-timeout) abort is supposed to preserve partial response,\n          // even if it doesn\'t parse.\n          if (err && !this._aborted) {\n            return this.callback(err);\n          }\n\n          if (parserHandlesEnd) {\n            this.emit(\'end\');\n            this.callback(null, this._emitResponse(obj, files));\n          }\n        });\n      } catch (err) {\n        this.callback(err);\n        return;\n      }\n    }\n\n    this.res = res;\n\n    // unbuffered\n    if (!buffer) {\n      debug(\'unbuffered %s %s\', this.method, this.url);\n      this.callback(null, this._emitResponse());\n      if (multipart) return; // allow multipart to handle end event\n      res.once(\'end\', () => {\n        debug(\'end %s %s\', this.method, this.url);\n        this.emit(\'end\');\n      });\n      return;\n    }\n\n    // terminating events\n    res.once(\'error\', (err) => {\n      parserHandlesEnd = false;\n      this.callback(err, null);\n    });\n    if (!parserHandlesEnd)\n      res.once(\'end\', () => {\n        debug(\'end %s %s\', this.method, this.url);\n        // TODO: unless buffering emit earlier to stream\n        this.emit(\'end\');\n        this.callback(null, this._emitResponse());\n      });\n  });\n\n  this.emit(\'request\', this);\n\n  const getProgressMonitor = () => {\n    const lengthComputable = true;\n    const total = req.getHeader(\'Content-Length\');\n    let loaded = 0;\n\n    const progress = new Stream.Transform();\n    progress._transform = (chunk, encoding, cb) => {\n      loaded += chunk.length;\n      this.emit(\'progress\', {\n        direction: \'upload\',\n        lengthComputable,\n        loaded,\n        total\n      });\n      cb(null, chunk);\n    };\n\n    return progress;\n  };\n\n  const bufferToChunks = (buffer) => {\n    const chunkSize = 16 * 1024; // default highWaterMark value\n    const chunking = new Stream.Readable();\n    const totalLength = buffer.length;\n    const remainder = totalLength % chunkSize;\n    const cutoff = totalLength - remainder;\n\n    for (let i = 0; i < cutoff; i += chunkSize) {\n      const chunk = buffer.slice(i, i + chunkSize);\n      chunking.push(chunk);\n    }\n\n    if (remainder > 0) {\n      const remainderBuffer = buffer.slice(-remainder);\n      chunking.push(remainderBuffer);\n    }\n\n    chunking.push(null); // no more data\n\n    return chunking;\n  };\n\n  // if a FormData instance got created, then we send that as the request body\n  const formData = this._formData;\n  if (formData) {\n    // set headers\n    const headers = formData.getHeaders();\n    for (const i in headers) {\n      if (Object.prototype.hasOwnProperty.call(headers, i)) {\n        debug(\'setting FormData header: "%s: %s"\', i, headers[i]);\n        req.setHeader(i, headers[i]);\n      }\n    }\n\n    // attempt to get "Content-Length" header\n    formData.getLength((err, length) => {\n      // TODO: Add chunked encoding when no length (if err)\n      if (err) debug(\'formData.getLength had error\', err, length);\n\n      debug(\'got FormData Content-Length: %s\', length);\n      if (typeof length === \'number\') {\n        req.setHeader(\'Content-Length\', length);\n      }\n\n      formData.pipe(getProgressMonitor()).pipe(req);\n    });\n  } else if (Buffer.isBuffer(data)) {\n    bufferToChunks(data).pipe(getProgressMonitor()).pipe(req);\n  } else {\n    req.end(data);\n  }\n};\n\n// Check whether response has a non-0-sized gzip-encoded body\nRequest.prototype._shouldUnzip = (res) => {\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    // These aren\'t supposed to have any body\n    return false;\n  }\n\n  // header content is a string, and distinction between 0 and no information is crucial\n  if (res.headers[\'content-length\'] === \'0\') {\n    // We know that the body is empty (unfortunately, this check does not cover chunked encoding)\n    return false;\n  }\n\n  // console.log(res);\n  return /^\\s*(?:deflate|gzip)\\s*$/.test(res.headers[\'content-encoding\']);\n};\n\n/**\n * Overrides DNS for selected hostnames. Takes object mapping hostnames to IP addresses.\n *\n * When making a request to a URL with a hostname exactly matching a key in the object,\n * use the given IP address to connect, instead of using DNS to resolve the hostname.\n *\n * A special host `*` matches every hostname (keep redirects in mind!)\n *\n *      request.connect({\n *        \'test.example.com\': \'127.0.0.1\',\n *        \'ipv6.example.com\': \'::1\',\n *      })\n */\nRequest.prototype.connect = function (connectOverride) {\n  if (typeof connectOverride === \'string\') {\n    this._connectOverride = { \'*\': connectOverride };\n  } else if (typeof connectOverride === \'object\') {\n    this._connectOverride = connectOverride;\n  } else {\n    this._connectOverride = undefined;\n  }\n\n  return this;\n};\n\nRequest.prototype.trustLocalhost = function (toggle) {\n  this._trustLocalhost = toggle === undefined ? true : toggle;\n  return this;\n};\n\n// generate HTTP verb methods\nif (!methods.includes(\'del\')) {\n  // create a copy so we don\'t cause conflicts with\n  // other packages using the methods package and\n  // npm 3.x\n  methods = methods.slice(0);\n  methods.push(\'del\');\n}\n\nmethods.forEach((method) => {\n  const name = method;\n  method = method === \'del\' ? \'delete\' : method;\n\n  method = method.toUpperCase();\n  request[name] = (url, data, fn) => {\n    const req = request(method, url);\n    if (typeof data === \'function\') {\n      fn = data;\n      data = null;\n    }\n\n    if (data) {\n      if (method === \'GET\' || method === \'HEAD\') {\n        req.query(data);\n      } else {\n        req.send(data);\n      }\n    }\n\n    if (fn) req.end(fn);\n    return req;\n  };\n});\n\n/**\n * Check if `mime` is text and should be buffered.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api public\n */\n\nfunction isText(mime) {\n  const parts = mime.split(\'/\');\n  let type = parts[0];\n  if (type) type = type.toLowerCase().trim();\n  let subtype = parts[1];\n  if (subtype) subtype = subtype.toLowerCase().trim();\n\n  return type === \'text\' || subtype === \'x-www-form-urlencoded\';\n}\n\nfunction isImageOrVideo(mime) {\n  let type = mime.split(\'/\')[0];\n  if (type) type = type.toLowerCase().trim();\n\n  return type === \'image\' || type === \'video\';\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/i.test(mime);\n}\n\n/**\n * Check if we should follow the redirect `code`.\n *\n * @param {Number} code\n * @return {Boolean}\n * @api private\n */\n\nfunction isRedirect(code) {\n  return [301, 302, 303, 305, 307, 308].includes(code);\n}\n'b"/**\n * Module dependencies.\n */\n\nconst util = require('util');\nconst Stream = require('stream');\nconst ResponseBase = require('../response-base');\n\n/**\n * Expose `Response`.\n */\n\nmodule.exports = Response;\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * @param {Request} req\n * @param {Object} options\n * @constructor\n * @extends {Stream}\n * @implements {ReadableStream}\n * @api private\n */\n\nfunction Response(req) {\n  Stream.call(this);\n  this.res = req.res;\n  const { res } = this;\n  this.request = req;\n  this.req = req.req;\n  this.text = res.text;\n  this.body = res.body === undefined ? {} : res.body;\n  this.files = res.files || {};\n  this.buffered = req._resBuffered;\n  this.headers = res.headers;\n  this.header = this.headers;\n  this._setStatusProperties(res.statusCode);\n  this._setHeaderProperties(this.header);\n  this.setEncoding = res.setEncoding.bind(res);\n  res.on('data', this.emit.bind(this, 'data'));\n  res.on('end', this.emit.bind(this, 'end'));\n  res.on('close', this.emit.bind(this, 'close'));\n  res.on('error', this.emit.bind(this, 'error'));\n}\n\n/**\n * Inherit from `Stream`.\n */\n\nutil.inherits(Response, Stream);\n// eslint-disable-next-line new-cap\nResponseBase(Response.prototype);\n\n/**\n * Implements methods of a `ReadableStream`\n */\n\nResponse.prototype.destroy = function (err) {\n  this.res.destroy(err);\n};\n\n/**\n * Pause.\n */\n\nResponse.prototype.pause = function () {\n  this.res.pause();\n};\n\n/**\n * Resume.\n */\n\nResponse.prototype.resume = function () {\n  this.res.resume();\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function () {\n  const { req } = this;\n  const { method } = req;\n  const { path } = req;\n\n  const msg = `cannot ${method} ${path} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.text = this.text;\n  err.method = method;\n  err.path = path;\n\n  return err;\n};\n\nResponse.prototype.setStatusProperties = function (status) {\n  console.warn('In superagent 2.x setStatusProperties is a private method');\n  return this._setStatusProperties(status);\n};\n\n/**\n * To json.\n *\n * @return {Object}\n * @api public\n */\n\nResponse.prototype.toJSON = function () {\n  return {\n    req: this.request.toJSON(),\n    header: this.header,\n    status: this.status,\n    text: this.text\n  };\n};\n"b"/**\n * Module dependencies.\n */\n\nconst { StringDecoder } = require('string_decoder');\nconst Stream = require('stream');\nconst zlib = require('zlib');\n\n/**\n * Buffers response data events and re-emits when they're unzipped.\n *\n * @param {Request} req\n * @param {Response} res\n * @api private\n */\n\nexports.unzip = (req, res) => {\n  const unzip = zlib.createUnzip();\n  const stream = new Stream();\n  let decoder;\n\n  // make node responseOnEnd() happy\n  stream.req = req;\n\n  unzip.on('error', (err) => {\n    if (err && err.code === 'Z_BUF_ERROR') {\n      // unexpected end of file is ignored by browsers and curl\n      stream.emit('end');\n      return;\n    }\n\n    stream.emit('error', err);\n  });\n\n  // pipe to unzip\n  res.pipe(unzip);\n\n  // override `setEncoding` to capture encoding\n  res.setEncoding = (type) => {\n    decoder = new StringDecoder(type);\n  };\n\n  // decode upon decompressing with captured encoding\n  unzip.on('data', (buf) => {\n    if (decoder) {\n      const str = decoder.write(buf);\n      if (str.length > 0) stream.emit('data', str);\n    } else {\n      stream.emit('data', buf);\n    }\n  });\n\n  unzip.on('end', () => {\n    stream.emit('end');\n  });\n\n  // override `on` to capture data listeners\n  const _on = res.on;\n  res.on = function (type, fn) {\n    if (type === 'data' || type === 'end') {\n      stream.on(type, fn.bind(res));\n    } else if (type === 'error') {\n      stream.on(type, fn.bind(res));\n      _on.call(res, type, fn);\n    } else {\n      _on.call(res, type, fn);\n    }\n\n    return this;\n  };\n};\n"b'const assert = require(\'assert\');\nconst request = require(\'../support/client\');\n\ndescribe(\'request\', function () {\n  this.timeout(20000);\n\n  it(\'request() error object\', (next) => {\n    request(\'GET\', \'/error\').end((err, res) => {\n      assert(err);\n      assert(res.error, \'response should be an error\');\n      assert.equal(res.error.message, \'cannot GET /error (500)\');\n      assert.equal(res.error.status, 500);\n      assert.equal(res.error.method, \'GET\');\n      assert.equal(res.error.url, \'/error\');\n      next();\n    });\n  });\n\n  // This test results in a weird Jetty error on IE9 and IE11 saying PATCH is not a supported method. Looks like something\'s up with SauceLabs\n  const isIE11 = Boolean(navigator.userAgent.match(/Trident.*rv[ :]*11\\./));\n  const isIE9OrOlder = !window.atob;\n  if (!isIE9OrOlder && !isIE11) {\n    // Don\'t run on IE9 or older, or IE11\n    it(\'patch()\', (next) => {\n      request.patch(\'/user/12\').end((err, res) => {\n        assert.equal(\'updated\', res.text);\n        next();\n      });\n    });\n  }\n\n  it(\'POST native FormData\', (next) => {\n    if (!window.FormData) {\n      // Skip test if FormData is not supported by browser\n      return next();\n    }\n\n    const data = new FormData();\n    data.append(\'foo\', \'bar\');\n\n    request\n      .post(\'/echo\')\n      .send(data)\n      .end((err, res) => {\n        assert.equal(\'multipart/form-data\', res.type);\n        next();\n      });\n  });\n\n  it(\'defaults attached files to original file names\', (next) => {\n    if (!window.FormData) {\n      // Skip test if FormData is are not supported by browser\n      return next();\n    }\n\n    try {\n      var file = new File([\'\'], \'image.jpg\', { type: \'image/jpeg\' });\n      // eslint-disable-next-line unicorn/prefer-optional-catch-binding\n    } catch (err) {\n      // Skip if file constructor not supported.\n      return next();\n    }\n\n    request\n      .post(\'/echo\')\n      .attach(\'image\', file)\n      .end((err, res) => {\n        const regx = new RegExp(`filename="${file.name}"`);\n        assert.notEqual(res.text.match(regx), null);\n        next();\n      });\n  });\n\n  it(\'attach() cannot be mixed with send()\', () => {\n    if (!window.FormData || !window.File) {\n      // Skip test if FormData is are not supported by browser\n      return;\n    }\n\n    assert.throws(() => {\n      const file = new File([\'\'], \'image.jpg\', { type: \'image/jpeg\' });\n      request.post(\'/echo\').attach(\'image\', file).send(\'hi\');\n    });\n\n    assert.throws(() => {\n      const file = new File([\'\'], \'image.jpg\', { type: \'image/jpeg\' });\n      request.post(\'/echo\').send(\'hi\').attach(\'image\', file);\n    });\n  });\n\n  it(\'GET invalid json\', (next) => {\n    request.get(\'/invalid-json\').end((err, res) => {\n      assert(err.parse);\n      assert.deepEqual(\n        err.rawResponse,\n        ")]}\', {\'header\':{\'code\':200,\'text\':\'OK\',\'version\':\'1.0\'},\'data\':\'some data\'}"\n      );\n      next();\n    });\n  });\n\n  it(\'GET querystring empty objects\', (next) => {\n    const req = request.get(\'/querystring\').query({});\n    req.end((err, res) => {\n      assert.deepEqual(req._query, []);\n      assert.deepEqual(res.body, {});\n      next();\n    });\n  });\n\n  it(\'GET querystring object .get(uri, obj)\', (next) => {\n    request.get(\'/querystring\', { search: \'Manny\' }).end((err, res) => {\n      assert.deepEqual(res.body, { search: \'Manny\' });\n      next();\n    });\n  });\n\n  it(\'GET querystring object .get(uri, obj, fn)\', (next) => {\n    request.get(\'/querystring\', { search: \'Manny\' }, (err, res) => {\n      assert.deepEqual(res.body, { search: \'Manny\' });\n      next();\n    });\n  });\n\n  it(\'GET querystring object with null value\', (next) => {\n    request.get(\'/url\', { nil: null }).end((err, res) => {\n      assert.equal(res.text, \'/url?nil\');\n      next();\n    });\n  });\n\n  it(\'GET blob object\', (next) => {\n    if (typeof Blob === \'undefined\') {\n      return next();\n    }\n\n    request\n      .get(\'/blob\', { foo: \'bar\' })\n      .responseType(\'blob\')\n      .end((err, res) => {\n        assert(res.xhr.response instanceof Blob);\n        assert(res.body instanceof Blob);\n        next();\n      });\n  });\n\n  it(\'Reject node-only function\', () => {\n    assert.throws(() => {\n      request.get().write();\n    });\n    assert.throws(() => {\n      request.get().pipe();\n    });\n  });\n\n  window.btoa = window.btoa || null;\n  it(\'basic auth\', (next) => {\n    window.btoa = window.btoa || require(\'Base64\').btoa;\n\n    request\n      .post(\'/auth\')\n      .auth(\'foo\', \'bar\')\n      .end((err, res) => {\n        assert.equal(\'foo\', res.body.user);\n        assert.equal(\'bar\', res.body.pass);\n        next();\n      });\n  });\n\n  it(\'auth type "basic"\', (next) => {\n    window.btoa = window.btoa || require(\'Base64\').btoa;\n\n    request\n      .post(\'/auth\')\n      .auth(\'foo\', \'bar\', { type: \'basic\' })\n      .end((err, res) => {\n        assert.equal(\'foo\', res.body.user);\n        assert.equal(\'bar\', res.body.pass);\n        next();\n      });\n  });\n\n  it(\'auth type "auto"\', (next) => {\n    window.btoa = window.btoa || require(\'Base64\').btoa;\n\n    request\n      .post(\'/auth\')\n      .auth(\'foo\', \'bar\', { type: \'auto\' })\n      .end((err, res) => {\n        assert.equal(\'foo\', res.body.user);\n        assert.equal(\'bar\', res.body.pass);\n        next();\n      });\n  });\n\n  it(\'progress event listener on xhr object registered when some on the request\', () => {\n    const req = request.get(\'/foo\').on(\'progress\', (data) => {});\n    req.end();\n\n    if (req.xhr.upload) {\n      // Only run assertion on capable browsers\n      assert.notEqual(null, req.xhr.upload.onprogress);\n    }\n  });\n\n  it(\'no progress event listener on xhr object when none registered on request\', () => {\n    const req = request.get(\'/foo\');\n    req.end();\n\n    if (req.xhr.upload) {\n      // Only run assertion on capable browsers\n      assert.strictEqual(null, req.xhr.upload.onprogress);\n    }\n  });\n\n  it(\'Request#parse overrides body parser no matter Content-Type\', (done) => {\n    let runParser = false;\n\n    function testParser(data) {\n      runParser = true;\n      return JSON.stringify(data);\n    }\n\n    request\n      .post(\'/user\')\n      .serialize(testParser)\n      .type(\'json\')\n      .send({ foo: 123 })\n      .end((err) => {\n        if (err) return done(err);\n        assert(runParser);\n        done();\n      });\n  });\n\n  // Don\'t run on browsers without xhr2 support\n  if (\'FormData\' in window) {\n    it(\'xhr2 download file old hack\', (next) => {\n      request.parse[\'application/vnd.superagent\'] = (obj) => obj;\n\n      request\n        .get(\'/arraybuffer\')\n        .on(\'request\', function () {\n          this.xhr.responseType = \'arraybuffer\';\n        })\n        .on(\'response\', (res) => {\n          assert(res.body instanceof ArrayBuffer);\n          next();\n        })\n        .end();\n    });\n\n    it(\'xhr2 download file responseType\', (next) => {\n      request.parse[\'application/vnd.superagent\'] = (obj) => obj;\n\n      request\n        .get(\'/arraybuffer\')\n        .responseType(\'arraybuffer\')\n        .on(\'response\', (res) => {\n          assert(res.body instanceof ArrayBuffer);\n          next();\n        })\n        .end();\n    });\n\n    it(\'get error status code and rawResponse on file download\', (next) => {\n      request\n        .get(\'/arraybuffer-unauthorized\')\n        .responseType(\'arraybuffer\')\n        .end((err, res) => {\n          assert.equal(err.status, 401);\n          assert(res.body instanceof ArrayBuffer);\n          assert(err.response.body instanceof ArrayBuffer);\n          const decodedString = String.fromCharCode.apply(\n            null,\n            new Uint8Array(res.body)\n          );\n          assert(\n            decodedString,\n            \'{"message":"Authorization has been denied for this request."}\'\n          );\n          next();\n        });\n    });\n  }\n\n  it(\'parse should take precedence over default parse\', (done) => {\n    request\n      .get(\'/foo\')\n      .parse((res, text) => `customText: ${res.status}`)\n      .end((err, res) => {\n        assert(res.ok);\n        assert(res.body === \'customText: 200\');\n        done();\n      });\n  });\n\n  it(\'handles `xhr.open()` errors\', (done) => {\n    request\n      .get(\'http://foo\\0.com\') // throws "Failed to execute \'open\' on \'XMLHttpRequest\': Invalid URL"\n      .end((err, res) => {\n        assert(err);\n        done();\n      });\n  });\n});\n'b'const assert = require(\'assert\');\n\nconst request = require(\'../support/client\');\n\nfunction serialize(obj, res) {\n  const val = request.serializeObject(obj);\n  assert.equal(\n    val,\n    res,\n    `${JSON.stringify(obj)} to "${res}" serialization failed. got: "${val}"`\n  );\n}\n\nfunction parse(str, obj) {\n  const val = request.parseString(str);\n  assert.deepEqual(\n    val,\n    obj,\n    `"${str}" to ${JSON.stringify(obj)} parse failed. got: ${JSON.stringify(\n      val\n    )}`\n  );\n}\n\ndescribe(\'request.serializeObject()\', () => {\n  it(\'should serialize\', () => {\n    serialize(\'test\', \'test\');\n    serialize(\'foo=bar\', \'foo=bar\');\n    serialize({ foo: \'bar\' }, \'foo=bar\');\n    serialize({ foo: null }, \'foo\');\n    serialize({ foo: \'null\' }, \'foo=null\');\n    serialize({ foo: undefined }, \'\');\n    serialize({ foo: \'undefined\' }, \'foo=undefined\');\n    serialize({ name: \'tj\', age: 24 }, \'name=tj&age=24\');\n    serialize({ name: \'&tj&\' }, \'name=%26tj%26\');\n    serialize({ \'&name&\': \'tj\' }, \'%26name%26=tj\');\n    serialize({ hello: \'`test`\' }, \'hello=%60test%60\');\n    serialize({ $hello: \'test\' }, \'$hello=test\');\n  });\n});\n\ndescribe(\'request.parseString()\', () => {\n  it(\'should parse\', () => {\n    parse(\'name=tj\', { name: \'tj\' });\n    parse(\'name=Manny&species=cat\', { name: \'Manny\', species: \'cat\' });\n    parse(\'redirect=/&ok\', { redirect: \'/\', ok: \'\' });\n    parse(\'%26name=tj\', { \'&name\': \'tj\' });\n    parse(\'name=tj%26\', { name: \'tj&\' });\n    parse(\'%60\', { \'`\': \'\' });\n  });\n});\n\ndescribe(\'Merging objects\', () => {\n  it("Don\'t mix FormData and JSON", () => {\n    if (!window.FormData) {\n      // Skip test if FormData is not supported by browser\n      return;\n    }\n\n    const data = new FormData();\n    data.append(\'foo\', \'bar\');\n\n    assert.throws(() => {\n      request.post(\'/echo\').send(data).send({ allowed: false });\n    });\n  });\n\n  it("Don\'t mix Blob and JSON", () => {\n    if (!window.Blob) {\n      return;\n    }\n\n    request\n      .post(\'/echo\')\n      .send(new Blob([\'will be cleared\']))\n      .send(false)\n      .send({ allowed: true });\n\n    assert.throws(() => {\n      request\n        .post(\'/echo\')\n        .send(new Blob([\'hello\']))\n        .send({ allowed: false });\n    });\n  });\n});\n'b"const assert = require('assert');\nconst request = require('../support/client');\n\ndescribe('xdomain', function () {\n  this.timeout(20000);\n\n  // TODO (defunctzombie) I am not certain this actually forces xdomain request\n  // use localtunnel.me and tunnel127.com alias instead\n  it('should support req.withCredentials()', (next) => {\n    request\n      .get(`//${window.location.host}/xdomain`)\n      .withCredentials()\n      .end((err, res) => {\n        assert.equal(200, res.status);\n        assert.equal('tobi', res.text);\n        next();\n      });\n  });\n\n  // xdomain not supported in old IE and IE11 gives weird Jetty errors (looks like a SauceLabs issue)\n  const isIE11 = Boolean(navigator.userAgent.match(/Trident.*rv[ :]*11\\./));\n  const isIE9OrOlder = !window.atob;\n  if (!isIE9OrOlder && !isIE11) {\n    // Don't run on IE9 or older, or IE11\n    it('should handle x-domain failure', (next) => {\n      request.get('//tunne127.com').end((err, res) => {\n        assert(err, 'error missing');\n        assert(err.crossDomain, 'not .crossDomain');\n        next();\n      });\n    });\n\n    it('should handle x-domain failure after repeat attempts', (next) => {\n      request\n        .get('//tunne127.com')\n        .retry(2)\n        .end((err, res) => {\n          try {\n            assert(err, 'error missing');\n            assert(err.crossDomain, 'not .crossDomain');\n            assert.equal(2, err.retries, 'expected an error with .retries');\n            next();\n          } catch (err_) {\n            next(err_);\n          }\n        });\n    });\n  }\n});\n"b"'use strict';\n\nrequire('should-http');\n\nconst express = require('../support/express');\n\nconst app = express();\nconst request = require('../support/client');\nconst assert = require('assert');\nconst should = require('should');\nconst cookieParser = require('cookie-parser');\nconst session = require('express-session');\nlet http = require('http');\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\napp.use(cookieParser());\napp.use(\n  session({\n    secret: 'secret',\n    resave: true,\n    saveUninitialized: true\n  })\n);\n\napp.post('/signin', (req, res) => {\n  req.session.user = 'hunter@hunterloftis.com';\n  res.redirect('/dashboard');\n});\n\napp.post('/setcookie', (req, res) => {\n  res.cookie('cookie', 'jar');\n  res.sendStatus(200);\n});\n\napp.get('/getcookie', (req, res) => {\n  res.status(200).send(req.cookies.cookie);\n});\n\napp.get('/dashboard', (req, res) => {\n  if (req.session.user) return res.status(200).send('dashboard');\n  res.status(401).send('dashboard');\n});\n\napp.all('/signout', (req, res) => {\n  req.session.regenerate(() => {\n    res.status(200).send('signout');\n  });\n});\n\napp.get('/', (req, res) => {\n  if (req.session.user) return res.redirect('/dashboard');\n  res.status(200).send('home');\n});\n\napp.post('/redirect', (req, res) => {\n  res.redirect('/simple');\n});\n\napp.get('/simple', (req, res) => {\n  res.status(200).send('simple');\n});\n\nlet base = 'http://localhost';\nlet server;\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server = server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\n\ndescribe('request', () => {\n  describe('persistent agent', () => {\n    const agent1 = request.agent();\n    const agent2 = request.agent();\n    const agent3 = request.agent();\n    const agent4 = request.agent();\n\n    it('should gain a session on POST', () =>\n      agent3.post(`${base}/signin`).then((res) => {\n        res.should.have.status(200);\n        should.not.exist(res.headers['set-cookie']);\n        res.text.should.containEql('dashboard');\n      }));\n\n    it('should start with empty session (set cookies)', (done) => {\n      agent1.get(`${base}/dashboard`).end((err, res) => {\n        should.exist(err);\n        res.should.have.status(401);\n        should.exist(res.headers['set-cookie']);\n        done();\n      });\n    });\n\n    it('should gain a session (cookies already set)', () =>\n      agent1.post(`${base}/signin`).then((res) => {\n        res.should.have.status(200);\n        should.not.exist(res.headers['set-cookie']);\n        res.text.should.containEql('dashboard');\n      }));\n\n    it('should persist cookies across requests', () =>\n      agent1.get(`${base}/dashboard`).then((res) => {\n        res.should.have.status(200);\n      }));\n\n    it('should have the cookie set in the end callback', () =>\n      agent4\n        .post(`${base}/setcookie`)\n        .then(() => agent4.get(`${base}/getcookie`))\n        .then((res) => {\n          res.should.have.status(200);\n          assert.strictEqual(res.text, 'jar');\n        }));\n\n    it('should not share cookies', (done) => {\n      agent2.get(`${base}/dashboard`).end((err, res) => {\n        should.exist(err);\n        res.should.have.status(401);\n        done();\n      });\n    });\n\n    it('should not lose cookies between agents', () =>\n      agent1.get(`${base}/dashboard`).then((res) => {\n        res.should.have.status(200);\n      }));\n\n    it('should be able to follow redirects', () =>\n      agent1.get(base).then((res) => {\n        res.should.have.status(200);\n        res.text.should.containEql('dashboard');\n      }));\n\n    it('should be able to post redirects', () =>\n      agent1\n        .post(`${base}/redirect`)\n        .send({ foo: 'bar', baz: 'blaaah' })\n        .then((res) => {\n          res.should.have.status(200);\n          res.text.should.containEql('simple');\n          res.redirects.should.eql([`${base}/simple`]);\n        }));\n\n    it('should be able to limit redirects', (done) => {\n      agent1\n        .get(base)\n        .redirects(0)\n        .end((err, res) => {\n          should.exist(err);\n          res.should.have.status(302);\n          res.redirects.should.eql([]);\n          res.header.location.should.equal('/dashboard');\n          done();\n        });\n    });\n\n    it('should be able to create a new session (clear cookie)', () =>\n      agent1.post(`${base}/signout`).then((res) => {\n        res.should.have.status(200);\n        should.exist(res.headers['set-cookie']);\n      }));\n\n    it('should regenerate with an empty session', (done) => {\n      agent1.get(`${base}/dashboard`).end((err, res) => {\n        should.exist(err);\n        res.should.have.status(401);\n        should.not.exist(res.headers['set-cookie']);\n        done();\n      });\n    });\n  });\n});\n"b'\'use strict\';\nconst request = require(\'../support/client\');\nconst setup = require(\'../support/setup\');\n\nconst base = setup.uri;\nconst URL = require(\'url\');\n\ndescribe(\'Basic auth\', () => {\n  describe(\'when credentials are present in url\', () => {\n    it(\'should set Authorization\', (done) => {\n      const new_url = URL.parse(base);\n      new_url.auth = \'tobi:learnboost\';\n      new_url.pathname = \'/basic-auth\';\n\n      request.get(URL.format(new_url)).end((err, res) => {\n        res.status.should.equal(200);\n        done();\n      });\n    });\n  });\n\n  describe(\'req.auth(user, pass)\', () => {\n    it(\'should set Authorization\', (done) => {\n      request\n        .get(`${base}/basic-auth`)\n        .auth(\'tobi\', \'learnboost\')\n        .end((err, res) => {\n          res.status.should.equal(200);\n          done();\n        });\n    });\n  });\n\n  describe(\'req.auth(user + ":" + pass)\', () => {\n    it(\'should set authorization\', (done) => {\n      request\n        .get(`${base}/basic-auth/again`)\n        .auth(\'tobi\')\n        .end((err, res) => {\n          res.status.should.eql(200);\n          done();\n        });\n    });\n  });\n});\n'b'\'use strict\';\n\nconst assert = require(\'assert\');\nconst fs = require(\'fs\');\nconst { EventEmitter } = require(\'events\');\nconst { StringDecoder } = require(\'string_decoder\');\nconst url = require(\'url\');\nconst setup = require(\'../support/setup\');\nconst request = require(\'../support/client\');\n\nconst base = setup.uri;\n\nconst doesntWorkInHttp2 = !process.env.HTTP2_TEST;\n\ndescribe(\'[node] request\', () => {\n  describe(\'with an url\', () => {\n    it(\'should preserve the encoding of the url\', (done) => {\n      request.get(`${base}/url?a=(b%29`).end((err, res) => {\n        assert.equal(\'/url?a=(b%29\', res.text);\n        done();\n      });\n    });\n  });\n\n  describe(\'with an object\', () => {\n    it(\'should format the url\', () =>\n      request.get(url.parse(`${base}/login`)).then((res) => {\n        assert(res.ok);\n      }));\n  });\n\n  describe(\'without a schema\', () => {\n    it(\'should default to http\', () =>\n      request.get(\'localhost:5000/login\').then((res) => {\n        assert.equal(res.status, 200);\n      }));\n  });\n\n  describe(\'res.toJSON()\', () => {\n    it(\'should describe the response\', () =>\n      request\n        .post(`${base}/echo`)\n        .send({ foo: \'baz\' })\n        .then((res) => {\n          const obj = res.toJSON();\n          assert.equal(\'object\', typeof obj.header);\n          assert.equal(\'object\', typeof obj.req);\n          assert.equal(200, obj.status);\n          assert.equal(\'{"foo":"baz"}\', obj.text);\n        }));\n  });\n\n  describe(\'res.links\', () => {\n    it(\'should default to an empty object\', () =>\n      request.get(`${base}/login`).then((res) => {\n        res.links.should.eql({});\n      }));\n\n    it(\'should parse the Link header field\', (done) => {\n      request.get(`${base}/links`).end((err, res) => {\n        res.links.next.should.equal(\n          \'https://api.github.com/repos/visionmedia/mocha/issues?page=2\'\n        );\n        done();\n      });\n    });\n  });\n\n  describe(\'req.unset(field)\', () => {\n    it(\'should remove the header field\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .unset(\'User-Agent\')\n        .end((err, res) => {\n          assert.equal(void 0, res.header[\'user-agent\']);\n          done();\n        });\n    });\n  });\n\n  describe(\'case-insensitive\', () => {\n    it(\'should set/get header fields case-insensitively\', () => {\n      const r = request.post(`${base}/echo`);\n      r.set(\'MiXeD\', \'helloes\');\n      assert.strictEqual(r.get(\'mixed\'), \'helloes\');\n    });\n\n    it(\'should unset header fields case-insensitively\', () => {\n      const r = request.post(`${base}/echo`);\n      r.set(\'MiXeD\', \'helloes\');\n      r.unset(\'MIXED\');\n      assert.strictEqual(r.get(\'mixed\'), undefined);\n    });\n  });\n\n  describe(\'req.write(str)\', () => {\n    it(\'should write the given data\', (done) => {\n      const req = request.post(`${base}/echo`);\n      req.set(\'Content-Type\', \'application/json\');\n      assert.equal(\'boolean\', typeof req.write(\'{"name"\'));\n      assert.equal(\'boolean\', typeof req.write(\':"tobi"}\'));\n      req.end((err, res) => {\n        res.text.should.equal(\'{"name":"tobi"}\');\n        done();\n      });\n    });\n  });\n\n  describe(\'req.pipe(stream)\', () => {\n    it(\'should pipe the response to the given stream\', (done) => {\n      const stream = new EventEmitter();\n\n      stream.buf = \'\';\n      stream.writable = true;\n\n      stream.write = function (chunk) {\n        this.buf += chunk;\n      };\n\n      stream.end = function () {\n        this.buf.should.equal(\'{"name":"tobi"}\');\n        done();\n      };\n\n      request.post(`${base}/echo`).send(\'{"name":"tobi"}\').pipe(stream);\n    });\n  });\n\n  describe(\'.buffer()\', () => {\n    it(\'should enable buffering\', (done) => {\n      request\n        .get(`${base}/custom`)\n        .buffer()\n        .end((err, res) => {\n          assert.ifError(err);\n          assert.equal(\'custom stuff\', res.text);\n          assert(res.buffered);\n          done();\n        });\n    });\n    it("should take precedence over request.buffer[\'someMimeType\'] = false", (done) => {\n      const type = \'application/barbaz\';\n      const send = \'some text\';\n      request.buffer[type] = false;\n      request\n        .post(`${base}/echo`)\n        .type(type)\n        .send(send)\n        .buffer()\n        .end((err, res) => {\n          delete request.buffer[type];\n          assert.ifError(err);\n          assert.equal(res.type, type);\n          assert.equal(send, res.text);\n          assert(res.buffered);\n          done();\n        });\n    });\n  });\n\n  describe(\'.buffer(false)\', () => {\n    it(\'should disable buffering\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .type(\'application/x-dog\')\n        .send(\'hello this is dog\')\n        .buffer(false)\n        .end((err, res) => {\n          assert.ifError(err);\n          assert.equal(null, res.text);\n          res.body.should.eql({});\n          let buf = \'\';\n          res.setEncoding(\'utf8\');\n          res.on(\'data\', (chunk) => {\n            buf += chunk;\n          });\n          res.on(\'end\', () => {\n            buf.should.equal(\'hello this is dog\');\n            done();\n          });\n        });\n    });\n    it("should take precedence over request.buffer[\'someMimeType\'] = true", (done) => {\n      const type = \'application/foobar\';\n      const send = \'hello this is a dog\';\n      request.buffer[type] = true;\n      request\n        .post(`${base}/echo`)\n        .type(type)\n        .send(send)\n        .buffer(false)\n        .end((err, res) => {\n          delete request.buffer[type];\n          assert.ifError(err);\n          assert.equal(null, res.text);\n          assert.equal(res.type, type);\n          assert(!res.buffered);\n          res.body.should.eql({});\n          let buf = \'\';\n          res.setEncoding(\'utf8\');\n          res.on(\'data\', (chunk) => {\n            buf += chunk;\n          });\n          res.on(\'end\', () => {\n            buf.should.equal(send);\n            done();\n          });\n        });\n    });\n  });\n\n  describe(\'.withCredentials()\', () => {\n    it(\'should not throw an error when using the client-side "withCredentials" method\', (done) => {\n      request\n        .get(`${base}/custom`)\n        .withCredentials()\n        .end((err, res) => {\n          assert.ifError(err);\n          done();\n        });\n    });\n  });\n\n  describe(\'.agent()\', () => {\n    it(\'should return the defaut agent\', (done) => {\n      const req = request.post(`${base}/echo`);\n      req.agent().should.equal(false);\n      done();\n    });\n  });\n\n  describe(\'.agent(undefined)\', () => {\n    it(\'should set an agent to undefined and ensure it is chainable\', (done) => {\n      const req = request.get(`${base}/echo`);\n      const ret = req.agent(undefined);\n      ret.should.equal(req);\n      assert.strictEqual(req.agent(), undefined);\n      done();\n    });\n  });\n\n  describe(\'.agent(new http.Agent())\', () => {\n    it(\'should set passed agent\', (done) => {\n      const http = require(\'http\');\n      const req = request.get(`${base}/echo`);\n      const agent = new http.Agent();\n      const ret = req.agent(agent);\n      ret.should.equal(req);\n      req.agent().should.equal(agent);\n      done();\n    });\n  });\n\n  describe(\'with a content type other than application/json or text/*\', () => {\n    it(\'should still use buffering\', () => {\n      return request\n        .post(`${base}/echo`)\n        .type(\'application/x-dog\')\n        .send(\'hello this is dog\')\n        .then((res) => {\n          assert.equal(null, res.text);\n          assert.equal(res.body.toString(), \'hello this is dog\');\n          res.buffered.should.be.true;\n        });\n    });\n  });\n\n  describe(\'content-length\', () => {\n    it(\'should be set to the byte length of a non-buffer object\', (done) => {\n      const decoder = new StringDecoder(\'utf8\');\n      let img = fs.readFileSync(`${__dirname}/fixtures/test.png`);\n      img = decoder.write(img);\n      request\n        .post(`${base}/echo`)\n        .type(\'application/x-image\')\n        .send(img)\n        .buffer(false)\n        .end((err, res) => {\n          assert.ifError(err);\n          assert(!res.buffered);\n          assert.equal(res.header[\'content-length\'], Buffer.byteLength(img));\n          done();\n        });\n    });\n\n    it(\'should be set to the length of a buffer object\', (done) => {\n      const img = fs.readFileSync(`${__dirname}/fixtures/test.png`);\n      request\n        .post(`${base}/echo`)\n        .type(\'application/x-image\')\n        .send(img)\n        .buffer(true)\n        .end((err, res) => {\n          assert.ifError(err);\n          assert(res.buffered);\n          assert.equal(res.header[\'content-length\'], img.length);\n          done();\n        });\n    });\n  });\n\n  if (doesntWorkInHttp2)\n    it(\'should send body with .get().send()\', (next) => {\n      request\n        .get(`${base}/echo`)\n        .set(\'Content-Type\', \'text/plain\')\n        .send(\'wahoo\')\n        .end((err, res) => {\n          try {\n            assert.equal(\'wahoo\', res.text);\n            next();\n          } catch (err_) {\n            next(err_);\n          }\n        });\n    });\n});\n'b'\'use strict\';\nconst assert = require(\'assert\');\nconst request = require(\'../support/client\');\nconst setup = require(\'../support/setup\');\n\nconst base = setup.uri;\n\ndescribe("req.buffer[\'someMimeType\']", () => {\n  it(\'should respect that agent.buffer(true) takes precedent\', (done) => {\n    const agent = request.agent();\n    agent.buffer(true);\n    const type = \'application/somerandomtype\';\n    const send = \'somerandomtext\';\n    request.buffer[type] = false;\n    agent\n      .post(`${base}/echo`)\n      .type(type)\n      .send(send)\n      .end((err, res) => {\n        delete request.buffer[type];\n        assert.ifError(err);\n        assert.equal(res.type, type);\n        assert.equal(send, res.text);\n        assert(res.buffered);\n        done();\n      });\n  });\n\n  it(\'should respect that agent.buffer(false) takes precedent\', (done) => {\n    const agent = request.agent();\n    agent.buffer(false);\n    const type = \'application/barrr\';\n    const send = \'some random text2\';\n    request.buffer[type] = true;\n    agent\n      .post(`${base}/echo`)\n      .type(type)\n      .send(send)\n      .end((err, res) => {\n        delete request.buffer[type];\n        assert.ifError(err);\n        assert.equal(null, res.text);\n        assert.equal(res.type, type);\n        assert(!res.buffered);\n        res.body.should.eql({});\n        let buf = \'\';\n        res.setEncoding(\'utf8\');\n        res.on(\'data\', (chunk) => {\n          buf += chunk;\n        });\n        res.on(\'end\', () => {\n          buf.should.equal(send);\n          done();\n        });\n      });\n  });\n\n  it(\'should disable buffering for that mimetype when false\', (done) => {\n    const type = \'application/bar\';\n    const send = \'some random text\';\n    request.buffer[type] = false;\n    request\n      .post(`${base}/echo`)\n      .type(type)\n      .send(send)\n      .end((err, res) => {\n        delete request.buffer[type];\n        assert.ifError(err);\n        assert.equal(null, res.text);\n        assert.equal(res.type, type);\n        assert(!res.buffered);\n        res.body.should.eql({});\n        let buf = \'\';\n        res.setEncoding(\'utf8\');\n        res.on(\'data\', (chunk) => {\n          buf += chunk;\n        });\n        res.on(\'end\', () => {\n          buf.should.equal(send);\n          done();\n        });\n      });\n  });\n  it(\'should enable buffering for that mimetype when true\', (done) => {\n    const type = \'application/baz\';\n    const send = \'woooo\';\n    request.buffer[type] = true;\n    request\n      .post(`${base}/echo`)\n      .type(type)\n      .send(send)\n      .end((err, res) => {\n        delete request.buffer[type];\n        assert.ifError(err);\n        assert.equal(res.type, type);\n        assert.equal(send, res.text);\n        assert(res.buffered);\n        done();\n      });\n  });\n  it(\'should fallback to default handling for that mimetype when undefined\', () => {\n    const type = \'application/bazzz\';\n    const send = \'woooooo\';\n    return request\n      .post(`${base}/echo`)\n      .type(type)\n      .send(send)\n      .then((res) => {\n        assert.equal(res.type, type);\n        assert.equal(send, res.body.toString());\n        assert(res.buffered);\n      });\n  });\n});\n'b"'use strict';\nconst request = require('../support/client');\n\ndescribe('exports', () => {\n  it('should expose .protocols', () => {\n    Object.keys(request.protocols).should.eql(['http:', 'https:', 'http2:']);\n  });\n\n  it('should expose .serialize', () => {\n    Object.keys(request.serialize).should.eql([\n      'application/x-www-form-urlencoded',\n      'application/json'\n    ]);\n  });\n\n  it('should expose .parse', () => {\n    Object.keys(request.parse).should.eql([\n      'application/x-www-form-urlencoded',\n      'application/json',\n      'text',\n      'application/octet-stream',\n      'application/pdf',\n      'image'\n    ]);\n  });\n\n  it('should export .buffer', () => {\n    Object.keys(request.buffer).should.eql([]);\n  });\n});\n"b"'use strict';\n\nconst request = require('../support/client');\nconst setup = require('../support/setup');\n\nconst base = setup.uri;\nconst assert = require('assert');\n\ndescribe('flags', () => {\n  describe('with 4xx response', () => {\n    it('should set res.error and res.clientError', (done) => {\n      request.get(`${base}/notfound`).end((err, res) => {\n        assert(err);\n        assert(!res.ok, 'response should not be ok');\n        assert(res.error, 'response should be an error');\n        assert(res.clientError, 'response should be a client error');\n        assert(!res.serverError, 'response should not be a server error');\n        done();\n      });\n    });\n  });\n\n  describe('with 5xx response', () => {\n    it('should set res.error and res.serverError', (done) => {\n      request.get(`${base}/error`).end((err, res) => {\n        assert(err);\n        assert(!res.ok, 'response should not be ok');\n        assert(!res.notFound, 'response should not be notFound');\n        assert(res.error, 'response should be an error');\n        assert(!res.clientError, 'response should not be a client error');\n        assert(res.serverError, 'response should be a server error');\n        done();\n      });\n    });\n  });\n\n  describe('with 404 Not Found', () => {\n    it('should res.notFound', (done) => {\n      request.get(`${base}/notfound`).end((err, res) => {\n        assert(err);\n        assert(res.notFound, 'response should be .notFound');\n        done();\n      });\n    });\n  });\n\n  describe('with 400 Bad Request', () => {\n    it('should set req.badRequest', (done) => {\n      request.get(`${base}/bad-request`).end((err, res) => {\n        assert(err);\n        assert(res.badRequest, 'response should be .badRequest');\n        done();\n      });\n    });\n  });\n\n  describe('with 401 Bad Request', () => {\n    it('should set res.unauthorized', (done) => {\n      request.get(`${base}/unauthorized`).end((err, res) => {\n        assert(err);\n        assert(res.unauthorized, 'response should be .unauthorized');\n        done();\n      });\n    });\n  });\n\n  describe('with 406 Not Acceptable', () => {\n    it('should set res.notAcceptable', (done) => {\n      request.get(`${base}/not-acceptable`).end((err, res) => {\n        assert(err);\n        assert(res.notAcceptable, 'response should be .notAcceptable');\n        done();\n      });\n    });\n  });\n\n  describe('with 204 No Content', () => {\n    it('should set res.noContent', (done) => {\n      request.get(`${base}/no-content`).end((err, res) => {\n        assert(!err);\n        assert(res.noContent, 'response should be .noContent');\n        done();\n      });\n    });\n  });\n\n  describe('with 201 Created', () => {\n    it('should set res.created', (done) => {\n      request.post(`${base}/created`).end((err, res) => {\n        assert(!err);\n        assert(res.created, 'response should be .created');\n        done();\n      });\n    });\n  });\n\n  describe('with 422 Unprocessable Entity', () => {\n    it('should set res.unprocessableEntity', (done) => {\n      request.post(`${base}/unprocessable-entity`).end((err, res) => {\n        assert(err);\n        assert(\n          res.unprocessableEntity,\n          'response should be .unprocessableEntity'\n        );\n        done();\n      });\n    });\n  });\n});\n"b'\'use strict\';\n\nconst request = require(\'../support/client\');\nconst setup = require(\'../support/setup\');\n\nconst base = setup.uri;\nconst assert = require(\'assert\');\n\ndescribe(\'Merging objects\', () => {\n  it("Don\'t mix Buffer and JSON", () => {\n    assert.throws(() => {\n      request\n        .post(\'/echo\')\n        .send(Buffer.from(\'some buffer\'))\n        .send({ allowed: false });\n    });\n  });\n});\n\ndescribe(\'req.send(String)\', () => {\n  it(\'should default to "form"\', (done) => {\n    request\n      .post(`${base}/echo`)\n      .send(\'user[name]=tj\')\n      .send(\'user[email]=tj@vision-media.ca\')\n      .end((err, res) => {\n        res.header[\'content-type\'].should.equal(\n          \'application/x-www-form-urlencoded\'\n        );\n        res.body.should.eql({\n          user: { name: \'tj\', email: \'tj@vision-media.ca\' }\n        });\n        done();\n      });\n  });\n});\n\ndescribe(\'res.body\', () => {\n  describe(\'application/x-www-form-urlencoded\', () => {\n    it(\'should parse the body\', (done) => {\n      request.get(`${base}/form-data`).end((err, res) => {\n        res.text.should.equal(\'pet[name]=manny\');\n        res.body.should.eql({ pet: { name: \'manny\' } });\n        done();\n      });\n    });\n  });\n});\n'b"'use strict';\nif (!process.env.HTTP2_TEST) {\n  return;\n}\n\nconst assert = require('assert');\nconst url = require('url');\nconst request = require('../..');\nconst setup = require('../support/setup');\n\nconst base = setup.uri;\n\ndescribe('request.get().http2()', () => {\n  it('should preserve the encoding of the url', (done) => {\n    request\n      .get(`${base}/url?a=(b%29`)\n      .http2()\n      .end((err, res) => {\n        assert.equal('/url?a=(b%29', res.text);\n        done();\n      });\n  });\n\n  it('should format the url', () =>\n    request\n      .get(url.parse(`${base}/login`))\n      .http2()\n      .then((res) => {\n        assert(res.ok);\n      }));\n\n  it('should default to http', () =>\n    request\n      .get('localhost:5000/login')\n      .http2()\n      .then((res) => {\n        assert.equal(res.status, 200);\n      }));\n});\n"b"'use strict';\n\nconst assert = require('assert');\n\nconst url = require('url');\nconst https = require('https');\nconst fs = require('fs');\nconst express = require('../support/express');\nconst request = require('../support/client');\n\nconst app = express();\n\nconst ca = fs.readFileSync(`${__dirname}/fixtures/ca.cert.pem`);\nconst key = fs.readFileSync(`${__dirname}/fixtures/key.pem`);\nconst pfx = fs.readFileSync(`${__dirname}/fixtures/cert.pfx`);\nconst cert = fs.readFileSync(`${__dirname}/fixtures/cert.pem`);\nconst passpfx = fs.readFileSync(`${__dirname}/fixtures/passcert.pfx`);\n\n/*\n\nopenssl genrsa -out ca.key.pem 2048\nopenssl req -x509 -new -nodes -key ca.key.pem -sha256 -days 5000 -out ca.cert.pem # specify CN = CA\n\nopenssl genrsa -out key.pem 2048\nopenssl req -new -key key.pem -out cert.csr # specify CN = localhost\n\nopenssl x509 -req -in cert.csr -CA ca.cert.pem -CAkey ca.key.pem -CAcreateserial -out cert.pem -days 5000 -sha256\nopenssl pkcs12 -export -in cert.pem -inkey key.pem -out cert.pfx # empty password\n\nopenssl pkcs12 -export -in cert.pem -inkey key.pem -out passcert.pfx # password test\n\n */\nlet http2;\nif (process.env.HTTP2_TEST) {\n  http2 = require('http2');\n}\n\nlet server;\n\napp.get('/', (req, res) => {\n  res.send('Safe and secure!');\n});\n\n// WARNING: this .listen() boilerplate is slightly different from most tests\n// due to HTTPS. Do not copy/paste without examination.\nconst base = 'https://localhost';\nlet testEndpoint;\n\ndescribe('https', () => {\n  describe('certificate authority', () => {\n    before(function listen(done) {\n      if (process.env.HTTP2_TEST) {\n        server = http2.createSecureServer(\n          {\n            key,\n            cert\n          },\n          app\n        );\n      } else {\n        server = https.createServer(\n          {\n            key,\n            cert\n          },\n          app\n        );\n      }\n\n      server.listen(0, function listening() {\n        testEndpoint = `${base}:${server.address().port}`;\n        done();\n      });\n    });\n\n    after(() => {\n      if (server) server.close();\n    });\n\n    describe('request', () => {\n      it('should give a good response', (done) => {\n        request\n          .get(testEndpoint)\n          .ca(ca)\n          .end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n      });\n\n      it('should reject unauthorized response', () => {\n        return request\n          .get(testEndpoint)\n          .trustLocalhost(false)\n          .then(\n            () => {\n              throw new Error('Allows MITM');\n            },\n            () => {}\n          );\n      });\n\n      it('should not reject unauthorized response', () => {\n        return request\n          .get(testEndpoint)\n          .disableTLSCerts()\n          .then(({ status }) => {\n            assert.strictEqual(status, 200);\n          });\n      });\n\n      it('should trust localhost unauthorized response', () => {\n        return request.get(testEndpoint).trustLocalhost(true);\n      });\n\n      it('should trust overriden localhost unauthorized response', () => {\n        return request\n          .get(`https://example.com:${server.address().port}`)\n          .connect('127.0.0.1')\n          .trustLocalhost();\n      });\n    });\n\n    describe('.agent', () => {\n      it('should be able to make multiple requests without redefining the certificate', (done) => {\n        const agent = request.agent({ ca });\n        agent.get(testEndpoint).end((err, res) => {\n          assert.ifError(err);\n          assert(res.ok);\n          assert.strictEqual('Safe and secure!', res.text);\n          agent.get(url.parse(testEndpoint)).end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n        });\n      });\n    });\n  });\n\n  describe.skip('client certificates', () => {\n    before(function listen(done) {\n      if (process.env.HTTP2_TEST) {\n        server = http2.createSecureServer(\n          {\n            ca,\n            key,\n            cert,\n            requestCert: true,\n            rejectUnauthorized: true\n          },\n          app\n        );\n      } else {\n        server = https.createServer(\n          {\n            ca,\n            key,\n            cert,\n            requestCert: true,\n            rejectUnauthorized: true\n          },\n          app\n        );\n      }\n\n      server.listen(0, function listening() {\n        testEndpoint = `${base}:${server.address().port}`;\n        done();\n      });\n    });\n\n    after(() => {\n      if (server) server.close();\n    });\n\n    describe('request', () => {\n      it('should give a good response with client certificates and CA', (done) => {\n        request\n          .get(testEndpoint)\n          .ca(ca)\n          .key(key)\n          .cert(cert)\n          .end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n      });\n      it('should give a good response with client pfx', (done) => {\n        request\n          .get(testEndpoint)\n          .pfx(pfx)\n          .end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n      });\n      it('should give a good response with client pfx with passphrase', (done) => {\n        request\n          .get(testEndpoint)\n          .pfx({\n            pfx: passpfx,\n            passphrase: 'test'\n          })\n          .end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n      });\n    });\n\n    describe('.agent', () => {\n      it('should be able to make multiple requests without redefining the certificates', (done) => {\n        const agent = request.agent({ ca, key, cert });\n        agent.get(testEndpoint).end((err, res) => {\n          assert.ifError(err);\n          assert(res.ok);\n          assert.strictEqual('Safe and secure!', res.text);\n          agent.get(url.parse(testEndpoint)).end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n        });\n      });\n      it('should be able to make multiple requests without redefining pfx', (done) => {\n        const agent = request.agent({ pfx });\n        agent.get(testEndpoint).end((err, res) => {\n          assert.ifError(err);\n          assert(res.ok);\n          assert.strictEqual('Safe and secure!', res.text);\n          agent.get(url.parse(testEndpoint)).end((err, res) => {\n            assert.ifError(err);\n            assert(res.ok);\n            assert.strictEqual('Safe and secure!', res.text);\n            done();\n          });\n        });\n      });\n    });\n  });\n});\n"b"'use strict';\n\nconst request = require('../support/client');\nconst setup = require('../support/setup');\n\nconst base = setup.uri;\nconst fs = require('fs');\n\nconst img = fs.readFileSync(`${__dirname}/fixtures/test.png`);\n\ndescribe('res.body', () => {\n  describe('image/png', () => {\n    it('should parse the body', (done) => {\n      request.get(`${base}/image`).end((err, res) => {\n        res.type.should.equal('image/png');\n        Buffer.isBuffer(res.body).should.be.true();\n        (res.body.length - img.length).should.equal(0);\n        done();\n      });\n    });\n  });\n  describe('application/octet-stream', () => {\n    it('should parse the body', (done) => {\n      request\n        .get(`${base}/image-as-octets`)\n        .buffer(true) // that's tech debt :(\n        .end((err, res) => {\n          res.type.should.equal('application/octet-stream');\n          Buffer.isBuffer(res.body).should.be.true();\n          (res.body.length - img.length).should.equal(0);\n          done();\n        });\n    });\n  });\n  describe('application/octet-stream', () => {\n    it('should parse the body (using responseType)', (done) => {\n      request\n        .get(`${base}/image-as-octets`)\n        .responseType('blob')\n        .end((err, res) => {\n          res.type.should.equal('application/octet-stream');\n          Buffer.isBuffer(res.body).should.be.true();\n          (res.body.length - img.length).should.equal(0);\n          done();\n        });\n    });\n  });\n});\n"b'// var request = require(\'../support/client\')\n//   , express = require(\'express\')\n//   , assert = require(\'assert\')\n//   , app = express()\n//   , fs = require(\'fs\');\n\n// app.get(\'/\', function(req, res){\n//   res.set(\'Content-Type\', \'multipart/form-data; boundary=awesome\');\n//   // res.write(\'\\r\\n\'); TODO: formidable bug\n//   res.write(\'--awesome\\r\\n\');\n//   res.write(\'Content-Disposition: attachment; name="image"; filename="something.png"\\r\\n\');\n//   res.write(\'Content-Type: image/png\\r\\n\');\n//   res.write(\'\\r\\n\');\n//   res.write(\'some data\');\n//   res.write(\'\\r\\n--awesome\\r\\n\');\n//   res.write(\'Content-Disposition: form-data; name="name"\\r\\n\');\n//   res.write(\'Content-Type: text/plain\\r\\n\');\n//   res.write(\'\\r\\n\');\n//   res.write(\'tobi\');\n//   res.write(\'\\r\\n--awesome--\');\n//   setTimeout(function(){ // TODO: lolnode...\n//     res.end();\n//   }, 1000);\n// });\n\n// var base = \'http://localhost\'\n// var server;\n// before(function listen(done) {\n//   server = app.listen(0, function listening() {\n//     base += \':\' + server.address().port;\n//     done();\n//   });\n// });\n\n// describe(\'request multipart/form-data\', function(){\n//   describe(\'req.body\', function(){\n//     it(\'should be populated with fields\', function(done){\n//       request.get(base, function(err, res){\n//         if (err) return done(err);\n//         res.status.should.equal(200);\n//         res.body.should.eql({ name: \'tobi\' });\n//         res.files.image.name.should.equal(\'something.png\');\n//         res.files.image.type.should.equal(\'image/png\');\n//         assert.equal(null, res.text, \'res.text should be empty for multipart\');\n//         done();\n//       });\n//     })\n//   })\n// })\n'b"'use strict';\nrequire('should');\nrequire('should-http');\n\nconst assert = require('assert');\nconst zlib = require('zlib');\nlet http = require('http');\nconst express = require('../support/express');\nconst request = require('../support/client');\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\nconst app = express();\nconst subject = 'some long long long long string';\n\nlet base = 'http://localhost';\nlet server;\n\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server = server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\napp.get('/binary', (req, res) => {\n  zlib.deflate(subject, (err, buf) => {\n    res.set('Content-Encoding', 'gzip');\n    res.send(buf);\n  });\n});\napp.get('/corrupt', (req, res) => {\n  res.set('Content-Encoding', 'gzip');\n  res.send('blah');\n});\n\napp.get('/nocontent', (req, res, next) => {\n  res.statusCode = 204;\n  res.set('Content-Type', 'text/plain');\n  res.set('Content-Encoding', 'gzip');\n  res.send('');\n});\n\napp.get('/', (req, res, next) => {\n  zlib.deflate(subject, (err, buf) => {\n    res.set('Content-Type', 'text/plain');\n    res.set('Content-Encoding', 'gzip');\n    res.send(buf);\n  });\n});\n\napp.get('/junk', (req, res) => {\n  zlib.deflate(subject, (err, buf) => {\n    res.set('Content-Type', 'text/plain');\n    res.set('Content-Encoding', 'gzip');\n    res.write(buf);\n    res.end(' 0 junk');\n  });\n});\n\napp.get('/chopped', (req, res) => {\n  zlib.deflate(`${subject}123456`, (err, buf) => {\n    res.set('Content-Type', 'text/plain');\n    res.set('Content-Encoding', 'gzip');\n    res.send(buf.slice(0, -1));\n  });\n});\n\ndescribe('zlib', () => {\n  it('should deflate the content', (done) => {\n    request.get(base).end((err, res) => {\n      res.should.have.status(200);\n      res.text.should.equal(subject);\n      res.headers['content-length'].should.be.below(subject.length);\n      done();\n    });\n  });\n\n  it('should protect from zip bombs', (done) => {\n    request\n      .get(base)\n      .buffer(true)\n      .maxResponseSize(1)\n      .end((err, res) => {\n        try {\n          assert.equal('Maximum response size reached', err && err.message);\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n  });\n\n  it('should ignore trailing junk', (done) => {\n    request.get(`${base}/junk`).end((err, res) => {\n      res.should.have.status(200);\n      res.text.should.equal(subject);\n      done();\n    });\n  });\n\n  it('should ignore missing data', (done) => {\n    request.get(`${base}/chopped`).end((err, res) => {\n      assert.equal(undefined, err);\n      res.should.have.status(200);\n      res.text.should.startWith(subject);\n      done();\n    });\n  });\n\n  it('should handle corrupted responses', (done) => {\n    request.get(`${base}/corrupt`).end((err, res) => {\n      assert(err, 'missing error');\n      assert(!res, 'response should not be defined');\n      done();\n    });\n  });\n\n  it('should handle no content with gzip header', (done) => {\n    request.get(`${base}/nocontent`).end((err, res) => {\n      assert.ifError(err);\n      assert(res);\n      res.should.have.status(204);\n      res.text.should.equal('');\n      res.headers.should.not.have.property('content-length');\n      done();\n    });\n  });\n\n  describe('without encoding set', () => {\n    it('should buffer if asked', () => {\n      return request\n        .get(`${base}/binary`)\n        .buffer(true)\n        .then((res) => {\n          res.should.have.status(200);\n          assert(res.headers['content-length']);\n          assert(res.body.byteLength);\n          assert.equal(subject, res.body.toString());\n        });\n    });\n\n    it('should emit buffers', (done) => {\n      request.get(`${base}/binary`).end((err, res) => {\n        res.should.have.status(200);\n        res.headers['content-length'].should.be.below(subject.length);\n\n        res.on('data', (chunk) => {\n          chunk.should.have.length(subject.length);\n        });\n\n        res.on('end', done);\n      });\n    });\n  });\n});\n"b'\'use strict\';\n\nconst request = require(\'../support/client\');\nconst setup = require(\'../support/setup\');\n\nconst base = setup.uri;\nconst assert = require(\'assert\');\nconst fs = require(\'fs\');\n\nfunction read(file) {\n  return fs.readFileSync(file, \'utf8\');\n}\n\ndescribe(\'Multipart\', () => {\n  describe(\'#field(name, value)\', () => {\n    it(\'should set a multipart field value\', () => {\n      const req = request.post(`${base}/echo`);\n\n      req.field(\'user[name]\', \'tobi\');\n      req.field(\'user[age]\', \'2\');\n      req.field(\'user[species]\', \'ferret\');\n\n      return req.then((res) => {\n        res.body[\'user[name]\'].should.equal(\'tobi\');\n        res.body[\'user[age]\'].should.equal(\'2\');\n        res.body[\'user[species]\'].should.equal(\'ferret\');\n      });\n    });\n\n    it(\'should work with file attachments\', () => {\n      const req = request.post(`${base}/echo`);\n\n      req.field(\'name\', \'Tobi\');\n      req.attach(\'document\', \'test/node/fixtures/user.html\');\n      req.field(\'species\', \'ferret\');\n\n      return req.then((res) => {\n        res.body.name.should.equal(\'Tobi\');\n        res.body.species.should.equal(\'ferret\');\n\n        const html = res.files.document;\n        html.name.should.equal(\'user.html\');\n        html.type.should.equal(\'text/html\');\n        read(html.path).should.equal(\'<h1>name</h1>\');\n      });\n    });\n  });\n\n  describe(\'#attach(name, path)\', () => {\n    it(\'should attach a file\', () => {\n      const req = request.post(`${base}/echo`);\n\n      req.attach(\'one\', \'test/node/fixtures/user.html\');\n      req.attach(\'two\', \'test/node/fixtures/user.json\');\n      req.attach(\'three\', \'test/node/fixtures/user.txt\');\n\n      return req.then((res) => {\n        const html = res.files.one;\n        const json = res.files.two;\n        const text = res.files.three;\n\n        html.name.should.equal(\'user.html\');\n        html.type.should.equal(\'text/html\');\n        read(html.path).should.equal(\'<h1>name</h1>\');\n\n        json.name.should.equal(\'user.json\');\n        json.type.should.equal(\'application/json\');\n        read(json.path).should.equal(\'{"name":"tobi"}\');\n\n        text.name.should.equal(\'user.txt\');\n        text.type.should.equal(\'text/plain\');\n        read(text.path).should.equal(\'Tobi\');\n      });\n    });\n\n    describe(\'when a file does not exist\', () => {\n      it(\'should fail the request with an error\', (done) => {\n        const req = request.post(`${base}/echo`);\n\n        req.attach(\'name\', \'foo\');\n        req.attach(\'name2\', \'bar\');\n        req.attach(\'name3\', \'baz\');\n\n        req.end((err, res) => {\n          assert.ok(Boolean(err), \'Request should have failed.\');\n          err.code.should.equal(\'ENOENT\');\n          err.message.should.containEql(\'ENOENT\');\n          err.path.should.equal(\'foo\');\n          done();\n        });\n      });\n\n      it(\'promise should fail\', () => {\n        return request\n          .post(`${base}/echo`)\n          .field({ a: 1, b: 2 })\n          .attach(\'c\', \'does-not-exist.txt\')\n          .then(\n            (res) => assert.fail(\'It should not allow this\'),\n            (err) => {\n              err.code.should.equal(\'ENOENT\');\n              err.path.should.equal(\'does-not-exist.txt\');\n            }\n          );\n      });\n\n      it(\'should report ECONNREFUSED via the callback\', (done) => {\n        request\n          .post(\'http://127.0.0.1:1\') // nobody is listening there\n          .attach(\'name\', \'file-does-not-exist\')\n          .end((err, res) => {\n            assert.ok(Boolean(err), \'Request should have failed\');\n            err.code.should.equal(\'ECONNREFUSED\');\n            done();\n          });\n      });\n      it(\'should report ECONNREFUSED via Promise\', () => {\n        return request\n          .post(\'http://127.0.0.1:1\') // nobody is listening there\n          .attach(\'name\', \'file-does-not-exist\')\n          .then(\n            (res) => assert.fail(\'Request should have failed\'),\n            (err) => err.code.should.equal(\'ECONNREFUSED\')\n          );\n      });\n    });\n  });\n\n  describe(\'#attach(name, path, filename)\', () => {\n    it(\'should use the custom filename\', () =>\n      request\n        .post(`${base}/echo`)\n        .attach(\'document\', \'test/node/fixtures/user.html\', \'doc.html\')\n        .then((res) => {\n          const html = res.files.document;\n          html.name.should.equal(\'doc.html\');\n          html.type.should.equal(\'text/html\');\n          read(html.path).should.equal(\'<h1>name</h1>\');\n        }));\n    it(\'should fire progress event\', (done) => {\n      let loaded = 0;\n      let total = 0;\n      let uploadEventWasFired = false;\n      request\n        .post(`${base}/echo`)\n        .attach(\'document\', \'test/node/fixtures/user.html\')\n        .on(\'progress\', (event) => {\n          total = event.total;\n          loaded = event.loaded;\n          if (event.direction === \'upload\') {\n            uploadEventWasFired = true;\n          }\n        })\n        .end((err, res) => {\n          if (err) return done(err);\n          const html = res.files.document;\n          html.name.should.equal(\'user.html\');\n          html.type.should.equal(\'text/html\');\n          read(html.path).should.equal(\'<h1>name</h1>\');\n          total.should.equal(223);\n          loaded.should.equal(223);\n          uploadEventWasFired.should.equal(true);\n          done();\n        });\n    });\n    it(\'filesystem errors should be caught\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .attach(\'filedata\', \'test/node/fixtures/non-existent-file.ext\')\n        .end((err, res) => {\n          assert.ok(Boolean(err), \'Request should have failed.\');\n          err.code.should.equal(\'ENOENT\');\n          err.path.should.equal(\'test/node/fixtures/non-existent-file.ext\');\n          done();\n        });\n    });\n  });\n\n  describe(\'#field(name, val)\', () => {\n    it(\'should set a multipart field value\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .field(\'first-name\', \'foo\')\n        .field(\'last-name\', \'bar\')\n        .end((err, res) => {\n          if (err) done(err);\n          res.should.be.ok();\n          res.body[\'first-name\'].should.equal(\'foo\');\n          res.body[\'last-name\'].should.equal(\'bar\');\n          done();\n        });\n    });\n  });\n\n  describe(\'#field(object)\', () => {\n    it(\'should set multiple multipart fields\', (done) => {\n      request\n        .post(`${base}/echo`)\n        .field({ \'first-name\': \'foo\', \'last-name\': \'bar\' })\n        .end((err, res) => {\n          if (err) done(err);\n          res.should.be.ok();\n          res.body[\'first-name\'].should.equal(\'foo\');\n          res.body[\'last-name\'].should.equal(\'bar\');\n          done();\n        });\n    });\n  });\n});\n'b"'use strict';\nconst assert = require('assert');\nconst net = require('net');\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nfunction getFreePort(fn) {\n  const server = net.createServer();\n  server.listen(0, () => {\n    const { port } = server.address();\n    server.close(() => {\n      fn(port);\n    });\n  });\n}\n\ndescribe('with network error', () => {\n  before(function (done) {\n    // connecting to a free port\n    // will trigger a connection refused\n    getFreePort((port) => {\n      this.port = port;\n      done();\n    });\n  });\n\n  it('should error', function (done) {\n    request.get(`http://localhost:${this.port}/`).end((err, res) => {\n      assert(err, 'expected an error');\n      done();\n    });\n  });\n});\n"b"'use strict';\nconst request = require('../support/client');\nconst setup = require('../support/setup');\n\nconst base = setup.uri;\n\ndescribe('request', () => {\n  describe('not modified', () => {\n    let ts;\n    it('should start with 200', (done) => {\n      request.get(`${base}/if-mod`).end((err, res) => {\n        res.should.have.status(200);\n        res.text.should.match(/^\\d+$/);\n        ts = Number(res.text);\n        done();\n      });\n    });\n\n    it('should then be 304', (done) => {\n      request\n        .get(`${base}/if-mod`)\n        .set('If-Modified-Since', new Date(ts).toUTCString())\n        .end((err, res) => {\n          res.should.have.status(304);\n          // res.text.should.be.empty\n          done();\n        });\n    });\n  });\n});\n"b'\'use strict\';\nconst assert = require(\'assert\');\nconst request = require(\'../support/client\');\nconst setup = require(\'../support/setup\');\n\nconst base = setup.uri;\nconst doesntWorkInHttp2 = !process.env.HTTP2_TEST;\n\ndescribe(\'req.parse(fn)\', () => {\n  it(\'should take precedence over default parsers\', (done) => {\n    request\n      .get(`${base}/manny`)\n      .parse(request.parse[\'application/json\'])\n      .end((err, res) => {\n        assert(res.ok);\n        assert.equal(\'{"name":"manny"}\', res.text);\n        assert.equal(\'manny\', res.body.name);\n        done();\n      });\n  });\n\n  it(\'should be the only parser\', () =>\n    request\n      .get(`${base}/image`)\n      .buffer(false)\n      .parse((res, fn) => {\n        res.on(\'data\', () => {});\n      })\n      .then((res) => {\n        assert(res.ok);\n        assert.strictEqual(res.text, undefined);\n        res.body.should.eql({});\n      }));\n\n  it(\'should emit error if parser throws\', (done) => {\n    request\n      .get(`${base}/manny`)\n      .parse(() => {\n        throw new Error(\'I am broken\');\n      })\n      .on(\'error\', (err) => {\n        err.message.should.equal(\'I am broken\');\n        done();\n      })\n      .end();\n  });\n\n  it(\'should emit error if parser returns an error\', (done) => {\n    request\n      .get(`${base}/manny`)\n      .parse((res, fn) => {\n        fn(new Error(\'I am broken\'));\n      })\n      .on(\'error\', (err) => {\n        err.message.should.equal(\'I am broken\');\n        done();\n      })\n      .end();\n  });\n\n  if (doesntWorkInHttp2)\n    it(\'should not emit error on chunked json\', (done) => {\n      request.get(`${base}/chunked-json`).end((err) => {\n        assert.ifError(err);\n        done();\n      });\n    });\n\n  if (doesntWorkInHttp2)\n    it(\'should not emit error on aborted chunked json\', (done) => {\n      const req = request.get(`${base}/chunked-json`);\n      req.end((err) => {\n        assert.ifError(err);\n        done();\n      });\n\n      setTimeout(() => {\n        req.abort();\n      }, 50);\n    });\n});\n'b"'use strict';\nconst request = require('../support/client');\nconst setup = require('../support/setup');\n\nconst base = setup.uri;\nconst fs = require('fs');\n\ndescribe('pipe on redirect', () => {\n  const destPath = 'test/node/fixtures/pipe.txt';\n\n  after(function removeTmpfile(done) {\n    fs.unlink(destPath, done);\n  });\n\n  it('should follow Location', (done) => {\n    const stream = fs.createWriteStream(destPath);\n    const redirects = [];\n    const req = request\n      .get(base)\n      .on('redirect', (res) => {\n        redirects.push(res.headers.location);\n      })\n      .connect({\n        inapplicable: 'should be ignored'\n      });\n    stream.on('finish', () => {\n      redirects.should.eql(['/movies', '/movies/all', '/movies/all/0']);\n      fs.readFileSync(destPath, 'utf8').should.eql('first movie page');\n      done();\n    });\n    req.pipe(stream);\n  });\n});\n"b"'use strict';\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nconst app = express();\nconst fs = require('fs');\nconst bodyParser = require('body-parser');\nlet http = require('http');\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\napp.use(bodyParser.json());\n\napp.get('/', (req, res) => {\n  fs.createReadStream('test/node/fixtures/user.json').pipe(res);\n});\n\napp.get('/redirect', (req, res) => {\n  res.set('Location', '/').sendStatus(302);\n});\n\napp.get('/badRedirectNoLocation', (req, res) => {\n  res.set('Location', '').sendStatus(302);\n});\n\napp.post('/', (req, res) => {\n  if (process.env.HTTP2_TEST) {\n    // body-parser does not support http2 yet.\n    // This section can be remove after body-parser supporting http2.\n    res.set('content-type', 'application/json');\n    req.pipe(res);\n  } else {\n    res.send(req.body);\n  }\n});\n\nlet base = 'http://localhost';\nlet server;\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\n\ndescribe('request pipe', () => {\n  const destPath = 'test/node/fixtures/tmp.json';\n\n  after(function removeTmpfile(done) {\n    fs.unlink(destPath, done);\n  });\n\n  it('should act as a writable stream', (done) => {\n    const req = request.post(base);\n    const stream = fs.createReadStream('test/node/fixtures/user.json');\n\n    req.type('json');\n\n    req.on('response', (res) => {\n      res.body.should.eql({ name: 'tobi' });\n      done();\n    });\n\n    stream.pipe(req);\n  });\n\n  it('end() stops piping', (done) => {\n    const stream = fs.createWriteStream(destPath);\n    request.get(base).end((err, res) => {\n      try {\n        res.pipe(stream);\n        return done(new Error('Did not prevent nonsense pipe'));\n      } catch {\n        /* expected error */\n      }\n\n      done();\n    });\n  });\n\n  it('should act as a readable stream', (done) => {\n    const stream = fs.createWriteStream(destPath);\n\n    let responseCalled = false;\n    const req = request.get(base);\n    req.type('json');\n\n    req.on('response', (res) => {\n      res.status.should.eql(200);\n      responseCalled = true;\n    });\n    stream.on('finish', () => {\n      JSON.parse(fs.readFileSync(destPath, 'utf8')).should.eql({\n        name: 'tobi'\n      });\n      responseCalled.should.be.true();\n      done();\n    });\n    req.pipe(stream);\n  });\n\n  it('should follow redirects', (done) => {\n    const stream = fs.createWriteStream(destPath);\n\n    let responseCalled = false;\n    const req = request.get(base + '/redirect');\n    req.type('json');\n\n    req.on('response', (res) => {\n      res.status.should.eql(200);\n      responseCalled = true;\n    });\n    stream.on('finish', () => {\n      JSON.parse(fs.readFileSync(destPath, 'utf8')).should.eql({\n        name: 'tobi'\n      });\n      responseCalled.should.be.true();\n      done();\n    });\n    req.pipe(stream);\n  });\n\n  it('should not throw on bad redirects', (done) => {\n    const stream = fs.createWriteStream(destPath);\n\n    let responseCalled = false;\n    let errorCalled = false;\n    const req = request.get(base + '/badRedirectNoLocation');\n    req.type('json');\n\n    req.on('response', (res) => {\n      responseCalled = true;\n    });\n    req.on('error', (err) => {\n      err.message.should.eql('No location header for redirect');\n      errorCalled = true;\n      stream.end();\n    });\n    stream.on('finish', () => {\n      responseCalled.should.be.false();\n      errorCalled.should.be.true();\n      done();\n    });\n    req.pipe(stream);\n  });\n});\n"b"'use strict';\nlet http = require('http');\nconst assert = require('assert');\nconst fs = require('fs');\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nconst app = express();\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\napp.get('/raw-query', (req, res) => {\n  res.status(200).send(req.url.slice(req.url.indexOf('?') + 1));\n});\n\napp.get('/', (req, res) => {\n  res.status(200).send(req.query);\n});\n\napp.delete('/url', (req, res) => {\n  res.status(200).send(req.url);\n});\n\napp.delete('/', (req, res) => {\n  res.status(200).send(req.query);\n});\n\napp.put('/', (req, res) => {\n  res.status(200).send(req.query);\n});\n\nlet base = 'http://localhost';\nlet server;\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server = server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\n\ndescribe('req.query(String)', () => {\n  // This is no longer true as of qs v3.0.0 (https://github.com/ljharb/qs/commit/0c6f2a6318c94f6226d3cf7fe36094e9685042b6)\n  // it('should supply uri malformed error to the callback')\n\n  it('should support passing in a string', (done) => {\n    request\n      .del(base)\n      .query('name=t%F6bi')\n      .end((err, res) => {\n        res.body.should.eql({ name: 't%F6bi' });\n        done();\n      });\n  });\n\n  it('should work with url query-string and string for query', (done) => {\n    request\n      .del(`${base}/?name=tobi`)\n      .query('age=2%20')\n      .end((err, res) => {\n        res.body.should.eql({ name: 'tobi', age: '2 ' });\n        done();\n      });\n  });\n\n  it('should support compound elements in a string', (done) => {\n    request\n      .del(base)\n      .query('name=t%F6bi&age=2')\n      .end((err, res) => {\n        res.body.should.eql({ name: 't%F6bi', age: '2' });\n        done();\n      });\n  });\n\n  it('should work when called multiple times with a string', (done) => {\n    request\n      .del(base)\n      .query('name=t%F6bi')\n      .query('age=2%F6')\n      .end((err, res) => {\n        res.body.should.eql({ name: 't%F6bi', age: '2%F6' });\n        done();\n      });\n  });\n\n  it('should work with normal `query` object and query string', (done) => {\n    request\n      .del(base)\n      .query('name=t%F6bi')\n      .query({ age: '2' })\n      .end((err, res) => {\n        res.body.should.eql({ name: 't%F6bi', age: '2' });\n        done();\n      });\n  });\n\n  it('should not encode raw backticks, but leave encoded ones as is', () => {\n    return Promise.all([\n      request\n        .get(`${base}/raw-query`)\n        .query('name=`t%60bi`&age`=2')\n        .then((res) => {\n          res.text.should.eql('name=`t%60bi`&age`=2');\n        }),\n\n      request.get(base + '/raw-query?`age%60`=2%60`').then((res) => {\n        res.text.should.eql('`age%60`=2%60`');\n      }),\n\n      request\n        .get(`${base}/raw-query`)\n        .query('name=`t%60bi`')\n        .query('age`=2')\n        .then((res) => {\n          res.text.should.eql('name=`t%60bi`&age`=2');\n        })\n    ]);\n  });\n});\n\ndescribe('req.query(Object)', () => {\n  it('should construct the query-string', (done) => {\n    request\n      .del(base)\n      .query({ name: 'tobi' })\n      .query({ order: 'asc' })\n      .query({ limit: ['1', '2'] })\n      .end((err, res) => {\n        res.body.should.eql({ name: 'tobi', order: 'asc', limit: ['1', '2'] });\n        done();\n      });\n  });\n\n  // See commit message for the reasoning here.\n  it('should encode raw backticks', (done) => {\n    request\n      .get(`${base}/raw-query`)\n      .query({ name: '`tobi`' })\n      .query({ 'orde%60r': null })\n      .query({ '`limit`': ['%602`'] })\n      .end((err, res) => {\n        res.text.should.eql('name=%60tobi%60&orde%2560r&%60limit%60=%25602%60');\n        done();\n      });\n  });\n\n  it('should not error on dates', (done) => {\n    const date = new Date(0);\n\n    request\n      .del(base)\n      .query({ at: date })\n      .end((err, res) => {\n        assert.equal(date.toISOString(), res.body.at);\n        done();\n      });\n  });\n\n  it('should work after setting header fields', (done) => {\n    request\n      .del(base)\n      .set('Foo', 'bar')\n      .set('Bar', 'baz')\n      .query({ name: 'tobi' })\n      .query({ order: 'asc' })\n      .query({ limit: ['1', '2'] })\n      .end((err, res) => {\n        res.body.should.eql({ name: 'tobi', order: 'asc', limit: ['1', '2'] });\n        done();\n      });\n  });\n\n  it('should append to the original query-string', (done) => {\n    request\n      .del(`${base}/?name=tobi`)\n      .query({ order: 'asc' })\n      .end((err, res) => {\n        res.body.should.eql({ name: 'tobi', order: 'asc' });\n        done();\n      });\n  });\n\n  it('should retain the original query-string', (done) => {\n    request.del(`${base}/?name=tobi`).end((err, res) => {\n      res.body.should.eql({ name: 'tobi' });\n      done();\n    });\n  });\n\n  it('should keep only keys with null querystring values', (done) => {\n    request\n      .del(`${base}/url`)\n      .query({ nil: null })\n      .end((err, res) => {\n        res.text.should.equal('/url?nil');\n        done();\n      });\n  });\n\n  it('query-string should be sent on pipe', (done) => {\n    const req = request.put(`${base}/?name=tobi`);\n    const stream = fs.createReadStream('test/node/fixtures/user.json');\n\n    req.on('response', (res) => {\n      res.body.should.eql({ name: 'tobi' });\n      done();\n    });\n\n    stream.pipe(req);\n  });\n});\n"b"'use strict';\nconst assert = require('assert');\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nconst app = express();\nconst app2 = express();\nconst should = require('should');\nlet http = require('http');\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\nlet base = 'http://localhost';\nlet server;\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server = server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\n\nlet base2 = 'http://localhost';\nlet server2;\nbefore(function listen(done) {\n  server2 = http.createServer(app2);\n  server2 = server2.listen(0, function listening() {\n    base2 += `:${server2.address().port}`;\n    done();\n  });\n});\n\napp.all('/test-301', (req, res) => {\n  res.redirect(301, `${base2}/`);\n});\napp.all('/test-302', (req, res) => {\n  res.redirect(302, `${base2}/`);\n});\napp.all('/test-303', (req, res) => {\n  res.redirect(303, `${base2}/`);\n});\napp.all('/test-307', (req, res) => {\n  res.redirect(307, `${base2}/`);\n});\napp.all('/test-308', (req, res) => {\n  res.redirect(308, `${base2}/`);\n});\n\napp2.all('/', (req, res) => {\n  res.send(req.method);\n});\n\ndescribe('request.get', () => {\n  describe('on 301 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.get(`${base}/test-301`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 302 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.get(`${base}/test-302`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 303 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.get(`${base}/test-303`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 307 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.get(`${base}/test-307`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 308 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.get(`${base}/test-308`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n});\n\ndescribe('request.post', () => {\n  describe('on 301 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.post(`${base}/test-301`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 302 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.post(`${base}/test-302`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 303 redirect', () => {\n    it('should follow Location with a GET request', (done) => {\n      const req = request.post(`${base}/test-303`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('GET');\n        done();\n      });\n    });\n  });\n  describe('on 307 redirect', () => {\n    it('should follow Location with a POST request', (done) => {\n      const req = request.post(`${base}/test-307`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('POST');\n        done();\n      });\n    });\n  });\n  describe('on 308 redirect', () => {\n    it('should follow Location with a POST request', (done) => {\n      const req = request.post(`${base}/test-308`).redirects(1);\n      req.end((err, res) => {\n        const headers = req.req.getHeaders\n          ? req.req.getHeaders()\n          : req.req._headers;\n        headers.host.should.eql(`localhost:${server2.address().port}`);\n        res.status.should.eql(200);\n        res.text.should.eql('POST');\n        done();\n      });\n    });\n  });\n});\n"b'\'use strict\';\n\nconst URL = require(\'url\');\nconst assert = require(\'assert\');\nconst setup = require(\'../support/setup\');\nconst request = require(\'../support/client\');\n\nconst base = setup.uri;\n\ndescribe(\'request\', () => {\n  describe(\'on redirect\', () => {\n    it(\'should merge cookies if agent is used\', (done) => {\n      request\n        .agent()\n        .get(`${base}/cookie-redirect`)\n        .set(\'Cookie\', \'orig=1; replaced=not\')\n        .end((err, res) => {\n          try {\n            assert.ifError(err);\n            assert(/orig=1/.test(res.text), \'orig=1/.test\');\n            assert(/replaced=yes/.test(res.text), \'replaced=yes/.test\');\n            assert(/from-redir=1/.test(res.text), \'from-redir=1\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should not merge cookies if agent is not used\', (done) => {\n      request\n        .get(`${base}/cookie-redirect`)\n        .set(\'Cookie\', \'orig=1; replaced=not\')\n        .end((err, res) => {\n          try {\n            assert.ifError(err);\n            assert(/orig=1/.test(res.text), \'/orig=1\');\n            assert(/replaced=not/.test(res.text), \'/replaced=not\');\n            assert(!/replaced=yes/.test(res.text), \'!/replaced=yes\');\n            assert(!/from-redir/.test(res.text), \'!/from-redir\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should have previously set cookie for subsquent requests when agent is used\', (done) => {\n      const agent = request.agent();\n      agent.get(`${base}/set-cookie`).end((err) => {\n        assert.ifError(err);\n        agent\n          .get(`${base}/show-cookies`)\n          .set({ Cookie: \'orig=1\' })\n          .end((err, res) => {\n            try {\n              assert.ifError(err);\n              assert(/orig=1/.test(res.text), \'orig=1/.test\');\n              assert(/persist=123/.test(res.text), \'persist=123\');\n              done();\n            } catch (err_) {\n              done(err_);\n            }\n          });\n      });\n    });\n\n    it(\'should follow Location\', (done) => {\n      const redirects = [];\n\n      request\n        .get(base)\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .end((err, res) => {\n          try {\n            const arr = [\'/movies\', \'/movies/all\', \'/movies/all/0\'];\n            redirects.should.eql(arr);\n            res.text.should.equal(\'first movie page\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should follow Location with IP override\', () => {\n      const redirects = [];\n      const url = URL.parse(base);\n      return request\n        .get(`http://redir.example.com:${url.port || \'80\'}${url.pathname}`)\n        .connect({\n          \'*\': url.hostname\n        })\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .then((res) => {\n          const arr = [\'/movies\', \'/movies/all\', \'/movies/all/0\'];\n          redirects.should.eql(arr);\n          res.text.should.equal(\'first movie page\');\n        });\n    });\n\n    it(\'should follow Location with IP:port override\', () => {\n      const redirects = [];\n      const url = URL.parse(base);\n      return request\n        .get(`http://redir.example.com:9999${url.pathname}`)\n        .connect({\n          \'*\': { host: url.hostname, port: url.port || 80 }\n        })\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .then((res) => {\n          const arr = [\'/movies\', \'/movies/all\', \'/movies/all/0\'];\n          redirects.should.eql(arr);\n          res.text.should.equal(\'first movie page\');\n        });\n    });\n\n    it(\'should not follow on HEAD by default\', () => {\n      const redirects = [];\n\n      return request\n        .head(base)\n        .ok(() => true)\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .then((res) => {\n          redirects.should.eql([]);\n          res.status.should.equal(302);\n        });\n    });\n\n    it(\'should follow on HEAD when redirects are set\', (done) => {\n      const redirects = [];\n\n      request\n        .head(base)\n        .redirects(10)\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .end((err, res) => {\n          try {\n            const arr = [];\n            arr.push(\'/movies\');\n            arr.push(\'/movies/all\');\n            arr.push(\'/movies/all/0\');\n            redirects.should.eql(arr);\n            assert(!res.text);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should remove Content-* fields\', (done) => {\n      request\n        .post(`${base}/header`)\n        .type(\'txt\')\n        .set(\'X-Foo\', \'bar\')\n        .set(\'X-Bar\', \'baz\')\n        .send(\'hey\')\n        .end((err, res) => {\n          try {\n            assert(res.body);\n            res.body.should.have.property(\'x-foo\', \'bar\');\n            res.body.should.have.property(\'x-bar\', \'baz\');\n            res.body.should.not.have.property(\'content-type\');\n            res.body.should.not.have.property(\'content-length\');\n            res.body.should.not.have.property(\'transfer-encoding\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should retain cookies\', (done) => {\n      request\n        .get(`${base}/header`)\n        .set(\'Cookie\', \'foo=bar;\')\n        .end((err, res) => {\n          try {\n            assert(res.body);\n            res.body.should.have.property(\'cookie\', \'foo=bar;\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should not resend query parameters\', (done) => {\n      const redirects = [];\n      const query = [];\n\n      request\n        .get(`${base}/?foo=bar`)\n        .on(\'redirect\', (res) => {\n          query.push(res.headers.query);\n          redirects.push(res.headers.location);\n        })\n        .end((err, res) => {\n          try {\n            const arr = [];\n            arr.push(\'/movies\');\n            arr.push(\'/movies/all\');\n            arr.push(\'/movies/all/0\');\n            redirects.should.eql(arr);\n            res.text.should.equal(\'first movie page\');\n\n            query.should.eql([\'{"foo":"bar"}\', \'{}\', \'{}\']);\n            res.headers.query.should.eql(\'{}\');\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n\n    it(\'should handle no location header\', (done) => {\n      request.get(`${base}/bad-redirect`).end((err, res) => {\n        try {\n          err.message.should.equal(\'No location header for redirect\');\n          done();\n        } catch (err_) {\n          done(err_);\n        }\n      });\n    });\n\n    describe(\'when relative\', () => {\n      it(\'should redirect to a sibling path\', (done) => {\n        const redirects = [];\n\n        request\n          .get(`${base}/relative`)\n          .on(\'redirect\', (res) => {\n            redirects.push(res.headers.location);\n          })\n          .end((err, res) => {\n            try {\n              redirects.should.eql([\'tobi\']);\n              res.text.should.equal(\'tobi\');\n              done();\n            } catch (err_) {\n              done(err_);\n            }\n          });\n      });\n\n      it(\'should redirect to a parent path\', (done) => {\n        const redirects = [];\n\n        request\n          .get(`${base}/relative/sub`)\n          .on(\'redirect\', (res) => {\n            redirects.push(res.headers.location);\n          })\n          .end((err, res) => {\n            try {\n              redirects.should.eql([\'../tobi\']);\n              res.text.should.equal(\'tobi\');\n              done();\n            } catch (err_) {\n              done(err_);\n            }\n          });\n      });\n    });\n  });\n\n  describe(\'req.redirects(n)\', () => {\n    it(\'should alter the default number of redirects to follow\', (done) => {\n      const redirects = [];\n\n      request\n        .get(base)\n        .redirects(2)\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .end((err, res) => {\n          try {\n            const arr = [];\n            assert(res.redirect, \'res.redirect\');\n            arr.push(\'/movies\');\n            arr.push(\'/movies/all\');\n            redirects.should.eql(arr);\n            res.text.should.match(/Moved Temporarily|Found/);\n            done();\n          } catch (err_) {\n            done(err_);\n          }\n        });\n    });\n  });\n\n  describe(\'on POST\', () => {\n    it(\'should redirect as GET\', () => {\n      const redirects = [];\n\n      return request\n        .post(`${base}/movie`)\n        .send({ name: \'Tobi\' })\n        .redirects(2)\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .then((res) => {\n          redirects.should.eql([\'/movies/all/0\']);\n          res.text.should.equal(\'first movie page\');\n        });\n    });\n\n    it(\'using multipart/form-data should redirect as GET\', () => {\n      const redirects = [];\n\n      request\n        .post(`${base}/movie`)\n        .type(\'form\')\n        .field(\'name\', \'Tobi\')\n        .redirects(2)\n        .on(\'redirect\', (res) => {\n          redirects.push(res.headers.location);\n        })\n        .then((res) => {\n          redirects.should.eql([\'/movies/all/0\']);\n          res.text.should.equal(\'first movie page\');\n        });\n    });\n  });\n});\n'b"'use strict';\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nconst app = express();\nconst fs = require('fs');\nlet http = require('http');\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\napp.get('/', (req, res) => {\n  fs.createReadStream('test/node/fixtures/user.json').pipe(res);\n});\n\nlet base = 'http://localhost';\nlet server;\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server = server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\n\ndescribe('response', () => {\n  it('should act as a readable stream', (done) => {\n    const req = request.get(base).buffer(false);\n\n    req.end((err, res) => {\n      if (err) return done(err);\n      let trackEndEvent = 0;\n      let trackCloseEvent = 0;\n\n      res.on('end', () => {\n        trackEndEvent++;\n        trackEndEvent.should.equal(1);\n        if (!process.env.HTTP2_TEST) {\n          trackCloseEvent.should.equal(0); // close should not have been called\n        }\n\n        done();\n      });\n\n      res.on('close', () => {\n        trackCloseEvent++;\n      });\n\n      (() => {\n        res.pause();\n      }).should.not.throw();\n      (() => {\n        res.resume();\n      }).should.not.throw();\n      (() => {\n        res.destroy();\n      }).should.not.throw();\n    });\n  });\n});\n"b'\'use strict\';\n\nconst request = require(\'../support/client\');\nconst setup = require(\'../support/setup\');\n\nconst base = setup.uri;\nconst assert = require(\'assert\');\n\ndescribe(\'req.serialize(fn)\', () => {\n  it(\'should take precedence over default parsers\', (done) => {\n    request\n      .post(`${base}/echo`)\n      .send({ foo: 123 })\n      .serialize((data) => \'{"bar":456}\')\n      .end((err, res) => {\n        assert.ifError(err);\n        assert.equal(\'{"bar":456}\', res.text);\n        assert.equal(456, res.body.bar);\n        done();\n      });\n  });\n});\n'b"'use strict';\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nconst app = express();\nconst http = require('http');\nconst assert = require('assert');\n\ndescribe('request.get().set()', () => {\n  if (process.env.HTTP2_TEST) {\n    return; // request object doesn't look the same\n  }\n\n  let server;\n\n  after(function exitServer() {\n    if (typeof server.close === 'function') {\n      server.close();\n    } else {\n      server.destroy();\n    }\n  });\n\n  it('should set host header after get()', (done) => {\n    app.get('/', (req, res) => {\n      assert.equal(req.hostname, 'example.com');\n      res.end();\n    });\n\n    server = http.createServer(app);\n    server.listen(0, function listening() {\n      request\n        .get(`http://localhost:${server.address().port}`)\n        .set('host', 'example.com')\n        .then(() => {\n          return request\n            .get(`http://example.com:${server.address().port}`)\n            .connect({\n              'example.com': 'localhost',\n              '*': 'fail'\n            });\n        })\n        .then(() => done(), done);\n    });\n  });\n});\n"b"'use strict';\nconst assert = require('assert');\nconst request = require('../support/client');\nconst express = require('../support/express');\n\nconst app = express();\nlet http = require('http');\n\nif (process.env.HTTP2_TEST) {\n  http = require('http2');\n}\n\napp.get('/', (req, res) => {\n  res.status(400).send('invalid json');\n});\n\nlet base = 'http://localhost';\nlet server;\nbefore(function listen(done) {\n  server = http.createServer(app);\n  server = server.listen(0, function listening() {\n    base += `:${server.address().port}`;\n    done();\n  });\n});\n\ndescribe('res.toError()', () => {\n  it('should return an Error', (done) => {\n    request.get(base).end((err, res) => {\n      var err = res.toError();\n      assert.equal(err.status, 400);\n      assert.equal(err.method, 'GET');\n      assert.equal(err.path, '/');\n      assert.equal(err.message, 'cannot GET / (400)');\n      assert.equal(err.text, 'invalid json');\n      done();\n    });\n  });\n});\n"b"'use strict';\nconst assert = require('assert');\n\nlet http = require('http');\nlet https = require('https');\nconst os = require('os');\nconst fs = require('fs');\nconst express = require('../support/express');\nconst request = require('../support/client');\n\nconst app = express();\n\nconst key = fs.readFileSync(`${__dirname}/fixtures/key.pem`);\nconst cert = fs.readFileSync(`${__dirname}/fixtures/cert.pem`);\nconst cacert = fs.readFileSync(`${__dirname}/fixtures/ca.cert.pem`);\nconst httpSockPath = [os.tmpdir(), 'superagent-http.sock'].join('/');\nconst httpsSockPath = [os.tmpdir(), 'superagent-https.sock'].join('/');\nlet httpServer;\nlet httpsServer;\n\nif (process.env.HTTP2_TEST) {\n  http = https = require('http2');\n}\n\napp.get('/', (req, res) => {\n  res.send('root ok!');\n});\n\napp.get('/request/path', (req, res) => {\n  res.send('request path ok!');\n});\n\ndescribe('[unix-sockets] http', () => {\n  if (process.platform === 'win32') {\n    return;\n  }\n\n  before((done) => {\n    if (fs.existsSync(httpSockPath) === true) {\n      // try unlink if sock file exists\n      fs.unlinkSync(httpSockPath);\n    }\n\n    httpServer = http.createServer(app);\n    httpServer.listen(httpSockPath, done);\n  });\n\n  const base = `http+unix://${httpSockPath.replace(/\\//g, '%2F')}`;\n\n  describe('request', () => {\n    it('path: / (root)', (done) => {\n      request.get(`${base}/`).end((err, res) => {\n        assert(res.ok);\n        assert.strictEqual('root ok!', res.text);\n        done();\n      });\n    });\n\n    it('path: /request/path', (done) => {\n      request.get(`${base}/request/path`).end((err, res) => {\n        assert(res.ok);\n        assert.strictEqual('request path ok!', res.text);\n        done();\n      });\n    });\n  });\n\n  after(() => {\n    if (typeof httpServer.close === 'function') {\n      httpServer.close();\n    } else httpServer.destroy();\n  });\n});\n\ndescribe('[unix-sockets] https', () => {\n  if (process.platform === 'win32') {\n    return;\n  }\n\n  before((done) => {\n    if (fs.existsSync(httpsSockPath) === true) {\n      // try unlink if sock file exists\n      fs.unlinkSync(httpsSockPath);\n    }\n\n    if (process.env.HTTP2_TEST) {\n      httpsServer = https.createSecureServer({ key, cert }, app);\n    } else {\n      httpsServer = https.createServer({ key, cert }, app);\n    }\n\n    httpsServer.listen(httpsSockPath, done);\n  });\n\n  const base = `https+unix://${httpsSockPath.replace(/\\//g, '%2F')}`;\n\n  describe('request', () => {\n    it('path: / (root)', (done) => {\n      request\n        .get(`${base}/`)\n        .ca(cacert)\n        .end((err, res) => {\n          assert.ifError(err);\n          assert(res.ok);\n          assert.strictEqual('root ok!', res.text);\n          done();\n        });\n    });\n\n    it('path: /request/path', (done) => {\n      request\n        .get(`${base}/request/path`)\n        .ca(cacert)\n        .end((err, res) => {\n          assert.ifError(err);\n          assert(res.ok);\n          assert.strictEqual('request path ok!', res.text);\n          done();\n        });\n    });\n  });\n\n  after((done) => {\n    httpsServer.close(done);\n  });\n});\n"b"'use strict';\nconst assert = require('assert');\nconst request = require('../support/client');\nconst setup = require('../support/setup');\n\nconst base = setup.uri;\n\ndescribe('req.get()', () => {\n  it('should not set a default user-agent', () =>\n    request.get(`${base}/ua`).then((res) => {\n      assert(res.headers);\n      assert(!res.headers['user-agent']);\n    }));\n});\n"b'\'use strict\';\nconst assert = require(\'assert\');\nconst utils = require(\'../../lib/utils\');\n\ndescribe(\'utils.type(str)\', () => {\n  it(\'should return the mime type\', () => {\n    utils\n      .type(\'application/json; charset=utf-8\')\n      .should.equal(\'application/json\');\n\n    utils.type(\'application/json\').should.equal(\'application/json\');\n  });\n});\n\ndescribe(\'utils.params(str)\', () => {\n  it(\'should return the field parameters\', () => {\n    const obj = utils.params(\'application/json; charset=utf-8; foo  = bar\');\n    obj.charset.should.equal(\'utf-8\');\n    obj.foo.should.equal(\'bar\');\n\n    utils.params(\'application/json\').should.eql({});\n  });\n});\n\ndescribe(\'utils.parseLinks(str)\', () => {\n  it(\'should parse links\', () => {\n    const str =\n      \'<https://api.github.com/repos/visionmedia/mocha/issues?page=2>; rel="next", <https://api.github.com/repos/visionmedia/mocha/issues?page=5>; rel="last"\';\n    const ret = utils.parseLinks(str);\n    ret.next.should.equal(\n      \'https://api.github.com/repos/visionmedia/mocha/issues?page=2\'\n    );\n    ret.last.should.equal(\n      \'https://api.github.com/repos/visionmedia/mocha/issues?page=5\'\n    );\n  });\n});\n'b''b"const request = require('../..');\n\nif (process.env.HTTP2_TEST) {\n  request.http2 = true;\n}\n\nexports = module.exports = request;\n"b'const fs = require(\'fs\');\nlet http = require(\'http\');\nconst multer = require(\'multer\');\nconst bodyParser = require(\'body-parser\');\nconst cookieParser = require(\'cookie-parser\');\nconst basicAuth = require(\'basic-auth-connect\');\nconst express = require(\'./express\');\n\nlet isPseudoHeader;\n\nif (process.env.HTTP2_TEST) {\n  http = require(\'http2\');\n  const {\n    HTTP2_HEADER_AUTHORITY,\n    HTTP2_HEADER_METHOD,\n    HTTP2_HEADER_PATH,\n    HTTP2_HEADER_SCHEME,\n    HTTP2_HEADER_STATUS\n  } = http.constants;\n  isPseudoHeader = function (name) {\n    switch (name) {\n      case HTTP2_HEADER_STATUS: // :status\n      case HTTP2_HEADER_METHOD: // :method\n      case HTTP2_HEADER_PATH: // :path\n      case HTTP2_HEADER_AUTHORITY: // :authority\n      case HTTP2_HEADER_SCHEME: // :scheme\n        return true;\n      default:\n        return false;\n    }\n  };\n}\n\nconst app = express();\n\napp.use((req, res, next) => {\n  res.set(\'Cache-Control\', \'no-cache, no-store\');\n  next();\n});\n\napp.all(\'/url\', (req, res) => {\n  res.send(req.url);\n});\n\napp.all(\'/echo\', (req, res) => {\n  const { headers } = req;\n  if (process.env.HTTP2_TEST) {\n    Object.keys(headers).forEach((name) => {\n      if (isPseudoHeader(name)) {\n        delete headers[name];\n      }\n    });\n  }\n\n  res.writeHead(200, headers);\n  req.pipe(res);\n});\n\nlet uniq = 0;\napp.all(\'/unique\', (req, res) => {\n  res.send(`never the same ${uniq++}`);\n});\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(multer().none());\n\napp.all(\'/formecho\', (req, res) => {\n  if (\n    !/application\\/x-www-form-urlencoded|multipart\\/form-data/.test(\n      req.headers[\'content-type\']\n    )\n  ) {\n    return res.status(400).end(\'wrong type\');\n  }\n\n  res.json(req.body);\n});\n\napp.use(bodyParser.json());\napp.use(cookieParser());\n\napp.use(\'/xdomain\', (req, res, next) => {\n  if (!req.get(\'Origin\')) return next();\n  res.set(\'Access-Control-Allow-Origin\', req.get(\'Origin\'));\n  res.set(\'Access-Control-Allow-Credentials\', \'true\');\n  res.set(\'Access-Control-Allow-Methods\', \'POST\');\n  res.set(\'Access-Control-Allow-Headers\', \'X-Requested-With, Content-Type\');\n  if (req.method == \'OPTIONS\') return res.send(200);\n  next();\n});\n\napp.get(\'/xdomain\', (req, res) => {\n  res.send(\'tobi\');\n});\n\napp.get(\'/login\', (req, res) => {\n  res.status(200).send(\'<form id="login"></form>\');\n});\n\napp.get(\'/json\', (req, res) => {\n  res.status(200).json({ name: \'manny\' });\n});\n\napp.get(\'/json-hal\', (req, res) => {\n  res.set(\'content-type\', \'application/hal+json\');\n  res.send({ name: \'hal 5000\' });\n});\n\napp.get(\'/ok\', (req, res) => {\n  res.send(\'ok\');\n});\n\napp.get(\'/foo\', (req, res) => {\n  res\n    .header(\'Content-Type\', \'application/x-www-form-urlencoded\')\n    .send(\'foo=bar\');\n});\n\napp.get(\'/form-data\', (req, res) => {\n  res.header(\'Content-Type\', \'application/x-www-form-urlencoded\');\n  res.send(\'pet[name]=manny\');\n});\n\napp.post(\'/movie\', (req, res) => {\n  res.redirect(\'/movies/all/0\');\n});\n\napp.get(\'/\', (req, res) => {\n  res.set(\'QUERY\', JSON.stringify(req.query));\n  res.redirect(\'/movies\');\n});\n\napp.get(\'/movies\', (req, res) => {\n  res.set(\'QUERY\', JSON.stringify(req.query));\n  res.redirect(\'/movies/all\');\n});\n\napp.get(\'/movies/all\', (req, res) => {\n  res.set(\'QUERY\', JSON.stringify(req.query));\n  res.redirect(\'/movies/all/0\');\n});\n\napp.get(\'/movies/all/0\', (req, res) => {\n  res.set(\'QUERY\', JSON.stringify(req.query));\n  res.status(200).send(\'first movie page\');\n});\n\napp.get(\'/movies/random\', (req, res) => {\n  res.redirect(\'/movie/4\');\n});\n\napp.get(\'/movie/4\', (req, res) => {\n  setTimeout(() => {\n    res.send(\'not-so-random movie\');\n  }, 1000);\n});\n\napp.get(\'/links\', (req, res) => {\n  res.header(\n    \'Link\',\n    \'<https://api.github.com/repos/visionmedia/mocha/issues?page=2>; rel="next"\'\n  );\n  res.end();\n});\n\napp.get(\'/xml\', (req, res) => {\n  res.type(\'xml\');\n  res.status(200).send(\'<some><xml></xml></some>\');\n});\n\napp.get(\'/custom\', (req, res) => {\n  res.type(\'application/x-custom\');\n  res.status(200).send(\'custom stuff\');\n});\n\napp.put(\'/user/:id\', (req, res) => {\n  res.send(\'updated\');\n});\n\napp.put(\'/user/:id/body\', (req, res) => {\n  res.send(`received ${req.body.user}`);\n});\n\napp.patch(\'/user/:id\', (req, res) => {\n  res.send(\'updated\');\n});\n\napp.post(\'/user/:id/pet\', (req, res) => {\n  res.send(`added pet "${req.body.pet}"`);\n});\n\napp.post(\'/user\', (req, res) => {\n  res.send(\'created\');\n});\n\napp.delete(\'/user/:id\', (req, res) => {\n  res.send(\'deleted\');\n});\n\napp.post(\'/todo/item\', (req, res) => {\n  let buf = \'\';\n  req.on(\'data\', (chunk) => {\n    buf += chunk;\n  });\n  req.on(\'end\', () => {\n    res.send(`added "${buf}"`);\n  });\n});\n\napp.get(\'/delay/const\', (req, res) => {\n  res.redirect(\'/delay/3000\');\n});\n\napp.get(\'/delay/zip\', (req, res) => {\n  res.writeHead(200, {\n    \'Content-Type\': \'text/plain\',\n    \'Content-Encoding\': \'gzip\'\n  });\n  setTimeout(() => {\n    res.end();\n  }, 10000);\n});\n\napp.get(\'/delay/json\', (req, res) => {\n  res.writeHead(200, { \'Content-Type\': \'application/json\' });\n  setTimeout(() => {\n    res.end();\n  }, 10000);\n});\n\nlet slowBodyCallback;\napp.get(\'/delay/slowbody\', (req, res) => {\n  res.writeHead(200, { \'Content-Type\': \'application/octet-stream\' });\n\n  // Send lots of garbage data to overflow all buffers along the way,\n  // so that the browser gets some data before the request is done\n  const initialDataSent = new Promise((resolve) => {\n    res.write(new Buffer.alloc(4000), () => {\n      res.write(new Buffer.alloc(16000));\n      resolve();\n    });\n  });\n\n  // Make sure sending of request body takes over 1s,\n  // so that the test can\'t pass by accident.\n  const minimumTime = new Promise((resolve) => {\n    setTimeout(resolve, 1001);\n  });\n\n  new Promise((resolve) => {\n    // Waiting full 10 seconds for the test would be too annoying,\n    // so the remote callback is a hack to push the test forward\n    slowBodyCallback = resolve;\n    setTimeout(resolve, 10000);\n  })\n    .then(() => Promise.all([initialDataSent, minimumTime]))\n    .then(() => {\n      res.end(\'bye\');\n    });\n});\n\napp.get(\'/delay/slowbody/finish\', (req, res) => {\n  if (slowBodyCallback) slowBodyCallback();\n  res.sendStatus(204);\n});\n\napp.get(\'/delay/:ms\', (req, res) => {\n  const ms = ~~req.params.ms;\n  setTimeout(() => {\n    res.sendStatus(200);\n  }, ms);\n});\n\napp.get(\'/querystring\', (req, res) => {\n  res.send(req.query);\n});\n\napp.get(\'/querystring-in-header\', (req, res) => {\n  res.set(\'query\', JSON.stringify(req.query));\n  res.send();\n});\n\napp.all(\'/echo-header/:field\', (req, res) => {\n  res.send(req.headers[req.params.field]);\n});\n\napp.get(\'/echo-headers\', (req, res) => {\n  res.json(req.headers);\n});\n\napp.post(\'/pet\', (req, res) => {\n  res.send(`added ${req.body.name} the ${req.body.species}`);\n});\n\napp.get(\'/pets\', (req, res) => {\n  res.send([\'tobi\', \'loki\', \'jane\']);\n});\n\napp.get(\'/json-seq\', (req, res) => {\n  res\n    .set(\'content-type\', \'application/json-seq\')\n    .send(\'\\u001E{"id":1}\\n\\u001E{"id":2}\\n\');\n});\n\napp.get(\'/invalid-json\', (req, res) => {\n  res.set(\'content-type\', \'application/json\');\n  // sample invalid json taken from https://github.com/swagger-api/swagger-ui/issues/1354\n  res.send(\n    ")]}\', {\'header\':{\'code\':200,\'text\':\'OK\',\'version\':\'1.0\'},\'data\':\'some data\'}"\n  );\n});\n\napp.get(\'/invalid-json-forbidden\', (req, res) => {\n  res.set(\'content-type\', \'application/json\');\n  res.status(403).send(\'Forbidden\');\n});\n\napp.get(\'/text\', (req, res) => {\n  res.send(\'just some text\');\n});\n\napp.get(\'/basic-auth\', basicAuth(\'tobi\', \'learnboost\'), (req, res) => {\n  res.end(\'you win!\');\n});\n\napp.get(\'/basic-auth/again\', basicAuth(\'tobi\', \'\'), (req, res) => {\n  res.end(\'you win again!\');\n});\n\napp.post(\'/auth\', basicAuth(\'foo\', \'bar\'), (req, res) => {\n  const auth = req.headers.authorization;\n  const parts = auth.split(\' \');\n  const credentials = Buffer.from(parts[1], \'base64\').toString().split(\':\');\n  const user = credentials[0];\n  const pass = credentials[1];\n\n  res.send({ user, pass });\n});\n\napp.get(\'/error\', (req, res) => {\n  res.status(500).send(\'boom\');\n});\n\napp.get(\'/unauthorized\', (req, res) => {\n  res.sendStatus(401);\n});\n\napp.get(\'/bad-request\', (req, res) => {\n  res.sendStatus(400);\n});\n\napp.get(\'/not-acceptable\', (req, res) => {\n  res.sendStatus(406);\n});\n\napp.get(\'/no-content\', (req, res) => {\n  res.sendStatus(204);\n});\n\napp.delete(\'/no-content\', (req, res) => {\n  res.set(\'content-type\', \'application/json\');\n  res.sendStatus(204);\n});\n\napp.post(\'/created\', (req, res) => {\n  res.status(201).send(\'created\');\n});\n\napp.post(\'/unprocessable-entity\', (req, res) => {\n  res.status(422).send(\'unprocessable entity\');\n});\n\napp.get(\'/arraybuffer\', (req, res) => {\n  const content = new ArrayBuffer(1000);\n  res.set(\'Content-Type\', \'application/vnd.superagent\');\n  res.send(content);\n});\n\napp.get(\'/arraybuffer-unauthorized\', (req, res) => {\n  res.set(\'Content-Type\', \'application/json\');\n  res\n    .status(401)\n    .send(\'{"message":"Authorization has been denied for this request."}\');\n});\n\napp.post(\'/empty-body\', bodyParser.text(), (req, res) => {\n  if (typeof req.body === \'object\' && Object.keys(req.body).length === 0) {\n    res.sendStatus(204);\n  } else {\n    res.sendStatus(400);\n  }\n});\n\napp.get(\'/collection-json\', (req, res) => {\n  res.set(\'content-type\', \'application/vnd.collection+json\');\n  res.send({ name: \'chewbacca\' });\n});\n\napp.get(\'/invalid-json\', (req, res) => {\n  res.set(\'content-type\', \'application/json\');\n  // sample invalid json taken from https://github.com/swagger-api/swagger-ui/issues/1354\n  res.send(\n    ")]}\', {\'header\':{\'code\':200,\'text\':\'OK\',\'version\':\'1.0\'},\'data\':\'some data\'}"\n  );\n});\n\napp.options(\'/options/echo/body\', bodyParser.json(), (req, res) => {\n  res.send(req.body);\n});\n\napp.get(\'/cookie-redirect\', (req, res) => {\n  res.set(\'Set-Cookie\', \'replaced=yes\');\n  res.append(\'Set-Cookie\', \'from-redir=1\', true);\n  res.redirect(303, \'/show-cookies\');\n});\n\napp.get(\'/set-cookie\', (req, res) => {\n  res.cookie(\'persist\', \'123\');\n  res.send(\'ok\');\n});\n\napp.get(\'/show-cookies\', (req, res) => {\n  res.set(\'content-type\', \'text/plain\');\n  res.send(req.headers.cookie);\n});\n\napp.put(\'/redirect-303\', (req, res) => {\n  res.redirect(303, \'/reply-method\');\n});\n\napp.put(\'/redirect-307\', (req, res) => {\n  res.redirect(307, \'/reply-method\');\n});\n\napp.put(\'/redirect-308\', (req, res) => {\n  res.redirect(308, \'/reply-method\');\n});\n\napp.all(\'/reply-method\', (req, res) => {\n  res.send(`method=${req.method.toLowerCase()}`);\n});\n\napp.get(\'/tobi\', (req, res) => {\n  res.send(\'tobi\');\n});\n\napp.get(\'/relative\', (req, res) => {\n  res.redirect(\'tobi\');\n});\n\napp.get(\'/relative/sub\', (req, res) => {\n  res.redirect(\'../tobi\');\n});\n\napp.get(\'/header\', (req, res) => {\n  res.redirect(\'/header/2\');\n});\n\napp.post(\'/header\', (req, res) => {\n  res.redirect(\'/header/2\');\n});\n\napp.get(\'/header/2\', (req, res) => {\n  res.send(req.headers);\n});\n\napp.get(\'/bad-redirect\', (req, res) => {\n  res.status(307).end();\n});\n\napp.all(\'/ua\', (req, res) => {\n  const { headers } = req;\n  if (process.env.HTTP2_TEST) {\n    Object.keys(headers).forEach((name) => {\n      if (isPseudoHeader(name)) {\n        delete headers[name];\n      }\n    });\n  }\n\n  res.writeHead(200, headers);\n  req.pipe(res);\n});\n\napp.get(\'/manny\', (req, res) => {\n  res.status(200).json({ name: \'manny\' });\n});\n\nfunction serveImageWithType(res, type) {\n  const img = fs.readFileSync(`${__dirname}/../node/fixtures/test.png`);\n  res.writeHead(200, { \'Content-Type\': type });\n  res.end(img, \'binary\');\n}\n\napp.get(\'/image\', (req, res) => {\n  serveImageWithType(res, \'image/png\');\n});\napp.get(\'/image-as-octets\', (req, res) => {\n  serveImageWithType(res, \'application/octet-stream\');\n});\n\napp.get(\'/chunked-json\', (req, res) => {\n  res.set(\'content-type\', \'application/json\');\n  res.set(\'Transfer-Encoding\', \'chunked\');\n\n  let chunk = 0;\n  const interval = setInterval(() => {\n    chunk++;\n    if (chunk === 1) res.write(`{ "name_${chunk}": "`);\n    if (chunk > 1) res.write(`value_${chunk}", "name_${chunk}": "`);\n    if (chunk === 10) {\n      clearInterval(interval);\n      res.write(`value_${chunk}"}`);\n      res.end();\n    }\n  }, 10);\n});\n\napp.get(\'/if-mod\', (req, res) => {\n  if (req.header(\'if-modified-since\')) {\n    res.status(304).end();\n  } else {\n    res.send(`${Date.now()}`);\n  }\n});\n\nconst called = {};\napp.get(\'/error/ok/:id\', (req, res) => {\n  if (req.query.qs != \'present\') {\n    return res.status(400).end(\'query string lost\');\n  }\n\n  const { id } = req.params;\n  if (!called[id]) {\n    called[id] = true;\n    res.status(500).send(\'boom\');\n  } else {\n    res.send(req.headers);\n    delete called[id];\n  }\n});\n\napp.get(\'/delay/:ms/ok/:id\', (req, res) => {\n  const { id } = req.params;\n  if (!called[id]) {\n    called[id] = true;\n    const ms = ~~req.params.ms;\n    setTimeout(() => {\n      res.sendStatus(200);\n    }, ms);\n  } else {\n    res.send(`ok = ${req.url}`);\n    delete called[id];\n  }\n});\n\napp.get(\'/error/redirect/:id\', (req, res) => {\n  const { id } = req.params;\n  if (!called[id]) {\n    called[id] = true;\n    res.status(500).send(\'boom\');\n  } else {\n    res.redirect(\'/movies\');\n    delete called[id];\n  }\n});\n\napp.get(\'/error/redirect-error:id\', (req, res) => {\n  const { id } = req.params;\n  if (!called[id]) {\n    called[id] = true;\n    res.status(500).send(\'boom\');\n  } else {\n    res.redirect(\'/error\');\n    delete called[id];\n  }\n});\n\nconst server = http.createServer(app);\nserver.listen(process.env.ZUUL_PORT);\n'b"require('should');\nrequire('should-http');\n\nlet NODE = true;\nlet uri = 'http://localhost:5000';\nif (typeof window !== 'undefined') {\n  NODE = false;\n  uri = `//${window.location.host}`;\n} else {\n  process.env.ZUUL_PORT = 5000;\n  require('./server');\n}\n\nexports.NODE = NODE;\nexports.uri = uri;\n"b"module.exports = (res, fn) => {\n  const data = []; // Binary data needs binary storage\n\n  res.on('data', (chunk) => {\n    data.push(chunk);\n  });\n  res.on('end', () => {\n    fn(null, Buffer.concat(data));\n  });\n};\n"b"exports['application/x-www-form-urlencoded'] = require('./urlencoded');\nexports['application/json'] = require('./json');\nexports.text = require('./text');\n\nconst binary = require('./image');\n\nexports['application/octet-stream'] = binary;\nexports['application/pdf'] = binary;\nexports.image = binary;\n"b"module.exports = function (res, fn) {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    let body;\n    let err;\n    try {\n      body = res.text && JSON.parse(res.text);\n    } catch (err_) {\n      err = err_;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = res.text || null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = res.statusCode;\n    } finally {\n      fn(err, body);\n    }\n  });\n};\n"b"module.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('utf8');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', fn);\n};\n"b"/**\n * Module dependencies.\n */\n\nconst qs = require('qs');\n\nmodule.exports = (res, fn) => {\n  res.text = '';\n  res.setEncoding('ascii');\n  res.on('data', (chunk) => {\n    res.text += chunk;\n  });\n  res.on('end', () => {\n    try {\n      fn(null, qs.parse(res.text));\n    } catch (err) {\n      fn(err);\n    }\n  });\n};\n"b'-----BEGIN CERTIFICATE-----\nMIICljCCAX4CCQDnGz3+qH/zGzANBgkqhkiG9w0BAQsFADANMQswCQYDVQQDDAJD\nQTAeFw0xODEyMDIxNjIyMThaFw0zMjA4MTAxNjIyMThaMA0xCzAJBgNVBAMMAkNB\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtgUDcB7R94A22I0D8Iba\nc000ZBINtvnyvoPP5U2hRsxI9tcW/LLm0GhzM5XJJNQ0jSv0ixIFKomtFBSjKMq/\nNH156SqKqyDGU1fPnGjzcJulxceODIokAqNCbZ7Bys6nqUdilNfLQ4bBBWYsEUWT\nvgbUeDRHvQGycou/pLpYGLCJ4tpc4n6ybox1uPi0qlvFI7aWvQFjOxxR0VeRixXf\nqXjVCDIr9OJIWiXLrJYDlYqG2gRF/yTDZ4qmQxbZzJ6AXMpaRUiHUO0FHu7baEux\nylIc0KVcAmYMGdhFlmDrMNRsmnADKPX9DIMh92XWyE10oNK50I1rIhpvN4XfQx6E\nUwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCIXj1vfTVRB4ea/udjazPHaLAeocbg\nd8babbDItOm1ApAoUhNuxPVxyISSFrowCVlaWxB+1ztfeUAB/Axfj0mbXk1hgo2D\n4+rft8hOtdg91bU+gHPd/7QGkpPIs5PC+TsnVj0mNqZ5o8qZsLhgoXp3Dl5yMhEs\nsRegLkmBQHzEsKFU2cSxVD7BXXGLDJxcoR4friGOXdIZeYwqHTZsuR3O7JOVbLew\ndURqD70jPuf9v1tBnkJPbUECMlL7BCw6ZQtglSvjPP/waWir9TMsDk+xwPK8NPbv\nDGi+w++cImBbxcnIMBTk4XtlFcOnCCAYUfkaxZMw2jNhYbjiEZOGUG8m\n-----END CERTIFICATE-----\n'b'-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEAtgUDcB7R94A22I0D8Ibac000ZBINtvnyvoPP5U2hRsxI9tcW\n/LLm0GhzM5XJJNQ0jSv0ixIFKomtFBSjKMq/NH156SqKqyDGU1fPnGjzcJulxceO\nDIokAqNCbZ7Bys6nqUdilNfLQ4bBBWYsEUWTvgbUeDRHvQGycou/pLpYGLCJ4tpc\n4n6ybox1uPi0qlvFI7aWvQFjOxxR0VeRixXfqXjVCDIr9OJIWiXLrJYDlYqG2gRF\n/yTDZ4qmQxbZzJ6AXMpaRUiHUO0FHu7baEuxylIc0KVcAmYMGdhFlmDrMNRsmnAD\nKPX9DIMh92XWyE10oNK50I1rIhpvN4XfQx6EUwIDAQABAoIBAAomAWkQ7tgD2Ar+\n4cdZXXisR02FDCq1iOlCZCb+yw0teqv4lhmEyAW6rSGlKk/ZXQy59KqEWLFkd7f0\n5pvxofOFQ3TSoGSmMSiYbsTjvR78LqP2Wl8snJFhFOUTwu5R01tG1aJC3dxn+P8a\nET7tSC2CJ/qDv7Q0EgT88bR3h03pAc2PJAGWJ2QwutAwV+6Ilyt3hcz29f7JGQac\nDa0jY/7RIpvZL20gsecb/6Q0a50VEbkuJ+OF5QyIQNT9qtfvsqavtsjHgBWs3iFG\nyKaDCey4X7D+NsyJBKNCuDqWXzq/4+mQ3atBIvYq2mcIpIbaku7TEWHvpxfzsT/F\nSzLncMECgYEA4qR1GU38UxZ/8x6Cc4Z3DKUuCLBqvv69IHPcfSkhrtTeApdsv14U\nKE66/Z3g4FXeV018GYUzGODfjBt4VnDCutz9tmiHFH+T2zDpgC7hvODC8rJ+D21b\nG3Q5eyA+XRao1XHjc2UD/Ev6iJPjgCT23Lur2bhAqCKkV4g2EAWCgyMCgYEAzZjY\n5M7Jw+0g5b6ILnFX66JbESrw87OtiIpiQh5XUQssKsmfONzbXUp6ch/MRTFVHVDZ\nXmG35Xyg6vy1FYg9HTALl1tnkh9UIhKrH7jx+6euhc0HyWCCqSp/3CpJqVjdoxtS\nvtZigSaxwTDaOYc8r54cWhHIIrpTrcqY4mxdZRECgYBpGWhv9pkXEqz82d4Wonlc\ndNDXGLA3p7uea/wIUmWbRH07aGr2hzMDyhaue2MHxOoZRAZTc1BRrh4cQ7TXKO00\naDyDNQ/G8q5nC9SMK7FkvDnK//izQLvqDEiHj1k8I8DhUjHulh52BenFIgdyqjGM\nBL9ZdDcPgRkCuliPr25pTwKBgG8rf9QxEJ51oT05Sk+6j+zk7FMbIhDUjjfvg/P2\njgZPgUFdpk/L9H28YPtGwGCFrV1dszu6oQJg4m5N2OjcsxcOPKZKEXXMpOSLraZI\njegiolbNJ7G3Es/AIET/RLdiSu4APzzblYX6U1GARe+ndaQMXY5CYTKOB+NIUmTU\nbafRAoGAV8PptnjWf9ehJvt96Rz0FdfpN7leqdweK2JrGZwJQ9BRcKwUO758lmyN\nnC62Sd0mwHivxRqI6e2u7OSvGj9e7iLnHMl4qYie7VvsWAWmztH2ntEI0iWA3V3N\nM3T9+sz+nslfhWKgIA80EqOWB1AF0EmbmmqK0igWEbYynAr6v0Q=\n-----END RSA PRIVATE KEY-----\n'b'B23299143E26EFC5\n'b'-----BEGIN CERTIFICATE REQUEST-----\nMIICWTCCAUECAQAwFDESMBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG9w0B\nAQEFAAOCAQ8AMIIBCgKCAQEAsjNYMUk1HzBLM4fL/8c6Z86X/b13V1bMXrrcV28w\njmvQv4lADlghZGt/zbinyvZrASp8v1btR9gLaNTdrxxnz5FWu1bY947ljgadudh0\nSTLNs4jWI2wcjgguA8B2rDtvap0bn9JkpjQGcFuqEdJRlr26OwsC5SNCtFxQmTrb\nsneFMWK3JsL1riCrV9Cw0L3joki/YKYTTwRZJ2TXrrHvOLQCIUacwCU4oJg19D0F\nKU/rDtdUFFojnTio0RFU4/OpjxKzwqjSJE80nPSRHAqXtSgmphrRk4ZVeTxKEGKC\noAt/RBwqvxPFjNlbr1EWY9S7SpFu06V35jXJYD9CWD/WcQIDAQABoAAwDQYJKoZI\nhvcNAQELBQADggEBACia2hDAe1YqzVn/P2KSX+/9yDrjOhU20hKF1CTZr3Zfjep9\nR86ldz1aFc2N2yqDjUYpj0+DODEXlEfNaYcD2nn93qgy/gAmfQUvCejBh6vsGiIW\nqc41lzEGHa9/ErxQ7yvETeuY8OozjDAoUs5NUbFL6OmwJFqX9VzLbQ8uQxNU3z3l\nAKVkWBWIubqpSa8tDn/+wf8vW/xtOCZ/Zd5YBQdTCwb5BdS3vpBkwpJbPBvR97Mc\n2d+2a5qyNqZdb1CuATS2MJC35zp62FErhcnnVqtaAcaE/C/in1OO3wLJvXa5/LKp\n1riBUJLHscGbIhe+KjlLoosXuOcUNvBkNbt8MFQ=\n-----END CERTIFICATE REQUEST-----\n'b'-----BEGIN CERTIFICATE-----\nMIICnTCCAYUCCQCyMpkUPibvxTANBgkqhkiG9w0BAQsFADANMQswCQYDVQQDDAJD\nQTAeFw0xODEyMDIxNjIzNTBaFw0zMjA4MTAxNjIzNTBaMBQxEjAQBgNVBAMMCWxv\nY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALIzWDFJNR8w\nSzOHy//HOmfOl/29d1dWzF663FdvMI5r0L+JQA5YIWRrf824p8r2awEqfL9W7UfY\nC2jU3a8cZ8+RVrtW2PeO5Y4GnbnYdEkyzbOI1iNsHI4ILgPAdqw7b2qdG5/SZKY0\nBnBbqhHSUZa9ujsLAuUjQrRcUJk627J3hTFitybC9a4gq1fQsNC946JIv2CmE08E\nWSdk166x7zi0AiFGnMAlOKCYNfQ9BSlP6w7XVBRaI504qNERVOPzqY8Ss8Ko0iRP\nNJz0kRwKl7UoJqYa0ZOGVXk8ShBigqALf0QcKr8TxYzZW69RFmPUu0qRbtOld+Y1\nyWA/Qlg/1nECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAWYlRC8e5flZED/JDP0VG\naNENVwv0bFbbzp1urgQeq1TVBDHGKuMJM9klVMBQiMT9q+nPjEgfynSiLVuY7FWs\nyD/hFjQMLV2cz7tdBY6l+IV1sAtBdX3ZRmmzttaAs4xmFXCLXdTm4KJ5bPcRnRLA\nklMKOsvNY90mRteXvhQy04J2TJVpIld05+yjnYVWoODyX9A/Xda+33qjZECLTnj4\nc5L3mamPZEo4nwY+329d7dNvEu+ETp4UzwkzwPFHSGLD01YEJIu83TTi1WDBZygz\ndxPUkLKYzRkpYVp3hbZsvkCQVtruY/e6DADZTKAlhL41V6VdH35Es0uw7JrbPf7z\njQ==\n-----END CERTIFICATE-----\n'b'0\x82\x08\xe1\x02\x01\x030\x82\x08\xa7\x06\t*\x86H\x86\xf7\r\x01\x07\x01\xa0\x82\x08\x98\x04\x82\x08\x940\x82\x08\x900\x82\x03G\x06\t*\x86H\x86\xf7\r\x01\x07\x06\xa0\x82\x0380\x82\x034\x02\x01\x000\x82\x03-\x06\t*\x86H\x86\xf7\r\x01\x07\x010\x1c\x06\n*\x86H\x86\xf7\r\x01\x0c\x01\x060\x0e\x04\x08(\x95R\xac\xf3\xd6\xdb\xc9\x02\x02\x08\x00\x80\x82\x03\x00*\x97\xd5e\xc8xZ\xea\xa1\x0e\x83\x13\xa5}.\xe6\xe5F|7\xf4\xa5\xccd\xb6\x1d\xd8C\xc9x\xe6\x97)\x16\x0c\xe32\xf8\xba\x0b\xc3\x90\xe1\x12\x8f\xeb\x18f\x9d@\x8aBL\xadA\x1e\xfb{\x98\xc9\x8b\x8b\x9ec\x9a\xa1H\xafE\x11\xc8b\xe5\xa5\x8bb\xbb\xe3-Fk^\xa8\xa8c\xb9\x0b\xf3nCI\xbc\xad\x1e`\x0e\xd0\xa4\xac\xc5\xd4\x8eaE!\xe9}\xfbs\x13]\xe6\\K\xfcAe\x11-\xf6\xfe\x86\x1b\xad\x87\xb8\xdfyH\xc5\xe7(\xc4\xf9\xf3\x90(M6\x96\xd7\x0e\tr\x9d\x06\xac\xaf9I\x1c\'\xc4\xe4\xd1\xce\x96\xcc\x0f%\x13^\xa6\x9eJ\xc5\xbd\x97\x00M\xe3\x1b\xee\xea\x95;\x15\xc3\x1b\x94\xbe\xde\xb8\x8b\xf0\xac\x87\xda\x95\xbf\xe6\xc7\xba\x11\xb40\xa29\xa5\xf2\x07\x08\xac\xfe\x9f\xb8R+wJZ\xbcdx\xf2.u\x83\xa6?\xb3\xed\xfd\x82\xc7\xe7\xc99\xef\nN\x1a\x03a\x07\x88\xbe\xb4\x90+\xb2\x18-\xfd\xee\x87\x9f\xcbGC>\x8e\x0e\xd2YCZ\xbd\x02\xd0PY\x99\xba\x97\xa9\xdc\xd6tQ\xba\x98S\xb9\xac\x86\xa2\x91&\xae\xddR\x90JO\xac\x057\xd2zg7\xa2*\x06I\xf8S\x12lN\xa3:mi\xcc\xdc\x8f\xadT-\xc3\xdad[\x0c\x89p;\xe5\x1d\xa5h\x93\xc0Q7h\xa2\x8b2\xf8\x9fCK\xfa\x8b\xc1\x90y\x80\xf6s\xaa\x86\xad0\x14\xec=\xfa\xf6\x93/\xa9\x1aN\xa7\x14O\xc0\xa72\x1a\x159D\x00\xdf\x12\x8a`\x9c\xe3F\xff\xd1\xbc&X\xee\xc1\xd3\xceb\n*\xeb\xb2kU\\H\xca\xa7\xed\x1c\xf5\xf2\xe9X\xcevp\xb0\x9aX(\x0e\xe3\xdeP\x9c\x18\x92\x91\x04\xd5\x10\xe9\x05X~\xff\xf0\xe8"\x9a\x87\xaf\xd0\xc0\xc9u\xfbjo\xc3\x08E|C\x9d\x05#BWS\t\x82\x8c\x11\xbf\x84\x0f\x1c\xf6A\x87}l\xf6\xe6\xbf|?\xe1\xe5\xc3\x05\xd28|\xc6{\xeca\x1cJ\xb2\x8c\n\xe0Y\xaf3\x9d0\x9fU\xb7\xb4\x02\x98]\xa7\xd6k\xdb\xce\xc0\xda\xfcE\xf6\xbd!\xeb3r\x04\x82\xdfW\xdfk,\xdf}\t\xfd\xb6\x8c:-\xf9Ef\xe2 \x9f2]\xaajK;R8\x9a\xa7\x89`\x8d\x9c\xf7\x1bf\x7fh\xec\xdc\xac\xb4k\xd3v_ObAz\x7f\xad\xa4\x1a\x1b\x0e3\x01}\xa2\x1e\xd4\xbc\xfa\x7f::\x18\xb736[E\xa1\x07Y\x89To\xd5\xbc\x05\xac!n1\x90@Zy\xa4\x0c\x82R\xf0\xe7\xfc\xeb\xd8\x81\x84\x89\xaf\xbd\xa5\x12\xa8\xefZ\x8f\xe6\xdd\xcb\x85\xe41\xbc\xee\xd1%t\x9c\xc9?t\xcd\x94H\x85\x97\xa6\xab\x9b\xc4\xee1\xac\x98\'=\x16Q\xfa\xac,\r\xbbq,p\xd0\x8f\xc6\xd98\xb0>9\xe4\x81\xe9Y(oo( \xdf\',\xe1\x18\xf4\x94Cs\x99\xfbS\x1f9jbfR56\xda?\xd0!h.P\xed04\xd9d\x89\x96+\xeea\xbc\xebV\xf6(\x90\x93\x82\xb7~4\xb5\xa5\xa9\x95\xc8~\x0c\x16\xd80\x15\xbcYu\xb4\xf6!U\x1b\x0fg\x1d+\xaa\x12X\xee\x05\x16\xb7\xedp^\x9b&\xb5\x1cxv\xa4U0\x82\x05A\x06\t*\x86H\x86\xf7\r\x01\x07\x01\xa0\x82\x052\x04\x82\x05.0\x82\x05*0\x82\x05&\x06\x0b*\x86H\x86\xf7\r\x01\x0c\n\x01\x02\xa0\x82\x04\xee0\x82\x04\xea0\x1c\x06\n*\x86H\x86\xf7\r\x01\x0c\x01\x030\x0e\x04\x08$b|N\xc8\x14\xebr\x02\x02\x08\x00\x04\x82\x04\xc8Z>7\xfe-\x0e7\t\x8eY\xffm\x17\xff&\xe7nm\xcfM\t\xde1\xcf\tV[\xb8\x1f\xd7\t\xff\x8f\xc8\xc6\xba\xc6zs\xa3\x87\x89\xcf\xcc\x04\xfe\x9f\xd9KP\xe2j\xe30:J$\x17)>\x01lM\xd9b-\xe0dL@\xbe6X\xb8\x80;\xe0\xefx\xce\x15\xf2\xb1\xf2a\xc4o\x1a\xea\x14_\x93|_\xd9\x13\xbf\x84\x7f\xb7\x14\xd5X\x0f\xf7\x9b\x1b\r\xff\xf8\xc4\x1eB\x19\xe1\xcd\x90(\xad\xcf\xf7\x90\xf5-\xb4\xfe8\xa1\xe6a\xa9Z\xf7\xce\xb7\x02\x04\xe8\x11\xa09\x0b\xc5`\xd8\xe3U\xef\n\x03Z \xa2\xf9r\x1a\x94\xa3\x14\xe2\x80!\x92\r\xc7\xee\xbb\x10\xc0\xf1K\xbe\x02N\x1bJH\x03\xfd\xdc\xd1*C,l\xaa\xc6\x18\x97\x9e\x12\xb6f\x8c\xbb473\xe1\xe7"\xb9\x1a7_\x0f\x0fE\xf9X\x86\x14\x93\xe7\x8a\xa4\xab\xd6\xf9\x13g\x00*F\xa5|2\xf4e\xff\x01Z\x06J\xc3.\xa3\x9bS{#x\xde!F\x92\xc8@\x07\xa7\x05_\xc3B\xbc\xd3\xad\xb8iN\xb0\x9b\xe5m\xbb\xe1`\x8c%*]\xd0O\x01L\xb1D\xdc\xa3&\xd8c\xba>\x98J\xae\xf0\xe2\xc4.\xd3tz\xa0\\ug\xfb\xc0d\xbf\xcfG\x97v\xb2\xc5\xb1\xd7e\xfb\xfd\xeb:\r\x19\xb0\x87\n\xbe%\xbd\x87\xee\x06b}t\xc9\xf4\xa7\xcbZ\xe6\x92\xb1\x94\n[:\xf9\x0f\xc6\x01\xc0\x98\xd0\x86m\xc8E\x0b\xb6i\'r3\xb6\xfd\xe1H\x1a\xa3\x88=J?\x11\xc6\xbf~9(\xfa\xfdeG5\xf6v\xbe\xe9\x14VE*\x9d\xd23\xb6A0\xf5]\x8cB\x8b?\xc7\xa6\x8a\x01\xaf\x9fR\x0em\xab\x07GL\x12r+(\x89\xf9\xb95\x8d\xbc\'\x96e(\x9b\x02\x1e\x13\xdf\x8c\xbf\xbcg\xb3\xd9W\xfb\x1d\xcf?\x19\xf9K]w~\x07\xd8\x19\x8e\x86|&\x10\x83\x92\x08*\x9fFJ\x04b\t\xbd\xf2\x84\x010\xdd\x88\x1f2\x1a!\x16\x94!\xa2\x06\xa4\xceZ1 z\xf8f\x18\x07\xc7\xb5\x90\xfbm#\x94\xca\x0b\xdau\xed\xd4\xca\xe7\xc0<\tduF\xf2\x9c\xb7\xa1@\x0c$\x0e\x9f\xb1\x11\x91\x95\x082\xd53{\xad\xf0\x93\x8a\xef\x06_^_\xdf\x95\xcaaMc\xa5\xc3\x8db.2\x81\x08\x83t5p\xc9\x01Q\xe0\x82\x04c\xaa[nO\xe3\xc6s\xb5\xbf\xe7\xc0\x84~\xa9\xce\x87\x01?IB\xb8\xd5\\c\x1cf\xac\xb3tL\xa9\xc4J\xd7\xef*\xfb\xde=%]N\x81i\x00 b\xd9\x0c\xfcY\xbe\x1f\xae\xbe\x98\x05\x15\xcd\xe0H\xf1:\xeb\x19\xf1C<\xcc\xd0A\x1c\xc6\xfd\x96\x10\xe7\x12:\r\x17\x9f\xb6\x86\x1fjLf\xea\xb73C\x07\xca\xbdT\x97\xae\x87%pB\x15\xed\xf2\xdb\x0e\xe7\xac\xb3\xd2{\x96\x85\xa6^\x0c\xca+tz\x7f\x8b\xe8D\xae)\xe3w\x02\x7f;"\xbc\x0e*>|\x13\xf4\xe86\x0e\x17 4b\xab\xa3VNA\xef\x07\x08\x14\xf9\xe5\xa7\xac\x15\x8a-\xba\xed3\xb8\x10B\xef\x95\x94\x86\xfb\xc0\x10\x9d\xb2\x89\x02;\xf3S\x14\x80\xb3\x03\x00\xe3w\xf9\x152\'d\xcc\xb2\xc4\xee%L-$\x15E\x17#E\x1f|\xa2TJ\xf4O\xd0\xdd\x0f\x14\xf2\xdc\x05\xf4\x9b\xe3\xe0Y\x96\xe4y\xed\xba.\xf8\x19\x9d9\x80\xe8\xfey\x98\xa9jY\xeb\xe3\x9eAnp\xbd\x16\xa0\x0c\xf7\xa8,\xaa\x9dS\xa2m\x9cH\xc1\xd6W\xca\x0fj\xc1\r\xae\xd8]\xae\xef~\x8b%\xd9\x1d\xf8G\xad\xd4/8\x83SJF\x14\xbb\xe4\xa9yI\x9d\x03\x95wA\xdfs\xdb\x10"\x0e\x0c*\xff\x05\xda0\xc1\x04\xd4T\xf0\xc8H]\xd6\xec\xcb~\x96m>I\xaaqZ\xefby\xd8\xa8\x18\x9d\xd7\xf2:\xb9\xf9\xc5\x0fL\xcb^\x97\n&bwR \xef\xef\xb2Qdq*\xdal\xfaa\xaa\xbc}x\xda\xc4V;\x02\x86&$\xfc\xea\xb8!\xe5l\xd9\x80B\x0c\x18^\'\x19$\xe5o\xe7Fe\x8b\xf7\xbf\x1d\xaa+I|\xbb\xdd\xa0\xa2\x82JM\xb0r\n?\xdf\x04\xfb\x1f\x12J_N&\xf6\xf5Za\xad\xbe\xac\x98\xe7\xacg\xcb\t\x98\x1c\x1f\x9b\x05v\xb1\xb9cq\xd9\xb32\xc17/\xb5\xac\xcf\xf6\xef\x19\xf3\xf8\x1cf}\xea\xcd\x0c"\x13\xb3\xad\xa0\x02\xf4]\x0c\xaf^"&\xf5\xef\xdd{1cT\xab|\xc1I\x86\xfa\xa8>\x7f\xc2\x8f\xaai\xfdCO\xc6!.\xf5L\x9f\x0c\xb5\n\xe3\x88\xbd`\xa3\rGkm@!\x0f\x10\xe8\x05<I\r1V\x1fi\x95\x87\x90 ^\x96\x04pV\x8a\x98^mJ\x82\xf9\xca[\xc9\xab1Zg\xbb\xf2\xa6\'\xf1\x08\x17\x18\x89\xb8b\xcb\xc7\xda:io\n9\x80\xcc\xcd,\xb7\xd3\x05"8\xd3w\xe3\xaa/\xfdjW\x1d5tF\xd0\x90\xd1\x19\xeb\x1f\xd3\xdas\x84\xa2\x7f\xc97\x07\xac\x16\xf6\xf3Tg[Q\x1a\xff\x90]\xc2\xc1\x8a\xb4\xcb\xd7\xfc\x91igC\x99*\x83\x93m\xe7\x1f\xf8\xb5T\xcb{%^S\xbb``1%0#\x06\t*\x86H\x86\xf7\r\x01\t\x151\x16\x04\x14\xcd\x1f\x887$)e\x89\x96\xe3\x7fj\xe9\x8e\x0f5\xe1\xd9\xday010!0\t\x06\x05+\x0e\x03\x02\x1a\x05\x00\x04\x14y\x80\xd9I6V\x1c\x03\xf1q\xb5\xa4\xf9\x1f7\x81\xa0A\x1d\xaa\x04\x08\xc5\xbf\xa2\x9a\x8f\xef\xad\xc0\x02\x02\x08\x00'b'-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAsjNYMUk1HzBLM4fL/8c6Z86X/b13V1bMXrrcV28wjmvQv4lA\nDlghZGt/zbinyvZrASp8v1btR9gLaNTdrxxnz5FWu1bY947ljgadudh0STLNs4jW\nI2wcjgguA8B2rDtvap0bn9JkpjQGcFuqEdJRlr26OwsC5SNCtFxQmTrbsneFMWK3\nJsL1riCrV9Cw0L3joki/YKYTTwRZJ2TXrrHvOLQCIUacwCU4oJg19D0FKU/rDtdU\nFFojnTio0RFU4/OpjxKzwqjSJE80nPSRHAqXtSgmphrRk4ZVeTxKEGKCoAt/RBwq\nvxPFjNlbr1EWY9S7SpFu06V35jXJYD9CWD/WcQIDAQABAoIBAGvpieO2yHONpEyd\nVJ0dAbJxOjuPa+C5EGPhVqOgEtB8W9pRfDfziK0uKCPlSb8wAFahaw/XzTMvkqE2\nHtT3J6pcAiDKk/M+VqbuPL+ZY7ocCNNK7xpeUuBz9aGSAIuGJo9yepMLLqYzZR7P\nc6r9KSlW1ZsBrQwjkTZ1nN1d9kMY+SBpW4PY3lfA69dfPDQ6hsbg+7e37MkP2ygP\nLL3H+oljAZJiRSWu7+F2FwTUkNom9va6aKr2FuUgr7pd9PnBoDIEyEWu1sF6nJ85\nvVbGRCCkvub+D55U6Q7PsscOY8lc6Z3JaQA7sv8alSHR+q9AOEvkc4uc2V4J9LOa\nZlZzOD0CgYEA1nYxoHe1hNIKHRjY38wSbyfPAKZ9tzrPLq44JBe+9MoMN+pOLA9N\nSVorLz9OHl8A4gCMeLgXrX06ECHor1dbC90k+jiU0taOdcADs0BwAbWrgMyiOsjJ\nRbwTRUTsAuLLldTBf4sFysCyG0SYCqFL7hJJh2HJKOg428V8b0sfaV8CgYEA1Lcw\neEc11R80Huv5yV8WeYu+uqBo38P1qoC+zlpa7PRw9GX4Ovi20hwkqWNlOyho0TJa\nx9HLl87WW/p7pjCM6kcBdHOn0eqHgoUYknYbsVyK0o2P5ajMldOkRu03lqjNuB9/\nQ4BYp8Sqwyv/aTGMNDa/TlX8S+3Lk8WIkhBPQi8CgYEAm6xoEadTp/ofRUfIBYvI\nxc8Lv9ka4GpcAfKM5gYmouIXRG9cFzd0To6ZUk6NkhY8OdFUJjzbUx/XieZTVRQA\nDviT4t43iWQdPPQIu5FGvLb2qyPfjvQ4xdnj0yBYgS/HwBcT7lUn+yktIAYGp5C1\n4TZ9ETy2HG+U9lLAJLlPL9kCgYA+N6rMs39ya+MR3FG+bbqkKJTL/5lNQgL8MRYe\nQ11vC3xyb9TwYskOob6zcOguKn6mGcVlxt5287/NPXGnRXIiIEyzpBSFGMU0DvwF\n8tfcw8WzGkbplLrqY/Ib8Myem5c4cLYHp2XHBIYx+g+F1EE/EHhaUFowV0iBW3i7\nyFt2bwKBgG1EycLZ5EMXtitMNdPigRR7UJnNAPSreYrSrFSKYrR6tAHhsAf/uiK/\nWf3hXJvIwRrJOJc29juCi3r8i5xhcoRN7kdd1dOXzEX4azn6PCi27b7wDN20w/Wv\nQeeV1QQ0x1ok7AHWLBEZLuYFaded0UnGrDwtwKQ9wg8oH98n8jkR\n-----END RSA PRIVATE KEY-----\n'b'0\x82\x08\xe1\x02\x01\x030\x82\x08\xa7\x06\t*\x86H\x86\xf7\r\x01\x07\x01\xa0\x82\x08\x98\x04\x82\x08\x940\x82\x08\x900\x82\x03G\x06\t*\x86H\x86\xf7\r\x01\x07\x06\xa0\x82\x0380\x82\x034\x02\x01\x000\x82\x03-\x06\t*\x86H\x86\xf7\r\x01\x07\x010\x1c\x06\n*\x86H\x86\xf7\r\x01\x0c\x01\x060\x0e\x04\x08\xd8aQ\xde\x8a\xdd\'\xb1\x02\x02\x08\x00\x80\x82\x03\x00A\xd9\x85\xfbQ\xc9\x9d\xc7h\xca\xed\x8a=+\xea\t\rt\x8a\\^\xf0d"\xd9k\x0cJ\x14\xb9y\x9e\x87\t\x90#\xf9\xd2\xd2\xbeak\x07\xbf\x83T\xce\xb4\x81\x12\xca\xb5\x83\xb5\x05\x03\x9b\xe4\x9d\xf0\xa2\xdeP:S/\xcb\xe5\xe9r\x0c\xd30\xc5\x89t#\x9c\xba\xba\xa1$\xde\xc0\x8e\x9cX\xb2a\x9b\r\x08\x8cX^\x1f{\x156go\xa9\xc2\x11JW\x0fa\xb5m(\xfd\xdb\xb8o0\x86\x04\x85\xaa\x16\xc0|\xf2\x8a_YT@\xa4)\xb1\\\xd36\x17\x05\xd6O\x08\x06\x02N\x84OBc\x86l#\r\xcc\xb0*\xcfQ\xf5\x847\xa5g\x9b\xabn\x0f\xcb\xbfs\xd7\xb0c,}\x93K%\xf65]\x83\xe8\xba3\x94\xfc.\xe05\x87\xea\x1b\xb3\xeb\xbcSm\xc3z\xe6\xa4\x83I\xd2\xc3\xd8\xcd>\x8b\xae\xf8\xee\x9a\xdf\x7f\x91Qh0\xb38\xd0\x9e\x1f\x99!\xfd1U\x10\xaf\xb3r\xc2\xd2\xd0\xf6!\xe6\xd4\x8c\x80\xd5\x16\xc3\\\x05\xe8\x85\xd1\x1a./\xed\xaa\x17\xc8A\x91\xa2\xaf\xdb\x9a\x93rXo\x80\x8e\x84\xeb\x9cV\t\x0f\xf4\\B\xeb\xa4\xc4\xdeN].\xa5\x9b\xf94\xee\x0eJ\xf2\xe6\xc3\xea\xdc\x1a\xb9\x83\xdd\xb7\xed\xc9z@\xa02\x9c\x0b\x1e\x0fk-\x13o\xe3\xb2\x94\x9cESP6\xb7\xfaWyD\x9d\xec\xaf3$\x86\xc2N\xf7\x8aM\xcf\xadF\x0b|x\xfa\xb1\x01=c\x00\xe1S\xca\x87\xf03H\xa74ZN.n\xcc\xbd\xde?P\xa6\xef\x11U\xdc\xdcwUZ\xf6R\xd9\xadp\xf6\xe3\xb0\xed\xcdP\x06Z\x00L\xa0+u\x8d/\xbd*\xd6\x8df\xd5\x8d<\xd6\xb4\xcbd\x08\xe8&>\xa8L\x13\xb4\x04\x97w\x1f>\xa3\x83\x058l\xe0\xd9\r!\xed\x9b\x90\xdc8\xc797\xf5 \x9bU\xca<\x8b[\'u\x12Wm\xde\x15p\x14\xac\x19\x7fU\x1d\x7f\xe4\xf7\xcd\x87XpS[\xd2-\xfb\x16\xff\xb5Q.\xdbL\xc4g\xbfi\x8b\xbbI{\x95\x0b\x1bf\xa9\xda\x9d\xa6p\x7fLx\xd8\x9a\xb1\xddc\xe1C\xb5\xd2\xdc\xd0\x04\xce\xe0(\x86\x15\xb8f\xe0\xd8\xe6\xbb(\xe8a\x1eL)4Y\xca\xe9\x94\x9b\xdb\xd6! \xe5\x9d\xa6%\x08:\x93\x12)\xc44\x0b\x85\x99t)\xcd\xd3\x05\xa5\xb7\x9ei\x87\xb09\xefp\xf5\x19VJ\x9b\xa2\x99\x9b\xab\x8fV\x1b\xdc\x8a\xa3\xaf\xbfG\xb6d\x9b\\E]\x8a%\x0f\xb7{\xb9U\x83\xe9Qj}\x0cq\x17[\x03\xf8JZ6\x9d\x8a\xaf\x0b\xd4\xb1\xf0Ia\xc3\xfat\xcc\x00{\xb2\xe6\xb8k\xf8\xf7\x1f\xc8H\xcc\xde\x13\x0c\xca_\x01a\x1bh\xc0\xac\xf7\xc0\x1d{\xf6H\x88zU\xf7S\xaf^\x102N,\xefjrR)~\xe0\xe9\x80\x9a\x00\n\x9b\xa8\xcc\xe9F\t\xc9C\xd4\x97\xe7\x8a\x13\xf62\xb0\xeaT$D\x0c\xeeLZ\xd6\xac\x01\x1eQ\x91\xc4L\xcf\x9a\xdb\xb55\xb9\xc2\x1a\xa82\x00\x9a\x8b\xa0K\xa0\xbcX\x9f>\xbfy?\xe0\xbd\xef={\xbef\xd7\x03\x80\xfa(@\xdf\x19uc\x96\x98\xfb\xe5\xd5jd\x8d\x80oX\x93\xff)\x1bd\xa4\x920\x82\x05A\x06\t*\x86H\x86\xf7\r\x01\x07\x01\xa0\x82\x052\x04\x82\x05.0\x82\x05*0\x82\x05&\x06\x0b*\x86H\x86\xf7\r\x01\x0c\n\x01\x02\xa0\x82\x04\xee0\x82\x04\xea0\x1c\x06\n*\x86H\x86\xf7\r\x01\x0c\x01\x030\x0e\x04\x08\xc7\x85\x88u\x99\xe8\xa1\xba\x02\x02\x08\x00\x04\x82\x04\xc8\x86\xb2\x81\xb3E\xde"\xfb\xa4K<b\xbb\x8c\xb8\xf4}\xe9\x96a\x12\x07\xc5\xf9f\xacST\xf1\x1b.\x98d\xe3\xc8M\xa1\xfc$\xb8\xc4\xa0\xed\x9c\xb9Z8Z\xd6\xc8\x92=\xf6\xba\x97\xb6-W\nE>\xbb\xefK\xd3\xe4\\\xf9(\xff\xb1\xeb\xa7\x93\xb9\t;\x8d\xf7(\x9dr|\xbf\x92\x9c:!\x07\x01\x19\x9f\xdb\xb9\xf9\xdc\xd5*q9\x19f\x0fI\xa6Y\x9f\x0c\x9d\\\xd7\x96\x93\x87\xab\'<Z\x87b03%w\xd6\xdd&wf\x06!\xd0\xc6\xb4\xab9\x99;Z*\xa9\xaa@\xd8\x9e\xd81{\xa4\x99\xc8\x97\xd1h\xe7(\x90\x85C\x1dRHX\xcf\x90\xc1\xecX\x03\x9e\xff.\x92\x9e>9P\xd3\xfe\x98v\x96\xa2\xf3\xf6y\x13\x10\xc9J\xfd+o;\xe9\x80\xe8\xf3\x87\x1c\xeaeb\'k\xd5\xcau\xb4*MdJ\xdb\x80Z}\'\xf5\xdbW\xfc\x9a\xe8\xbd+\x1f+\xc4<?\xba\x13Qn\x07\xed\x9b\xa5K\x85jz\xbew*\xddwP\x9e\x92\x1f\x03\xc2\xef\x1d\xe8\x16}p\x01I,\xdd\x9f\xf7$\xca]u\xba\xb6\xd5\xf5h\x93x\xc3\xe4p\xdf\xea\xbf\xf8\x17\x98\x1d\xe5\xbaT\xd2\xf0\xb4Vf\xde\x9e\xec\xc3\xd1W\xa4\xc0\x03 \x8c\x1d\xfa\n\x88\xa9\x8c\x0c\x0c%\xb7H1\x03\xbf\xeau;\x94\xde\r@D4^\x8e\x14\xdfX\x0cO\xa7Q\x1d\x14g\x92o2\xeb\xeb\xe2\xa8\xffN\x84\x00\x186o\xa8;\x08\x99\x15\xfe\x0c$cR\xb6n/Efq})\xed\ns\xd7\x92\xef\xc6\xe4\x7f_\xdb\xfd\x93\xa5\xa6\x14\xf8\x99\x9c\x99a\xeb>r\xcaO_3\x1cs\xe0\xae%\x8aY\xf3\xb9\r\xb8\x9a\x05\xe6,\x95\xc3\x04\x8eA\xd7\xa9\'\x9e\xcd\x8aY!\xa2b^^\x96Y\x16T)\xb6\x16\x0fc[\xab\xfdUS(P\xa2\xdb\xa8b\x17QV\x86wwBz}\xf2\x80-\xdd\xc9\xdf\x88\xfc\xa6\xb9\xf6\xd8\xaf<\x8b\xce\x93\xf0\x0f\xfaa\xcd\xb4\r\xcf3c]\xe9\xd7\x03\x0c\'\xaf\x81u\x01\xf05\x9c\x16\xf1(n\t4\xec\xd7\xed R\x1f\x88\x11\xf8\x80\x81m\xf4\xedcq\x95\x86\xf1\xfd\x00*,%\xe3<ivj\xb8\xbd`\xfe\x14\xa5|k\xcf\xa1\x95\x8fRw\xf2\x89\xd8;D\xad\xc2"\x8bK\xfb*\x12Y\n\xa5\xa5\x0f\xd7u\x9e@#\xe2\x83\xc8m\xfc\x18U`\x0b\x87\x93\x87\xaf\xed\x84\t\xfa@\xf1\xc0\xf6;h\xdf\xeb\xf8(QL:\xe4\xbe\xc7%nr}\x95\xc4\x8d\xe3~\xc7}f\xe0\xab4mr\x99\x80\x19s\xcf\xa6\xa6\xb4\xd2\x9f\xe8\x9e\xaf*\x19\xfd\x87\xf7\x0b\xda\xe9\x19\x8a\xf2\xe9\xf0(0\r\x9a\xf83\x01=5\x9elE\x0e\xf5 R\xe0\xc8\x94X\xe7\x03)\xdbo\x00\xea,v\x11kT;7\xe1]\xa1\xc6\xd5;\x02\xb5\x99\xed\x01\x1bb\xe6\x0bT9\xf9kR\xa7\xc4\xbf\x93\x16\xe8\x0c\x94\x10\x04g\xb4\xdcB}I\xc5\xd6\xc3_\xa14\xf2\n\x01\x0eq\x87k\xc4\xed=V\xa4\xec\xc5\\\x97\x86\xbfZ\xa3\x02\x17\xd0\x8d\xc0\x95\xc21\xe3\xddz\x8c\xca=\x82+\xfc\xb0\x8d9>\x8b\xb2\xd5\xf0*l9n\'H\xa0o\xdb\x9e<\xd3\xf5P\xa8\x81\xb8j\x08b\x8e\xf6\xaa(\\a\xbf\xc5\xfe\n@T\x830\xb49\x02\x85^\xcd\x19Qw]\xdd:<\xafLMcR\xcdG\x95\xa2m\\\xfa\xfd\xbb\x9c\x98\x12\x92\xb9\x1aN\xc1\xf9\x9d4C\xf3\xdep\xd4,\xf6\x88\xd4\xb6z6h\xc3\xe2\xe4\t\r\x86Y\xa08\xa5\xc3\xb6CQ*\xb7\x12H\xc9\x89\x86\xba\x9c\xba\xa7cj.,\xf9l\x7f\x9f3\x8038W\x0f\x90\xaau\xf4\xad\x86\xfb\xfdT>\x8ev\x0b\xbb<g\xb7\x8f\xa0j8:\xebx\x02}"\xa7;\x89]\x13\xfe\x8a\x8b\xd1\x11\x86\x98\xef\xb2\x9e\x8b"\xbb2\xcfg\xde\xc4\x9d7TT.8.\x18qH`%\xab2\xe4\x8a\x03u\xcf\xb6\x88\xed\x91\x07\xba\xe2\xf9\xed/\xf4T\xbb\xe4\xcad\xc1\xab\xad\xbfdm\xad\xc95\xe9A\x06_(\xaf6*pQ\x89\x85\x86\xd1)\xce\x07F\xf9y\xf0\xd2\x93\xd4V\xb3\xd0\xea\x96\xf9\x05E\xa3:\xe8\xe9\xe5XG\xa6 \xb7\xa2\xaa\xfc.\xb8\xac\x142\xe7b\x9cy\xb5\x7f\xa9\xa5&\'\x03\xb0j\x8d-\xbbc\xf9\x06\x10Q\xcf\xdf\\\x1e\xf8\xcdlB\xf2\xa0\x83\xc2\xad\x0f\x14>\xe8K\xc1yF\x9e\x83\x9b~\xad\x95\xe6CnM\x91[\xdc\xf3k\x04r\xf2W\xd4$\xe4F4d\xad\x19r\xc1\xf5\xe6\x92\xf6Z\xb7+\x80\xc0W\x06\xe5\x995H@Wo\xcei\xcc\xabn\x93\x17\xe8\xac\xbf\xc7\x8f\xea\xd4{\xfbQh\x07\xd9l`\xdc\xc2C\xb2\xee\xdd@\xaf\xcf\x8ex\xb8\x97H\xfe\xbc\xca\x14\t?\xc3o\xb3\xdc\xd6#\xfb\x8b\x9d\xf0\x17\x81\x01\xb68\x84\xbc\xf0\xc3<\n \xf1\x83\x070\x90\x7fy\xa4=\x8f\x849\xfd\xba^\xeb:\x9c!\x9d\x83\xc5\xf4x\x12Z\rf\x9f\xf0S\x811%0#\x06\t*\x86H\x86\xf7\r\x01\t\x151\x16\x04\x14\xcd\x1f\x887$)e\x89\x96\xe3\x7fj\xe9\x8e\x0f5\xe1\xd9\xday010!0\t\x06\x05+\x0e\x03\x02\x1a\x05\x00\x04\x14L\x01j\xf1\x1c\xdcdXx\xe3\xe9r\xd0\xcc\xc9:-\xec\xb0\x83\x04\x08\x03\xf2\xa4\xc9\x1f:h2\x02\x02\x08\x00'b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\n\x00\x00\x00\n\x08\x02\x00\x00\x00\x02PX\xea\x00\x00\x00\tpHYs\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x07tIME\x07\xdd\x0c\x0b\x01\x1d4\xaf\x9f=\xcf\x00\x00\x00\x1diTXtComment\x00\x00\x00\x00\x00Created with GIMPd.e\x07\x00\x00\x00\x15IDAT\x18\xd3cd\xf8_\xc4\x80\x1b01\xe0\x05#U\x1a\x00\xc8\xe3\x01\x85v\x83\x9e\xee\x00\x00\x00\x00IEND\xaeB`\x82'b'<h1>name</h1>'b'{"name":"tobi"}'b'Tobi'b"const express = require('express');\n\nlet http2Req;\nlet http2Res;\nif (process.env.HTTP2_TEST) {\n  const http2 = require('http2');\n  const reqDecorator = require('./requestDecorator');\n  const resDecorator = require('./responseDecorator');\n  http2Req = reqDecorator(Object.create(http2.Http2ServerRequest.prototype));\n  http2Res = resDecorator(Object.create(http2.Http2ServerResponse.prototype));\n}\n\nfunction createApp() {\n  const app = express();\n  if (process.env.HTTP2_TEST) {\n    app.request = Object.create(http2Req, {\n      app: { configurable: true, enumerable: true, writable: true, value: app }\n    });\n    app.response = Object.create(http2Res, {\n      app: { configurable: true, enumerable: true, writable: true, value: app }\n    });\n  }\n\n  return app;\n}\n\nmodule.exports = createApp;\n"b'/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\'use strict\';\n\n/**\n * Module dependencies.\n * @private\n */\n\nconst accepts = require(\'accepts\');\nconst { isIP } = require(\'net\');\nconst typeis = require(\'type-is\');\nconst fresh = require(\'fresh\');\nconst parseRange = require(\'range-parser\');\nconst parse = require(\'parseurl\');\nconst proxyaddr = require(\'proxy-addr\');\n\n/**\n * Request prototype.\n * @public\n */\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = setMethods;\n\nfunction setMethods(req) {\n  /**\n   * Return request header.\n   *\n   * The `Referrer` header field is special-cased,\n   * both `Referrer` and `Referer` are interchangeable.\n   *\n   * Examples:\n   *\n   *     req.get(\'Content-Type\');\n   *     // => "text/plain"\n   *\n   *     req.get(\'content-type\');\n   *     // => "text/plain"\n   *\n   *     req.get(\'Something\');\n   *     // => undefined\n   *\n   * Aliased as `req.header()`.\n   *\n   * @param {String} name\n   * @return {String}\n   * @public\n   */\n\n  req.get = req.header = function header(name) {\n    if (!name) {\n      throw new TypeError(\'name argument is required to req.get\');\n    }\n\n    if (typeof name !== \'string\') {\n      throw new TypeError(\'name must be a string to req.get\');\n    }\n\n    const lc = name.toLowerCase();\n\n    switch (lc) {\n      case \'referer\':\n      case \'referrer\':\n        return this.headers.referrer || this.headers.referer;\n      default:\n        return this.headers[lc];\n    }\n  };\n\n  /**\n   * To do: update docs.\n   *\n   * Check if the given `type(s)` is acceptable, returning\n   * the best match when true, otherwise `undefined`, in which\n   * case you should respond with 406 "Not Acceptable".\n   *\n   * The `type` value may be a single MIME type string\n   * such as "application/json", an extension name\n   * such as "json", a comma-delimited list such as "json, html, text/plain",\n   * an argument list such as `"json", "html", "text/plain"`,\n   * or an array `["json", "html", "text/plain"]`. When a list\n   * or array is given, the _best_ match, if any is returned.\n   *\n   * Examples:\n   *\n   *     // Accept: text/html\n   *     req.accepts(\'html\');\n   *     // => "html"\n   *\n   *     // Accept: text/*, application/json\n   *     req.accepts(\'html\');\n   *     // => "html"\n   *     req.accepts(\'text/html\');\n   *     // => "text/html"\n   *     req.accepts(\'json, text\');\n   *     // => "json"\n   *     req.accepts(\'application/json\');\n   *     // => "application/json"\n   *\n   *     // Accept: text/*, application/json\n   *     req.accepts(\'image/png\');\n   *     req.accepts(\'png\');\n   *     // => undefined\n   *\n   *     // Accept: text/*;q=.5, application/json\n   *     req.accepts([\'html\', \'json\']);\n   *     req.accepts(\'html\', \'json\');\n   *     req.accepts(\'html, json\');\n   *     // => "json"\n   *\n   * @param {String|Array} type(s)\n   * @return {String|Array|Boolean}\n   * @public\n   */\n\n  req.accepts = function () {\n    const accept = accepts(this);\n    return accept.types.apply(accept, arguments);\n  };\n\n  /**\n   * Check if the given `encoding`s are accepted.\n   *\n   * @param {String} ...encoding\n   * @return {String|Array}\n   * @public\n   */\n\n  req.acceptsEncodings = function () {\n    const accept = accepts(this);\n    return accept.encodings.apply(accept, arguments);\n  };\n\n  /**\n   * Check if the given `charset`s are acceptable,\n   * otherwise you should respond with 406 "Not Acceptable".\n   *\n   * @param {String} ...charset\n   * @return {String|Array}\n   * @public\n   */\n\n  req.acceptsCharsets = function () {\n    const accept = accepts(this);\n    return accept.charsets.apply(accept, arguments);\n  };\n\n  /**\n   * Check if the given `lang`s are acceptable,\n   * otherwise you should respond with 406 "Not Acceptable".\n   *\n   * @param {String} ...lang\n   * @return {String|Array}\n   * @public\n   */\n\n  req.acceptsLanguages = function () {\n    const accept = accepts(this);\n    return accept.languages.apply(accept, arguments);\n  };\n\n  /**\n   * Parse Range header field, capping to the given `size`.\n   *\n   * Unspecified ranges such as "0-" require knowledge of your resource length. In\n   * the case of a byte range this is of course the total number of bytes. If the\n   * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n   * and `-2` when syntactically invalid.\n   *\n   * When ranges are returned, the array has a "type" property which is the type of\n   * range that is required (most commonly, "bytes"). Each array element is an object\n   * with a "start" and "end" property for the portion of the range.\n   *\n   * The "combine" option can be set to `true` and overlapping & adjacent ranges\n   * will be combined into a single range.\n   *\n   * NOTE: remember that ranges are inclusive, so for example "Range: users=0-3"\n   * should respond with 4 users when available, not 3.\n   *\n   * @param {number} size\n   * @param {object} [options]\n   * @param {boolean} [options.combine=false]\n   * @return {number|array}\n   * @public\n   */\n\n  req.range = function range(size, options) {\n    const range = this.get(\'Range\');\n    if (!range) return;\n    return parseRange(size, range, options);\n  };\n\n  /**\n   * Parse the query string of `req.url`.\n   *\n   * This uses the "query parser" setting to parse the raw\n   * string into an object.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  defineGetter(req, \'query\', function query() {\n    const queryparse = this.app.get(\'query parser fn\');\n\n    if (!queryparse) {\n      // parsing is disabled\n      return Object.create(null);\n    }\n\n    const querystring = parse(this).query;\n\n    return queryparse(querystring);\n  });\n\n  /**\n   * Check if the incoming request contains the "Content-Type"\n   * header field, and it contains the give mime `type`.\n   *\n   * Examples:\n   *\n   *      // With Content-Type: text/html; charset=utf-8\n   *      req.is(\'html\');\n   *      req.is(\'text/html\');\n   *      req.is(\'text/*\');\n   *      // => true\n   *\n   *      // When Content-Type is application/json\n   *      req.is(\'json\');\n   *      req.is(\'application/json\');\n   *      req.is(\'application/*\');\n   *      // => true\n   *\n   *      req.is(\'html\');\n   *      // => false\n   *\n   * @param {String|Array} types...\n   * @return {String|false|null}\n   * @public\n   */\n\n  req.is = function is(types) {\n    let arr = types;\n\n    // support flattened arguments\n    if (!Array.isArray(types)) {\n      arr = new Array(arguments.length);\n      for (let i = 0; i < arr.length; i++) {\n        arr[i] = arguments[i];\n      }\n    }\n\n    return typeis(this, arr);\n  };\n\n  /**\n   * Return the protocol string "http" or "https"\n   * when requested with TLS. When the "trust proxy"\n   * setting trusts the socket address, the\n   * "X-Forwarded-Proto" header field will be trusted\n   * and used if present.\n   *\n   * If you\'re running behind a reverse proxy that\n   * supplies https for you this may be enabled.\n   *\n   * @return {String}\n   * @public\n   */\n\n  defineGetter(req, \'protocol\', function protocol() {\n    const proto = this.connection.encrypted ? \'https\' : \'http\';\n    const trust = this.app.get(\'trust proxy fn\');\n\n    if (!trust(this.connection.remoteAddress, 0)) {\n      return proto;\n    }\n\n    // Note: X-Forwarded-Proto is normally only ever a\n    //       single value, but this is to be safe.\n    const header = this.get(\'X-Forwarded-Proto\') || proto;\n    const index = header.indexOf(\',\');\n\n    return index !== -1 ? header.slice(0, index).trim() : header.trim();\n  });\n\n  /**\n   * Short-hand for:\n   *\n   *    req.protocol === \'https\'\n   *\n   * @return {Boolean}\n   * @public\n   */\n\n  defineGetter(req, \'secure\', function secure() {\n    return this.protocol === \'https\';\n  });\n\n  /**\n   * Return the remote address from the trusted proxy.\n   *\n   * The is the remote address on the socket unless\n   * "trust proxy" is set.\n   *\n   * @return {String}\n   * @public\n   */\n\n  defineGetter(req, \'ip\', function ip() {\n    const trust = this.app.get(\'trust proxy fn\');\n    return proxyaddr(this, trust);\n  });\n\n  /**\n   * When "trust proxy" is set, trusted proxy addresses + client.\n   *\n   * For example if the value were "client, proxy1, proxy2"\n   * you would receive the array `["client", "proxy1", "proxy2"]`\n   * where "proxy2" is the furthest down-stream and "proxy1" and\n   * "proxy2" were trusted.\n   *\n   * @return {Array}\n   * @public\n   */\n\n  defineGetter(req, \'ips\', function ips() {\n    const trust = this.app.get(\'trust proxy fn\');\n    const addrs = proxyaddr.all(this, trust);\n\n    // reverse the order (to farthest -> closest)\n    // and remove socket address\n    addrs.reverse().pop();\n\n    return addrs;\n  });\n\n  /**\n   * Return subdomains as an array.\n   *\n   * Subdomains are the dot-separated parts of the host before the main domain of\n   * the app. By default, the domain of the app is assumed to be the last two\n   * parts of the host. This can be changed by setting "subdomain offset".\n   *\n   * For example, if the domain is "tobi.ferrets.example.com":\n   * If "subdomain offset" is not set, req.subdomains is `["ferrets", "tobi"]`.\n   * If "subdomain offset" is 3, req.subdomains is `["tobi"]`.\n   *\n   * @return {Array}\n   * @public\n   */\n\n  defineGetter(req, \'subdomains\', function subdomains() {\n    const { hostname } = this;\n\n    if (!hostname) return [];\n\n    const offset = this.app.get(\'subdomain offset\');\n    const subdomains = !isIP(hostname)\n      ? hostname.split(\'.\').reverse()\n      : [hostname];\n\n    return subdomains.slice(offset);\n  });\n\n  /**\n   * Short-hand for `url.parse(req.url).pathname`.\n   *\n   * @return {String}\n   * @public\n   */\n\n  defineGetter(req, \'path\', function path() {\n    return parse(this).pathname;\n  });\n\n  /**\n   * Parse the "Host" header field to a host.\n   *\n   * When the "trust proxy" setting trusts the socket\n   * address, the "X-Forwarded-Host" header field will\n   * be trusted.\n   *\n   * @return {String}\n   * @public\n   */\n\n  defineGetter(req, \'host\', function host() {\n    const trust = this.app.get(\'trust proxy fn\');\n    let val = this.get(\'X-Forwarded-Host\');\n\n    if (!val || !trust(this.connection.remoteAddress, 0)) {\n      val = this.get(\'Host\');\n    }\n\n    return val || undefined;\n  });\n\n  /**\n   * Parse the "Host" header field to a hostname.\n   *\n   * When the "trust proxy" setting trusts the socket\n   * address, the "X-Forwarded-Host" header field will\n   * be trusted.\n   *\n   * @return {String}\n   * @api public\n   */\n\n  defineGetter(req, \'hostname\', function hostname() {\n    const { host } = this;\n\n    if (!host) return;\n\n    // IPv6 literal support\n    const offset = host[0] === \'[\' ? host.indexOf(\']\') + 1 : 0;\n    const index = host.indexOf(\':\', offset);\n\n    return index !== -1 ? host.slice(0, index) : host;\n  });\n\n  /**\n   * Check if the request is fresh, aka\n   * Last-Modified and/or the ETag\n   * still match.\n   *\n   * @return {Boolean}\n   * @public\n   */\n\n  defineGetter(req, \'fresh\', function () {\n    const { method } = this;\n    const { res } = this;\n    const status = res.statusCode;\n\n    // GET or HEAD for weak freshness validation only\n    if (method !== \'GET\' && method !== \'HEAD\') return false;\n\n    // 2xx or 304 as per rfc2616 14.26\n    if ((status >= 200 && status < 300) || status === 304) {\n      return fresh(this.headers, {\n        etag: res.get(\'ETag\'),\n        \'last-modified\': res.get(\'Last-Modified\')\n      });\n    }\n\n    return false;\n  });\n\n  /**\n   * Check if the request is stale, aka\n   * "Last-Modified" and / or the "ETag" for the\n   * resource has changed.\n   *\n   * @return {Boolean}\n   * @public\n   */\n\n  defineGetter(req, \'stale\', function stale() {\n    return !this.fresh;\n  });\n\n  /**\n   * Check if the request was an _XMLHttpRequest_.\n   *\n   * @return {Boolean}\n   * @public\n   */\n\n  defineGetter(req, \'xhr\', function xhr() {\n    const val = this.get(\'X-Requested-With\') || \'\';\n    return val.toLowerCase() === \'xmlhttprequest\';\n  });\n\n  return req;\n}\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n'b'/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\'use strict\';\n\n/**\n * Module dependencies.\n * @private\n */\n\nconst { Buffer } = require(\'safe-buffer\');\nconst contentDisposition = require(\'content-disposition\');\nconst encodeUrl = require(\'encodeurl\');\nconst escapeHtml = require(\'escape-html\');\nconst onFinished = require(\'on-finished\');\nconst path = require(\'path\');\nconst pathIsAbsolute = require(\'path-is-absolute\');\nconst statuses = require(\'statuses\');\nconst merge = require(\'utils-merge\');\nconst { sign } = require(\'cookie-signature\');\nconst { normalizeType } = require(\'./utils\');\nconst { normalizeTypes } = require(\'./utils\');\nconst { setCharset } = require(\'./utils\');\nconst cookie = require(\'cookie\');\nconst send = require(\'send\');\n\nconst { extname } = path;\nconst { mime } = send;\nconst { resolve } = path;\nconst vary = require(\'vary\');\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = setMethods;\n\nfunction setMethods(res) {\n  /**\n   * Module variables.\n   * @private\n   */\n\n  const charsetRegExp = /;\\s*charset\\s*=/;\n\n  /**\n   * Set status `code`.\n   *\n   * @param {Number} code\n   * @return {ServerResponse}\n   * @public\n   */\n\n  res.status = function status(code) {\n    this.statusCode = code;\n    return this;\n  };\n\n  /**\n   * Set Link header field with the given `links`.\n   *\n   * Examples:\n   *\n   *    res.links({\n   *      next: \'http://api.example.com/users?page=2\',\n   *      last: \'http://api.example.com/users?page=5\'\n   *    });\n   *\n   * @param {Object} links\n   * @return {ServerResponse}\n   * @public\n   */\n\n  res.links = function (links) {\n    let link = this.get(\'Link\') || \'\';\n    if (link) link += \', \';\n    return this.set(\n      \'Link\',\n      link +\n        Object.keys(links)\n          .map((rel) => {\n            return \'<\' + links[rel] + \'>; rel="\' + rel + \'"\';\n          })\n          .join(\', \')\n    );\n  };\n\n  /**\n   * Send a response.\n   *\n   * Examples:\n   *\n   *     res.send(Buffer.from(\'wahoo\'));\n   *     res.send({ some: \'json\' });\n   *     res.send(\'<p>some html</p>\');\n   *\n   * @param {string|number|boolean|object|Buffer} body\n   * @public\n   */\n\n  res.send = function send(body) {\n    let chunk = body;\n    let encoding;\n    const { req } = this;\n    let type;\n\n    // settings\n    const { app } = this;\n\n    switch (typeof chunk) {\n      // string defaulting to html\n      case \'string\':\n        if (!this.get(\'Content-Type\')) {\n          this.type(\'html\');\n        }\n\n        break;\n      case \'boolean\':\n      case \'number\':\n      case \'object\':\n        if (chunk === null) {\n          chunk = \'\';\n        } else if (Buffer.isBuffer(chunk)) {\n          if (!this.get(\'Content-Type\')) {\n            this.type(\'bin\');\n          }\n        } else {\n          return this.json(chunk);\n        }\n\n        break;\n    }\n\n    // write strings in utf-8\n    if (typeof chunk === \'string\') {\n      encoding = \'utf8\';\n      type = this.get(\'Content-Type\');\n\n      // reflect this in content-type\n      if (typeof type === \'string\') {\n        this.set(\'Content-Type\', setCharset(type, \'utf-8\'));\n      }\n    }\n\n    // determine if ETag should be generated\n    const etagFn = app.get(\'etag fn\');\n    const generateETag = !this.get(\'ETag\') && typeof etagFn === \'function\';\n\n    // populate Content-Length\n    let len;\n    if (chunk !== undefined) {\n      if (Buffer.isBuffer(chunk)) {\n        // get length of Buffer\n        len = chunk.length;\n      } else if (!generateETag && chunk.length < 1000) {\n        // just calculate length when no ETag + small chunk\n        len = Buffer.byteLength(chunk, encoding);\n      } else {\n        // convert chunk to Buffer and calculate\n        chunk = Buffer.from(chunk, encoding);\n        encoding = undefined;\n        len = chunk.length;\n      }\n\n      this.set(\'Content-Length\', len);\n    }\n\n    // populate ETag\n    let etag;\n    if (generateETag && len !== undefined) {\n      if ((etag = etagFn(chunk, encoding))) {\n        this.set(\'ETag\', etag);\n      }\n    }\n\n    // freshness\n    if (req.fresh) this.statusCode = 304;\n\n    // strip irrelevant headers\n    if (this.statusCode === 204 || this.statusCode === 304) {\n      this.removeHeader(\'Content-Type\');\n      this.removeHeader(\'Content-Length\');\n      this.removeHeader(\'Transfer-Encoding\');\n      chunk = \'\';\n    }\n\n    if (req.method === \'HEAD\') {\n      // skip body for HEAD\n      this.end();\n    } else {\n      // respond\n      this.end(chunk, encoding);\n    }\n\n    return this;\n  };\n\n  /**\n   * Send JSON response.\n   *\n   * Examples:\n   *\n   *     res.json(null);\n   *     res.json({ user: \'tj\' });\n   *\n   * @param {string|number|boolean|object} obj\n   * @public\n   */\n\n  res.json = function json(obj) {\n    // settings\n    const { app } = this;\n    const escape = app.get(\'json escape\');\n    const replacer = app.get(\'json replacer\');\n    const spaces = app.get(\'json spaces\');\n    const body = stringify(obj, replacer, spaces, escape);\n\n    // content-type\n    if (!this.get(\'Content-Type\')) {\n      this.set(\'Content-Type\', \'application/json\');\n    }\n\n    return this.send(body);\n  };\n\n  /**\n   * Send JSON response with JSONP callback support.\n   *\n   * Examples:\n   *\n   *     res.jsonp(null);\n   *     res.jsonp({ user: \'tj\' });\n   *\n   * @param {string|number|boolean|object} obj\n   * @public\n   */\n\n  res.jsonp = function jsonp(obj) {\n    // settings\n    const { app } = this;\n    const escape = app.get(\'json escape\');\n    const replacer = app.get(\'json replacer\');\n    const spaces = app.get(\'json spaces\');\n    let body = stringify(obj, replacer, spaces, escape);\n    let callback = this.req.query[app.get(\'jsonp callback name\')];\n\n    // content-type\n    if (!this.get(\'Content-Type\')) {\n      this.set(\'X-Content-Type-Options\', \'nosniff\');\n      this.set(\'Content-Type\', \'application/json\');\n    }\n\n    // fixup callback\n    if (Array.isArray(callback)) {\n      callback = callback[0];\n    }\n\n    // jsonp\n    if (typeof callback === \'string\' && callback.length !== 0) {\n      this.set(\'X-Content-Type-Options\', \'nosniff\');\n      this.set(\'Content-Type\', \'text/javascript\');\n\n      // restrict callback charset\n      callback = callback.replace(/[^[\\]\\w$.]/g, \'\');\n\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body.replace(/\\u2028/g, \'\\\\u2028\').replace(/\\u2029/g, \'\\\\u2029\');\n\n      // the /**/ is a specific security mitigation for "Rosetta Flash JSONP abuse"\n      // the typeof check is just to reduce client error noise\n      body =\n        \'/**/ typeof \' +\n        callback +\n        " === \'function\' && " +\n        callback +\n        \'(\' +\n        body +\n        \');\';\n    }\n\n    return this.send(body);\n  };\n\n  /**\n   * Send given HTTP status code.\n   *\n   * Sets the response status to `statusCode` and the body of the\n   * response to the standard description from node\'s http.STATUS_CODES\n   * or the statusCode number if no description.\n   *\n   * Examples:\n   *\n   *     res.sendStatus(200);\n   *\n   * @param {number} statusCode\n   * @public\n   */\n\n  res.sendStatus = function sendStatus(statusCode) {\n    const body = statuses[statusCode] || String(statusCode);\n\n    this.statusCode = statusCode;\n    this.type(\'txt\');\n\n    return this.send(body);\n  };\n\n  /**\n   * Transfer the file at the given `path`.\n   *\n   * Automatically sets the _Content-Type_ response header field.\n   * The callback `callback(err)` is invoked when the transfer is complete\n   * or when an error occurs. Be sure to check `res.sentHeader`\n   * if you wish to attempt responding, as the header and some data\n   * may have already been transferred.\n   *\n   * Options:\n   *\n   *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n   *   - `root`     root directory for relative filenames\n   *   - `headers`  object of headers to serve with file\n   *   - `dotfiles` serve dotfiles, defaulting to false; can be `"allow"` to send them\n   *\n   * Other options are passed along to `send`.\n   *\n   * Examples:\n   *\n   *  The following example illustrates how `res.sendFile()` may\n   *  be used as an alternative for the `static()` middleware for\n   *  dynamic situations. The code backing `res.sendFile()` is actually\n   *  the same code, so HTTP cache support etc is identical.\n   *\n   *     app.get(\'/user/:uid/photos/:file\', function(req, res){\n   *       var uid = req.params.uid\n   *         , file = req.params.file;\n   *\n   *       req.user.mayViewFilesFrom(uid, function(yes){\n   *         if (yes) {\n   *           res.sendFile(\'/uploads/\' + uid + \'/\' + file);\n   *         } else {\n   *           res.send(403, \'Sorry! you cant see that.\');\n   *         }\n   *       });\n   *     });\n   *\n   * @public\n   */\n\n  res.sendFile = function sendFile(path, options, callback) {\n    let done = callback;\n    const { req } = this;\n    const res = this;\n    const { next } = req;\n    let opts = options || {};\n\n    if (!path) {\n      throw new TypeError(\'path argument is required to res.sendFile\');\n    }\n\n    // support function as second arg\n    if (typeof options === \'function\') {\n      done = options;\n      opts = {};\n    }\n\n    if (!opts.root && !pathIsAbsolute(path)) {\n      throw new TypeError(\n        \'path must be absolute or specify root to res.sendFile\'\n      );\n    }\n\n    // create file stream\n    const pathname = encodeURI(path);\n    const file = send(req, pathname, opts);\n\n    // transfer\n    sendfile(res, file, opts, (err) => {\n      if (done) return done(err);\n      if (err && err.code === \'EISDIR\') return next();\n\n      // next() all but write errors\n      if (err && err.code !== \'ECONNABORTED\' && err.syscall !== \'write\') {\n        next(err);\n      }\n    });\n  };\n\n  /**\n   * Transfer the file at the given `path` as an attachment.\n   *\n   * Optionally providing an alternate attachment `filename`,\n   * and optional callback `callback(err)`. The callback is invoked\n   * when the data transfer is complete, or when an error has\n   * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n   *\n   * Optionally providing an `options` object to use with `res.sendFile()`.\n   * This function will set the `Content-Disposition` header, overriding\n   * any `Content-Disposition` header passed as header options in order\n   * to set the attachment and filename.\n   *\n   * This method uses `res.sendFile()`.\n   *\n   * @public\n   */\n\n  res.download = function download(path, filename, options, callback) {\n    let done = callback;\n    let name = filename;\n    let opts = options || null;\n\n    // support function as second or third arg\n    if (typeof filename === \'function\') {\n      done = filename;\n      name = null;\n      opts = null;\n    } else if (typeof options === \'function\') {\n      done = options;\n      opts = null;\n    }\n\n    // set Content-Disposition when file is sent\n    const headers = {\n      \'Content-Disposition\': contentDisposition(name || path)\n    };\n\n    // merge user-provided headers\n    if (opts && opts.headers) {\n      const keys = Object.keys(opts.headers);\n      for (const key of keys) {\n        if (key.toLowerCase() !== \'content-disposition\') {\n          headers[key] = opts.headers[key];\n        }\n      }\n    }\n\n    // merge user-provided options\n    opts = Object.create(opts);\n    opts.headers = headers;\n\n    // Resolve the full path for sendFile\n    const fullPath = resolve(path);\n\n    // send file\n    return this.sendFile(fullPath, opts, done);\n  };\n\n  /**\n   * Set _Content-Type_ response header with `type` through `mime.lookup()`\n   * when it does not contain "/", or set the Content-Type to `type` otherwise.\n   *\n   * Examples:\n   *\n   *     res.type(\'.html\');\n   *     res.type(\'html\');\n   *     res.type(\'json\');\n   *     res.type(\'application/json\');\n   *     res.type(\'png\');\n   *\n   * @param {String} type\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.contentType = res.type = function contentType(type) {\n    const ct = !type.includes(\'/\') ? mime.lookup(type) : type;\n\n    return this.set(\'Content-Type\', ct);\n  };\n\n  /**\n   * Respond to the Acceptable formats using an `obj`\n   * of mime-type callbacks.\n   *\n   * This method uses `req.accepted`, an array of\n   * acceptable types ordered by their quality values.\n   * When "Accept" is not present the _first_ callback\n   * is invoked, otherwise the first match is used. When\n   * no match is performed the server responds with\n   * 406 "Not Acceptable".\n   *\n   * Content-Type is set for you, however if you choose\n   * you may alter this within the callback using `res.type()`\n   * or `res.set(\'Content-Type\', ...)`.\n   *\n   *    res.format({\n   *      \'text/plain\': function(){\n   *        res.send(\'hey\');\n   *      },\n   *\n   *      \'text/html\': function(){\n   *        res.send(\'<p>hey</p>\');\n   *      },\n   *\n   *      \'appliation/json\': function(){\n   *        res.send({ message: \'hey\' });\n   *      }\n   *    });\n   *\n   * In addition to canonicalized MIME types you may\n   * also use extnames mapped to these types:\n   *\n   *    res.format({\n   *      text: function(){\n   *        res.send(\'hey\');\n   *      },\n   *\n   *      html: function(){\n   *        res.send(\'<p>hey</p>\');\n   *      },\n   *\n   *      json: function(){\n   *        res.send({ message: \'hey\' });\n   *      }\n   *    });\n   *\n   * By default Express passes an `Error`\n   * with a `.status` of 406 to `next(err)`\n   * if a match is not made. If you provide\n   * a `.default` callback it will be invoked\n   * instead.\n   *\n   * @param {Object} obj\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.format = function (obj) {\n    const { req } = this;\n    const { next } = req;\n\n    const fn = obj.default;\n    if (fn) delete obj.default;\n    const keys = Object.keys(obj);\n\n    const key = keys.length > 0 ? req.accepts(keys) : false;\n\n    this.vary(\'Accept\');\n\n    if (key) {\n      this.set(\'Content-Type\', normalizeType(key).value);\n      obj[key](req, this, next);\n    } else if (fn) {\n      fn();\n    } else {\n      const err = new Error(\'Not Acceptable\');\n      err.status = err.statusCode = 406;\n      err.types = normalizeTypes(keys).map((o) => {\n        return o.value;\n      });\n      next(err);\n    }\n\n    return this;\n  };\n\n  /**\n   * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n   *\n   * @param {String} filename\n   * @return {ServerResponse}\n   * @public\n   */\n\n  res.attachment = function attachment(filename) {\n    if (filename) {\n      this.type(extname(filename));\n    }\n\n    this.set(\'Content-Disposition\', contentDisposition(filename));\n\n    return this;\n  };\n\n  /**\n   * Append additional header `field` with value `val`.\n   *\n   * Example:\n   *\n   *    res.append(\'Link\', [\'<http://localhost/>\', \'<http://localhost:3000/>\']);\n   *    res.append(\'Set-Cookie\', \'foo=bar; Path=/; HttpOnly\');\n   *    res.append(\'Warning\', \'199 Miscellaneous warning\');\n   *\n   * @param {String} field\n   * @param {String|Array} val\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.append = function append(field, val) {\n    const prev = this.get(field);\n    let value = val;\n\n    if (prev) {\n      // concat the new and prev vals\n      value = Array.isArray(prev)\n        ? prev.concat(val)\n        : Array.isArray(val)\n        ? [prev].concat(val)\n        : [prev, val];\n    }\n\n    return this.set(field, value);\n  };\n\n  /**\n   * Set header `field` to `val`, or pass\n   * an object of header fields.\n   *\n   * Examples:\n   *\n   *    res.set(\'Foo\', [\'bar\', \'baz\']);\n   *    res.set(\'Accept\', \'application/json\');\n   *    res.set({ Accept: \'text/plain\', \'X-API-Key\': \'tobi\' });\n   *\n   * Aliased as `res.header()`.\n   *\n   * @param {String|Object} field\n   * @param {String|Array} val\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.set = res.header = function header(field, val) {\n    if (arguments.length === 2) {\n      let value = Array.isArray(val) ? val.map((v) => String(v)) : String(val);\n\n      // add charset to content-type\n      if (field.toLowerCase() === \'content-type\') {\n        if (Array.isArray(value)) {\n          throw new TypeError(\'Content-Type cannot be set to an Array\');\n        }\n\n        if (!charsetRegExp.test(value)) {\n          const charset = mime.charsets.lookup(value.split(\';\')[0]);\n          if (charset) value += \'; charset=\' + charset.toLowerCase();\n        }\n      }\n\n      this.setHeader(field, value);\n    } else {\n      for (const key in field) {\n        this.set(key, field[key]);\n      }\n    }\n\n    return this;\n  };\n\n  /**\n   * Get value for header `field`.\n   *\n   * @param {String} field\n   * @return {String}\n   * @public\n   */\n\n  res.get = function (field) {\n    return this.getHeader(field);\n  };\n\n  /**\n   * Clear cookie `name`.\n   *\n   * @param {String} name\n   * @param {Object} [options]\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.clearCookie = function clearCookie(name, options) {\n    const opts = merge({ expires: new Date(1), path: \'/\' }, options);\n\n    return this.cookie(name, \'\', opts);\n  };\n\n  /**\n   * Set cookie `name` to `value`, with the given `options`.\n   *\n   * Options:\n   *\n   *    - `maxAge`   max-age in milliseconds, converted to `expires`\n   *    - `signed`   sign the cookie\n   *    - `path`     defaults to "/"\n   *\n   * Examples:\n   *\n   *    // "Remember Me" for 15 minutes\n   *    res.cookie(\'rememberme\', \'1\', { expires: new Date(Date.now() + 900000), httpOnly: true });\n   *\n   *    // save as above\n   *    res.cookie(\'rememberme\', \'1\', { maxAge: 900000, httpOnly: true })\n   *\n   * @param {String} name\n   * @param {String|Object} value\n   * @param {Object} [options]\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.cookie = function (name, value, options) {\n    const opts = merge({}, options);\n    const { secret } = this.req;\n    const { signed } = opts;\n\n    if (signed && !secret) {\n      throw new Error(\'cookieParser("secret") required for signed cookies\');\n    }\n\n    let val =\n      typeof value === \'object\' ? \'j:\' + JSON.stringify(value) : String(value);\n\n    if (signed) {\n      val = \'s:\' + sign(val, secret);\n    }\n\n    if (\'maxAge\' in opts) {\n      opts.expires = new Date(Date.now() + opts.maxAge);\n      opts.maxAge /= 1000;\n    }\n\n    if (opts.path == null) {\n      opts.path = \'/\';\n    }\n\n    this.append(\'Set-Cookie\', cookie.serialize(name, String(val), opts));\n\n    return this;\n  };\n\n  /**\n   * Set the location header to `url`.\n   *\n   * The given `url` can also be "back", which redirects\n   * to the _Referrer_ or _Referer_ headers or "/".\n   *\n   * Examples:\n   *\n   *    res.location(\'/foo/bar\').;\n   *    res.location(\'http://example.com\');\n   *    res.location(\'../login\');\n   *\n   * @param {String} url\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.location = function location(url) {\n    let loc = url;\n\n    // "back" is an alias for the referrer\n    if (url === \'back\') {\n      loc = this.req.get(\'Referrer\') || \'/\';\n    }\n\n    // set location\n    return this.set(\'Location\', encodeUrl(loc));\n  };\n\n  /**\n   * Redirect to the given `url` with optional response `status`\n   * defaulting to 302.\n   *\n   * The resulting `url` is determined by `res.location()`, so\n   * it will play nicely with mounted apps, relative paths,\n   * `"back"` etc.\n   *\n   * Examples:\n   *\n   *    res.redirect(\'/foo/bar\');\n   *    res.redirect(\'http://example.com\');\n   *    res.redirect(301, \'http://example.com\');\n   *    res.redirect(\'../login\'); // /blog/post/1 -> /blog/login\n   *\n   * @public\n   */\n\n  res.redirect = function redirect(url) {\n    let address = url;\n    let body;\n    let status = 302;\n\n    // allow status / url\n    if (arguments.length === 2) {\n      status = arguments[0];\n      address = arguments[1];\n    }\n\n    // Set location header\n    address = this.location(address).get(\'Location\');\n\n    // Support text/{plain,html} by default\n    this.format({\n      text() {\n        body = statuses[status] + \'. Redirecting to \' + address;\n      },\n\n      html() {\n        const u = escapeHtml(address);\n        body =\n          \'<p>\' +\n          statuses[status] +\n          \'. Redirecting to <a href="\' +\n          u +\n          \'">\' +\n          u +\n          \'</a></p>\';\n      },\n\n      default() {\n        body = \'\';\n      }\n    });\n\n    // Respond\n    this.statusCode = status;\n    this.set(\'Content-Length\', Buffer.byteLength(body));\n\n    if (this.req.method === \'HEAD\') {\n      this.end();\n    } else {\n      this.end(body);\n    }\n  };\n\n  /**\n   * Add `field` to Vary. If already present in the Vary set, then\n   * this call is simply ignored.\n   *\n   * @param {Array|String} field\n   * @return {ServerResponse} for chaining\n   * @public\n   */\n\n  res.vary = function (field) {\n    vary(this, field);\n\n    return this;\n  };\n\n  /**\n   * Render `view` with the given `options` and optional callback `fn`.\n   * When a callback function is given a response will _not_ be made\n   * automatically, otherwise a response of _200_ and _text/html_ is given.\n   *\n   * Options:\n   *\n   *  - `cache`     boolean hinting to the engine it should cache\n   *  - `filename`  filename of the view being rendered\n   *\n   * @public\n   */\n\n  res.render = function render(view, options, callback) {\n    const { app } = this.req;\n    let done = callback;\n    let opts = options || {};\n    const { req } = this;\n    const self = this;\n\n    // support callback function as second arg\n    if (typeof options === \'function\') {\n      done = options;\n      opts = {};\n    }\n\n    // merge res.locals\n    opts._locals = self.locals;\n\n    // default callback to respond\n    done =\n      done ||\n      function (err, str) {\n        if (err) return req.next(err);\n        self.send(str);\n      };\n\n    // render\n    app.render(view, opts, done);\n  };\n\n  // pipe the send file stream\n  function sendfile(res, file, options, callback) {\n    let done = false;\n    let streaming;\n\n    // request aborted\n    function onaborted() {\n      if (done) return;\n      done = true;\n\n      const err = new Error(\'Request aborted\');\n      err.code = \'ECONNABORTED\';\n      callback(err);\n    }\n\n    // directory\n    function ondirectory() {\n      if (done) return;\n      done = true;\n\n      const err = new Error(\'EISDIR, read\');\n      err.code = \'EISDIR\';\n      callback(err);\n    }\n\n    // errors\n    function onerror(err) {\n      if (done) return;\n      done = true;\n      callback(err);\n    }\n\n    // ended\n    function onend() {\n      if (done) return;\n      done = true;\n      callback();\n    }\n\n    // file\n    function onfile() {\n      streaming = false;\n    }\n\n    // finished\n    function onfinish(err) {\n      if (err && err.code === \'ECONNRESET\') return onaborted();\n      if (err) return onerror(err);\n      if (done) return;\n\n      setImmediate(() => {\n        if (streaming !== false && !done) {\n          onaborted();\n          return;\n        }\n\n        if (done) return;\n        done = true;\n        callback();\n      });\n    }\n\n    // streaming\n    function onstream() {\n      streaming = true;\n    }\n\n    file.on(\'directory\', ondirectory);\n    file.on(\'end\', onend);\n    file.on(\'error\', onerror);\n    file.on(\'file\', onfile);\n    file.on(\'stream\', onstream);\n\n    if (options.headers) {\n      // set headers on successful transfer\n      file.on(\'headers\', function headers(res) {\n        const obj = options.headers;\n        const keys = Object.keys(obj);\n\n        for (const k of keys) {\n          res.setHeader(k, obj[k]);\n        }\n      });\n    }\n\n    // pipe\n    file.pipe(res);\n\n    onFinished(res, onfinish);\n  }\n\n  return res;\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify(value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  let json =\n    replacer || spaces\n      ? JSON.stringify(value, replacer, spaces)\n      : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, (c) => {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return \'\\\\u003c\';\n        case 0x3e:\n          return \'\\\\u003e\';\n        case 0x26:\n          return \'\\\\u0026\';\n        default:\n          return c;\n      }\n    });\n  }\n\n  return json;\n}\n'b'/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\'use strict\';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nconst { Buffer } = require(\'safe-buffer\');\nconst contentType = require(\'content-type\');\nconst { mime } = require(\'send\');\nconst etag = require(\'etag\');\nconst proxyaddr = require(\'proxy-addr\');\nconst qs = require(\'qs\');\nconst querystring = require(\'querystring\');\n\nlet isHttp2Supported = true;\n\n/**\n * Test for http2 support\n * @api private\n */\ntry {\n  require(\'http2\');\n} catch {\n  isHttp2Supported = false;\n}\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false });\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true });\n\n/**\n * Normalize the given `type`, for example "html" becomes "text/html".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function (type) {\n  return ~type.indexOf(\'/\')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example "html" becomes "text/html".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function (types) {\n  const ret = [];\n\n  for (const element of types) {\n    ret.push(exports.normalizeType(element));\n  }\n\n  return ret;\n};\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  const parts = str.split(/ *; */);\n  const ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (let i = 1; i < parts.length; ++i) {\n    const pms = parts[i].split(/ *= */);\n    if (pms[0] === \'q\') {\n      ret.quality = Number.parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile "etag" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function (val) {\n  let fn;\n\n  if (typeof val === \'function\') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case \'strong\':\n      fn = exports.etag;\n      break;\n    case \'weak\':\n      fn = exports.wetag;\n      break;\n    default:\n      throw new TypeError(\'unknown value for etag function: \' + val);\n  }\n\n  return fn;\n};\n\n/**\n * Compile "query parser" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  let fn;\n\n  if (typeof val === \'function\') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = querystring.parse;\n      break;\n    case false:\n      break;\n    case \'extended\':\n      fn = parseExtendedQueryString;\n      break;\n    case \'simple\':\n      fn = querystring.parse;\n      break;\n    default:\n      throw new TypeError(\'unknown value for query parser function: \' + val);\n  }\n\n  return fn;\n};\n\n/**\n * Compile "proxy trust" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function (val) {\n  if (typeof val === \'function\') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function () {\n      return true;\n    };\n  }\n\n  if (typeof val === \'number\') {\n    // Support trusting hop count\n    return function (a, i) {\n      return i < val;\n    };\n  }\n\n  if (typeof val === \'string\') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return proxyaddr.compile(val || []);\n};\n\n/**\n * Flag for http2 support\n */\nexports.isHttp2Supported = isHttp2Supported;\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  const parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator(options) {\n  return function generateETag(body, encoding) {\n    const buf = !Buffer.isBuffer(body) ? Buffer.from(body, encoding) : body;\n\n    return etag(buf, options);\n  };\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n'